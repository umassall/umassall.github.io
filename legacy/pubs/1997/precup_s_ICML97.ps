%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: egpaper-new.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips egpaper-new
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.04.17:1424
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (egpaper-new.dvi)
@start /Fa 44 122 df<EA03C0EA07F0120F121F13F8A313F0EA07B0EA003013701360
A213E013C01201EA038013005A120E5A5A5A5A5A0D197A8819>44
D<387FFFF8A2B5FCA214F0150579941E>I<EC03F8EC0FFE91383C0F809138F007C09039
01E003E0D903C013F09038078001020013F8130E131E90391C6000FCEB3870EC30011370
A213F013E0EC70030001016013F813C014E0ECC00701C114F0903881800F018314E09039
C7001FC001FEEB3F80D80078140090C7127E5D4A5A4A5AEC07C0EC1F80023EC7FC14FCEB
01F0EB07C0495A011EC8FC137C4914C0484813015B485A4848130348C71380000E140700
1E140F48EC1F00D83FF85B397FFFC07E39783FFFFCEA700FD8F0075BD8E0015B6D13C002
1FC7FC263A79B72A>50 D<EC03FCEC1FFF91387E07C09138F003E0903903C001F0D90780
13F849C7FC131E011C14FC133CEB38C0EB78E0EB7060150101F014F813E0A2ECE003D971
C013F090387F8007D91E0013E090C7EA0FC0ED1F80ED3F00157E5D49B45A4913E092C7FC
9038000FC0EC03F014016E7E81A381A5007E130100FE5CA31403485C00E05C14074A5A5D
4A5A007049C7FC0078137E6C13F8381E07F03807FF80D801FCC8FC263A78B72A>I<D970
7C130ED9F3FE131E496C133C48B5133816784815F0EC0F019039FC0703E03A07F00307C0
01E0138F3A0FC001FF80497E48C7EA0F00001E5C48141E153E48143C157C485C5A4A5AC7
FC4A5AA24A5A140FA24A5AA24AC7FCA25C147E14FE5C1301A25C1303A2495AA3130F5CA2
131F5CA2133FA25C137FA391C8FC137E133C273A74B72A>55 D<EC01FCEC0FFF023F13C0
91387E07E0903901F803F0903803E001D907C013F890380F8000A249C7FCA2133EA21501
017E14F0A21503017F14E0ED07C09138800F809138C01F0090383FF03E6E5A90381FFCF0
ECFFE06D138013036D7F497F90380F7FF890383E3FFCEB781F48486C7E3803E0073907C0
01FF48487E001F8090C7FC003E80127E127CA200FC143E5AA25DA25DA24A5A6C495A007C
495A007E495A6C013FC7FC381F80FE380FFFF8000313E0C66CC8FC253A78B72A>I<EE01
C01603A21607160FA2161F83163FA2167F16FF16EF150116CFED038FA2ED070FA2150E15
1E151C1538A203707FA2EDE007A2EC01C014031580EC0700A2140EA25CA25C027FB5FCA2
91B6FC9139E00007F849481303A2495A130791C7FC5B130E5BA25B1378137013F0EA03F8
486C4A7EB56C48B512F0A3343C7BBB3E>65 D<0107B612FCEFFF8018C0903B000FF0001F
F04BEB07F81703021F15FC17014B14FEA2023F1400A24B1301A2147F18FC92C7120318F8
4A140718F04AEC0FE0EF1FC00101ED3F80EF7F004AEB01FEEE07F849B612E05F9139F800
07F0EE01FC01076E7E177F4AEC3F80A2010F16C0171F5CA2131F173F5CA2133FEF7F805C
1800017F5D4C5A91C7485A5F49140FEE1FE0494A5A00014AB45AB748C7FC16F816C03739
7BB83A>I<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3F
C0EB3CFC4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B
485A5B000317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A2
17784816707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C
495A6C6CEB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA
3B>I<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B
141F19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A
151FA2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A
4A5D4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B5
48C8FCB712F016803C397CB83F>I<0107B8FCA3903A000FF000034BEB007F183E141F18
1E5DA2143FA25D181C147FA29238000380A24A130718004A91C7FC5E13015E4A133E167E
49B512FEA25EECF8000107147C163C4A1338A2010F147818E04A13701701011F16C01600
4A14031880013F150718004A5CA2017F151E173E91C8123C177C4915FC4C5A4914070001
ED7FF0B8FCA25F38397BB838>I<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0
913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC49481407494815F0494814
03495A5C49C813E05B485A5B000317C0485AA2485A1880485A94C7FCA2485AA3127F5BA3
12FF90CBFC0307B512E0A392390007FC00705A16075FA36C150F5FA36C6C141FA2001F5E
6D143F6C7E167F6C6C4A5A6C6CEB03EFD801FEEB07C73A007FC03F0790273FFFFC03C7FC
010F01F0C8FC01001380373D74BA40>71 D<0103B512F8A390390007F8005DA2140FA25D
A2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25C
A2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397CB820>73
D<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292C8FCA25CA2
5CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C17384A1478A201
3F157017F04A14E01601017F140317C091C71207160F49EC1F80163F4914FF0001020713
00B8FCA25E2E397BB834>76 D<902607FFF8923807FFF0614F13E0D9000FEFF0004F5AA2
021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F800238ED071FA20278ED0E3F97
C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D485A02C0EC0380A20103ED
0701610280140EA20107ED1C0305385B14006F137049160705E05B010EEC01C0A2011E91
3803800F61011CEC0700A2013C020E131F4C5C1338ED1FB80178163F04F091C8FC01705C
A201F04A5B187E00015DD807F816FEB500C09039007FFFFC151E150E4C397AB84A>I<90
2603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D1307
033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082DAF003143C
70133814E0150101016E1378030014705C8201036E13F0604A1480163F010715C1041F5B
91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F1338160013
785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>I<ED03FE92383FFFC09238
FC07F0913903E001F891390F80007C023FC77E027E8002F815804948EC0FC0EB07E04948
EC07E0131F4A15F049C81203137E01FE16F8485AA2485AA2485AA2120F5B001F16075B12
3FA34848ED0FF0A448C9EA1FE0A3EF3FC0A21880177F18005F5F16015F6C4B5A4C5AA24C
5A6C4B5A6D4A5A001F93C7FC6D147E000F5D6C6CEB03F06C6C495A6C6CEB0F806C6C013F
C8FC90383F01FC90381FFFE0010190C9FC353D74BA40>I<0107B612F817FF1880903B00
0FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A
15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7FC
D907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B5
12FCA337397BB838>I<ED03FE92383FFFC09238FC07F0913903E001F891390FC0007C02
3FC77E027E804A1580D901F0EC0FC013074948EC07E0495A4A15F049C8FC49150301FE16
F8485AA2485AA2485AA2120F491507121FA2485AA34848ED0FF0A448C9EA1FE0A3EF3FC0
A21880177F4817005F5F16015F007F4B5A5F91380F800791393FE00FE06C903970601FC0
902680E0305B261F81C049C7FC913880187ED80FC35C3A07E30019F00003EC1FE0D801FB
14806CB46C48C8FC90263F81FC13186DB45A01010138133890C7003C1330177017F05FED
3E03ED3F07EEFFC05FA294C7FC5E6F5A6F5AED07E0354B74BA40>I<0103B612F017FEEF
FF80903B0007F8003FC04BEB0FF01707020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF
03FC5DA2027FEC07F818F092C7120F18E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091
B6128004FCC7FC9138FC003F0103EC0F80834A6D7E8301071403A25C83010F14075F5CA2
011F140FA25CA2133F161F4AECE007A2017F160F180E91C7FC49020F131C007F01FE153C
B5913807F078040313F0CAEAFFE0EF3F80383B7CB83D>I<92383FC00E913901FFF01C02
0713FC91391FC07E3C91393F001F7C027CEB0FF84A130749481303495A4948EB01F0A249
5AA2011F15E091C7FCA34915C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D
14E0010080023F7F14079138007FFC150F15031501A21500A2167C120EA3001E15FC5EA3
003E4A5AA24B5AA2007F4A5A4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0
D8E01F138026C003FCC8FC2F3D7ABA2F>I<0007B812E0A25AD9F800EB001F01C049EB07
C0485AD900011403121E001C5C003C17801403123800785C00701607140700F01700485C
A2140FC792C7FC5DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA213
03A25CA21307A25CA2130FA25CEB3FF0007FB512F8B6FCA2333971B83B>I<14F8EB07FE
90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F8014
03007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F13
00ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F
80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A127EA214
0F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07
C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E090381F00
70017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F
90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00
380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507A216E0A2
150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEB
F80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2
140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E
391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380FC1E09038
3F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81
FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C0
6CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38
ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512
C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F
5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C
82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F13
07D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F1207491400A25DA2
49137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB
00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF
80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91
C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB
1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F
01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E38048903800FF00
0038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03
FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B1207
5BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0
143879B619>I<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA2
1201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E
0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>
108 D<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F26
1C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A4848
EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE03
1F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17E049
017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A444>
I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0
007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F
5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E00
1FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F
00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215
FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00
147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF0
90393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113
C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F
495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25B
A21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C
703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA212
0012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F
121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E12015B15
1E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F8
3CEB7FF8EB0FC0212679A426>I<01F01507D803FC903903801F80D8071E903907C03FC0
D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E168000E0ED00
0313FEC64849130718000001147E5B03FE5B0003160E495BA2171E00070101141C01E05B
173C1738A217781770020314F05F0003010713016D486C485A000190391E7C07802800FC
3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>I<903907E007C090391FF81FF8
9039787C383C9038F03E703A01E01EE0FE3803C01F018013C0D8070014FC481480000E15
70023F1300001E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016
E0001C5B007E1401010714C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C
393FF03FF03907C00FC027267CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F1307
121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D
0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE03800
7FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E0
6C485A383C1F80D80FFEC8FCEA03F0233679A428>I E /Fb 3 50
df<B712FEA327037A8F34>0 D<1338A50060130C00F8133E00FC137E00FE13FE383FBBF8
3807FFC000011300EA007C48B4FC000713C0383FBBF838FE38FE00FC137E00F8133E0060
130C00001300A517197B9A22>3 D<017F157F2601FFE0903803FFC0000701F890380FF1
F0260F83FC90381F0038261E00FF013C7F001890263F8078130C4890261FC0E07F007090
260FE1C07F0060EB07E3913803F780486DB4C7EA01806E5A157E157F81824B7E0060DAF7
E0EB0300913801E3F0DBC3F85B6C90260381FC13066C90260F00FE5B001C011E90387F80
3C6C017C90381FE0F82607C7F86DB45A2601FFE0010313C06C6CC86CC7FC391B7C9942>
49 D E /Fc 2 50 df<14E0B0B712C0A3C700E0C7FCB022237C9B2B>43
D<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D E /Fd 1 117 df<13C0EA01E0A3EA03C0A4EAFFFCA2EA0780A2EA0F00A4121EA31304
EA3C0CA213181370EA1FE0EA0F800E1A7D9917>116 D E /Fe 5
104 df<007FB81280B912C0A26C17803204799641>0 D<EB0380497EA7397803803C00FC
147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB3FF8EB0F
E0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380FE00FC14
7E0078143C390007C000A76D5A1F247BA62A>3 D<91381FFFFE91B6FC1303010F14FED9
1FF0C7FCEB7F8001FEC8FCEA01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25A
A2B712FE16FFA216FE00F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00
FEEB7F80EB1FF06DB512FE010314FF1300021F13FE283279AD37>50
D<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03
F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D
7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F
80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C13
0F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD2A>I
E /Ff 3 89 df<161E167EED01FE1507ED0FF8ED3FE0ED7FC0EDFF80913801FE004A5A4A
5A5D140F4A5A5D143F5D147F92C7FCA25C5CB3B3B3A313015CA3495AA213075C495AA249
5A495A137F49C8FC485A485AEA07F0EA1FE0485AB4C9FC12FCA2B4FCEA3FC06C7EEA07F0
EA03FC6C7E6C7E6D7E133F6D7E6D7EA26D7E801303A26D7EA3801300B3B3B3A38080A281
143F81141F816E7E1407816E7E6E7E913800FF80ED7FC0ED3FE0ED0FF8ED07FE1501ED00
7E161E27C675823E>26 D<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C05011380
6C6CEF007F1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E
18306D7E6D6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80
826F7E6F7EA26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4A
CCFC143E147E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF0
03C0017C180749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000F
B5FC48BA5AA25ABB5AA24D537B7F58>80 D<BF12E08AA38A6C90CCFC0900806C6D19076C
6D07007F6C6D1A1F1D076C6DF201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D
6D1A01F600E06D7F6D6D1B706D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E
7FA26E7F6E7F6E7FA26F7E6F7F6F7FA26F7F6F7F81836F7F6F7F167F83707F707F828470
7F707FA2707F82715A60173F715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F
4CCEFC16FE4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B30
4A5A4B1B70023F1C604ACF12E002FE1B014948F303C049481B074948F30F801E1F49481B
7F4948F3FF0049481A0349CE120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC48
655AA248655ABFFC666D747B7F78>88 D E /Fg 7 62 df<1306130C13181330136013E0
EA01C0EA0380A2EA07005A120E121EA2121C123CA35AA512F85AAB7E1278A57EA3121C12
1EA2120E120F7EEA0380A2EA01C0EA00E0136013301318130C13060F3B7AAB1A>40
D<12C012607E7E7E120E7EEA0380A2EA01C013E0120013F0A213701378A3133CA5133E13
1EAB133E133CA51378A3137013F0A213E0120113C0EA0380A2EA0700120E120C5A5A5A5A
0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A4
00FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521
>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC
15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300
030012065A001FB5FC5A485BB5FCA219267DA521>I<B812E0A3CBFCABB812E0A32B117D
9633>61 D E /Fh 6 120 df<D93FFC903801FFF88001019138001F006E141E170C9026
03BF80131C1718EC1FC0A2496C6C1338173090380607F0A290260E03F81370176090380C
01FCA290261C00FE13E05F0118137FA20138EB3F81031F5B013014C1150F017014E30307
90C7FC016014F3150301E014FF6F5A5B15001201167C5B486C143C1207D8FFFC1418A235
287DA735>78 D<000FB712E05A9039800FE007D81E009038C001C05A0038011F13001230
00705C00601501023F148012E0481400A2C74890C7FCA2147EA214FEA25CA21301A25CA2
1303A25CA21307A25CA2130FA25CA2131F001FB57EA22B287DA727>84
D<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12C0A2EA
01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A11287DA6
17>105 D<133EEA07FEA2EA007CA213FCA25BA21201A25BA21203EC07809038E01FC0EC
38600007EB61E014C3EBC187EBC307D80FC613C09038CC038001B8C7FC13E0487E13FEEB
3F80EB0FC0486C7E1303003E1460A2127EECC0C0127CECC18012FC903801E30038F800FE
0070137C1B297CA723>107 D<131C133EA25BA45BA4485AB512E0A23801F000485AA448
5AA4485AA448C7FC1460A214C0123EEB0180EB0300EA1E06EA1F1CEA0FF8EA03E013267E
A419>116 D<D803E0EC0380486CEB7007D80C789038F80FC0EA187C0030903801F00716
03126001F8140100C0D903E01380A2EA01F0A2913907C00300EA03E0A33A07C00F8006A2
5EA2160816180003011F5B01E0EBC0703A01F073E0E03A00FFE1FF8090261F807FC7FC2A
1B7D9930>119 D E /Fi 19 122 df<EC3FC0ECFFF8903807E07C90380F801FD93F00EB
800C017E130F49903807C01C4848ECE018485A484801031338000FEDF0305B001F167048
48156017E0007F16C090C713F1178016F34816004815F716FE5EA2485D5EA4007E140715
0F003E91381DF818003F14796C02E11338270F8007C013303B07E03F007CF02601FFF8EB
3FC026003FC0EB0F802E267DA435>11 D<EB07F0D91FFC1430D97FFE147090B514600003
6E13E0486E13C0D9F01F1301270F8007E01380261F00011303001CD900F0130048EC7007
160648EC300E0060EC380CED181C00E01518C8121CED0C3816301670166016E05EA2150D
5EA2150F93C7FCA2150EA3150CA3151CA215181538A45DA45DA44A5AA35D2C377FA42B>
13 D<1403EC3FF891387FFF80D901E313C014800103133F9138001F80ED070092C7FC80
A280A2808013018080130080147F81143F8149B47E130790380F8FF0EB3E0F496C7E13F8
3801F003D803E07F1207380FC0011380121FEA3F0014005A127EA212FE5D481301A35DA2
4813035D6C13075D127C4A5A6C91C7FC5C6C133E6C6C5A3807C0F03801FFE0D8003FC8FC
223D7DBB25>I<133F14C0EB07F06D7E801301A26D7EA3147FA36E7EA36E7EA36E7EA36E
7EA36E7EA36E7EA26E7EA214014A7E5C4A7E91381E3F80143C14784A6C7E1301EB03E049
486C7EEB0F80EB1F00496D7E137E5B48486D7E485A485A000F6E7E485A485A48C87E12FE
167F4816800070151F293B7CB930>21 D<121C127FEAFF80A5EA7F00121C0909798817>
58 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A19798817>I<0103B812F05BA290260007F8C7123F4B1407F003E0020F1501
18005DA2141FA25D19C0143FA24B1330A2027F1470190092C7126017E05C16014A495A16
0F49B6FCA25F9138FC000F01031407A24A6DC8FCA201075C18034A130660010F160693C7
FC4A150E180C011F161C18184A1538A2013F5E18F04A4A5AA2017F15074D5A91C8123F49
913803FF80B9FCA295C7FC3C397DB83D>69 D<902603FFF891381FFFF8496D5CA2D90007
030113006FEC007C02061678DA0EFF157081020C6D1460A2DA1C3F15E0705CEC181F8202
3815016F6C5C1430150702706D1303030392C7FC02607FA2DAE0015C701306ECC0008201
016E130EEF800C5C163F0103EDC01C041F131891C713E0160F49EDF03818300106140717
F8010E02031370EFFC60130CEE01FE011C16E004005B011815FF177F1338600130153FA2
0170151F95C8FC01F081EA07FCB512E01706A245397DB843>78 D<4BB4FC031F13F09238
FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7EA07E002FCEC03F0495A4948
EC01F8495A4948EC00FC495A49C912FE49167E13FE49167F1201485AA2485AA2120F5B00
1F17FFA2485AA34848ED01FEA400FFEE03FC90C9FCA2EF07F8A2EF0FF0A218E0171F18C0
EF3F806C167F180017FE4C5A6C6C5D1603001F4B5A6D4A5A000FED1F806C6C4AC7FC6D14
7E0003EC01F8D801FC495AD8007EEB0FC090263F807FC8FC903807FFF801001380383D7C
BA3F>I<277FFFFC01B500F890B51280B5FC60000390C7D807FCC7380FF80001FC4BEC03
E000016204035E98C7FC621A0604075DA2040F5DA2041B5D6216336D02735D1663000003
C34A5A83DB01834AC8FC04815CDB0301140603075D1506030C5DA203185D197003301560
6115606D01E04A5A15C090267F01804AC9FC17FEDA030014060400130E0206150C020E5D
140C4A5DA24A5D18E04A5D715A5C4A92CAFCA26DC85AA2013E157C1778133C1770133801
301560513B7CB84E>87 D<163FED1FFFA3ED007F167EA216FEA216FCA21501A216F8A215
03A216F0A21507A2027E13E0903803FF8790380FC1CF90381F00EF017EEB7FC049133F48
5A4848131F000715805B000F143F485A1600485A5D127F90C7127EA215FE5A485CA21401
A248ECF80CA21403161CEDF0181407007C1538007E010F1330003E131F027B13706C01E1
13E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B7DB92B>100
D<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A1207485A49
131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5AA7007E14
0315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF838003FC02026
7DA427>I<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C4A48C7FC
A414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8FCA45C14
7EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC131E12FE
EA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<14E0EB03F8A21307A314F0EB01C090C7FC
AB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E0130012C05BEA
007EA213FE5B1201A25B12035BA20007131813E01438000F133013C01470EB806014E014
C01381EB838038078700EA03FEEA00F815397EB71D>105 D<3903E001F83907F807FE39
0E3C1E07391C3E381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E15
3CD8E07F90C7FCEAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B
0007C9FC21267EA425>114 D<EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007F
B51280A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3120FEBC006A2140E
001F130CEB801C141814385C146014E0380F81C038078780D803FEC7FCEA00F819357EB3
1E>116 D<01F816F0D803FE9138E001F8D8070F903801F003000ED9800314FC121C1218
0038020713010030EDE000D8701F167C1260030F143CD8E03F163800C001005B5BD8007E
131F183001FE5C5B033F1470000117604991C7FCA218E000034A14C049137E1701188017
0318005F03FE1306170E000101015C01F801BF5B3B00FC039F8070903A7E0F0FC0E0903A
1FFC03FFC0902703F0007FC7FC36267EA43B>119 D<903907E001F090391FF807FC9039
783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A000E4A130000
0C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA201
01141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE0E7C01C0D87C1C49
5A2778383E0FC7FC391FF00FFC3907C003F029267EA42F>I<13F8D803FE1470D8070F14
F8000EEB8001121C121800381403003015F0EA701F1260013F130700E0010013E012C05B
D8007E130F16C013FE5B151F000115805BA2153F000315005BA25D157EA315FE5D140100
0113033800F80790387C1FF8EB3FF9EB0FE1EB00035DA2000E1307D83F805B007F495AA2
4A5A92C7FCEB003E007C5B00705B6C485A381E07C06CB4C8FCEA01FC25367EA429>I
E /Fj 35 117 df<EC01E01403EC0FC0EC1F80EC3F00147E5C1301495A495A5C130F495A
133F5C137F49C7FCA2485AA2485AA212075BA2120F5BA2121FA25B123FA4485AA612FFA2
5BAE7FA2127FA66C7EA4121F7FA2120FA27F1207A27F1203A26C7EA26C7EA26D7E133F80
131F6D7E1307806D7E6D7E1300147E80EC1F80EC0FC0EC03E014011B6476CA2C>40
D<12F07E127E7E6C7E6C7E6C7E7F6C7E6C7E12007F137F80133F806D7EA26D7EA26D7EA2
801303A2801301A280A27F1580A4EC7FC0A615E0A2143FAE147FA215C0A6ECFF80A41500
5BA25CA213035CA213075CA2495AA2495AA2495A5C137F91C7FC13FE5B1201485A485A5B
485A485A48C8FC127E12F85A1B647ACA2C>I<EC03C01407141F147FEB03FF133FB6FCA4
13C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E000
0315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F
00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1F
FC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8
D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D
417BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E
81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A
5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017
E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F
80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E0
2D427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F
87EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A48
5A485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038
>I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0
C9FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D
13804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D
6C4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6C
B612F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13
FC49B6FC01079038807F8090390FFC001FD93FF014C04948137F4948EBFFE048495A5A14
00485A120FA248486D13C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000
FF017F13E091B512F89039F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13
E0A24915F0A317F85BA4127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D491380
6C018014006C6D485A6C9038E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D
427BC038>I<121E121F13FC90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA
3F00007C157E5E00785D15014B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A1403
5D14074A5AA2141F5D143FA2147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F
447AC238>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F8016
1F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F0207815D17
3F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0C8FC
A20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020FB612
F0A54C457CC455>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE07
91B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948
167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC
12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C
6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFF
F001FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>I<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193E
A3191EA21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F1
01E01778A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4D
B5FCBBFC61A443447DC34A>I<BA1280A419C026003FFEC7121F1701EF007F183F181F18
0F180719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE
007F160F16071603A31601A693C9FCAFB712F0A53C447CC346>I<DCFFF01470031F01FF
14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0F
FF4901C0804990C87E4948814948814948167F4849163F4849161F5A4A160F485B190748
90CAFC19035A5BA2007F1801A34994C8FC12FFAD057FB612F0127F7FA3003FDC0001EBF0
00A27F7EA26C7FA26C7F807E6C7F6C7F6D7E6D6C5D6D6C7E6D6D5C6D01F05C010101FE14
3F6D903AFFF001FF9F023F90B6120F0207EDFC030201EDF000DA001F02C01330030001FC
C9FC4C467AC458>I<B7D88003B612FEA526003FFEC9EBF800B3A791B9FCA54AC9FCB3AA
B7D88003B612FEA54F447CC358>I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447D
C32A>I<B76C0103B512F8A526003FFEC93807E0004F5A4F5A077EC7FC614E5A4E5A4E5A
F01F804EC8FC187E604D5AEF07F0EF0FC04D5A4DC9FC177E4C5AEE03F04C5A4C5A4C7EEE
7FF04C7E5D4B7F4B7F4B7FED3F3FDB7E1F7F03FC806E486C7F4B7E4B6C7F0380804B6C7F
4A7F717E84717F83717F85717F83717F85717F187F727E86727F84727F86727F84B76C90
B612FCA54E447CC358>75 D<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A360
A2187EA218FE170117031707171F177FEE03FFB95AA539447CC343>I<B500FE067FB512
806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E
6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780
A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D
485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2
B6057FB6128071C7FCA2173E171C61447CC36A>I<B64BB512FE8181A281D8003F6D91C7
EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F
6F7F6F7F6F7F8382707F707F707F707F8482707F707F717E7113807113C019E0837113F0
7113F87113FC7113FE19FF847213F884848484A28484197F193F191FA2190F1907B61603
190119001A78A24F447CC358>I<923807FFC092B512FE0207ECFFC0021F15F091267FFE
0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E6C7E49486F7E4948
6F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A24819F04982003F19
F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A26D5E6C19F0A26E5D
6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D
01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F8020715C002004AC8FC
030713C047467AC454>I<B9FC18F018FE727E19E0D8001F90C7000F7F05017F716C7E72
7E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A4D485A050F5B92B7
12C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>I<B812F8EFFFC018F818FE72
7ED8001F90C7003F13E005037F05007F727E727E727EA28684A286A762A24E90C7FCA24E
5A61187F943801FFF005075B053F138092B7C8FC18F818E018F892C77FEF3FFF050F7F71
7F717FA2717FA2717FA785A61B0F85A2187F73131F72141EB700E06DEB803E72EBE0FC72
EBFFF8060114F0726C13E0CC0007138050457DC354>82 D<DAFFE0131C010701FE133C01
3F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848
140F491407007F15035B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014
FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C81011F810107811300020F8014
0003077FED007F82040F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D
140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F048
0107138031467AC43E>I<003FBA12E0A59026FE000FEB8003D87FE09338003FF049171F
90C71607A2007E1803007C1801A300781800A400F819F8481978A5C81700B3B3A20107B8
FCA545437CC24E>I<B76C010FB512F8A526003FFEC93803E000B3B3A9011F1707628019
0F6D606F151F6D95C7FC6D6D5D197E6D6D5D6D6D1403DA7FFC4A5A6EB4EC3FF0020F9039
F003FFE06E90B61280020193C8FC6E6C14FC030F14E09226007FFEC9FC4D457CC356>I<
B600FE017FB691B512FEA526007FFCC8D83FFEC9EA7C006E82013F701778807415F86D70
5F6F7014016D705FA26F7014036D64814E6D14076D646F70140F6D041E94C7FCA26F023E
6D5C6DDC3C7F151E81027F037C6D5CF0783F6F70147C023F4B6C1578A26F01016F13F86E
4B6C5D16806E02036F485A4E7E04C0EEE0036E4A486C5DA2DCE00FEDF0076E4B6C5D16F0
6E4A6F48C8FC051E7F04F8705A6E4A027F131EA2DCFC7CEDFE3E037F0178023F133C04FE
16FF033F01F85E4D8004FF17F86F496E5BA36F496E5BA26F604D80A26F90C86C5BA36F48
6F90C9FCA26F48167EA30478163C6F457EC374>87 D<007FB6D8C003B61280A5D8000F01
E0C7D801F8C7FC6D4C5A6F14076D6D5D6D6D4A5A4E5A6D6D143F6E6C92C8FC6E157E705B
6EEBC0016E01E05B4D5A6E6D485A6EEBF80F6E01FC5B4D5A6E6D48C9FC6F6C5A6F137E5F
6F5B815F816F7F81836F7F707E93B5FC844B805D4B8004E77FDB0FC37FED1F83DB3F817F
04007F037E137F4B8002016E7F4B6D7F4A5A4A486D7F020F6E7F4B7F4A48814AC76C7F71
7F147E4A6F7E0101707F4A8149488349486F7F010F707FB600E00103B612FCA54E447DC3
55>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C
6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC
01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE
013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>
97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF
000FFE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A217
7F18F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512
F0D9F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14
FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E
5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB
1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7C
AD32>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13
BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114
D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE
140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15
806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA2
6DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C
>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C6
01E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D
13FC01015B9038003FE023407EBE2C>I E /Fk 80 123 df<DA0FF813FC91397FFF07FF
903B01F807DF83C0903A07E001FF0F903B1F8007FE1FE090393F000FFC137E16F85B9338
F007804848010790C7FC1503ACB812F8A32801F80003F0C7FCB3AB486C497E267FFFE0B5
12F0A3333B7FBA30>11 D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090
383F0007017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3
AA486C497E267FFFE0B512C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F09038
07E00790381F800FEB3F00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E
267FFFE0B512C0A32A3B7FBA2E>I<017C166048B416F02607C3801401260F81C01403D9
00E04A5A001E01784A5A003E6D141F003C013FEC7F80007C90271BE003FFC7FC0218B512
BF007891381FFC3E00F8011CC75A020C14FC5F4C5A16035F4C5A160F5F4CC8FC021C5B00
780118133E007C5D16FC003C01385B003E90383001F0001EEB70036C01E05B903981C007
C03907C3800F2601FF005BD8007C49C9FC90C748EB07C0033EEB1FF04BEB3C3803FCEBF8
1C4B497E913A01F001E00602030103130703E0497E912607C0071480020F15011580DA1F
00018013C04A010F1300143E5C14FC5C495A13035C495A130F4A0107130149C701C01380
5B013E1603490203140001FC6F5A49020113064848913800F00E0003705A49ED3C3849ED
1FF06C48ED07C03A437BBD45>37 D<141FEC7FC0903801F0E0903803C060010713709038
0F803090381F00381518A25BA2133E133F15381530A215705D5D140190381F838092CAFC
1487148E02DC49B51280EB0FF85C4A9039003FF8000107ED0FC06E5D71C7FC6E140E010F
150CD91DFC141C01391518D970FE143801E015302601C07F1470D803805D00076D6C5BD8
0F00EBC00148011F5C4890380FE003003E6E48C8FC007E903807F8060203130E00FE6E5A
6E6C5A1400ED7F706C4B13036F5A6F7E6C6C6D6C5B7013066C6C496C130E6DD979FE5B28
1FF001F07F133C3C07F80FE03FC0F86CB539800FFFF0C69026FE000313C0D91FF0D9007F
C7FC393E7DBB41>I<121C127FEAFF80A213C0A3127F121C1200A412011380A212031300
5A1206120E5A5A5A12600A1979B917>I<146014E0EB01C0EB0380EB0700130E131E5B5B
A25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2
121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E0146013
5278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E13
1EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C
137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3
A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C09097988
17>I<150C151E153EA2153C157CA2157815F8A215F01401A215E01403A215C01407A215
80140FA215005CA2141E143EA2143C147CA2147814F8A25C1301A25C1303A2495AA25C13
0FA291C7FC5BA2131E133EA2133C137CA2137813F8A25B1201A25B1203A25B1207A25B12
0FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A12601F537BBD2A>I<EB03F8EB
1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2481580
A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C
6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>I<EB01C0
13031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0
EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FC
B4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC14
7C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400485A485A000EC75A00
0FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F8
48486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F
80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2
121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F8003F8
3907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114
031407A2140F141F141B14331473146314C313011483EB030313071306130C131C131813
301370136013C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800
AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC5D5D15
8092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003F049
6C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C12E000605C127000
30495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A
7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F80
4848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC9038
07FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C0151FA290C7
13E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07
F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003FB612E0A316C05A16
8016000070C712060060140E5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C
141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E23
3B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848486C7E4848137C90C7
7E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AEC
C1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801F
FF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE000F814075A1503A2
1501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B5
5A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903F803
F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C14
3FA27F123F001F147FA26C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD93FFC13
C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A
001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>I<121C127FEAFF80
A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80
A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A412031300A25A1206A2120E5A
121812385A1260093479A317>I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912
FCA26C17F836167B9F41>61 D<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F000
301303007014F8007C130100FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80
EC3F00147E147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A
010EC7FC1E3B7CBA27>63 D<EC03FF021F13E09138FC00FCD901E0131ED90780EB078001
1EC7EA01E00138EC00704981498148488148488190C97E48D901FC1480000ED907FFEB01
C0000C90391F03C000001C90267E00E013E000184901701360263801F86D13700030496D
13300103EC0FE0267007E00107133800601718495AA200E0171C484848150CAA6C6C7E12
60A26D6C151C00701718263003F0130F0101141F00386D013F1338261800FC0177133000
1C017E9038E3F070000C90261F03C113E0000E903A07FF00FFC06CD901FCEB3F006C90CA
FC7F6C7E6C7E13706D167C011EED03FCD90780EC1FF0D901E0ECFF80D900FC90383FFC00
021FB51280020301E0C7FC363C7BBA41>I<1538A3157CA315FEA34A7EA34A6C7EA20207
7FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F
1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA349
6E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>
I<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787
D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A24848
1503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A212
3F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D9
03FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B6
48B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB6
48B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B
0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B>I<B649B5FC
A3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E
5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A
6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F84
84486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C90C9FCB3AD17
18A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>I<
B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3
F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C13
30A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1F
D8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB84C
>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EB
C3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153F
ED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216
071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>
I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049
C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E04915
0F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1F
E0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D
6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA
41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17
FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F0
91C9FCB3A5487FB6FCA330397DB839>I<EC03FF021F13E09138FE01FC903901F8007ED9
07E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA24848157F00071780
49153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8A2491507A200FF17FCAC00
7F17F8A26D150FA2003F17F0A26C6CED1FE0A36C6CED3FC00007027C14804AB4FC3C03F8
0383807F003B01FC0701C0FEEC0E002600FE0CEBE1FC017FEC63F8D93F8CEB77F0D91FCC
EB3FE0D907EE14806DB449C7FC0100D981FC130CEC1FFF0203131C91C7001E131C161F18
3CEF807CEFC0F8EE0FFFA318F08218E07013C07013809338007E00364B7BBA41>I<B612
FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C
5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E70
7EA2161F83A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE
0ECAEA3FFCEF07F0393B7DB83D>I<D90FF813C090383FFE0190B512813903F807E33907
E000F74848137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400
A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F14800107
14C0EB007F020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E
15036C15E06C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F
13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE
01F00078160000701770A300601730A400E01738481718A4C71600B3B0913807FF80011F
B612E0A335397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F00
1706B3B2170E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07
806D6C49C7FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B5D8FC07
B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B
807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C
010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D
6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3
151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B
1407A2020093C8FC4B80503B7EB855>87 D<003FB7FCA39039FC0001FE01C0130349495A
003EC7FC003C4A5A5E0038141F00784A5A12704B5A5E006014FF4A90C7FCA24A5A5DC712
074A5AA24A5A5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948EB0180A2495A5C13
7F495A16034890C7FC5B1203485AEE0700485A495C001F5D48485C5E4848495A49130FB8
FCA329397BB833>90 D<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>I<EAFFF8
A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>93 D<13101338137C13FE487E3803C78038
0783C0380F01E0381E00F04813780070131C48130E00401304170D77B92A>I<EB1FE0EB
FFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147F
EB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C1303
6CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA5
2A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F700
0FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15
016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA
1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC
380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F
001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F8
1F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF
3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27E
A26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD9
07F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013
F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127F
A26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E09038
1FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF013
7EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA
19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07
C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC3807
3FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F8000
7FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D8
0F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F0
12FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D
7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5A
EA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07
F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F0
1303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F
1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC
13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1F
C0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512
C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C0
1F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495C
B3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCEC
F03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1
B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F
48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2
007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E
03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039
F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA
16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E90
38F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE019038
7E07819038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA3
12FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90
381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC090
38E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A248
7EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0
A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F
00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F
801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7
FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0
EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D
9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A
0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA2
6D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D
5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017E
EB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C
15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6001360A2D9
07E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E0260
130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D
13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF90
3801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C80
000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07
C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360
A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A2
5CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<
003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0EC3F800060
137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA2485A485A0007
140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247EA325>I
E /Fl 26 121 df<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C
1B>46 D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A2
02078015C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7F
A20101824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F4982013E151F
A2017E82017C8101FE83B500F80107B61280A4413A7DB948>65 D<B87E17F817FF18C028
007FF8000713F09338007FF8EF1FFE717E050313807113C0A27113E0F07FF0A2F03FF8A2
19FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0FFE0A24D13C04D13804D
1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397DB849>68
D<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA2
18FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3
A4B612FCA438397DB841>80 D<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F
717E717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139
F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC
011F130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB848>82
D<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F
48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014
FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC007F03
0F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F81303
9039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>I<EB3F
FE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380
C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415
FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257D
A42E>97 D<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485AEA0FF812
1F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E15036C6C
EB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA42A>99
D<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003EB001FD8
07FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C6C5B
6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB935>I<903803FF
80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003F
EC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D
14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C>
I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A2481381A24813
016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D>I<161FD9
07FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F003F15CF
4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE07FE48B5
12F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C15F86C81
6C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C495AD81F
F0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<13FFB5FCA4
12077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A14C05CA25C
A291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2487EA56C5AA26C
5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13FFB5FCA412077E
AF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07E04A5A141F
EC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E82150F82B5D8F8
3F13F8A42D3A7EB932>107 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>I<01FE
D97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F03FF0DA
3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291C75BB3
A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FFF8020F13FE91
381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC3F13FF
A430257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48
486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F
5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA4
30>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800003496C13C00280
EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E0
6EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FC
A42F357EA435>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C
5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114
D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15787E
7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE
140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F81400
38E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7
FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>
I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90
387FFFFC011F13F00103138030257DA435>I<B500F1B538803FFFA43D07FE000FF80003
E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90
273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139
FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5C
A2023E147C023C143C40257EA445>119 D<B539F01FFFF0A4000390398003F8006C01C0
13E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B
6D5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E01
3E80496D7E49130F00016E7EB590383FFFF8A42D257EA432>I E
/Fm 21 121 df<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A3F1A1FA2
F20FE0A21A07A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92B6FCA592
38F8007F170F170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A01A31A03
1BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F517CD058
>69 D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92B8EA803F
0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC
4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F485B481A3F
A24849181FA3485B1B0FA25AA298C8FC5CA2B5FCAE6C057FB712E0A280A36C94C7003FEB
C000A36C7FA36C7FA27E6C7FA26C7F6C7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D
13FF6D6C6D5C6E01F0EC07FB020F01FEEC1FF10203903AFFF001FFE0020091B6EAC07F03
3FEE001F030703FC1307DB007F02E01301040149CAFC5B5479D26A>71
D<B812F8A5D8000701F8CAFCB3B3A91A7CA41AFC1AF8A51901A31903A219071AF0190FA2
191F193F197F19FF180360183F4DB5FCBB12E0A546527CD151>76
D<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070EF01EFA202EF6DEF03CFA202
E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173CA26F6C1778A26F6C17F0A26F
6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F6D151EA26F6D5DA3706C5DA2
706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FCA2706D131EA2706D5BA2716C
5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FFC8FCA3715BA2715BA2725AA2
725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180>I<B912F0F0FF8019F819FF
1AC0D8000701F0C714F0060F7F060113FE727F737F737F85737F87A2737FA387A863A261
6363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512C092B8C9FC19F819E019F89226
F0000313FE9439007FFF80727F727F727F727F727F8684A28684A787A71D1C75133EA385
75137E73157C7513FC731401B86C6D9038F803F807039038FE07F07390B512E0736C14C0
080F1400CEEA7FFC5F537CD164>82 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F
2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9
FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B48
5B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C90
26C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E0010101E0
90C8FC3C387CB641>97 D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE
903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC48
6F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6C
EE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A010015
80023F49C7FC020113E033387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801
FFE0021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F
4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C
6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B512
8F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6
FC010715C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048
497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F
7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF
00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB6
3D>I<ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F4990
3800FFFC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8
FCB3B3A7007FB512FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13
E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F
4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5A
A26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C0
3F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D8284
48B9FC12074848C700031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F
18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B
6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0B5FCA512
03C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F0
7FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD2
4B>I<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5
FCA512017EB3B3A6B612E0A51B547BD325>I<D93FF0D91FFCEDFFE0B591B500C0010713
FE030302F0011F6D7E030F6E017F8092271FE07FFCD9FF037F922A3F001FFE01F8007F00
03027C9126FF03E080C602F06DD90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC
143F07FC8102FFC75C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570
>109 D<D93FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F001FFE0003
027C80C602F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612
C0A542367BB54B>I<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1F
FC000FFED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A2
48486F7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C
5F6C6D4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A
010015C0023F91C8FC020113E03A387CB643>I<903A3FF001FFE0B5010F13FE033FEBFF
C092B612F002F301017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A82
4A6E7F4A6E7FA2717FA285187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A
5B6E4A5B6F495B6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8
FC030313C092CBFCB1B612F8A5414D7BB54B>I<90397FE003FEB590380FFF80033F13E0
4B13F09238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FE
EB3FFC5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114
D<903903FFF00F013FEBFE1F90B7FC120348EB003FD80FF81307D81FE0130148487F4980
127F90C87EA24881A27FA27F01F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C
816C816C81C681013F1580010F15C01300020714E0EC003F030713F015010078EC007F00
F8153F161F7E160FA27E17E07E6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FF
C00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7FC2C387CB635>I<143EA6147EA414
FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE
07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B0203
13802A4D7ECB34>I<007FB500F090387FFFFEA5C66C48C7000F90C7FC6D6CEC07F86D6D
5C6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387FFE014C5A6E6C485A6EEB
8FE06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F834B7F4B7F92B5FCDA01
FD7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A486C7F02FE6D7F4A6D7F49
5A49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612C0A542357EB447>120
D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 30 141 4050 9 v 229 374 a Fm(Exp)t(onen)l(tiated)46
b(Gradien)l(t)g(Metho)t(ds)f(for)g(Reinforcemen)l(t)h(Learning)p
30 556 V 892 913 a Fl(Doina)32 b(Precup)574 1013 y Fk(Departmen)n(t)27
b(of)h(Computer)f(Science)675 1113 y(Univ)n(ersit)n(y)f(of)i(Massac)n
(h)n(usetts)812 1212 y(Amherst,)g(MA)g(01003)769 1312
y(dprecup@cs.umass.edu)2553 913 y Fl(Ric)m(hard)33 b(S.)e(Sutton)2324
1013 y Fk(Departmen)n(t)c(of)h(Computer)f(Science)2425
1113 y(Univ)n(ersit)n(y)f(of)i(Massac)n(h)n(usetts)2562
1212 y(Amherst,)g(MA)g(01003)2596 1312 y(ric)n(h@cs.umass.edu)791
1641 y Fj(Abstract)196 1860 y Fk(This)37 b(pap)r(er)g(in)n(tro)r(duces)
f(and)h(ev)-5 b(aluates)37 b(a)f(nat-)196 1960 y(ural)42
b(extension)g(of)g(linear)g(exp)r(onen)n(tiated)g(gra-)196
2059 y(dien)n(t)f(metho)r(ds)h(that)f(mak)n(es)f(them)i(applicable)196
2159 y(to)32 b(reinforcemen)n(t)f(learning)h(problems.)50
b(Just)32 b(as)196 2259 y(these)c(metho)r(ds)g(sp)r(eed)g(up)g(sup)r
(ervised)f(learning,)196 2358 y(w)n(e)39 b(\014nd)i(that)f(they)f(can)h
(also)e(increase)h(the)h(ef-)196 2458 y(\014ciency)33
b(of)h(reinforcemen)n(t)e(learning.)53 b(Compar-)196
2558 y(isons)36 b(are)g(made)g(with)i(con)n(v)n(en)n(tional)c
(reinforce-)196 2657 y(men)n(t)27 b(learning)e(metho)r(ds)i(on)f(t)n(w)
n(o)f(test)i(problems)196 2757 y(using)d(CMA)n(C)g(function)h(appro)n
(ximators)d(and)i(re-)196 2857 y(placing)36 b(traces.)61
b(On)36 b(a)g(small)g(prediction)g(task,)196 2956 y(exp)r(onen)n
(tiated)j(gradien)n(t)f(metho)r(ds)h(sho)n(w)n(ed)f(no)196
3056 y(impro)n(v)n(emen)n(t,)45 b(but)f(on)e(a)g(larger)f(con)n(trol)h
(task)196 3155 y(\(Moun)n(tain)34 b(Car\))f(they)h(impro)n(v)n(ed)e
(the)i(learning)196 3255 y(sp)r(eed)41 b(b)n(y)g(appro)n(ximately)e
(25\045.)76 b(A)41 b(more)f(de-)196 3355 y(tailed)k(analysis)g
(suggests)f(that)h(the)h(di\013erence)196 3454 y(ma)n(y)32
b(b)r(e)h(due)g(to)f(the)h(distribution)g(of)f(irrelev)-5
b(an)n(t)196 3554 y(features.)30 3839 y Fj(1)112 b(INTR)m(ODUCTION)30
4038 y Fk(Exp)r(onen)n(tiated)28 b(gradien)n(t)g(\(EG\))h(metho)r(ds)g
(w)n(ere)f(\014rst)h(pro-)30 4138 y(p)r(osed)35 b(b)n(y)g(Littlestone)h
(\(1988\))e(in)i(the)g(form)f(of)g(the)h(Win-)30 4237
y(no)n(w)27 b(algorithm)g(for)g(training)g(linear)f(threshold)i
(classi\014ers.)30 4337 y(Kivinen)36 b(and)f(W)-7 b(arm)n(uth)36
b(\(1994\))f(prop)r(osed)f(the)j(\014rst)e(EG)30 4436
y(metho)r(ds)e(for)g(on-line)f(linear)g(regression.)50
b(The)33 b(analogous)30 4536 y(con)n(v)n(en)n(tional)23
b(metho)r(d)j(for)f(online)g(linear)f(regression)f(is)i(the)30
4636 y(Least-Mean)c(Square)f(\(LMS\))j(rule)f(\(Widro)n(w)f(&)h
(Ho\013,)h(1960;)30 4735 y(also)g(kno)n(wn)h(as)f(the)i(Widro)n
(w-Ho\013)e(rule)h(or)f(the)i(delta)f(rule\).)30 4835
y(The)e(LMS)g(rule)g(mak)n(es)f(additiv)n(e)g(up)r(dates)h(in)h(w)n
(eigh)n(t)e(space,)30 4935 y(whereas)26 b(EG)i(metho)r(ds)g(p)r(erform)
f(m)n(ultiplicativ)n(e)g(up)r(dates.)30 5084 y(Kivinen)35
b(and)g(W)-7 b(arm)n(uth)36 b(\(1994\))e(established)h(theoretical)30
5184 y(w)n(orst)18 b(case)h(loss)g(b)r(ounds)g(for)g(b)r(oth)h(kinds)g
(of)f(metho)r(ds)h(in)g(the)30 5283 y(con)n(text)g(of)g(online)g
(linear)g(regression.)32 b(The)20 b(theoretical)f(and)30
5383 y(exp)r(erimen)n(tal)27 b(evidence)h(suggest)e(that)i(EG)f(metho)r
(ds)h(ha)n(v)n(e)2130 1641 y(a)c(lo)n(w)n(er)f(loss)g(b)r(ound)i(for)f
(problems)g(in)g(whic)n(h)g(only)g(a)g(few)h(of)2130
1740 y(the)h(input)g(features)f(are)g(relev)-5 b(an)n(t.)35
b(Empirically)-7 b(,)25 b(they)h(con-)2130 1840 y(v)n(erge)34
b(faster)h(for)g(this)h(class)f(of)h(problems.)60 b(EG)36
b(metho)r(ds)2130 1940 y(ha)n(v)n(e)31 b(also)g(pro)n(v)n(ed)g
(e\013ectiv)n(e)h(in)h(applications.)50 b(F)-7 b(or)32
b(exam-)2130 2039 y(ple,)j(sev)n(eral)d(researc)n(hers)f(ha)n(v)n(e)h
(sho)n(wn)h(that)h(they)f(can)h(b)r(e)2130 2139 y(used)25
b(successfully)f(to)h(train)f(linear)g(classi\014ers)g(for)g(informa-)
2130 2239 y(tion)19 b(routing)g(tasks)f(with)i(sparse)e(targets)g
(\(Lewis,)j(Sc)n(hapire,)2130 2338 y(Callan)27 b(&)f(P)n(apk)-5
b(a,)26 b(1996;)g(P)n(apk)-5 b(a,)26 b(Callan)h(&)g(Barto,)f(1996\).)
2130 2488 y(EG)42 b(metho)r(ds)h(ha)n(v)n(e)e(sev)n(eral)g(c)n
(haracteristics)f(that)j(mak)n(e)2130 2587 y(them)24
b(app)r(ealing)e(for)h(reinforcemen)n(t)f(learning.)35
b(First,)24 b(they)2130 2687 y(are)40 b(online)g(metho)r(ds,)45
b(whic)n(h)c(is)f(required)g(for)h(reinforce-)2130 2787
y(men)n(t)34 b(learning.)55 b(Second,)36 b(man)n(y)d(reinforcemen)n(t)g
(learning)2130 2886 y(tasks)42 b(with)i(con)n(tin)n(uous)e(state)h
(spaces)f(ha)n(v)n(e)g(b)r(een)i(tac)n(k-)2130 2986 y(led)30
b(using)g(sparse)e(coarse)g(co)r(ded)i(function)h(appro)n(ximators)2130
3085 y(\(e.g.,)d(Sutton,)h(1996,)d(W)-7 b(atkins,)29
b(1989,)d(Rummery)i(and)g(Ni-)2130 3185 y(ranjan,)35
b(1994\).)53 b(EG)34 b(metho)r(ds)g(ma)n(y)f(b)r(e)h(able)f(to)h
(discrim-)2130 3285 y(inate)f(irrelev)-5 b(an)n(t)31
b(features)h(quic)n(kly)h(in)g(this)g(t)n(yp)r(e)g(of)f(input)2130
3384 y(represen)n(tation.)h(Third,)23 b(online)f(reinforcemen)n(t)f
(learning)f(is)2130 3484 y(particularly)j(sensitiv)n(e)h(to)g(the)h(sp)
r(eed)f(of)g(learning,)g(and)g(EG)2130 3584 y(metho)r(ds)k(can)f(p)r
(oten)n(tially)g(impro)n(v)n(e)g(it.)2130 3733 y(This)44
b(pap)r(er)g(presen)n(ts)g(EG)g(metho)r(ds)g(for)g(reinforcemen)n(t)
2130 3833 y(learning)53 b(with)h(linear)f(function)h(appro)n(ximators.)
112 b(EG)2130 3932 y(metho)r(ds)24 b(are)g(presen)n(ted)f(in)i(section)
f(2.)35 b(Section)24 b(3)g(presen)n(ts)2130 4032 y(the)f(extension)e
(to)h(temp)r(oral-di\013erence)g(learning)f(and)h(rein-)2130
4132 y(forcemen)n(t)30 b(learning.)43 b(Sections)30 b(4)f(and)h(5)g
(describ)r(e)g(exp)r(eri-)2130 4231 y(men)n(tal)21 b(results)f(on)h
(prediction)f(and)h(con)n(trol)e(tasks.)34 b(Section)2130
4331 y(6)g(further)g(analyzes)f(the)i(exp)r(erimen)n(tal)f(results,)i
(and)e(sec-)2130 4430 y(tion)28 b(7)f(presen)n(ts)g(conclusions.)2130
4666 y Fj(2)112 b(EXPONENTIA)-9 b(TED)34 b(GRADIENT)2298
4783 y(METHODS)2130 4984 y Fk(First,)47 b(w)n(e)c(review)f(the)i(deriv)
-5 b(ation)42 b(of)h(con)n(v)n(en)n(tional)e(EG)2130
5084 y(metho)r(ds)36 b(for)f(online)h(sup)r(ervised)f(learning.)61
b(The)35 b(learner)2130 5184 y(is)j(presen)n(ted)g(with)h(a)f(sequence)
g(of)g Fi(N)9 b Fk(-dimensional)37 b(real-)2130 5283
y(v)-5 b(alued)33 b(v)n(ectors,)f Fl(x)2758 5295 y Fh(t)2787
5283 y Fk(,)i(and)e(is)h(ask)n(ed)e(to)i(predict)g(the)g(scalar)2130
5383 y(v)-5 b(alues,)35 b Fi(y)2449 5395 y Fh(t)2478
5383 y Fk(,)g(asso)r(ciated)d(with)i(them.)56 b(A)n(t)34
b(eac)n(h)f(time)h(step,)p eop
%%Page: 2 2
2 1 bop 30 216 a Fk(the)27 b(learner's)e(prediction,)33
b(^)-48 b Fi(y)960 228 y Fh(t)989 216 y Fk(,)27 b(dep)r(ends)h(on)e
(the)h(input)h(v)n(ec-)30 315 y(tor)20 b(and)g(the)h(curren)n(t)e(h)n
(yp)r(othesis,)i(represen)n(ted)e(b)n(y)h(a)g(v)n(ector)30
415 y(of)28 b(real-v)-5 b(alued)26 b(w)n(eigh)n(ts,)h
Fl(w)935 427 y Fh(t)964 415 y Fk(:)744 590 y(^)-47 b
Fi(y)780 602 y Fh(t)832 590 y Fk(=)22 b Fi(f)9 b Fk(\()p
Fl(x)1051 602 y Fh(t)1081 590 y Fi(;)14 b Fl(w)1187 602
y Fh(t)1216 590 y Fk(\))p Fi(:)30 765 y Fk(The)31 b(learner)f(adjusts)h
(its)g(h)n(yp)r(othesis)g(b)n(y)g(c)n(ho)r(osing)e(a)i(new)30
864 y(w)n(eigh)n(t)49 b(v)n(ector,)55 b Fl(w)685 876
y Fh(t)p Fg(+1)798 864 y Fk(,)h(that)50 b(minimizes)g(the)h(ob)5
b(jectiv)n(e)30 964 y(function)550 1063 y Fi(d)p Fk(\()p
Fl(w)694 1075 y Fh(t)p Fg(+1)808 1063 y Fi(;)14 b Fl(w)914
1075 y Fh(t)943 1063 y Fk(\))k(+)g Fi(\013E)5 b Fk(\()p
Fi(y)1268 1075 y Fh(t)1298 1063 y Fi(;)20 b Fk(^)-48
b Fi(y)1376 1075 y Fh(t)1405 1063 y Fk(\))p Fi(;)414
b Fk(\(1\))30 1208 y(where)20 b Fi(d)i Fk(is)e(a)h(distance)f(metric)h
(and)g Fi(E)26 b Fk(is)21 b(an)g(error)d(function.)30
1308 y(The)38 b(parameter)f Fi(\013)i Fk(determines)f(ho)n(w)f(m)n(uc)n
(h)h(emphasis)g(is)30 1407 y(put)i(on)f(the)g(correctiv)n(e)f(part)g
(of)h(the)h(ob)5 b(jectiv)n(e)39 b(function)30 1507 y(relativ)n(e)26
b(to)i(the)g(conserv)-5 b(ativ)n(e)26 b(part.)30 1657
y(The)20 b(ob)5 b(jectiv)n(e)19 b(function)i(\(1\))f(can)g(b)r(e)g
(used)g(to)g(deriv)n(e)f(w)n(eigh)n(t)30 1756 y(up)r(date)28
b(rules)f(for)g(di\013eren)n(t)h(distance)g(metrics,)f(error)f(mea-)30
1856 y(sures,)32 b(and)g(forms)g(of)g(predictors.)49
b(W)-7 b(e)33 b(fo)r(cus)f(on)f(the)i(case)30 1955 y(of)d(linear)g
(predictors,)f(in)i(whic)n(h)f Fl(w)1184 1967 y Fh(t)1243
1955 y Fk(is)g(an)g Fi(N)9 b Fk(-dimensional)30 2055
y(real)49 b(v)n(ector,)55 b(and)50 b(the)h(predicted)f(output)h(is)f
(giv)n(en)f(b)n(y)36 2155 y(^)-48 b Fi(y)71 2167 y Fh(t)144
2155 y Fk(=)44 b Fl(w)323 2125 y Fh(T)322 2175 y(t)375
2155 y Fl(x)425 2167 y Fh(t)499 2155 y Fk(=)607 2092
y Ff(P)695 2113 y Fh(N)695 2180 y(i)p Fg(=1)821 2155
y Fi(w)880 2167 y Fh(t)909 2155 y Fk(\()p Fi(i)p Fk(\))p
Fi(x)1049 2167 y Fh(t)1079 2155 y Fk(\()p Fi(i)p Fk(\),)g(where)39
b Fi(w)1550 2167 y Fh(t)1580 2155 y Fk(\()p Fi(i)p Fk(\))i(are)e(the)30
2254 y(individual)34 b(comp)r(onen)n(ts)g(of)g Fl(w)1060
2266 y Fh(t)1089 2254 y Fk(,)i(and)e Fi(x)1363 2266 y
Fh(t)1392 2254 y Fk(\()p Fi(i)p Fk(\))g(are)g(the)g(indi-)30
2354 y(vidual)27 b(comp)r(onen)n(ts)g(of)h Fl(x)883 2366
y Fh(t)913 2354 y Fk(.)30 2503 y(The)56 b(LMS)g(rule)f(can)g(b)r(e)h
(obtained)g(from)f(\(1\))h(b)n(y)f(us-)30 2603 y(ing)f(the)g(Euclidian)
f(distance)g(metric,)61 b Fi(d)p Fk(\()p Fl(w)1568 2615
y Fh(t)p Fg(+1)1681 2603 y Fi(;)14 b Fl(w)1787 2615 y
Fh(t)1817 2603 y Fk(\))66 b(=)30 2651 y Ff(P)118 2672
y Fh(N)118 2738 y(i)p Fg(=1)229 2713 y Fk(\()p Fi(w)320
2725 y Fh(t)p Fg(+1)434 2713 y Fk(\()p Fi(i)p Fk(\))47
b Fe(\000)g Fi(w)745 2725 y Fh(t)775 2713 y Fk(\()p Fi(i)p
Fk(\)\))900 2683 y Fg(2)937 2713 y Fk(,)81 b(and)70 b(the)h(squared)e
(error,)30 2813 y Fi(E)5 b Fk(\()p Fi(y)169 2825 y Fh(t)198
2813 y Fi(;)20 b Fk(^)-48 b Fi(y)276 2825 y Fh(t)305
2813 y Fk(\))23 b(=)g(\()p Fi(y)521 2825 y Fh(t)569 2813
y Fe(\000)g Fk(^)-47 b Fi(y)693 2825 y Fh(t)722 2813
y Fk(\))754 2783 y Fg(2)791 2813 y Fk(.)37 b(The)28 b(resulting)f(up)r
(date)h(rule)f(is:)516 2988 y Fl(w)585 3000 y Fh(t)p
Fg(+1)721 2988 y Fk(:=)c Fl(w)901 3000 y Fh(t)949 2988
y Fk(+)18 b Fi(\013)p Fk(\()p Fi(y)1158 3000 y Fh(t)1206
2988 y Fe(\000)24 b Fk(^)-48 b Fi(y)1330 3000 y Fh(t)1359
2988 y Fk(\))p Fl(x)1441 3000 y Fh(t)1471 2988 y Fi(:)380
b Fk(\(2\))30 3163 y(The)60 b(corresp)r(onding)e(EG)i(metho)r(d)h(uses)
f(the)g(squared)30 3262 y(error)f(and)h(the)h(unnormalized)f(relativ)n
(e)f(en)n(trop)n(y)g(dis-)30 3362 y(tance)34 b(metric,)h
Fi(d)p Fk(\()p Fl(w)691 3374 y Fh(t)p Fg(+1)805 3362
y Fi(;)14 b Fl(w)911 3374 y Fh(t)940 3362 y Fk(\))34
b(=)1104 3300 y Ff(P)1191 3320 y Fh(N)1191 3387 y(i)p
Fg(=1)1303 3362 y Fk(\()p Fi(w)1394 3374 y Fh(t)p Fg(+1)1508
3362 y Fk(\()p Fi(i)p Fk(\))23 b Fe(\000)f Fi(w)1770
3374 y Fh(t)1800 3362 y Fk(\()p Fi(i)p Fk(\))g(+)30 3479
y Fi(w)89 3491 y Fh(t)119 3479 y Fk(\()p Fi(i)p Fk(\))14
b(log\()411 3439 y Fh(w)459 3447 y Fd(t)486 3439 y Fg(\()p
Fh(i)p Fg(\))p 375 3460 222 4 v 375 3508 a Fh(w)423 3516
y Fd(t)p Fc(+1)522 3508 y Fg(\()p Fh(i)p Fg(\))607 3479
y Fk(\)\).)42 b(Assuming)29 b(that)h(the)f(w)n(eigh)n(ts)g(are)f(re-)30
3589 y(stricted)37 b(to)g(p)r(ositiv)n(e)f(v)-5 b(alues,)39
b(the)f(resulting)e(up)r(date)h(rule)30 3688 y(can)27
b(b)r(e)h(written:)395 3863 y(log)14 b Fl(w)585 3875
y Fh(t)p Fg(+1)721 3863 y Fk(:=)23 b(log)14 b Fl(w)1022
3875 y Fh(t)1070 3863 y Fk(+)k Fi(\013)p Fk(\()p Fi(y)1279
3875 y Fh(t)1327 3863 y Fe(\000)24 b Fk(^)-48 b Fi(y)1451
3875 y Fh(t)1480 3863 y Fk(\))p Fl(x)1562 3875 y Fh(t)1592
3863 y Fi(;)259 b Fk(\(3\))30 4038 y(where)44 b(the)g(natural)g
(logarithm)f(is)h(applied)g(comp)r(onen)n(t-)30 4138
y(wise.)36 b(Th)n(us,)24 b(in)h(a)f(sense,)h(the)f(EG)h(metho)r(d)f
(tak)n(es)g(the)h(same)30 4237 y(steps)34 b(as)g(the)h(LMS)g(rule,)h
(but)f(in)g(the)g(space)f(of)h(the)g(loga-)30 4337 y(rithm)20
b(of)f(the)h(w)n(eigh)n(ts.)33 b(This)20 b(yields)f(m)n(ultiplicativ)n
(e)g(instead)30 4436 y(of)28 b(additiv)n(e)f(up)r(dates)h(in)f(w)n
(eigh)n(t)g(space.)30 4586 y(EG)39 b(metho)r(ds)g(m)n(ust)g(tak)n(e)g
(sp)r(ecial)f(steps)h(to)g(allo)n(w)f(nega-)30 4685 y(tiv)n(e)i(as)f(w)
n(ell)h(as)f(p)r(ositiv)n(e)g(w)n(eigh)n(ts.)73 b(Otherwise,)43
b(up)r(date)30 4785 y(rule)35 b(\(3\))g(w)n(ould)f(require)g(strictly)h
(p)r(ositiv)n(e)f(w)n(eigh)n(ts.)58 b(The)30 4885 y(solution)48
b(adopted)h(b)n(y)f(Kivinen)h(and)g(W)-7 b(arm)n(uth)48
b(\(1994\))30 4984 y(is)42 b(to)g(duplicate)h(the)f(input)h(v)n(ector)e
Fl(x)1326 4996 y Fh(t)1356 4984 y Fk(,)46 b(replacing)41
b(it)h(b)n(y)30 5084 y(\()p Fi(x)109 5096 y Fh(t)139
5084 y Fk(\(1\))p Fi(;)14 b(:::x)398 5096 y Fh(t)428
5084 y Fk(\()p Fi(N)9 b Fk(\))p Fi(;)14 b Fe(\000)p Fi(x)717
5096 y Fh(t)746 5084 y Fk(\(1\))p Fi(;)g(:::;)g Fe(\000)p
Fi(x)1107 5096 y Fh(t)1137 5084 y Fk(\()p Fi(N)9 b Fk(\)\).)79
b(Th)n(us,)45 b(although)30 5184 y(eac)n(h)36 b(w)n(eigh)n(t)h(is)f
(strictly)h(p)r(ositiv)n(e,)i(the)f(di\013erence)f(of)g(the)30
5283 y(w)n(eigh)n(ts)29 b(corresp)r(onding)f(to)i(eac)n(h)f(input)h
(feature)g(can)f(ha)n(v)n(e)30 5383 y(an)n(y)e(sign.)2130
216 y(Both)32 b(EG)g(and)g(LMS)h(metho)r(ds)f(are)g(of)g(linear)g
(complexit)n(y)2130 315 y(in)i(the)g(n)n(um)n(b)r(er)g(of)g(w)n(eigh)n
(ts)f(\()p Fi(O)r Fk(\()p Fi(N)9 b Fk(\)\).)57 b(Ho)n(w)n(ev)n(er,)34
b(the)g(EG)2130 415 y(metho)r(d)g(needs)g(t)n(wice)g(as)f(man)n(y)h(w)n
(eigh)n(ts,)g(and)g(is)g(sligh)n(tly)2130 515 y(more)28
b(exp)r(ensiv)n(e)h(computationally:)39 b(it)30 b(requires)e(an)h(exp)r
(o-)2130 614 y(nen)n(tiation)20 b(op)r(eration)g(for)g(eac)n(h)g(w)n
(eigh)n(t)g(on)h(eac)n(h)f(time)h(step,)2130 714 y(in)33
b(addition)f(to)g(the)h(computation)f(required)g(b)n(y)g(the)h(LMS)2130
814 y(rule.)2130 963 y(The)20 b(EG)g(metho)r(d)h(is)f(also)e(more)i
(sensitiv)n(e)f(than)h(LMS)h(to)f(the)2130 1063 y(initial)30
b(magnitude)g(of)g(the)g(w)n(eigh)n(ts.)43 b(If)30 b(this)g(magnitude)g
(is)2130 1162 y(to)r(o)23 b(small,)g(the)g(algorithm)f(will)h(con)n(v)n
(erge)e(v)n(ery)g(slo)n(wly)-7 b(.)35 b(Big)2130 1262
y(initial)26 b(magnitudes)g(can)f(lead)h(to)g(instabilit)n(y)g(and)g(o)
n(v)n(er\015o)n(w)2130 1362 y(errors.)2130 1511 y(In)50
b(order)e(to)i(k)n(eep)f(the)h(w)n(eigh)n(t)f(magnitudes)h(b)r(ounded,)
2130 1611 y(Kivinen)29 b(and)f(W)-7 b(arm)n(uth)29 b(\(1994\))f(prop)r
(osed)g(a)g(v)-5 b(ariation)28 b(of)2130 1710 y(the)k(EG)g(metho)r(d)g
(that)g(applies)f(a)g(normalization)g(step)g(af-)2130
1810 y(ter)39 b(eac)n(h)f(w)n(eigh)n(t)h(up)r(date.)72
b(The)39 b(normalization)f(linearly)2130 1910 y(rescales)26
b(all)h(w)n(eigh)n(ts)g(so)g(that)h(they)g(sum)f(to)h(a)f(constan)n(t:)
2839 2083 y Fg(2)p Fb(\003)p Fh(N)2842 2108 y Ff(X)2848
2285 y Fh(i)p Fg(=1)2979 2187 y Fi(w)3038 2199 y Fh(t)3068
2187 y Fk(\()p Fi(i)p Fk(\))c(=)g Fi(W)n(:)2130 2510
y Fk(Normalization)g(in)n(tro)r(duces)g(a)g(supplemen)n(tary)g
(parameter,)2130 2609 y Fi(W)12 b Fk(,)30 b(whic)n(h)f(needs)g(to)g(b)r
(e)g(tuned.)43 b(Our)28 b(initial)h(exp)r(erimen)n(ts)2130
2709 y(found)k(normalization)e(to)h(b)r(e)h(sometimes)g(coun)n(terpro)r
(duc-)2130 2808 y(tiv)n(e)d(and)h(nev)n(er)f(v)n(ery)f(helpful)i
(\(Precup)f(&)h(Sutton,)h(1996\).)2130 2908 y(W)-7 b(e)28
b(did)g(not)g(use)f(it)h(in)g(the)g(exp)r(erimen)n(ts)f(presen)n(ted)g
(here.)2130 3165 y Fj(3)112 b(EXTENSION)36 b(TO)2298
3281 y(REINF)m(OR)m(CEMENT)f(LEARNING)2130 3496 y Fk(It)f(is)f(natural)
f(to)i(extend)f(the)h(EG)f(idea)g(to)g(reinforcemen)n(t)2130
3595 y(learning)24 b(in)h(t)n(w)n(o)f(steps.)36 b(First)25
b(w)n(e)f(extend)i(it)f(to)g(the)g(case)f(of)2130 3695
y(long-term)33 b(prediction)g(b)n(y)h(temp)r(oral-di\013erence)f
(learning,)2130 3795 y(and)24 b(then)i(w)n(e)e(extend)h(it)g(to)f(the)h
(full)h(case)d(of)i(reinforcemen)n(t)2130 3894 y(learning,)i(including)
g(con)n(trol.)2130 4044 y(The)e(long)f(term)g(prediction)g(problem)h
(most)f(frequen)n(tly)g(en-)2130 4143 y(coun)n(tered)i(in)h
(reinforcemen)n(t)e(learning)h(is)g(that)h(of)f(predict-)2130
4243 y(ing)44 b(the)h(discoun)n(ted)g(cum)n(ulativ)n(e)f(future)h(rew)n
(ard.)86 b(The)2130 4343 y(learner)23 b(is)g(presen)n(ted)h(with)g(a)g
(time)g(sequence)f(of)h(input)h(v)n(ec-)2130 4442 y(tors,)35
b Fl(x)2378 4454 y Fh(t)2407 4442 y Fk(,)h(and)e(scalar)e(rew)n(ards,)i
Fi(r)3252 4454 y Fh(t)3282 4442 y Fk(.)56 b(A)n(t)34
b(eac)n(h)f(time)i Fi(t)p Fk(,)h(the)2130 4542 y(learner)26
b(seeks)h(to)g(predict)2772 4804 y Fi(y)2813 4816 y Fh(t)2865
4804 y Fk(=)2980 4701 y Fb(1)2953 4725 y Ff(X)2953 4904
y Fh(k)q Fg(=0)3088 4804 y Fi(\015)3136 4770 y Fh(k)3176
4804 y Fi(r)3213 4816 y Fh(t)p Fg(+)p Fh(k)q Fg(+1)3415
4804 y Fi(;)536 b Fk(\(4\))2130 5084 y(where)29 b Fi(\015)i
Fe(2)c Fk([0)p Fi(;)14 b Fk(1])29 b(is)h(called)f(the)h
Fa(disc)l(ount-r)l(ate)f Fk(parameter.)2130 5184 y(The)j(prediction)g
(at)h(time)g Fi(t)f Fk(is)g(denoted)38 b(^)-47 b Fi(y)3513
5196 y Fh(t)3574 5184 y Fk(and)32 b(is)g(formed)2130
5283 y(as)27 b(a)g(linear)g(function)h(of)f Fl(x)3001
5295 y Fh(t)3058 5283 y Fk(and)g(a)g(real-v)-5 b(alued)27
b(parameter)2130 5383 y(v)n(ector,)f Fl(w)2471 5395 y
Fh(t)2501 5383 y Fk(,)h(just)h(as)f(in)h(the)g(sup)r(ervised)f(case.)p
eop
%%Page: 3 3
3 2 bop 30 216 a Fk(The)34 b(standard)f(learning)f(rule)i(for)f(this)h
(problem)f(is)h(linear)30 315 y(TD\()p Fi(\025)p Fk(\))29
b(\(Sutton,)g(1988\).)35 b(It)28 b(is)f(giv)n(en)g(b)n(y)639
488 y Fl(w)708 500 y Fh(t)p Fg(+1)845 488 y Fk(:=)22
b Fl(w)1024 500 y Fh(t)1072 488 y Fk(+)c Fi(\013\016)1245
500 y Fh(t)1275 488 y Fl(e)1319 500 y Fh(t)1348 488 y
Fi(;)503 b Fk(\(5\))30 661 y(where)27 b Fi(\016)307 673
y Fh(t)364 661 y Fk(is)g(the)h(temp)r(oral-di\013erence)f(error)f(at)h
(time)h(t:)526 833 y Fi(\016)563 845 y Fh(t)616 833 y
Fk(=)22 b Fi(r)740 845 y Fh(t)p Fg(+1)872 833 y Fk(+)c
Fi(\015)5 b Fl(w)1073 799 y Fh(T)1072 854 y(t)1126 833
y Fl(x)1176 845 y Fh(t)p Fg(+1)1308 833 y Fe(\000)23
b Fk(^)-47 b Fi(y)1432 845 y Fh(t)1461 833 y Fi(;)30
1006 y Fk(and)32 b Fl(e)240 1018 y Fh(t)301 1006 y Fk(is)g(a)g(v)n
(ector)e(of)i(eligibilit)n(y)g(traces.)49 b(In)32 b(our)g(exp)r(eri-)30
1105 y(men)n(ts)h(w)n(e)f(found)h(that)g(EG)f(w)n(ork)n(ed)f(m)n(uc)n
(h)h(more)g(reliably)30 1205 y(with)20 b(replacing)d(traces)h(\(Singh)i
(&)f(Sutton,)i(1996\))c(than)j(with)30 1305 y(con)n(v)n(en)n(tional)41
b(accum)n(ulating)h(traces.)81 b(Replacing)42 b(traces)30
1404 y(are)27 b(de\014ned)h(b)n(y)368 1622 y Fi(e)407
1634 y Fh(t)436 1622 y Fk(\()p Fi(i)p Fk(\))23 b(=)640
1505 y Ff(\032)744 1571 y Fk(1)383 b(if)28 b Fi(x)1292
1583 y Fh(t)1322 1571 y Fk(\()p Fi(i)p Fk(\))23 b(=)g(1)744
1671 y Fi(\015)5 b(\025e)879 1683 y Fh(t)p Fb(\000)p
Fg(1)993 1671 y Fk(\()p Fi(i)p Fk(\))83 b(if)28 b Fi(x)1292
1683 y Fh(t)1322 1671 y Fk(\()p Fi(i)p Fk(\))23 b(=)g(0,)30
1844 y(where)51 b Fi(e)333 1856 y Fh(t)361 1844 y Fk(\()p
Fi(i)p Fk(\))h(is)f(the)g Fi(i)p Fk(th)g(comp)r(onen)n(t)g(of)g
Fl(e)1547 1856 y Fh(t)1576 1844 y Fk(.)108 b(Replac-)30
1944 y(ing)36 b(traces)g(require)g(that)h(the)g(input)g(features)g(b)r
(e)g(binary)-7 b(,)30 2044 y Fi(x)77 2056 y Fh(t)107
2044 y Fk(\()p Fi(i)p Fk(\))23 b Fe(2)g(f)p Fk(0)p Fi(;)14
b Fk(1)p Fe(g)p Fk(.)30 2193 y(The)24 b(natural)g(w)n(a)n(y)f(to)i
(extend)f(TD\()p Fi(\025)p Fk(\))i(to)e(an)h(EG)f(form)g(is)g(to)30
2293 y(p)r(erform)j(the)h(same)e(up)r(date)i(\(5\),)g(except)f(in)h
(the)f(logarithm)30 2392 y(of)32 b(the)g(w)n(eigh)n(ts,)g(just)h(as)e
(w)n(e)h(did)g(in)g(the)h(sup)r(ervised)e(case.)30 2492
y(The)d(result)f(is)g(a)h(new)f(up)r(date)h(rule:)518
2664 y(log)14 b Fl(w)708 2676 y Fh(t)p Fg(+1)845 2664
y Fk(:=)22 b(log)14 b Fl(w)1145 2676 y Fh(t)1193 2664
y Fk(+)k Fi(\013\016)1366 2676 y Fh(t)1396 2664 y Fl(e)1440
2676 y Fh(t)1469 2664 y Fi(;)382 b Fk(\(6\))30 2837 y(whic)n(h)28
b(w)n(e)f(refer)g(to)g(as)g(EG-TD\()p Fi(\025)p Fk(\).)30
2986 y(W)-7 b(e)35 b(no)n(w)f(brie\015y)h(describ)r(e)f(the)h(further)g
(extension)f(of)h(the)30 3086 y(EG)g(ideas)h(to)f(the)h(full)h
(reinforcemen)n(t)e(learning)f(case,)j(in-)30 3186 y(cluding)29
b(con)n(trol.)39 b(Our)27 b(extension)i(assumes)e(a)i(discrete)f(ac-)30
3285 y(tion)34 b(set,)h(and)e(is)h(based)f(on)g(the)h(Sarsa)e
(algorithm)h(\(Rum-)30 3385 y(mery)55 b(&)f(Niranjan,)62
b(1994;)67 b(Sutton,)62 b(1996\),)f(although)30 3485
y(analogous)34 b(extensions)i(to)h(other)f(metho)r(ds)h(are)e(probably)
30 3584 y(straigh)n(tforw)n(ard.)k(The)29 b(EG)g(extension)g(w)n(e)g
(tested)h(is)f(iden-)30 3684 y(tical)19 b(to)h(the)g(Sarsa)e(algorithm)
g(describ)r(ed)h(b)n(y)g(Sutton)h(\(1996\))30 3783 y(except)34
b(that)h(steps)f(w)n(ere)f(made)h(in)h(the)f(logarithm)f(of)i(the)30
3883 y(w)n(eigh)n(ts.)h(W)-7 b(e)28 b(call)f(this)h(algorithm)e
(EG-Sarsa.)30 4032 y(In)f(brief,)g(the)g(full)g(reinforcemen)n(t)f
(learning)f(metho)r(ds)i(mak)n(e)30 4132 y(a)k(separate)g(prediction)g
(of)h(the)g(discoun)n(ted)g(future)g(rew)n(ard)30 4232
y(for)k(eac)n(h)g(p)r(ossible)g(action.)58 b(The)34 b(learner)g
(prefers)f(to)i(tak)n(e)30 4331 y(at)26 b(eac)n(h)g(step)g(the)h
(action)f(with)g(the)h(greatest)e(prediction)h(of)30
4431 y(future)k(rew)n(ard.)42 b(Eac)n(h)28 b(prediction)i(is)f(a)h
(linear)f(function)h(of)30 4531 y(a)d(feature)f(v)n(ector,)g
Fl(x)699 4543 y Fh(t)729 4531 y Fk(,)h(describing)f(the)h(curren)n(t)g
(state.)36 b(The)30 4630 y(reader)31 b(is)i(referred)e(to)i(earlier)e
(pap)r(ers)h(for)h(further)f(details)30 4730 y(\(Singh)c(&)f(Sutton,)h
(1996;)e(Sutton,)i(1996\).)30 4966 y Fj(4)112 b(CONTINUOUS)37
b(RANDOM)g(W)-12 b(ALK)198 5082 y(\(PREDICTION\))34 b(EXPERIMENT)30
5283 y Fk(In)k(this)g(task,)i(the)e(observ)n(ed)e(data,)k
Fl(x)1310 5295 y Fh(t)1377 5283 y Fk(and)e Fi(r)1586
5295 y Fh(t)1616 5283 y Fk(,)i(are)d(gen-)30 5383 y(erated)i(b)n(y)g(a)
h(system)f(whose)g(state)h(is)f(a)h(p)r(oin)n(t)f(taking)g(a)2130
133 y
 15468729 10893473 3289088 3289088 26970521 19866091 startTexFig
 2130 133 a
%%BeginDocument: bestnewwalk.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.33) Rshow
1200 945 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.34) Rshow
1200 1389 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.35) Rshow
1200 1832 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.36) Rshow
1200 2276 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.37) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.38) Rshow
1200 3164 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.39) Rshow
1200 3608 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.4) Rshow
1200 4051 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.41) Rshow
1200 4495 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.42) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.43) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
2339 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
3479 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4618 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
5758 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(1) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Average RMSE after 10 episodes) Cshow
grestore
4048 101 M
(lambda) Cshow
4515 1487 M
(EG-TD) Lshow
4665 2350 M
(TD) Lshow
LT0
1200 4695 M
570 -378 V
569 -381 V
570 -376 V
570 -357 V
570 -410 V
569 -532 V
570 -455 V
570 -614 V
6327 784 L
570 2648 V
LT1
1200 4643 M
570 -345 V
569 -367 V
570 -377 V
570 -389 V
570 -432 V
569 -477 V
570 -511 V
570 -556 V
6327 675 L
570 2325 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 2130 1695 a Fk(Figure)66 b(1:)113 b(Summary)66 b(p)r(erformance)f(on)h
(con)n(tin)n(uous)2130 1795 y(random-w)n(alk)25 b(task)2130
2095 y(random)g(w)n(alk)h(in)g(the)h(in)n(terv)-5 b(al)26
b(from)g(0)f(to)i(1.)36 b(The)26 b(time)h(se-)2130 2195
y(quence)20 b(is)g(brok)n(en)e(in)n(to)i(a)f(series)g(of)h(episo)r
(des,)h(eac)n(h)e(of)h(whic)n(h)2130 2294 y(b)r(egins)31
b(with)h(the)g(state)g(in)g(the)f(middle,)j(at)d(0.5,)h(and)f(ends)2130
2394 y(with)23 b(the)g(state)g(reac)n(hing)e(or)h(exceeding)g(one)g(of)
h(the)g(b)r(ounds)2130 2494 y(at)29 b(0)f(and)g(1.)40
b(On)29 b(eac)n(h)f(time)h(step,)g(the)g(state)g(mo)n(v)n(es)e(up)i(or)
2130 2593 y(do)n(wn)d(b)n(y)f(a)h(uniformly)g(selected)g(random)f(step)
h(in)g(the)h(con-)2130 2693 y(tin)n(uous)19 b(in)n(terv)-5
b(al)18 b([)p Fe(\000)p Fk(0)p Fi(:)p Fk(2)p Fi(;)c Fk(+0)p
Fi(:)p Fk(2].)31 b(The)19 b(rew)n(ard,)g Fi(r)3677 2705
y Fh(t)3707 2693 y Fk(,)i(is)e(zero)e(on)2130 2793 y(all)28
b(time)h(steps)f(except)h(those)f(on)g(whic)n(h)h(the)f(the)h(state)g
(ex-)2130 2892 y(ceeds)24 b(one)f(of)h(the)g(b)r(ounds.)36
b(Exceeding)23 b(either)h(b)r(ound)g(ends)2130 2992 y(the)c(episo)r(de)
g(and)f(the)h(time)h(p)r(erio)r(d)e(o)n(v)n(er)f(whic)n(h)i(the)g(sum)g
(\(4\))2130 3091 y(is)28 b(accum)n(ulated.)37 b(The)27
b(rew)n(ard)g(at)g(the)h(end)g(of)g(the)g(episo)r(de)2130
3191 y(is)36 b(equal)g(to)g(the)h(p)r(osition)f(at)h(the)f(end)h(of)f
(the)h(trial.)63 b(F)-7 b(or)2130 3291 y(instance,)28
b(if)g(the)h(p)r(osition)e(at)h(the)h(end)f(of)g(a)f(trial)h(is)g
Fe(\000)p Fk(0)p Fi(:)p Fk(02,)2130 3390 y(the)f(\014nal)g(rew)n(ard)e
(will)i(also)f(b)r(e)i Fe(\000)p Fk(0)p Fi(:)p Fk(02.)35
b(The)27 b(discoun)n(t-rate)2130 3490 y(parameter)k(is)i
Fi(\015)j Fk(=)31 b(1.)52 b(Th)n(us,)34 b(the)f(correct)e(prediction)i
(for)2130 3590 y(an)n(y)22 b(state)g(is)h(the)g(p)r(osition)f(of)h(the)
g(state)f(inside)h(the)g(w)n(alking)2130 3689 y(in)n(terv)-5
b(al.)2130 3839 y(A)52 b(sparse)e(coarse)f(co)r(ding)i(tec)n(hnique,)58
b(CMA)n(C)51 b(\(Albus,)2130 3938 y(1981;)31 b(Miller,)h(Glanz)f(&)g
(Kraft,)g(1990\),)g(w)n(as)f(used)h(to)g(con-)2130 4038
y(struct)42 b(the)g(binary)g(feature)f(v)n(ector,)k Fl(x)3452
4050 y Fh(t)3481 4038 y Fk(,)h(from)c(the)g(real-)2130
4138 y(v)-5 b(alued)30 b(state.)44 b(The)30 b(state)g(space,)f([0)p
Fi(;)14 b Fk(1],)30 b(w)n(as)f(divided)h(in)n(to)2130
4237 y(10)38 b(equal-sized)h(in)n(terv)-5 b(als.)71 b(An)40
b(additional)f(in)n(terv)n(el)f(w)n(as)2130 4337 y(added)21
b(in)g(order)f(to)h(allo)n(w)f(for)h(an)f(o\013set)i(of)f(the)g(whole)g
(tiling.)2130 4436 y(This)i(w)n(as)f(rep)r(eated)h(to)g(obtain)f(10)h
(tilings,)g(eac)n(h)g(o\013set)g(b)n(y)f(a)2130 4536
y(di\013eren)n(t)h(randomly)f(selected)h(fraction)f(of)h(an)g(in)n
(terv)-5 b(al.)35 b(F)-7 b(or)2130 4636 y(eac)n(h)31
b(in)n(terv)-5 b(al,)33 b(there)f(w)n(as)g(a)g(corresp)r(onding)e
(feature)i(that)2130 4735 y(to)r(ok)k(on)g(the)g(v)-5
b(alue)36 b(1)g(when)g(the)h(state)f(w)n(as)f(within)i(that)2130
4835 y(tile,)31 b(and)f(0)g(otherwise.)43 b(Th)n(us,)30
b(there)g(w)n(ere)f(11)19 b Fe(\003)h Fk(10)26 b(=)g(110)2130
4935 y(tiles)k(and)f(110)f(input)i(features.)42 b(A)n(t)30
b(eac)n(h)e(step,)i(exactly)f(10)2130 5034 y(features)34
b(are)f(activ)n(e)g(\(one)h(for)g(eac)n(h)f(tiling\),)k(represen)n
(ting)2130 5134 y(the)28 b(curren)n(t)f(state.)2130 5283
y(W)-7 b(e)23 b(applied)f(EG-TD\()p Fi(\025)p Fk(\))h(and)f(con)n(v)n
(en)n(tional)e(TD\()p Fi(\025)p Fk(\))k(to)e(this)2130
5383 y(problem,)40 b(eac)n(h)c(with)i(a)f(v)-5 b(ariet)n(y)37
b(of)g(v)-5 b(alues)37 b(for)g Fi(\013)h Fk(and)g Fi(\025)p
Fk(.)p eop
%%Page: 4 4
4 3 bop 30 133 a
 12219612 9472573 8880537 21181726 31739699 38844129 startTexFig
 30 133 a
%%BeginDocument: mountain-car.eps
save
/CricketDrawIII where
{
pop
/CDIIIEnd %% -- 
{
} def
}
{
/CDIIIDict 200 dict def
CDIIIDict begin
/CricketDrawIII 1 def
/ndf %% key value -- %%
{
1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse
} def
/languagelevel {1} ndf
/FindFlatness %% Proc -- %%
{
{
dup 
{flattenpath exec} stopped
{
pop currentflat 100 ge {exit} if 
currentflat 1.25 mul setflat
}
{pop exit} ifelse
} bind loop
newpath
} def
/QDShow %% string qdwidth -- %%
{
1 index length 1 le
{
pop show
}
{
1 index stringwidth pop sub 1 index length 1 sub div 0 3 -1 roll ashow
} ifelse
} def
/MakeUnderlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
exch dup length 4 add dict begin
/BaseFont exch findfont def
BaseFont
{
1 index dup dup /FID ne exch /UniqueID ne and exch /XUID ne and
{def}
{pop pop} ifelse
} forall
/FontType 3 def
/Upos 
BaseFont /FontInfo 2 copy known
{
get /UnderlinePosition 2 copy known
{get}
{pop pop -0.1 BaseFont /FontMatrix get 0 get div}ifelse
}
{
pop pop -0.1 BaseFont /FontMatrix get 0 get div
} ifelse 
def
/Uwid 
BaseFont /FontInfo 2 copy known
{
get /UnderlineThickness 2 copy known
{get}
{
pop pop 0.05 BaseFont /FontMatrix get 0 get div
} ifelse
}
{
pop pop 0.05 BaseFont /FontMatrix get 0 get div
} ifelse
def
currentdict /FontBBox get 1 get Upos gt
{
currentdict /FontBBox get 1 Upos put
}if
/theChar 1 string def
/BuildChar
{
exch
begin
theChar 0 3 -1 roll put
BaseFont dup /FontMatrix get 0 get 1 exch div scalefont setfont
theChar stringwidth setcharwidth
newpath
0 0 moveto
theChar show
0 Upos rmoveto
0 Upos lineto
Uwid setlinewidth stroke
end
} def
currentdict 
end
definefont pop
} ifelse
} def
/MakeOutlineFont
{
dup FontDirectory exch known 
{ 
pop pop
}
{
exch findfont dup dup length 2 add dict begin
{
1 index dup dup /FID ne exch /UniqueID ne and exch /XUID ne and
{def}
{pop pop} ifelse
} forall
/FontMatrix get 0 get 1 exch div 100 div /StrokeWidth exch def
/PaintType 2 def
currentdict
end
definefont pop
} ifelse
} def
/macvec dup where not 
{ 256 array def
macvec 0 StandardEncoding
0 128 getinterval putinterval
macvec 16#27 /quotesingle put
macvec 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Aacute /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Agrave
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
macvec 128 128 getinterval astore pop
}
{pop pop} ifelse
/CreateFontDict 
{
dup length dict
/cd_NewFontDict exch def
{
1 index
/FID ne
{
cd_NewFontDict 3 1 roll put
}
{
pop pop
} ifelse
} forall
cd_NewFontDict
} def
/CoordinateFont 
{
dup 
/cd_FontString exch def 
length 7 add string
/cd_CoFontString exch def
cd_CoFontString 0 (|______) putinterval cd_CoFontString 7 cd_FontString putinterval
/cd_FontName cd_CoFontString cvn def 
FontDirectory cd_FontName known not
{
cd_FontString cvn findfont CreateFontDict
/cd_NewFontDict exch def
cd_NewFontDict dup 
/FontName cd_FontName put 
/Encoding macvec put
cd_FontName cd_NewFontDict definefont pop
} if
} def
/currenthalftone
{
currentscreen dup type /dicttype eq
{
3 1 roll pop pop
}
{
4 dict begin
/HalftoneType 1 def
/SpotFunction exch def
/Angle exch def
/Frequency exch def
currentdict
end
} ifelse
} ndf
/cd_setscreen /setscreen load def
/setscreen
{ 
dup type /dicttype eq
{
languagelevel 1 eq
{ 
3 1 roll pop pop dup 
/Frequency get 
exch dup 
/Angle get
exch 
/SpotFunction get
cd_setscreen
}
{
3 1 roll pop pop 
sethalftone
} ifelse
}
{
cd_setscreen
} ifelse
} def
/cd_defaulthalftone currenthalftone def
/SetDefaultHalftone
{
0
0
cd_defaulthalftone setscreen
} def
/max
{
2 copy lt{exch}if pop
} def
/min
{
2 copy gt{exch}if pop
} def
/concatprocs %% Proc1 Proc2 -- Proc1Proc2 %%
{
/Proc1 exch cvlit def
/Proc2 exch cvlit def
/NewProc Proc1 length Proc2 length add array def
NewProc 0 Proc1 putinterval
NewProc Proc1 length Proc2 putinterval
NewProc cvx
} def
/setcmykcolor %% Cyan Magenta Yellow Black -- %%
{
1 exch sub 3 {dup 5 -1 roll sub 0 max exch} repeat pop setrgbcolor
} ndf
/findcmykcustomcolor %% Cyan Magenta Yellow Black SpotName -- Object %%
{
[ 6 1 roll ] 
} ndf
/setcustomcolor %% object tint -- %%
{
/cd_tint exch def
0 4 getinterval
{ cd_tint mul } forall
setcmykcolor
} ndf
/setoverprint %% flag -- %%
{
pop
} ndf
/setseparationgray %% gray -- %%
{
setgray
} ndf
/cmyktorgb %% Cyan Magenta Yellow Black -- Red Green Blue %%
{
3 {dup 5 -1 roll add dup 1 gt {pop 1} if 1 exch sub exch} repeat pop
} def
/rgbtocmyk %% Red Green Blue -- Cyan Magenta Yellow Black %%
{
3 {3 -1 roll 1 exch sub} repeat
3 copy min min 
3 {4 -1 roll 1 index sub exch} repeat
} def
/cmyktohls %% Cyan Magenta Yellow Black -- Hue Lightness Saturation %%
{
cmyktorgb
3 copy min min 4 1 roll
3 copy max max 5 -1 roll
2 copy add 2 div 6 1 roll
2 copy eq 
{
5 {pop} repeat
0 exch 0
}
{
5 index
0.5 le
{
2 copy 2 copy
sub 3 1 roll
add div
}
{
2 copy 2 copy
2 3 -1 roll sub exch sub
3 1 roll sub exch div 
} ifelse
6 1 roll
2 copy sub
5 index 3 index eq
{
3 1 roll pop pop
4 -3 roll sub exch pop exch div
}
{
4 index 3 index eq
{
3 1 roll pop pop
4 -3 roll exch pop exch sub exch div 2 add 
}
{
3 1 roll pop pop
4 -3 roll pop sub exch div 4 add 
} ifelse
} ifelse
60 mul dup 0 lt {360 add} if
3 1 roll
} ifelse
} def
/value
{
dup 1 gt {1 sub} if
dup 0 lt {1 add} if
dup
60 360 div lt 
{
60 360 div div 3 1 roll 2 copy exch sub 4 -1 roll mul exch pop add
}
{
dup .5 lt
{
pop exch pop
}
{
dup 240 360 div lt
{
240 360 div exch sub 60 360 div div
3 copy pop exch sub mul exch pop add
}
{
pop pop
} ifelse
} ifelse
} ifelse
} def
/hlstocmyk %% Hue Lightness Saturation -- Cyan Magenta Yellow Black %%
{
dup 0 eq
{
pop exch pop dup dup
}
{
1 index 0.5 le
{
2 copy 1 add mul
}
{
2 copy 2 copy add 3 1 roll mul sub
} ifelse
2 index 2 mul 1 index sub exch
5 -3 roll pop pop
3 copy 120 360 div add value 4 1 roll
3 copy value 4 1 roll
120 360 div sub value 
} ifelse
rgbtocmyk
} def
/D3PathProc %% PathArray -- %%
{
{
dup length
dup 6 eq
{ pop aload pop curveto }
{ 
dup 2 eq
{ pop aload pop lineto }
{
3 eq
{ aload pop pop moveto }
{ pop closepath } ifelse
} ifelse
} ifelse
} forall
} def
/colorimage %% width height bitspersample matrix proc multi numplanes --
{
exch {6 {pop} repeat exit} if
/cd_Planes exch def
/cd_Proc exch def
cd_Planes 3 eq
{
{
cd_Proc /cd_string exch def
0 1 cd_string length 3 div 1 sub
{
dup 3 mul
dup cd_string exch get 6 mul exch
dup 1 add cd_string exch get 3 mul exch 
2 add cd_string exch get
add add 10 div round cvi
cd_string 3 1 roll put
} for
cd_string dup length 3 idiv 0 exch getinterval
}
}
if
cd_Planes 4 eq
{
{
cd_Proc /cd_string exch def
0 1 cd_string length 4 div 1 sub
{
dup 4 mul
dup 3 add cd_string exch get exch
dup 2 add cd_string exch get 9 mul exch
dup 1 add cd_string exch get 7 mul exch 
cd_string exch get 4 mul
add add 10 div add round cvi
dup 255 gt 
{pop 0}
{255 exch sub} ifelse
cd_string 3 1 roll put
} for
cd_string dup length 4 idiv 0 exch getinterval
}
}
if
image
} ndf
/ReadToAsterick %% --
{
/cd_String 1 string def
0
{
currentfile cd_String readstring not {pop exit} if
0 get dup 42 eq 
{ 
pop 1 eq 
{ 
(BitMap Error: To much data) ==
} if 
exit
} 
{
32 gt 
{pop 1} if 
} ifelse
} loop
} def
/D3ImageProc %% Width Height -- %%
{
/cd_ImageStr 2 index 7 add 8 idiv string def
true
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
imagemask
ReadToAsterick
} def
/D3ColorImageProc %% Width Height BitsPerSample -- %%
{
/cd_ImageStr 3 index 8 3 index idiv dup 1 sub 3 -1 roll add exch idiv 4 mul string def
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
false 4
colorimage
ReadToAsterick
} def
/CDIIIEnd %% -- 
{
currentdict CDIIIDict eq { end } if
} def
} ifelse

systemdict /setpacking known
{
true setpacking
} if
2 setlinecap
0 setlinejoin
1.0 setmiterlimit

gsave
newpath
135 590.5 moveto
482.5 590.5 lineto
482.5 322 lineto
135 322 lineto
closepath
eoclip
(Helvetica) CoordinateFont
% Object: Bezier Path Stroked 
SetDefaultHalftone
/D3PathArray 5 array def
D3PathArray 0 [136 448 0 ] put
D3PathArray 1 [154 418 192 318 262 323 ] put
D3PathArray 2 [319.853 327.132 361 430 368 450 ] put
D3PathArray 3 [375 470 416 567 439 570 ] put
D3PathArray 4 [462.798 573.104 475 569 475 569 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Group Stroked Filled 
% Object: Group Stroked Filled 
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [322.072 393.621 0 ] put
D3PathArray 1 [330.061 389.033 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 11 array def
D3PathArray 0 [330.061 389.033 0 ] put
D3PathArray 1 [329.954 388.847 347.591 420.653 347.591 420.653 ] put
D3PathArray 2 [340.739 423.356 ] put
D3PathArray 3 [332.403 412.356 ] put
D3PathArray 4 [323.26 413.662 ] put
D3PathArray 5 [313.827 397.71 ] put
D3PathArray 6 [320.073 392.303 ] put
D3PathArray 7 [315.978 384.788 317.977 386.106 317.977 386.106 ] put
D3PathArray 8 [325.645 380.962 ] put
D3PathArray 9 [325.645 380.962 331.876 392.184 330.061 389.033 ] put
D3PathArray 10 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [330.584 409.208 0 ] put
D3PathArray 1 [324.312 410.344 ] put
D3PathArray 2 [320.513 403.941 ] put
D3PathArray 3 [326.382 401.507 ] put
D3PathArray 4 [330.584 409.208 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [344.657 416.201 0 ] put
D3PathArray 1 [342.515 417.316 339.662 416.467 338.283 414.304 ] put
D3PathArray 2 [336.904 412.141 337.523 409.484 339.664 408.368 ] put
D3PathArray 3 [341.805 407.253 344.658 408.102 346.037 410.265 ] put
D3PathArray 4 [347.416 412.428 346.798 415.086 344.657 416.201 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [319.73 402.434 0 ] put
D3PathArray 1 [317.105 397.863 ] put
D3PathArray 2 [321.994 393.913 ] put
D3PathArray 3 [325.019 399.576 ] put
D3PathArray 4 [319.73 402.434 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [332.415 393.857 0 ] put
D3PathArray 1 [330.274 394.973 327.42 394.124 326.042 391.961 ] put
D3PathArray 2 [324.663 389.798 325.281 387.14 327.422 386.025 ] put
D3PathArray 3 [329.563 384.909 332.417 385.758 333.796 387.921 ] put
D3PathArray 4 [335.174 390.084 334.556 392.742 332.415 393.857 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [347.842 427.348 0 ] put
D3PathArray 1 [360.842 449.348 ] put
/D3ArrowArray 5 array def
D3ArrowArray 0 [358.299 445.043 0 ] put
D3ArrowArray 1 [360.451 443.771 ] put
D3ArrowArray 2 [363.386 453.652 ] put
D3ArrowArray 3 [356.146 446.315 ] put
D3ArrowArray 4 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [354.842 387.348 0 ] put
D3PathArray 1 [354.842 346.348 ] put
/D3ArrowArray 5 array def
D3ArrowArray 0 [354.842 351.348 0 ] put
D3ArrowArray 1 [352.342 351.348 ] put
D3ArrowArray 2 [354.842 341.348 ] put
D3ArrowArray 3 [357.342 351.348 ] put
D3ArrowArray 4 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultHalftone
false setoverprint
[ 1 0 0 1 355.842 378.348 ] concat
0.4 0 0 1 setcmykcolor
/|______Helvetica findfont 12 scalefont setfont
4 -14 moveto
(Gravity) 38 QDShow
grestore
% Object: Bezier Path Stroked Arrows 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [316.842 378.348 0 ] put
D3PathArray 1 [302.842 356.348 ] put
/D3ArrowArray 5 array def
D3ArrowArray 0 [305.527 360.566 0 ] put
D3ArrowArray 1 [303.417 361.908 ] put
D3ArrowArray 2 [300.158 352.129 ] put
D3ArrowArray 3 [307.636 359.224 ] put
D3ArrowArray 4 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultHalftone
false setoverprint
[ 1 0 0 1 437.5 590.5 ] concat
0.4 0 0 1 setcmykcolor
/|______Helvetica findfont 12 scalefont setfont
4 -14 moveto
(GOAL) 33 QDShow
grestore
grestore
CDIIIEnd
showpage
restore



%%EndDocument

 endTexFig
 490 1515 a Fk(Figure)27 b(2:)36 b(Moun)n(tain-car)26
b(task)30 1783 y(F)-7 b(or)34 b(TD\()p Fi(\025)p Fk(\))j(the)f(w)n
(eigh)n(ts)e(w)n(ere)g(initialized)h(to)g(0,)i(and)e(for)30
1883 y(EG-TD\()p Fi(\025)p Fk(\))d(they)e(w)n(ere)g(initialized)h(to)g
(1,)g(whic)n(h)g(pro)r(duces)30 1982 y(the)42 b(same)e(initial)i
(predictions)e(\(zero)h(ev)n(erywhere\).)76 b(F)-7 b(or)30
2082 y(eac)n(h)39 b(com)n(bination)g(of)g(algorithm)g(and)g(parameter)f
(v)-5 b(alue)30 2182 y(w)n(e)26 b(ran)f(10)h(episo)r(des.)35
b(T)-7 b(o)26 b(obtain)g(a)g(p)r(erformance)f(measure)30
2281 y(for)g(eac)n(h)g(run,)h(w)n(e)f(ev)-5 b(aluated)25
b(the)h(\014nal)g(learned)e(prediction)30 2381 y(function)i(at)g(21)f
(sample)g(p)r(oin)n(ts)h(along)f(the)h(in)n(terv)-5 b(al)25
b(from)g(0)30 2481 y(to)g(1,)g(ev)n(enly)g(spaced)g(at)g(0.05.)34
b(F)-7 b(or)25 b(this)g(problem)g(w)n(e)g(kno)n(w)30
2580 y(the)k(correct)e(predictions)i(are)e(equal)h(to)h(the)g(p)r
(osition.)40 b(The)30 2680 y(p)r(erformance)26 b(measure)g(for)g(a)h
(run)f(w)n(as)g(the)h(square)f(ro)r(ot)g(of)30 2779 y(the)33
b(mean-squared)e(error)f(\(RMSE\))j(b)r(et)n(w)n(een)g(the)f(correct)30
2879 y(predictions)f(and)g(the)h(\014nal)f(learned)g(predictions)g(o)n
(v)n(er)f(the)30 2979 y(21)19 b(sample)g(p)r(oin)n(ts.)34
b(This)20 b(p)r(erformance)f(w)n(as)g(then)h(a)n(v)n(eraged)30
3078 y(o)n(v)n(er)i(100)g(indep)r(enden)n(t)j(runs)e(to)h(pro)n(vide)e
(a)h(measure)g(of)h(the)30 3178 y(p)r(erformance)35 b(of)h(eac)n(h)f
(algorithm)g(and)h(set)g(of)h(parameter)30 3278 y(v)-5
b(alues.)30 3427 y(Figure)30 b(1)g(sho)n(ws)f(p)r(erformance)g(as)h(a)g
(function)h(of)f Fi(\025)p Fk(,)h(using)30 3527 y(the)21
b(b)r(est)h Fi(\013)f Fk(v)-5 b(alue)21 b(for)f(eac)n(h)g(com)n
(bination)h(of)f(algorithm)g(and)30 3626 y Fi(\025)25
b Fk(v)-5 b(alue.)35 b(TD\()p Fi(\025)p Fk(\))26 b(and)e(EG-TD\()p
Fi(\025)p Fk(\))g(p)r(erformed)g(similarly)f(at)30 3726
y(all)29 b(the)h(v)-5 b(alues)30 b(of)f Fi(\025)p Fk(.)44
b(None)29 b(of)h(the)g(di\013erences)f(are)g(statis-)30
3826 y(tically)e(signi\014can)n(t.)30 4066 y Fj(5)112
b(MOUNT)-9 b(AIN)36 b(CAR)h(\(CONTR)m(OL\))198 4182 y(EXPERIMENT)30
4387 y Fk(The)25 b(moun)n(tain-car)d(problem)i(is)h(a)f(minim)n
(um-time)h(con)n(trol)30 4486 y(problem)32 b(in)h(whic)n(h)g(the)g
(learning)e(agen)n(t)h(seeks)g(to)h(driv)n(e)e(a)30 4586
y(v)n(ehicle)20 b(to)g(the)g(top)h(of)f(a)f(hill)i(\(Figure)f(2\).)34
b(The)20 b(rew)n(ard)f(is)h Fe(\000)p Fk(1)30 4685 y(for)k(all)g(time)h
(steps)f(un)n(til)h(the)f(goal)g(is)g(reac)n(hed.)34
b(There)24 b(is)g(no)30 4785 y(discoun)n(ting)g(\()p
Fi(\015)k Fk(=)22 b(1\).)36 b(A)n(t)25 b(eac)n(h)f(time)h(step)f(there)
h(are)e(three)30 4885 y(p)r(ossible)33 b(actions:)48
b(accelerate)31 b(forw)n(ard,)i(accelerate)f(bac)n(k-)30
4984 y(w)n(ard,)25 b(and)g(no)g(acceleration.)35 b(It)26
b(is)f(not)g(p)r(ossible)h(to)f(simply)30 5084 y(accelerate)h(up)i(the)
g(hill)f(b)r(ecause)g(gra)n(vit)n(y)f(is)h(stronger)f(than)30
5184 y(the)37 b(engine.)63 b(The)36 b(only)g(solution)g(is)g(to)g
(accelerate)f(bac)n(k-)30 5283 y(w)n(ards)24 b(\014rst)g(and)h(then)h
(thrust)f(forw)n(ards)e(to)n(w)n(ards)g(the)i(goal.)30
5383 y(The)31 b(detailed)g(ph)n(ysics)g(w)n(e)g(use)g(in)g(these)g(exp)
r(erimen)n(ts)g(are)2130 133 y
 15468729 10893473 3289088 3289088 26970521 19866091 startTexFig
 2130 133 a
%%BeginDocument: mcall.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(200) Rshow
1200 1241 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(300) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(400) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(500) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(600) Rshow
1200 4199 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(700) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(800) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.1) Cshow
1912 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
2624 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.3) Cshow
3336 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.5) Cshow
4761 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
5473 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.7) Cshow
6185 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.9) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Average number of steps/trial) Cshow
grestore
4048 101 M
(alpha) Cshow
1192 2474 M
(EG-Sarsa) Lshow
1342 4273 M
(Sarsa) Lshow
5473 3830 M
(0.9) Lshow
6577 1167 M
(0.0) Lshow
6577 1389 M
(0.3) Lshow
6256 2128 M
(0.5) Lshow
5686 1758 M
(0.7) Lshow
4554 2069 M
(0.1) Lshow
LT0
6185 2128 M
5473 1830 L
58 -24 R
-58 24 V
23 58 V
689 240 R
5473 1061 L
61 12 R
-61 -12 V
-13 61 V
226 562 R
5473 1424 L
213 260 R
5473 1328 L
-926 726 R
4405 719 L
49 39 R
-49 -39 V
-40 49 V
182 1286 R
4405 1266 L
51 35 R
-51 -35 V
-36 51 V
1200 4473 M
2268 1974 L
3336 1456 L
4405 1192 L
5473 964 L
1068 118 V
1200 2473 M
2268 1273 L
3336 861 L
4405 772 L
5473 677 L
1068 543 V
LT1
1200 4383 M
2268 2224 L
3336 1441 L
4405 1266 L
1200 2292 M
2268 1515 L
3336 856 L
4405 719 L
LT2
1200 4186 M
2268 1834 L
3336 1580 L
4405 1480 L
5473 1371 L
1068 36 V
1200 2185 M
2268 1152 L
3336 903 L
4405 875 L
1068 420 V
1068 40 V
LT3
1200 3996 M
2268 2025 L
1068 3 V
4405 1512 L
1068 318 V
1200 2318 M
2268 1231 L
3336 882 L
4405 762 L
1068 299 V
LT4
1200 4110 M
2268 2240 L
3336 1551 L
4405 1276 L
1068 148 V
1200 2314 M
2268 1227 L
3336 755 L
1069 425 V
1068 148 V
LT5
1200 4171 M
2268 2338 L
3336 1778 L
1069 425 V
5473 4053 L
1200 2241 M
2268 1097 L
3336 2143 L
1069 87 V
5473 3707 L
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 2295 1695 a Fk(Figure)c(3:)36 b(P)n(erformance)26 b(on)h(moun)n
(tain-car)f(task)2130 1836 y
 15468729 10893473 3289088 3289088 26970521 19866091 startTexFig
 2130 1836 a
%%BeginDocument: mcbest.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(200) Rshow
1200 945 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(220) Rshow
1200 1389 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(240) Rshow
1200 1832 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(260) Rshow
1200 2276 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(280) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(300) Rshow
1200 3164 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(320) Rshow
1200 3608 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(340) Rshow
1200 4051 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(360) Rshow
1200 4495 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(380) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(400) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1833 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.1) Cshow
2466 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
3099 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.3) Cshow
3732 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4365 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.5) Cshow
4998 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
5631 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.7) Cshow
6264 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.9) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Average number of steps at best alpha) Cshow
grestore
3948 101 M
(lambda) Cshow
5764 2054 M
(EG-Sarsa) Lshow
6264 4051 M
(Sarsa) Lshow
LT0
1200 4108 M
1833 2795 L
1266 316 V
1266 423 V
5631 2826 L
6897 4331 L
LT1
1200 4108 D
1833 2795 D
3099 3111 D
4365 3534 D
5631 2826 D
6897 4331 D
1200 3729 M
0 757 V
-31 -757 R
62 0 V
-62 757 R
62 0 V
1833 2479 M
0 632 V
-31 -632 R
62 0 V
-62 632 R
62 0 V
3099 2629 M
0 964 V
-31 -964 R
62 0 V
-62 964 R
62 0 V
1235 385 R
0 -888 V
-31 888 R
62 0 V
-62 -888 R
62 0 V
5631 2622 M
0 409 V
-31 -409 R
62 0 V
-62 409 R
62 0 V
1235 979 R
0 643 V
-31 -643 R
62 0 V
-62 643 R
62 0 V
LT2
1200 3248 M
1833 1156 L
1266 467 V
4365 1283 L
1266 -21 V
6897 2290 L
LT3
1200 3248 A
1833 1156 A
3099 1623 A
4365 1283 A
5631 1262 A
6897 2290 A
1200 2930 M
0 637 V
-31 -637 R
62 0 V
-62 637 R
62 0 V
1833 861 M
0 590 V
1802 861 M
62 0 V
-62 590 R
62 0 V
3099 1223 M
0 799 V
-31 -799 R
62 0 V
-62 799 R
62 0 V
4365 950 M
0 666 V
4334 950 M
62 0 V
-62 666 R
62 0 V
5631 969 M
0 586 V
5600 969 M
62 0 V
-62 586 R
62 0 V
1235 318 R
0 834 V
-31 -834 R
62 0 V
-62 834 R
62 0 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 2130 3399 a Fk(Figure)50 b(4:)82 b(Summary)50 b(p)r(erformance)g(on)g
(moun)n(tain-car)2130 3499 y(task,)27 b(using)g(the)h(b)r(est)g
Fi(\013)g Fk(for)g(eac)n(h)e Fi(\025)i Fk(v)-5 b(alue)2130
3789 y(as)23 b(giv)n(en)h(b)n(y)f(Singh)h(and)g(Sutton)h(\(1996\).)34
b(The)24 b(soft)n(w)n(are)e(w)n(e)2130 3888 y(used)28
b(w)n(as)e(deriv)n(ed)h(from)g(that)h(pro)n(vided)f(b)n(y)g(Mahadev)-5
b(an.)2130 4038 y(W)e(e)31 b(applied)g(the)g(Sarsa)e(and)i(EG-Sarsa)d
(algorithms,)j(with)2130 4138 y(replacing)j(traces,)j(as)e(describ)r
(ed)g(earlier.)60 b(The)36 b(details)f(of)2130 4237 y(mapping)i(the)g
(algorithms)e(on)n(to)h(the)h(moun)n(tain)g(car)f(task)2130
4337 y(w)n(ere)31 b(exactly)g(as)g(describ)r(ed)h(in)g(\(Singh)g(&)f
(Sutton,)j(1996\).)2130 4436 y(This)25 b(task)g(has)g(a)g(con)n(tin)n
(uous)f(state)h(space,)g(with)h(t)n(w)n(o)e(state)2130
4536 y(v)-5 b(ariables:)66 b(p)r(osition)42 b(and)h(v)n(elo)r(cit)n(y)
-7 b(.)81 b(W)-7 b(e)43 b(used)f(a)g(set)h(of)2130 4636
y(three)22 b(CMA)n(Cs,)i(one)e(for)f(eac)n(h)h(action.)35
b(Eac)n(h)21 b(CMA)n(C)h(had)g(5)2130 4735 y(tilings)29
b(with)h(random)f(o\013sets.)42 b(Eac)n(h)28 b(v)-5 b(ariable)28
b(w)n(as)h(ev)n(enly)2130 4835 y(divided)34 b(in)h(8)e(in)n(terv)-5
b(als,)35 b(adding)f(one)f(additional)h(in)n(terv)-5
b(al)2130 4935 y(in)31 b(order)f(to)h(accomo)r(date)f(a)h(random)f
(o\013set.)47 b(Th)n(us,)32 b(there)2130 5034 y(w)n(ere)f(9)21
b Fe(\003)h Fk(9)f Fe(\003)g Fk(5)30 b(=)h(405)g(input)i(features,)g
(\014v)n(e)f(of)g(whic)n(h)g(are)2130 5134 y(activ)n(e)27
b(at)g(an)n(y)g(one)g(time.)2130 5283 y(F)-7 b(or)33
b(Sarsa,)g(the)h(initial)f(w)n(eigh)n(t)g(v)-5 b(alues)33
b(w)n(ere)f(all)h(0,)h(whic)n(h)2130 5383 y(giv)n(es)24
b(an)i(optimistic)f(estimate.)36 b(This)26 b(ensures)f(exploration)p
eop
%%Page: 5 5
5 4 bop 30 133 a
 15468729 10893473 3289088 3289088 26970521 19866091 startTexFig
 30 133 a
%%BeginDocument: gdbinsnew.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1135 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(1) Rshow
1200 1769 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(2) Rshow
1200 2403 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(3) Rshow
1200 3037 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(4) Rshow
1200 3671 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(5) Rshow
1200 4305 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(6) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(7) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1912 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.1) Cshow
2624 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
3336 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.3) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4761 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.5) Cshow
5473 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
6185 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.7) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of weights in bin) Cshow
grestore
4048 101 M
(Weight magnitude) Cshow
LT0
6234 4676 M
("gd.new") Rshow
6354 4676 M
360 0 V
1200 501 M
142 0 V
143 0 V
142 0 V
143 0 V
142 0 V
143 0 V
142 0 V
0 634 V
142 0 V
0 -634 V
143 0 V
0 1902 V
142 0 V
0 -1902 V
143 0 V
0 1268 V
142 0 V
0 -634 V
143 0 V
0 634 V
142 0 V
0 -1268 V
142 0 V
0 2536 V
143 0 V
0 -634 V
142 0 V
0 -1268 V
143 0 V
0 634 V
142 0 V
143 0 V
0 1268 V
142 0 V
142 0 V
0 1902 V
143 0 V
142 0 V
0 -634 V
143 0 V
0 -2536 V
142 0 V
0 2536 V
142 0 V
0 -2536 V
143 0 V
0 -634 V
142 0 V
0 3170 V
143 0 V
0 -3170 V
142 0 V
143 0 V
0 634 V
142 0 V
0 1268 V
142 0 V
0 -634 V
143 0 V
142 0 V
0 -1268 V
143 0 V
0 1268 V
142 0 V
0 -1902 V
143 0 V
0 3170 V
142 0 V
LT1
6234 4476 M
("gd.new") Rshow
6354 4476 M
360 0 V
1200 501 M
142 0 R
143 0 R
142 0 R
143 0 R
142 0 R
143 0 R
142 0 R
0 634 V
2339 501 M
0 634 V
0 -634 R
143 0 R
0 1902 V
2624 501 M
0 1902 V
0 -1902 R
143 0 R
0 1268 V
2909 501 M
0 1268 V
0 -1268 R
0 634 V
3052 501 M
0 634 V
0 -634 R
0 1268 V
3194 501 M
0 1268 V
0 -1268 R
142 0 R
0 2536 V
3479 501 M
0 2536 V
0 -2536 R
0 1902 V
3621 501 M
0 1902 V
0 -1902 R
0 634 V
3764 501 M
0 634 V
0 -634 R
0 1268 V
3906 501 M
0 1268 V
0 -1268 R
0 1268 V
4049 501 M
0 1268 V
0 -1268 R
0 2536 V
4191 501 M
0 2536 V
0 -2536 R
0 2536 V
4333 501 M
0 2536 V
0 -2536 R
0 4438 V
4476 501 M
0 4438 V
0 -4438 R
0 4438 V
4618 501 M
0 4438 V
0 -4438 R
0 3804 V
4761 501 M
0 3804 V
0 -3804 R
0 1268 V
4903 501 M
0 1268 V
0 -1268 R
0 3804 V
5045 501 M
0 3804 V
0 -3804 R
0 1268 V
5188 501 M
0 1268 V
0 -1268 R
0 634 V
5330 501 M
0 634 V
0 -634 R
0 3804 V
5473 501 M
0 3804 V
0 -3804 R
0 634 V
5615 501 M
0 634 V
0 -634 R
0 634 V
5758 501 M
0 634 V
0 -634 R
0 1268 V
5900 501 M
0 1268 V
0 -1268 R
0 2536 V
6042 501 M
0 2536 V
0 -2536 R
0 1902 V
6185 501 M
0 1902 V
0 -1902 R
0 1902 V
6327 501 M
0 1902 V
0 -1902 R
0 634 V
6470 501 M
0 634 V
0 -634 R
0 1902 V
6612 501 M
0 1902 V
0 -1902 R
143 0 R
0 3170 V
6897 501 M
0 3170 V
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 30 1695 a Fk(Figure)40 b(5:)62 b(W)-7 b(eigh)n(t)40
b(histogram)f(for)h(the)g(Random)g(W)-7 b(alk,)30 1795
y(TD\()p Fi(\025)p Fk(\))30 2079 y(in)28 b(the)h(b)r(eginning,)f(ev)n
(en)g(when)g(using)g(a)g(greedy)f(p)r(olicy)h(for)30
2179 y(pic)n(king)33 b(actions,)i(as)e(w)n(e)h(did)g(in)g(these)g(exp)r
(erimen)n(ts.)56 b(F)-7 b(or)30 2278 y(EG-Sarsa,)23 b(b)r(oth)i(the)g
(w)n(eigh)n(ts)f(for)g(b)r(oth)h(p)r(ositiv)n(e)f(and)h(neg-)30
2378 y(ativ)n(e)30 b(inputs)h(w)n(ere)e(initialized)i(to)f(1,)h(whic)n
(h)f(pro)r(duces)g(the)30 2477 y(same)d(optimistic)h(initial)g
(predictions)f(\(zero)g(ev)n(erywhere\).)30 2627 y(Eac)n(h)f(algorithm)
g(w)n(as)h(run)g(with)h(a)f(v)-5 b(ariet)n(y)26 b(of)i(v)-5
b(alues)27 b(for)g Fi(\013)30 2726 y Fk(and)32 b Fi(\025)p
Fk(.)49 b(F)-7 b(or)32 b(eac)n(h)f(algorithm)f(and)i(parameter)e(v)-5
b(alues,)32 b(w)n(e)30 2826 y(ran)23 b(20)g(episo)r(des,)i(and)e(then)i
(rep)r(eated)f(for)f(30)g(indep)r(enden)n(t)30 2926 y(runs.)38
b(The)28 b(p)r(erformance)f(measure)g(for)h(eac)n(h)f(com)n(bination)30
3025 y(of)g(algorithm)g(and)g(parameter)f(v)-5 b(alues)27
b(w)n(as)g(the)h(n)n(um)n(b)r(er)f(of)30 3125 y(time)37
b(steps)f(to)h(reac)n(h)e(the)i(goal,)g(a)n(v)n(eraged)d(o)n(v)n(er)g
(the)j(\014rst)30 3225 y(20)32 b(episo)r(des)g(and)g(then)h(o)n(v)n(er)
e(the)i(30)e(runs.)52 b(All)33 b(the)g(algo-)30 3324
y(rithms)20 b(used)g(the)h(same)e(random)g(starting)g(p)r(ositions)h
(for)g(the)30 3424 y(episo)r(des.)30 3573 y(Figure)h(3)h(sho)n(ws)e
(the)j(p)r(erformance)d(in)i(detail,)i(for)d(all)g(v)-5
b(alues)30 3673 y(of)40 b Fi(\025)g Fk(and)g Fi(\013)p
Fk(.)75 b(Figure)39 b(4)h(is)g(a)f(summary)g(of)h(the)h(results,)30
3773 y(sho)n(wing)30 b(only)g(the)h(b)r(est)h(p)r(erformance)d(of)i
(eac)n(h)f(algorithm)30 3872 y(at)e(eac)n(h)g Fi(\025)h
Fk(v)-5 b(alue.)40 b(EG-Sarsa)26 b(generated)h(shorter)h(episo)r(des)30
3972 y(than)f(con)n(v)n(en)n(tional)f(Sarsa)f(at)i(almost)g(all)g(com)n
(binations)f(of)30 4071 y(parameter)36 b(settings.)64
b(Moreo)n(v)n(er,)37 b(for)f(all)h Fi(\025)h Fk(v)-5
b(alues,)39 b(EG-)30 4171 y(Sarsa)f(w)n(as)g(ab)r(out)h(25\045)f
(faster)h(at)g(the)g(b)r(est)h Fi(\013)p Fk(,)j(and)c(the)30
4271 y(di\013erences)27 b(are)g(statistically)g(signi\014can)n(t.)30
4523 y Fj(6)112 b(DISCUSSION)30 4735 y Fk(Wh)n(y)28 b(do)r(es)g(EG)g
(sp)r(eed)h(up)f(learning)f(on)h(the)h(moun)n(tain-car)30
4835 y(task,)34 b(but)g(not)g(on)f(the)h(random)e(w)n(alk)h(task?)54
b(In)33 b(order)f(to)30 4935 y(answ)n(er)e(this)i(question,)g(w)n(e)f
(generated)f(histograms)g(of)i(the)30 5034 y(w)n(eigh)n(ts)25
b(that)h(w)n(ere)e(learned)h(on)h(one)f(run)h(for)f(one)g(pair)g(of)h
Fi(\025)30 5134 y Fk(and)h Fi(\013)i Fk(v)-5 b(alues,)27
b(after)g(a)g(longer)g(learning)f(p)r(erio)r(d.)30 5283
y(Figures)38 b(5)h(and)g(6)g(presen)n(t)f(the)h(histograms)f(for)g(the)
i(t)n(w)n(o)30 5383 y(algorithms)30 b(on)i(the)g(random)f(w)n(alk)g
(task)g(after)h(100)e(w)n(alks.)2130 179 y
 15468729 10893473 3289088 3289088 26970521 19866091 startTexFig
 2130 179 a
%%BeginDocument: egdbinsnew.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 994 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(1) Rshow
1200 1487 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(2) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(3) Rshow
1200 2473 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(4) Rshow
1200 2967 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(5) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(6) Rshow
1200 3953 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(7) Rshow
1200 4446 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(8) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(9) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1912 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.1) Cshow
2624 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
3336 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.3) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4761 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.5) Cshow
5473 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
6185 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.7) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of weights in bin) Cshow
grestore
4048 101 M
(Weight magnitude) Cshow
LT0
6234 4676 M
("egd.new") Rshow
6354 4676 M
360 0 V
1200 2473 M
142 0 V
0 -1479 V
143 0 V
0 1479 V
142 0 V
0 987 V
143 0 V
0 -987 V
142 0 V
0 1480 V
143 0 V
0 986 V
142 0 V
0 -3452 V
142 0 V
0 986 V
143 0 V
0 -493 V
142 0 V
0 1480 V
143 0 V
0 -493 V
142 0 V
0 -1973 V
143 0 V
0 493 V
142 0 V
0 986 V
142 0 V
0 494 V
143 0 V
0 -987 V
142 0 V
0 987 V
143 0 V
0 -494 V
142 0 V
143 0 V
0 -493 V
142 0 V
0 -986 V
142 0 V
0 493 V
143 0 V
142 0 V
143 0 V
0 -493 V
142 0 V
0 493 V
142 0 V
143 0 V
0 -986 V
142 0 V
0 1479 V
143 0 V
0 -986 V
142 0 V
0 1479 V
143 0 V
0 -1972 V
142 0 V
0 493 V
142 0 V
0 -493 V
143 0 V
142 0 V
0 986 V
143 0 V
0 -986 V
142 0 V
143 0 V
142 0 V
LT1
6234 4476 M
("egd.new") Rshow
6354 4476 M
360 0 V
1200 501 M
0 1972 V
1342 501 M
0 1972 V
0 -1972 R
0 493 V
1485 501 M
0 493 V
0 -493 R
0 1972 V
1627 501 M
0 1972 V
0 -1972 R
0 2959 V
1770 501 M
0 2959 V
0 -2959 R
0 1972 V
1912 501 M
0 1972 V
0 -1972 R
0 3452 V
2055 501 M
0 3452 V
0 -3452 R
0 4438 V
2197 501 M
0 4438 V
0 -4438 R
0 986 V
2339 501 M
0 986 V
0 -986 R
0 1972 V
2482 501 M
0 1972 V
0 -1972 R
0 1479 V
2624 501 M
0 1479 V
0 -1479 R
0 2959 V
2767 501 M
0 2959 V
0 -2959 R
0 2466 V
2909 501 M
0 2466 V
0 -2466 R
0 493 V
3052 501 M
0 493 V
0 -493 R
0 986 V
3194 501 M
0 986 V
0 -986 R
0 1972 V
3336 501 M
0 1972 V
0 -1972 R
0 2466 V
3479 501 M
0 2466 V
0 -2466 R
0 1479 V
3621 501 M
0 1479 V
0 -1479 R
0 2466 V
3764 501 M
0 2466 V
0 -2466 R
0 1972 V
3906 501 M
0 1972 V
0 -1972 R
0 1972 V
4049 501 M
0 1972 V
0 -1972 R
0 1479 V
4191 501 M
0 1479 V
0 -1479 R
0 493 V
4333 501 M
0 493 V
0 -493 R
0 986 V
4476 501 M
0 986 V
0 -986 R
0 986 V
4618 501 M
0 986 V
0 -986 R
0 986 V
4761 501 M
0 986 V
0 -986 R
0 493 V
4903 501 M
0 493 V
0 -493 R
0 986 V
5045 501 M
0 986 V
0 -986 R
0 986 V
5188 501 M
0 986 V
0 -986 R
142 0 R
0 1479 V
5473 501 M
0 1479 V
0 -1479 R
0 493 V
5615 501 M
0 493 V
0 -493 R
0 1972 V
5758 501 M
0 1972 V
0 -1972 R
142 0 R
0 493 V
6042 501 M
0 493 V
0 -493 R
143 0 R
142 0 R
0 986 V
6470 501 M
0 986 V
0 -986 R
142 0 R
143 0 R
142 0 R
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 2130 1742 a Fk(Figure)40 b(6:)62 b(W)-7 b(eigh)n(t)40
b(histogram)f(for)h(the)g(Random)g(W)-7 b(alk,)2130 1841
y(EG-TD\()p Fi(\025)p Fk(\))2130 2021 y
 15468729 10893473 3289088 3289088 26970521 19866091 startTexFig
 2130 2021 a
%%BeginDocument: a2.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
840 351 M
6129 0 V
LTb
840 351 M
63 0 V
6066 0 R
-63 0 V
756 351 M
(0) Rshow
840 1275 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(50) Rshow
840 2198 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(100) Rshow
840 3122 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(150) Rshow
840 4045 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(200) Rshow
840 4969 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(250) Rshow
840 351 M
0 63 V
0 4555 R
0 -63 V
840 211 M
(-12) Cshow
1862 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-10) Cshow
2883 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-8) Cshow
3905 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-6) Cshow
4926 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-4) Cshow
5948 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-2) Cshow
6969 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(0) Cshow
840 351 M
6129 0 V
0 4618 V
-6129 0 V
840 351 L
140 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of weights) Cshow
grestore
3904 71 M
(Weight values) Cshow
LT0
6969 4951 M
-204 0 V
0 -4027 V
-205 0 V
0 74 V
-204 0 V
0 -19 V
-204 0 V
0 -240 V
-204 0 V
-205 0 V
0 222 V
-204 0 V
0 351 V
-204 0 V
0 424 V
-205 0 V
0 296 V
-204 0 V
0 739 V
-204 0 V
0 -1977 V
-205 0 V
0 -314 V
-204 0 V
0 -111 V
-204 0 V
-204 0 V
0 -18 V
-205 0 V
0 37 V
-204 0 V
0 -19 V
-204 0 V
0 -18 V
-205 0 V
-204 0 V
-204 0 V
-205 0 V
-204 0 V
-204 0 V
-204 0 V
-205 0 V
-204 0 V
-204 0 V
-205 0 V
-204 0 V
LT1
6969 351 M
0 4600 V
6765 351 M
0 4600 V
0 -4600 R
0 573 V
6560 351 M
0 573 V
0 -573 R
0 647 V
6356 351 M
0 647 V
0 -647 R
0 628 V
6152 351 M
0 628 V
0 -628 R
0 388 V
5948 351 M
0 388 V
0 -388 R
0 388 V
5743 351 M
0 388 V
0 -388 R
0 610 V
5539 351 M
0 610 V
0 -610 R
0 961 V
5335 351 M
0 961 V
0 -961 R
0 1385 V
5130 351 M
0 1385 V
0 -1385 R
0 1681 V
4926 351 M
0 1681 V
0 -1681 R
0 2420 V
4722 351 M
0 2420 V
0 -2420 R
0 443 V
4517 351 M
0 443 V
0 -443 R
0 129 V
4313 351 M
0 129 V
0 -129 R
0 18 V
4109 351 M
0 18 V
0 -18 R
0 18 V
3905 351 M
0 18 V
0 -18 R
-205 0 R
0 37 V
3496 351 M
0 37 V
0 -37 R
0 18 V
3292 351 M
0 18 V
0 -18 R
-205 0 R
-204 0 R
-204 0 R
-205 0 R
-204 0 R
-204 0 R
-204 0 R
-205 0 R
-204 0 R
-204 0 R
-205 0 R
-204 0 R
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 2203 3583 a Fk(Figure)27 b(7:)36 b(Q-v)-5 b(alue)27
b(histogram)f(for)h(one)h(action,)f(Sarsa)2130 3758 y
 15468729 10893473 3289088 3289088 26970521 19866091 startTexFig

2130 3758 a
%%BeginDocument: ega2.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
840 351 M
6129 0 V
LTb
840 351 M
63 0 V
6066 0 R
-63 0 V
756 351 M
(0) Rshow
840 1275 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(50) Rshow
840 2198 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(100) Rshow
840 3122 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(150) Rshow
840 4045 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(200) Rshow
840 4969 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(250) Rshow
840 351 M
0 63 V
0 4555 R
0 -63 V
840 211 M
(-12) Cshow
1862 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-10) Cshow
2883 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-8) Cshow
3905 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-6) Cshow
4926 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-4) Cshow
5948 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(-2) Cshow
6969 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(0) Cshow
840 351 M
6129 0 V
0 4618 V
-6129 0 V
840 351 L
140 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of weights) Cshow
grestore
3904 71 M
(Weight values) Cshow
LT0
6969 4969 M
-204 0 V
0 -4045 V
-205 0 V
0 -19 V
-204 0 V
0 -222 V
-204 0 V
-204 0 V
0 37 V
-205 0 V
0 93 V
-204 0 V
0 92 V
-204 0 V
0 -111 V
-205 0 V
0 -37 V
-204 0 V
0 -55 V
-204 0 V
0 148 V
-205 0 V
0 -74 V
-204 0 V
0 92 V
-204 0 V
0 -74 V
-204 0 V
0 -18 V
-205 0 V
0 37 V
-204 0 V
0 185 V
-204 0 V
0 -130 V
-205 0 V
0 -55 V
-204 0 V
0 -130 V
-204 0 V
0 -73 V
-205 0 V
0 -19 V
-204 0 V
0 74 V
-204 0 V
0 -18 V
-204 0 V
0 -259 V
-205 0 V
-204 0 V
0 -19 V
-204 0 V
0 -18 V
-205 0 V
-204 0 V
LT1
6969 351 M
0 4618 V
6765 351 M
0 4618 V
0 -4618 R
0 573 V
6560 351 M
0 573 V
0 -573 R
0 554 V
6356 351 M
0 554 V
0 -554 R
0 332 V
6152 351 M
0 332 V
0 -332 R
0 332 V
5948 351 M
0 332 V
0 -332 R
0 369 V
5743 351 M
0 369 V
0 -369 R
0 462 V
5539 351 M
0 462 V
0 -462 R
0 554 V
5335 351 M
0 554 V
0 -554 R
0 443 V
5130 351 M
0 443 V
0 -443 R
0 406 V
4926 351 M
0 406 V
0 -406 R
0 351 V
4722 351 M
0 351 V
0 -351 R
0 499 V
4517 351 M
0 499 V
0 -499 R
0 425 V
4313 351 M
0 425 V
0 -425 R
0 517 V
4109 351 M
0 517 V
0 -517 R
0 443 V
3905 351 M
0 443 V
0 -443 R
0 425 V
3700 351 M
0 425 V
0 -425 R
0 462 V
3496 351 M
0 462 V
0 -462 R
0 647 V
3292 351 M
0 647 V
0 -647 R
0 517 V
3087 351 M
0 517 V
0 -517 R
0 462 V
2883 351 M
0 462 V
0 -462 R
0 332 V
2679 351 M
0 332 V
0 -332 R
0 259 V
2474 351 M
0 259 V
0 -259 R
0 240 V
2270 351 M
0 240 V
0 -240 R
0 314 V
2066 351 M
0 314 V
0 -314 R
0 296 V
1862 351 M
0 296 V
0 -296 R
0 37 V
1657 351 M
0 37 V
0 -37 R
0 37 V
1453 351 M
0 37 V
0 -37 R
0 18 V
1249 351 M
0 18 V
0 -18 R
-205 0 R
-204 0 R
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 2130 5321 a Fk(Figure)f(8:)37 b(Q-v)-5 b(alue)26 b(histogram)f(for)i
(one)g(action,)f(EG-Sarsa)p eop
%%Page: 6 6
6 5 bop 30 216 a Fk(Figures)33 b(7)g(and)g(8)g(presen)n(t)g(the)g(same)
g(histograms)f(for)h(the)30 315 y(moun)n(tain)f(car)g(task)g(after)h
(500)e(episo)r(des.)52 b(The)33 b(shap)r(es)f(of)30 415
y(the)j(t)n(w)n(o)f(sets)h(of)g(histograms)e(are)g(di\013eren)n(t.)59
b(In)35 b(the)g(ran-)30 515 y(dom)40 b(w)n(alk,)h(the)f(w)n(eigh)n(ts)f
(are)g(more)g(ev)n(enly)g(distributed.)30 614 y(Moreo)n(v)n(er,)d
(their)g(is)h(no)f(prep)r(onderance)f(of)h(small)g(v)-5
b(alued)30 714 y(w)n(eigh)n(ts.)71 b(In)39 b(the)h(moun)n(tain-car)e
(task,)j(the)f(distribution)30 814 y(is)30 b(quite)h(unev)n(en,)g(with)
g(a)f(large)g(n)n(um)n(b)r(er)g(of)g(w)n(eigh)n(ts)g(close)30
913 y(to)k(0.)55 b(The)34 b(w)n(eigh)n(t)f(distributions)g(generated)g
(b)n(y)h(the)g(t)n(w)n(o)30 1013 y(learning)26 b(algorithms)h(also)f
(app)r(ear)h(to)g(b)r(e)h(di\013eren)n(t.)30 1162 y(In)g(sup)r(ervised)
f(learning,)g(EG)h(metho)r(ds)g(ha)n(v)n(e)f(b)r(een)h(sho)n(wn)30
1262 y(to)34 b(con)n(v)n(erge)d(faster)i(than)h(gradien)n(t)e(descen)n
(t)i(in)g(problems)30 1362 y(with)19 b(man)n(y)f(irrelev)-5
b(an)n(t)17 b(input)j(features.)33 b(These)18 b(results)g(sup-)30
1461 y(p)r(ort)h(the)g(h)n(yp)r(othesis)g(that)g(a)f(similar)h
(situation)f(arises)g(when)30 1561 y(using)27 b(EG)h(metho)r(ds)f(for)g
(reinforcemen)n(t)g(learning.)30 1915 y Fj(7)112 b(CONCLUSIONS)30
2188 y Fk(W)-7 b(e)31 b(ha)n(v)n(e)e(presen)n(ted)h(a)g(straigh)n
(tforw)n(ard)d(extension)j(of)h(ex-)30 2287 y(p)r(onen)n(tiated)d
(gradien)n(t)f(metho)r(ds)h(to)g(reinforcemen)n(t)f(learn-)30
2387 y(ing.)38 b(The)28 b(empirical)g(results)f(suggest)g(that)h(exp)r
(onen)n(tiated)30 2487 y(gradien)n(t)f(v)-5 b(ariations)26
b(of)i(reinforcemen)n(t)f(learning)g(metho)r(ds)30 2586
y(can)j(yield)h(signi\014can)n(tly)e(faster)h(learning)f(when)i(used)g
(with)30 2686 y(linear)e(function)h(appro)n(ximators.)40
b(This)29 b(impro)n(v)n(emen)n(t)f(de-)30 2786 y(p)r(ends)45
b(on)f(the)h(task)f(that)h(needs)f(to)h(b)r(e)f(solv)n(ed.)87
b(More)30 2885 y(precisely)-7 b(,)31 b(exp)r(onen)n(tiated)g(gradien)n
(t)g(metho)r(ds)g(can)g(b)r(e)h(ex-)30 2985 y(p)r(ected)24
b(to)f(learn)g(faster)f(if)i(the)g(represen)n(tation)e(is)h(suc)n(h)g
(that)30 3084 y(man)n(y)k(input)h(features)f(are)f(irrelev)-5
b(an)n(t.)36 b(More)26 b(exp)r(erimen)n(ts)30 3184 y(with)38
b(more)g(tasks)f(are)g(needed)h(to)g(determine)g(ho)n(w)f(often)30
3284 y(and)27 b(ho)n(w)g(easily)g(this)h(c)n(haracteristic)e(o)r
(ccurs.)30 3433 y(When)56 b(using)f(exp)r(onen)n(tiated)g(gradien)n(t)f
(metho)r(ds,)62 b(one)30 3533 y(needs)31 b(to)h(pa)n(y)f(sligh)n(tly)g
(more)g(atten)n(tion)g(to)g(prev)n(en)n(t)g(o)n(v)n(er-)30
3632 y(\015o)n(w)k(of)g(the)h(w)n(eigh)n(ts.)59 b(The)35
b(use)g(of)h(replacing)e(traces,)i(in-)30 3732 y(stead)c(of)h(accum)n
(ulating)f(traces,)h(helps)g(deal)f(with)h(this)h(is-)30
3832 y(sue.)66 b(The)37 b(algorithms)f(are)h(also)f(sensitiv)n(e)h(to)g
(the)h(initial)30 3931 y(w)n(eigh)n(t)f(magnitudes.)68
b(Small)38 b(initial)g(v)-5 b(alues)37 b(can)h(lead)f(to)30
4031 y(slo)n(w)d(con)n(v)n(ergence.)56 b(Ov)n(erall,)35
b(ho)n(w)n(ev)n(er,)g(w)n(e)f(did)i(not)f(\014nd)30 4131
y(EG)25 b(metho)r(ds)g(signi\014can)n(tly)f(harder)g(to)h(tune)g(than)h
(con)n(v)n(en-)30 4230 y(tional)h(reinforcemen)n(t)g(learning)f(metho)r
(ds.)30 4560 y Fl(Ac)m(kno)m(wledgmen)m(ts)30 4785 y
Fk(The)39 b(authors)f(thank)i(Manfred)f(W)-7 b(arm)n(uth,)42
b(P)n(aul)c(Utgo\013,)30 4885 y(and)24 b(Jyrki)f(Kivinen)g(for)h
(encouragemen)n(t,)f(ideas,)h(and)g(com-)30 4984 y(men)n(ts)36
b(con)n(tributing)g(to)h(this)f(pap)r(er,)i(and)f(Am)n(y)f(McGo)n(v-)30
5084 y(ern,)j(for)e(pro)r(of-reading.)63 b(This)37 b(researc)n(h)e(w)n
(as)h(supp)r(orted)30 5184 y(b)n(y)27 b(NSF)h(Gran)n(t)e(ECS-9511805)d
(to)k(Andrew)g(G.)g(Barto)f(and)30 5283 y(Ric)n(hard)34
b(S.)i(Sutton.)60 b(Doina)35 b(Precup)f(also)h(ac)n(kno)n(wledges)30
5383 y(the)28 b(supp)r(ort)f(of)h(the)g(F)-7 b(ulbrigh)n(t)27
b(F)-7 b(oundation.)2130 216 y Fl(References)2130 368
y Fk(Albus,)50 b(J.)45 b(S.)g(\(1981\).)f Fa(Br)l(ain,)51
b(b)l(ehaviour)d(and)e(r)l(ob)l(otics)p Fk(,)2279 468
y(c)n(hapter)27 b(6,)g(pp.)h(139-176.)d(Byte)i(Bo)r(oks.)2130
619 y(Kivinen,)e(J.,)h(&)e(W)-7 b(arm)n(uth,)25 b(M.)h(K)e(\(1994\).)g
(Exp)r(onen)n(tiated)2279 718 y(gradien)n(t)44 b(v)n(ersus)g(gradien)n
(t)g(descen)n(t)h(for)f(linear)h(pre-)2279 818 y(dictors,)25
b(T)-7 b(ec)n(hnical)25 b(Rep)r(ort)g(UCSC-CRL-94-16,)e(CSE)2279
918 y(Dept.,)29 b(Univ)n(ersit)n(y)e(of)g(California,)g(San)n(ta)g
(Cruz.)2130 1069 y(Lewis,)h(D.)g(D.,)h(Sc)n(hapire,)e(R.)h(E.,)f
(Callan,)h(J.)f(P)-7 b(.,)28 b(&)f(P)n(apk)-5 b(a,)2279
1168 y(R.)24 b(\(1996\).)e(T)-7 b(raining)22 b(algorithms)g(for)g
(linear)h(text)g(clas-)2279 1268 y(si\014ers.)18 b Fa(Pr)l(o)l(c)l(e)l
(e)l(dings)k(of)g(the)g(Ninete)l(enth)e(A)n(nnual)h(Inter-)2279
1368 y(national)k(A)n(CM)e(SIGIR)g(Confer)l(enc)l(e)h(on)g(R)l(ese)l
(ar)l(ch)f(and)2279 1467 y(Development)43 b(in)f(Information)h(R)l
(etrieval)f Fk(\(pp.)g(298-)2279 1567 y(315\).)27 b(Zuric)n(h,)g
(Switzerland.)2130 1718 y(Littlestone,)38 b(N.)f(\(1988\).)e(Learning)g
(quic)n(kly)g(when)h(irrele-)2279 1818 y(v)-5 b(an)n(t)40
b(attributes)g(ab)r(ound:)62 b(A)40 b(new)g(linear-threshold)2279
1917 y(algorithm.)27 b Fa(Machine)k(L)l(e)l(arning,)g(2)p
Fk(,)d(285-318.)2130 2068 y(Miller,)38 b(W.)f(T.,)i(Glanz,)f(F.)f(H.,)i
(&)d(Kraft,)i(L.)f(G.)f(\(1990\).)2279 2168 y(CMA)n(C:)25
b(An)h(asso)r(ciativ)n(e)d(neural)h(net)n(w)n(ork)f(alternativ)n(e)2279
2268 y(to)29 b(bac)n(kpropagation.)c Fa(Pr)l(o)l(c)l(e)l(e)l(dings)32
b(of)f(the)g(IEEE,)h(78)p Fk(,)2279 2367 y(1561-1567.)2130
2518 y(P)n(apk)-5 b(a,)52 b(R.,)h(Callan,)f(J.)47 b(P)-7
b(.,)53 b(&)47 b(Barto,)52 b(A.)c(G.)g(\(1996\).)2279
2618 y Fa(T)-6 b(ext-b)l(ase)l(d)36 b(information)h(r)l(etrieval)f
(using)f(exp)l(onenti-)2279 2718 y(ate)l(d)h(gr)l(adient)h(desc)l(ent)p
Fk(,)e(to)f(app)r(ear)f(in)h(Neural)g(Infor-)2279 2817
y(mation)28 b(Pro)r(cessing)d(Systems,)j(1996.)2130 2968
y(Precup,)22 b(D.,)h(&)e(Sutton,)j(R.)d(S.)h(\(1996\).)e(Empirical)h
(compar-)2279 3068 y(ison)28 b(of)h(gradien)n(t)e(descen)n(t)h(and)g
(exp)r(onen)n(tiated)h(gradi-)2279 3168 y(en)n(t)23 b(descen)n(t)g(in)g
(sup)r(ervised)g(and)f(reinforcemen)n(t)g(learn-)2279
3267 y(ing,)k(T)-7 b(ec)n(hnical)25 b(Rep)r(ort)g(96-70,)e(CS)i(Dept.,)
i(Univ)n(ersit)n(y)2279 3367 y(of)h(Massac)n(h)n(usetts,)e(Amherst.)
2130 3518 y(Rummery)-7 b(,)32 b(G.)g(A.,)g(&)f(Niranjan,)h(M.)f
(\(1994\).)f Fa(On-line)j(Q-)2279 3618 y(le)l(arning)25
b(using)e(c)l(onne)l(ctionist)g(systems)p Fk(,)g(T)-7
b(ec)n(hnical)20 b(re-)2279 3717 y(p)r(ort)27 b(CUED/F-INFENG/TR)g(166)
f(Cam)n(bridge)g(Uni-)2279 3817 y(v)n(ersit)n(y)h(Engineering)f
(Departmen)n(t.)2130 3968 y(Singh,)52 b(S.P)-7 b(.,)52
b(&)47 b(Sutton,)52 b(R.S.)c(\(1996\).)d(Reinforcemen)n(t)2279
4067 y(learning)27 b(with)i(replacing)d(eligibilit)n(y)i(traces.)f
Fa(Machine)2279 4167 y(L)l(e)l(arning)j(,)h(22)p Fk(,)d(123-158.)2130
4318 y(Sutton,)59 b(R.)53 b(S.)f(\(1988\).)f(Learning)g(to)h(predict)h
(b)n(y)f(the)2279 4418 y(metho)r(d)39 b(of)f(temp)r(oral)f
(di\013erences.)g Fa(Machine)k(L)l(e)l(arn-)2279 4517
y(ing,)31 b(3)p Fk(,)d(9-44.)2130 4669 y(Sutton,)39 b(R.S.)e(\(1996\).)
f(Generalization)f(in)i(reinforcemen)n(t)2279 4768 y(learning:)j
(Successful)30 b(examples)f(using)g(sparse)f(coarse)2279
4868 y(co)r(ding.)k Fa(A)l(dvanc)l(es)i(in)g(Neur)l(al)f(Information)i
(Pr)l(o)l(c)l(ess-)2279 4967 y(ing)30 b(Systems)g(8)e
Fk(\(pp.)g(1038-1044,\).)c(MIT)k(Press.)2130 5119 y(W)-7
b(atkins,)40 b(C.J.C.H.)e(\(1989\).)e Fa(L)l(e)l(arning)j(with)h
(delaye)l(d)g(r)l(e-)2279 5218 y(war)l(ds)p Fk(.)33 b(Do)r(ctoral)e
(dissertation,)h(Psyc)n(hology)d(Depart-)2279 5318 y(men)n(t,)f(Cam)n
(bridge)f(Univ)n(ersit)n(y)-7 b(.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
