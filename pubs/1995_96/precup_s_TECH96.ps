%!PS-Adobe-2.0
%%Creator: dvipsk 5.58c Copyright 1986, 1994 Radical Eye Software
%%Title: project.dvi
%%Pages: 20
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips project
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1996.09.24:1327
%%BeginProcSet: fix-lj4si-ps-bug.pro
/fixcurrentmatrix {
    statusdict /product known {
	statusdict /product get (HP LaserJet 4Si) eq {
	    /version where {
		/version get (2011.110) eq {
		    matrix currentmatrix
		    dup dup 0 get 32768 mul round 32768 div 0 exch put
		    dup dup 3 get 32768 mul round 32768 div 3 exch put
		    systemdict /setmatrix get exec
		} if
	    } if
	} if 
    } if
} bind def

/setmatrix {
    systemdict /setmatrix get exec
    fixcurrentmatrix
} bind def
%%EndProcSet
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (project.dvi)
@start /Fa 1 49 df<EA0380EA07C0A3EA0F80A313005A121EA2123E123CA212381278
A21270A25AA20A157D9612>48 D E /Fb 4 51 df<B712FEA327037A8F34>0
D<1338A50040130400F0131E38F8103E007E13FC380F11E0380393803800FE00133813FE
38039380380F11E0387E10FC00F8133E38F0381E0040130400001300A517197B9A22>3
D<13F0EA01F81203A3EA07F0A313E0A2EA0FC0A31380121F1300A3123EA2123CA2127C12
78A2127012F0A25A0D1D7D9F13>48 D<49B5FC130F133F01FEC7FCEA01F0EA03C0485A48
C8FC121E121C5AA25AA35AA3B7FCA300E0C8FCA31270A37EA27E121E7E6C7E6C7EEA01F0
EA00FE013FB5FC130F130120277AA12D>50 D E /Fc 1 106 df<137013F0A213601300
A7EA0F80EA19C0EA31E012611241EAC3C01203EA0780A3EA0F001308EA1E18A21310EA1C
30EA0E60EA07800D1D7D9C16>105 D E /Fd 3 89 df<161E167EED01FE1503ED0FF8ED
1FE0ED3FC0ED7F0015FE4A5A4A5A4A5A4A5A141F5D4A5AA24AC7FCA414FEB3B3B3A35C13
01A3495AA25C1307495AA2495A495A91C8FC137E5BEA03F8485A485AEA3F8048C9FC12FC
A2127F6C7EEA0FE06C7E6C7EC67E137E7F806D7E6D7EA26D7E130380A26D7EA3130080B3
B3B3A3147FA46E7EA26E7E81140F6E7E6E7E6E7E6E7E157FED3FC0ED1FE0ED0FF8ED03FE
1501ED007E161E27C675823E>26 D<007FBA12FCBB7EA3D87F80C9001F7F6C6CEE007F6C
6C17076D05011380000FF0007F6C6C181F6C6CF00FC01A076C6C18036C6CF001E06E1700
017F19606D6C18706D6C183080010F19186D6C18006D7E8013016D7E6E7EA26E7E6E7E81
140F6E7E6E7E8114016E7E6F7E82153F6F7E6F7E826F5A6F5A5E4B5A150F4BCBFC153E15
3C5D15F84A5A4A5A5D4A5A140F4ACCFC141E5C147C5C494818184A1830495A0107197049
48186049CC12E0011E180149F003C0017C180749180F4848F01F8049187F4848EF01FF00
07060713004848173F90CA000FB5FC48BA5A5A5ABB5A7E4D537B7F58>80
D<007FBE12E0BF7EA38A6C48CCFC6C6C0700806C1B076E07007F6C6D1A1F6C6D1A076CF4
01FF6E747E6C6DF33F806C6D1B0F017F1C076EF303C06D6C1B016D6DF200E0A26D6D1B70
6D6D1B306D7F1F186D6D1B006D7F147F816E7E6E7F80826E7F6E7F80826E7F6F7E153F82
6F7F6F7FA26F7F6F7F6F7FA26F7F707E707EA2707F707F8284707F707F82A2177F715A71
5A60604DCDFC5F177E5F4C5A4C5A4C5A160F5F4C5A4CCEFC167E5E4B5AA24B5A4B5A4B5A
4B5A4BCFFCA2157E5D4A5A4A5A4A481B18020F1C305D4A481B704ACF1260027E1CE04A1B
010101F403C04A1B074948F30F8049481B1F49481B7F4948F3FF00013F1B0391CE120F01
7EF37FFE49F203FF48481A7F4848077FB55A48BEFC665A5A48655ABFFC6C656D747B7F78
>88 D E /Fe 5 62 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F48EB0780A348EB03C0A400F814E0
AE007814C0A2007C1307003C1480A36CEB0F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521
>I<13FF000313E0380E03F0381800F848137C487F00787F12FC6C1480A2140FA2127CC7
121F1500A25C143E5C14785C495A495A495A49C7FC131C5B903870018013E0EA01C03903
800300EA06005A001FB5FC5A485BB5FCA219267DA521>I<007FB712C0B812E0A2CBFCAB
B812E0A26C16C02B117D9633>61 D E /Ff 20 121 df<1238127C12FE12FFA2127F123B
1203A31206A3120C121812381270122008127A8614>59 D<017FB512F016FC903903E000
7FEE0F80EE07E016034948EB01F0EE00F8A2177C495AA449C8127EA3177C133E17FCA349
15F8160117F016034915E0160717C0EE0F80485AEE1F00163E5E4848EB01F04B5AED0F80
0007027FC7FCB612F815C02F287BA736>68 D<017FB612E017F0903903E000071600A217
60495AA4495A1503A2170090381F0006A2150E153E90383FFFFCA290383E003C151C4913
18A35E49EB100315001606A248485CA25E163848485C16F0ED03E00007141FB75AA22C28
7BA731>I<017FB6128017C0903903E0000F1603A2EE0180495AA4495AA215040306C7FC
49485AA3151C013E137890383FFFF8A290383E0078491330A4495B152092C8FCA2485AA4
485AA31207B57EA22A287BA72A>I<4AB41308020FEBE01891397F80F038903A01F80018
70D903E0EB0CF0D90F80130749C71203013E15E05B491401485A484815C0485A120F5B00
1F168090C8FC4892C7FCA2127EA4127C00FC91381FFFE0A29238007E00007C157CA4007E
5D123EA27E6C6C495A6C6C13036C6C1307D801F8EB0E706CB4EB786090393FFFE0200107
90C8FC2D2A7DA834>I<D97FE090380FFF80800103913800F8006E14701760147C01065D
80A280010C4A5AEC0F80A2140701186D48C7FCA2EC03E0A290393001F006A2EC00F8A249
EB7C0CA2153C153E495C151FA2ED0F98484814B0ED07F0A2150348C75B15015A486C1300
D8FFF85C164031287BA735>78 D<000FB712C017E03A1F800F8007D81E00EC01C0121800
381500003049C7FCA24815011780143E5AA2C791C7FC5CA45CA4495AA4495AA4495AA449
5AA3131F000FB5FCA22B287DA727>84 D<130E131FA2131E130C90C7FCA9EA03E0EA0FF0
EA1C78123812301260A212C05B1200485AA3485AA2485AEB8180A2380F0300A21306A213
1CEA07F8EA01E011277DA617>105 D<1403EC0780140FA2EC070091C7FCA9EB03F0497E
EB1C3C497E1370136013C05CEA0180C7FCA25CA45CA4495AA4495AA4495AA3D8300FC7FC
EA781EEAF83C5BEA7FF0EA3F80193280A61B>I<1378EA07FC5BEA0078A35BA4485AA448
5AEC0780EC1FC0EC7860390780E1E0EB8183EB8303018613C0390F0C01800138C7FC13E0
7FEA1FFE381E3F80EB07C06D7EEA3C011560A30078EBC0C0A2ECE180ECE30038F000FE00
60133C1B287CA723>I<3B07C01FC00FE03B0FE07FE03FF03B18F0E0F070783B30798078
C03C90397B007980D8607EEB7B00017C137E4848137CA2C6481378A24848495BA35F4848
485A1830EE01E018603B078003C003C018C017C1933801E3803C0F00078000FF0000066D
C7127C34197D983B>109 D<3907C01FC0390FE07FE03918F0E0F0393079807838207B00
EA607E137C485AA2C65AA248485BA34A5AEA03C01660EC03C016C03907800780ED818015
83913803C700390F0001FE0006EB00F823197D9829>I<EB0FE0EB7FF8EBF83C3803C00E
3807800F390F000780121E123E123C127CA248130FA315005C48131E143E143C00785B5C
6C485A381E07C06CB4C7FCEA03F819197C9821>I<3901F00F803903F83FE039063CF0F0
390C1FC078EC803C00181300131E485A153E1200153C49137CA315784913F8A215F0EC01
E00001EB03C013F8EC0700EBEC1E3803C7FCEBC3E001C0C7FCA2485AA448C8FCA3EAFFF0
A21F247F9822>I<3807C07E390FE0FF803818F38139307F03C0EB7E07EA607C01781380
39C0F8030049C7FC1200A2485AA4485AA4485AA448C8FC12061A197D981F>114
D<EB1FE0EB7FF83801E01C38038006EB001E5A141C481308EB8000EA07F8EBFF806C13E0
6C13F0EA003FEB01F8EB0078003813381278127C481370481360006013E038380780381F
FF00EA07F817197C981F>I<130C131E5BA45BA45B387FFFE0B5FC3800F000485AA4485A
A4485AA448C7FC1460A214C0121EEB0180380F0300130EEA07FCEA01F013247EA319>I<
D803E01330486C1378EA0C38D8183C5B123012605B00C0495AA2EA00F0A24A5AEA01E0A3
4848485AED8180A391380F0300141F3901E037863900F0E78C90387FC3FC90383F00F021
197D9827>I<3903C00180390FE003C0391C7007E0EA307814030060130113F000C0EB00
C0A2EA01E0A2EC0180EA03C0A2EC0300EA0780A214061404140C6C6C5A5C3801F0606CB4
5A013FC7FC1B197D9821>I<9038F807C03903FE1FE039070F3870390C07E078391803C0
F8123015F0396007806015001200A249C7FCA4131E1530123800781460EAF83E15C039F0
6E01803970CF0700383F87FE381F01F81D197D9826>120 D E /Fg
38 122 df<EC3FC0ECFFF8903807E07C90380F801E90263F000F130C017C148049EB07C0
48481518000315E048481303EEF030485A121F491560123F90C714C05AEEF180A200FEED
F30016F6A216FC5E485DA4127CA2007E140F003E91381DF808001E027113186C14E02707
8007C013303B03E03F0078602601FFF8EB3FC026003FC0EB0F802E267DA435>11
D<EB0FE0D93FF81440D9FFFC14C0487F486DEB01805A3B0FE03F800300381F000F003C90
3803C00600381301486D6C5A0060146012E0486E5AA2485DC8FC6F5AA25EA3ED1980A203
1BC7FCA3151EA3151CA31518A31538A215301570A45DA44A5AA45D14036EC8FC2A367EA4
2B>13 D<EC3FFC91387FFF8002E113C0903801807F903803001FED078092C7FCA280A280
A2801301808013008080147E147F6E7E81EB01FF903807EFE090380F8FF0EB3E07137C01
F87F3801F003EA03E048486C7EA2EA0F80121F90C7FC5AA2127EA3485CA21401A25DA248
13035DA2007C495A5D140F003C91C7FC6C131E000E5B000F5B3803C0F06CB45AD8003FC8
FC223C7DBA25>I<131F14C0EB07E06D7E6D7E80A2130080A2147E147F80A281141F81A2
140F81A2140781A2140381A2140181A214008114011403EC077F140E4A7E023C13801478
ECF01FD901E013C0EB03C00107130FD90F8013E0EB1F00013E13074914F0491303000115
F8485A48481301484814FC485A003F140048C812FE12FE48157E48153F0070151F283B7C
B930>21 D<121C123E127FEAFF80A3EA7F00123E121C0909798817>58
D<121C127E127FEAFF80A213C0127FA2121C1200A4EA0180A3EA0300A312065AA25A5A12
200A19798817>I<EC07FCEC3FFF4A13C0903901F807F0903903C001F849C7127C010E80
010C141E49141F011FEC0F80497E17C0160791C7FC011E15E090C8FCA7EC1FE0ECFFFC90
3903F01E0F90380F800390391F00018F013CEB00CF13F84848EC7FC01203485A5B000F16
80485AA2003F160090C8FC5A167E16FE00FE5DA24B5AA24B5A5A4B5A5E150F007E5D4BC7
FC003E143E6C5C5D390F8003F03907F01FC00001B55A6C49C8FCEB1FF02B3C7DBA2C>64
D<176017E0831601A216031607A2160FA2161F1637831667166316C3ED0183A2ED0303A2
1506150CA203187F160115301560A215C0A2EC018014031500020680A24A1300141C021F
B5FC5CA20260C7FC14E05C494880A249C87E5B13065BA25B133813301370D801F01680D8
07F815FF267FFF80013F13FEB516FF18FE383B7DBA3E>I<4BB41480031FEBE001037FEB
F803913A01FF007C07DA07F890380E0F00DA1FE06D5ADA3F80EB03BF02FEC76CB4FC4948
6E5AEB03F04948157E495A4948153C133F49C9FC13FE48481638A2485A1207491630120F
5B001F94C7FCA2485AA3485AA490CCFC5AA41703A317067E5FA25F6C7E5F001F5E6D5D00
0F15016C6C4A5A6C6C4AC8FC6C6C141C6C6C1478017F495A90393FE00FC0010FB5C9FC01
0313FC9038007FE0393B7CB93B>67 D<0103B812F05B7F90260007F8C7123F4B1407F001
E0A24A481400A44A5A19C0A34A5A1730A219804AC7481300A317E002FE5C1601160F91B6
FC495DA29138FC000F160749486DC8FCA4494801065B60A204041306494890C7FC60A218
1C49481518183818301870495A6017014D5A49C8120F173F49913803FF80007F90B7FCB9
C7FCA23C397DB83D>69 D<0103B812E0A390260007F8C7123F4B1407F003C0A24A481401
A44A5A1980A34A5AA21740056013004AC748C7FCA3160102FE5C16031607161F49B6C8FC
A39138FC001F4948130EA44948130CA44948130893C9FCA3495AA4495AA449CBFCA2497E
007FEBFF80B67E5D3B397DB835>I<902603FFF893383FFF8049606D7FD900069438FF80
00DF01BFC7FCA2F1033F020C177E1906190C157E02184C5A1930A219600230EE61F819C1
F001818102604B485A1806A2180C02C04C5A181818306F7ED901804B485A18C0A2EF0180
D903004A48485AA292380FC006A201064B49C8FC5FA25F494B137EA26F6C5AA249DAE180
5B04E3C7FCA216E64902EC495AA2ED03F813704C495A01F05CD807FC1607267FFFC0D9C0
03B512E0B500E0494880DAC0015E51397CB851>77 D<902603FFF891381FFFF8495E6D6D
80D90007030113006FEC007802061670814A6C1560A26F7EA202186D5C151FA26F7E0230
4B5A6F7EA282DA60034AC7FCA26F7EA24A6C6C1306A2828249485DEE3F80A217C049C700
1F5B17E0160FA201066E6C5AA217F81603495EEE01FCA2EE00FE495E17FF177FA2496F5A
A2171F137095C8FC01F081EA07FC267FFFC080B56C14064A140245397DB843>I<ED03FF
031F13F09238FE01FC913903F0007EDA0FC0EB1F80023FC7EA0FC0027EEC07E002F8EC03
F0EB03F04948EC01F8495A011FED00FC495A49C912FE137E01FE167E4848167F5B120348
5AA2120F5B001F17FFA2485AA34848ED01FEA400FFEE03FC90C9FCA2EF07F8A2EF0FF0A2
EF1FE018C0173F6C1780EF7F00A217FE6C6C4A5A4C5A001F4B5A6D5D000FED1FC06C6C4A
5A6D027EC7FC6C6C5CC66CEB03F0017EEB0FC090263FC07FC8FC903807FFFC010013C038
3B7CB93F>I<267FFFFC91383FFFC0B5FC7E000190C83807FC0049ED03E0715A00004C5A
95C7FC1706A25F171C6D15185F7F5F5FA24C5A16036E91C8FC1606133F5E5EA25E16706E
13605E011F13015E4BC9FCA215066E5AA2010F5B153815305DA25DECF180A2D907F3CAFC
14F714F614FCA25C5CA26D5AA25C5CA23A3A7CB830>86 D<267FFFF890B500F090387FFF
80B56C486E90B5FC6C496C4A7F000390C7D807FCC7380FF800D801FC4BEC03E01B801603
98C7FC1A06A204075DA2040F5D1A38041B1530043B5D6D143304635D00008204C34A5A04
C11403DB018192C8FC03031506160103065DA2030C5D193803181530616D133003605D7F
03C06D485A1803912601800091C9FC18064AC7FC02065DA24A5D18384A1530605C02F05D
5C6D486E5AA24A6ECAFC177E91C8FC177C133E013C1578A2013815701760513A7CB84E>
I<91B500F890387FFFE05B5ED90003018090380FFC006E48C7EA07E019800606C7FC6E6C
5C606F1438705B606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B705A16F96FB4
5A94C9FC6F5AA36F7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03E07F15C04A
486C7EEC0300020613034A805C4A6D7E14704A1300494880495A49C86C7E130E011E153F
017E82D803FFEDFFE0007F01E0010FEBFF80B55C6C8143397EB845>I<B500FC91381FFF
C04D13E04A6E13C0000390C83803FC006C4816E06C6C5E95C7FC17066D6C5C171C5F6D6C
14305F5F6D6C495A4CC8FC010F5C6E130E160C01075C6E5B5E6D6C5B15014B5AD901FE90
C9FC15065D6D6C5A5D15706E5A5D5D6ECAFC5CA3147E14FEA35C1301A35C1303A35C1307
A2130F0007B512E048805D3B397DB830>I<147E903803FF8090390FC1C38090391F0067
C0013C136F49133F13F84848EB1F80485A1207485AED3F00485AA2123F90C7127E5AA300
FE5CA448495A160CA3913803F018A2127C1407020F13306C131B001E013113606C13E126
0783C013C03A03FF007F80D800FCEB1F0026267DA42C>97 D<163FED0FFF5DA2ED007EA4
16FCA4ED01F8A4ED03F0A4ED07E0147E903803FF8790380FC1C790391F006FC0133C4913
3F13F84848EB1F80485A1207485AED3F00485AA2123F90C7127E5AA300FE5CA448495A16
0CA3913803F018A2127C1407020F13306C131B001E013113606C13E1260783C013C03A03
FF007F80D800FCEB1F00283B7DB92B>100 D<EC3FC0903801FFF0903807E07890381F80
1C90383E000E5B5B485A485A12074848131C121F491338003F1470EC03E0397F003FC090
38FFFE0014E090C8FC127E12FEA6127E150115031506003E140C15186C14706C14E03907
8007803903E03F003801FFF838003FC020267DA427>I<16F8ED03FEED0707030E1380ED
1E1F153EED7C3FA29238FC1F00160E93C7FC4A5AA54A5AA54A5AA20103B512F05B5E9026
000FC0C7FCA54A5AA64AC8FCA5147EA55CA5495AA55C1303A35CA213075CA2001C5BEA3E
0F007E90C9FC12FE131EEAFC1CEA7838EA3070EA1FE06C5A294C7CBA29>I<EB03F013FF
5AA2380007E0A4495AA4495AA449C9FCA4137EEC03F8EC0FFE91383C0F809039FC7007C0
14C09039FD8003E0EBFF00485A5B5BA248481307A44848495AA34B5A485AA24BC7FCA248
5A92387E0180A348C738FC0300A3EDF806127E5E5E1578481570007CEC3FE00038EC0F80
293B7CB930>104 D<14E0EB01F0EB03F8A214F014E0EB01C090C7FCAC13F8EA01FEEA07
0F1206000C138012181230A2EA601FA338C03F00A3EA007EA25BA3485AA3485AA23807E0
18A3380FC030A3EB8060A214C0EB8180380783001387EA03FCC65A15397EB71D>I<1507
ED0F80151F153FA2ED1F00150E92C7FCACEC0F80EC3FE0EC70F0ECC0F8EB018049487E13
06A25B5BA24A5A1330A213004A5AA44A5AA44A5AA44A5AA44AC7FCA4147EA45CA4495A12
1C383E03F0007E5BEAFE075C48485AD8781FC8FCEA707CEA3FF8EA0FC0214981B722>I<
EB03F013FF5AA2380007E0A4495AA4495AA449C8FCA4137EED07C0ED1FF0ED383849EBE0
78913801C0FCEC030114062601F80C13F8021813F0ED00E04A130048485A5CEBF38001F7
C8FCEA07FC7FEBFFE0EBE7F8380FC0FE143F6E7EA248486C7E1630A33A3F001F8060A316
C0127E91380F8180A29138078300481486007CEB03FC0038EB00F8263B7CB92B>I<EB0F
C0EA03FF5A7E38001F80A4EB3F00A4137EA45BA4485AA4485AA4485AA4485AA4485AA448
C7FCA4127E1303A3EAFC06A35BA212F8EA7818EA7C30EA3C70EA1FE0EA0780123B7DB919
>I<D803E0137F3A07F801FFC03A0C3C0781F03A183E0E00F8141826303F30137C5C0060
5B5C91C7FCA2D8C07E14FCA3120049495AA34B5A485AA24B5AA2485A92380FC030A34848
90381F8060A3EE00C0485AEE0180EE03006F5A4848140E000FEC07F86CC7EA01F02C267E
A432>110 D<EC1FC0ECFFF8903807E07C90380F801E90383F000F017CEB07804914C048
4814E000031403485A16F0485A121F5B003F140790C7FC5AA300FEEC0FE0A316C0151F48
1580153F1600157E127C5D007E5C003E495A001E495A6CEB0FC06C6C48C7FC3803E07E38
01FFF038003F8024267DA428>I<90390F8003F090391FE00FFC903930F03C1E903960F8
700F9238C007809026C0FD8013C09139FF0003E048485A5C17F0A2380301F8A312004948
1307A44948EB0FE0A317C04948131F1780A2EE3F00495A167E167C5E496C485A5E913860
03C0ED0F8090267E383FC7FCEC1FFCEC07E091C9FC5BA4485AA4485AA3387FFFC0B5FC7E
2C3583A42A>I<3903E001F83907F807FE390C3C0E0739183E180F9138301F8039303F60
3F14C0028013000060143EEC001C92C7FCEAC07EA312005BA4485AA4485AA4485AA4485A
A4485A120F6CC9FC21267EA425>114 D<14FF010313C090380F80F090381C0038491318
49130C01F0133C49137C000114FCA215F8486C1370150013FC3801FFE014FC6C13FF6D13
806D13C06D13E013039038003FF0140714031401123C127E00FE14E0A24814C048130300
C014800060EB0700140E00385B001E13F83807FFE0000190C7FC1E267CA427>I<EB0380
EB07C0130FA4EB1F80A4EB3F00A4137EA2B512FE14FF14FE3800FC00A3485AA4485AA448
5AA4485AA4485A140CA21418EA3F00A214301460A214C0381F0180EB0300EA0F0EEA07FC
EA01F018357DB31E>I<13F8D803FE1438D8070F147C000C15FC80121812304B5AEA601F
A3484848485AA3EA007E4B5A5BA34848495AA44848495A17C0A392383F0180A492387F03
00000114FF9138019F063900F8031F90397C0E0F0C90391FFC07F8903907F001F02A267E
A430>I<01F8EB0380D801FEEB07C0D8070FEB0FE0000E15F0000C138012180030140715
03D8601F1301150016E04848C7FCA3EA007E16C05BA34848EB0180A3ED0300485A1506A3
5DA25D5D12015D6C6C5B9038780380D93E0FC7FCEB1FFCEB07F024267EA428>I<01F816
E0D801FE9138E001F0D8070F903901F003F8000E020314FC000C13801218003016019238
07E000D8601F167C183C1838484848485AA3EA007E4B4813305BA3484849C71260A318C0
4848137EA2EF0180A3EF0300A21706000102FE5BA22700F8019F5B902678030F5B903A3E
0E07C0E0903A1FFC03FFC0902703F0007FC7FC36267EA43B>I<903907E001F090391FF8
07FC9039383C0E0E9039601E180F903AC00F301F80D80180143FD8030013E000061600ED
C03E48151C93C7FC48495AA3C7FC4AC8FCA4147EA45C160CA349485B121C003E5DEA7E03
00FE5DD906785B00FC4A5A27780C3C03C7FC3938381E0E391FF00FFC3907C003F029267E
A42F>I<13F8D801FE1470D8070F14F8000E1401000C138012181230ED03F0EA601FA33A
C03F0007E0A3EA007EED0FC05BA34848EB1F80A44848EB3F00A4157EA45D000113011403
3800F80690387C1DF8EB3FF9EB0FE1EB00014A5AA25D000F1307D81F805B003F130F5D49
48C7FC003E133E00305B5C6C485A380E07C06CB4C8FCEA01FC25367EA429>I
E /Fh 9 108 df<007FB81280B912C0A26C17803204799641>0 D<EB0380497EA7397803
803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB
3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380
FE00FC147E0078143C390007C000A76D5A1F247BA62A>3 D<EB1FF0EB7FFC48B5FC4814
804814C04814E04814F04814F8A24814FCA3B612FEA86C14FCA36C14F8A26C14F06C14E0
6C14C06C14806C140038007FFCEB1FF01F207BA42A>15 D<EF0380EF0FC0173FEFFF8093
3803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC
3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC
6C7EEA7FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03
FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3F
C0170FEF038094C7FCAD007FB81280B912C0A26C1780324279B441>20
D<91381FFFFE91B6FC13074914FED93FF0C7FCEB7F8001FCC8FC485AEA03E0485A485A90
C9FC5A121E123E123C127C1278A212F85AA3B712FE16FFA216FE00F0C9FCA37E1278A212
7C123C123E121E121F7E7F6C7E6C7EEA01F86C7EEB7F80EB3FF0010FB512FE6D14FF1300
021F13FE283279AD37>50 D<0060161800F0163CA26C167C00781678007C16F8003C16F0
A2003E1501001E16E0A2001F15036C16C06D140700071680A26D140F00031600A26D5C6C
B612FEA26C5DA201F8C7127C01781478017C14F8013C5CA2013E1301011E5CA2011F1303
6D5CEC800701075CA2ECC00F010391C7FC6E5A0101131EA2ECF03E0100133CA2ECF87CEC
7878EC7CF8EC3CF0A2143F6E5AA36E5AA26E5AA26EC8FC2E3B80B92F>56
D<156015F0A21401903807F1E0EB3FFFEB7C1F3801F0073803E00313C04848487ED80F00
7FA248497E001E143C003E143EA2141F007EEB1E3F007C80143E143CA300FC017C138014
78A214F814F0A3130114E0A2130314C0A213071480A3130F1400A2D87C1F1400131EA3D8
7E3E5B133C003E143E137C1378001E143C001F147CD80FF813784913F800075C14016C48
485A6C6C485A2603FC1FC7FCEBFFFEEBC7F001C0C8FC12075BA26CC9FC21457CBE2A>59
D<126012F0B3B3B3B3A91260045377BD17>106 D<0060133000F01378B3B3B3B3A80060
1330155276BD2A>I E /Fi 31 122 df<B712F0AB240B7F9F2D>45
D<EA03E0EA0FF8487E487E487EA2B51280A56C1300A26C5A6C5A6C5AEA03E01111769025
>I<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7FCB3B3B3A6
007FB712FEA52F4E76CD43>49 D<EC1FFC49B512E0010F14FC013F14FF90B712C048D980
3F7F2703FC00077FD807F06D13FC484801007F4848147F48488101E06E1380D87FF8806D
16C06D8000FF17E07FA27013F0A36C5AA26C5AA2EA0FF0D803C05CC914E0A34C13C0A218
805E18004C5A5F16FF5F4B5B4B5B4B5B94C7FC4B5A4B5A4B5AED7FE05E4B5A4A90C8FCEC
03FC4A5A4A48EB01F04A5A4A5A4A5A02FEC7EA03E0495A495A495A5C4948140749C8FC01
3E150F017FB7FC90B812C05A5A5A5A5A5A5AA2B91280A4344E79CD43>I<91380FFF8091
B512FC010314FF010F15C090263FF00313F09026FF800013FC4848C76C7ED803F86E7E49
80D807FC168001FF16C0487F82486D15E0A3805CA27E4A4913C07E6C90C7FCD800FC1680
90C85A18005F167F4C5A5F4B13E04B5B030F5BDB7FFEC7FC91B512F816C016FCEEFF80DA
000713E0030013F8707E70B4FC7013807013C018E07013F0A218F88218FCA318FEEA01C0
EA0FF8487E487E487EA2B57E18FCA44C13F86C90C7FC18F0495C6C4816E001F04A13C06C
484A1380D80FF84A1300D807FE4A5A2703FFF0035BC690B612F0013F15C0010F92C7FC01
0114F8D9001F1380374F7ACD43>I<177C17FE1601A216031607160FA2161F163F167F16
FFA25D5D5DA2ED0FBF151FED3F3F157E157C15F81401EC03F0EC07E015C0140FEC1F80EC
3F00143E5C14FC495A495A5C495A130F495A91C7FC133E137E5B485A5B485A1207485A5B
48C8FC5A127E5ABA12C0A5C96C48C7FCAF020FB712C0A53A4E7CCD43>I<0003160ED807
E0153E01FCEC03FED9FFE0137F91B65A5F5F5F5F5F94C7FC5E16F85E16C04BC8FC15F801
E090C9FC91CAFCABEC0FFF027F13F001E3B512FC01E714FF9026FFF80713C0DAC0017F49
C713F8496E7E01F0143F496E7E49816C5AC9148018C082A218E0A318F0A3EA07C0EA1FF0
487E487EA2487EA318E0A25B18C06C485C49168013C0003EC81400003F5D6C6C5D6C6C4A
5A6D4A5AD807F8495B6C6C01075B2701FFC03F5B6C90B6C7FC013F14FC010F14F0010314
809026007FF8C8FC344F79CD43>I<932601FFF8EC01C0047FD9FF8013030303B600F013
07031F03FC131F92B8133F0203DAE001EBC07F020F01FCC7383FF0FF023F01E0EC07F94A
01806EB5FC4A48C9FC010301F8824949824949824949824949824990CA7E4948835C4885
4849187FA24849183FA2485B1B1F5AA24849180FA45A4A95C7FCA3B5FCAE7EA3806CF207
C0A46C7FA26C1A0F1C806C7FA26C6DF01F00A26C6D183E7E6E606D6C18FC6D6D4C5A6D6D
4C5A6D6D16076D6D4C5A6D6D4C5A010001FE4C5A6E6C6C03FFC7FC6E01E0EC03FC020F01
FCEC1FF80203903AFFE001FFE0020091B61280031F4BC8FC030315F8DB007F14C0040101
FCC9FC525479D261>67 D<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A
3F1A1FA2F20FE0A21A07A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92
B6FCA59238F8007F170F170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A
01A31A031BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F
517CD058>69 D<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A527CD132>73
D<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F737F737F8573
7F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512C092
B8C9FC19F819E019F89226F0000313FE9439007FFF80061F7F727F727F86727F8486A272
7FA887A71D1C1D3E8785A275137E73157C7315FC736D13F8B86C6DEBF801739038FE07F0
7390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82 D<0103B5FC013F14F890B612
FE486F7E48D9000713E0486DC67FEE7FFC486D133F707E707EA2846C497F846C90C7FCEA
00FC90C8FCA6037FB5FC020FB6FC91B7FC01071407011F13C090387FFE003801FFF84813
E0000F5B485B91C7FC485A485AA25B12FFA45EA26C6C141D163D6C6C14796D02F97F6C90
268001F113F800079026F00FE0EBFFE06C90B5D8807F13F0C64B7E011F01FC7F010101E0
010713E03C357CB441>97 D<913801FFFE021FEBFFF091B612FC010381010F90388003FF
90273FFC00071380495A49484913C0485B485B485B4890C7FC7013805A496E1300003FED
00FC94C7FCA2485AA312FFAB127FA27F123FA36C6CED03E0A27E6EEC07C06C7F6CEE0F80
6C6D141F6C6DEC3F00D97FFC14FE6D6C495A903A0FFFC00FF8010390B512E00100158002
1F49C7FC020113E033357CB43C>99 D<4DB47E0407B5FCA5EE001F1707B3A5913801FFC0
021F13FC91B6FC010315C7010F9038C01FE790271FFE0003B5FCD97FF813004948804849
8048498048498091C8FC5A5A5B123FA3485AA312FFAB127FA46C7EA2121FA26C7EA26C6D
5C6C5E6C6D5C6C6D91B5FC6D6C1303D93FFCD907EF13E090280FFF803FCFEBFF806D90B5
128F0101ECFE0FD9003F13F00203138041537CD24B>I<913807FFC0027F13FC49B6FC01
0715C0011F010113F0903A3FFC003FF8D97FF0EB0FFC49486D7E48491303484980486F13
804890C7FC7013C0485A003F17E0A2177F485A18F0A312FFA290B8FCA318E001FCCAFCA5
127FA37F123FA2001F17E06DED01F07E6C6D1403EF07E06C6D15C06C160F6C6DEC3F80D9
7FF8EC7F00D93FFEEB03FE903A0FFFC01FFC010390B512F0010015C0023F91C7FC020113
F034357CB43D>I<ED1FF80203B5FC020F14C0023F14E09139FFF01FF0499038C03FF849
EB007F494814FC494813FF131F5C133FEE7FF8495AEE3FF0EE1FE0EE078093C7FCADB712
E0A526007FF8C8FCB3B3A7007FB512FEA52E537CD229>I<187EDA1FFF903803FF8049B5
D8F00F13C00107DAFC3F13E0011F9138FF7F9F90263FF8039038FC1FF09026FFE00013F0
4849137F4849EB3FF891C7001F14E0489338FC0FC0F0038048486E6CC7FCA2001F82A800
0F5EA26C6C4A5AA26C5E6E133F6C6D495A6C6D495A90267FF803138090B7C8FCD801E714
FC01E114F02603C01F90C9FC91CBFC1207A37FA27F7F13FE90B7FC17F86C16FE717E6C17
E018F86C837F6D8248B9FC1207D80FFCC7000114804848EC001F4848150748486F13C049
8100FF82A66C6C4B1380A26C6C4B13006C6C4B5A6D150FD807FFED3FF86C01C0ECFFF0C6
01FC010F13C0013FB7C7FC010F15FC010115E0D9000F01FCC8FC3C4E7CB543>I<EB3FF0
B5FCA51203C6FCB3A5EE1FFC93B57E030314E0030F14F892391FC07FFC92397E001FFE03
F86D7EECF1F04B81DAF3C07FECF78092C78014FEA25CA35CB3ADB6D8F807B612C0A54253
7BD24B>I<137F497E487F487F487F487FA76C5B6C5B6C5B6C5B6DC7FC90C8FCAEEB3FF0
B5FCA512017EB3B3A5B612E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612F0
A51C537BD225>108 D<D93FF0D91FFCEDFFE0B591B56C010713FC030302E0011F13FF03
0F02F8017F14C092271FC07FFCD9FE037F922A7E001FFE03F0007F000302F890270FFF07
C06D7EC6D9F1F04B5A4B038FC77FDAF3C06D019E143FDAF78015BC92C702F88102FE5EA2
4A5EA34A5EB3ADB6D8F807B6D8C03FB512FEA567357BB470>I<D93FF0EB1FFCB591B57E
030314E0030F14F892391FC07FFC92397E001FFE000302F86D7EC6EBF1F04B81DAF3C07F
ECF78092C78014FEA25CA35CB3ADB6D8F807B612C0A542357BB44B>I<913801FFE0023F
13FF91B612C0010715F8499038807FFC903A3FFC000FFFD97FF001037F49486D7F48496D
7F48496E7E4890C86C7E488349151F001F83A2003F834981007F1880A400FF18C0AB007F
1880A46C6C4B1300A3001F5F6C6C4B5AA26C6D4A5A6C5F6E14FF6C6D495B6C6C6C491380
D93FFC010F90C7FC903A1FFF807FFE010790B512F8010115E0D9003F91C8FC020113E03A
357CB443>I<D93FF0EBFFE0B5010F13FE033FEBFFC092B612F09126F3FE017F913AF7F0
003FFE0001D9FFC0EB0FFF6C4A6D7F92C76C7F4A6E7F4A824A6E7FA2727EA2727EA285A3
841A80AB1A0060A261A2187F61A24E5A616E5C6E4A5B6E4A5B6F495B6F4990C7FC6FEB7F
FC913AFBFC03FFF802F8B612E06F1480030F01FCC8FC030113C092CBFCB2B612F8A5414C
7BB44B>I<90397FE001FCB590380FFF80033F13E04B13F09238FE1FF89139E1F03FFC00
03EBE3E0C69138C07FFEECE780150014EF14EE02FEEB3FFC5CEE1FF8EE07E04A90C7FCA4
5CB3AAB612FCA52F357CB437>114 D<903901FFE007011FEBFE1F90B7FC12033907FE00
1FD80FF01303D81FC07F48487F8248C87EA2825AA27F7F01F091C7FC13FEEBFFF06CEBFF
8015FC6CECFF8016E06C816C15FC6C810001816C6C1580011F15C01303D9003F14E01400
150F030113F00078EC007F00F8153F161F7E160FA26C16E0A27E6DEC1FC07F6DEC3F806D
147F01FCECFF009039FF800FFE6DB512F8D8FC1F14E0D8F807148027E0007FF8C7FC2C35
7CB435>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FC
B8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F80806D15006F5A6D143E6DEBE07C6DEBFF
FC6D6C13F0021F5B020190C7FC2A4C7ECB34>I<D93FF8913801FFC0B50207B5FCA50003
ED001FC61607B3AD5FA35FA2017F153B177B013F15F36E13016D6CD903E313F090280FFF
801FC3EBFFC06D90B51203010114FE6D6C13F8020713C042357BB44B>I<B6D8E07FB5D8
C003B512C0A5000101F0C701F0C7381FF8006E027FED07E06C715DA26E023F150F017F70
5D6E181F013F7092C7FC177F6E606D92B5143E6F177E6D71137C5E03C001F315FC6D0203
6E5B03E001E114016D05E05B160703F001C014036D020F02F05B03F8EB807FF1F8076D02
1F5E03FCD9003F130F027F04FC5B5EDBFE3E90381FFE1F023F017E93C8FCDBFF7C010F5B
6EEEFF3E16FC4C6D13FE6E5F4C7F6E5FA24C7F6E5F4C7F6E5FA24C147F6E5F93C8123F6F
5EA2033E6FC9FC5A357DB461>119 D<007FB500F090387FFFFEA5C66C48C7000F90C7FC
6D6CEC03F86D6D495A6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387FFE01
4C5A6E6C485A6EEB8FE06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F834B
7F4B7F92B5FCDA01FD7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A486C7F
02FE6D7F4A6D7F495A49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612C0A5
42357EB447>I<B600F00107B5FCA5C601F8C8EA7FC06EED3F00A26D6C153E187E013F16
7C6E15FC6D5E6F13016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B02
7F143E6F137E023F147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA2
6E91C8FCA36F5AA26F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E48
6C137E486C137C486C13FC5D14014A5A5D1407397FF01FC0397EE03F80263FC1FFCAFC38
1FFFFC6C5B000313E0C690CBFC404C7DB447>I E /Fj 84 123 df<DA0FF813FC91397F
FF07FF903B01F8078F8380903B07E001DE0FC090270F8003FC13E090261F0007131F013E
EB0FF85B01FCED0FC0923907F007804848010390C7FCADB812F8A32801F80003F0C7FCB3
AB486C497E267FFFE0B512F0A3333B7FBA30>11 D<EC0FF8EC7FFE903901F80780903907
E001C090390F80006090391F0003E0013E497E49130F13FCA248486D5A6F5A6F5A92C8FC
A9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B512C0A32A3B7FBA2E>I<EC
0FFC91387FFF70903901F803F0903807E00790380F800FEB1F00133E5B01FC1307150348
5AADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B7FBA2E>I<DA0FF0EB1F
F0DA7FFEEBFFFC903B01F80F03F00F903C07E0018FC0038090270F8000DFC77E90271F00
03FE1307013E4948497E494948131F13FCA248484A6D5A03076E5A03036EC7FC95C8FCA9
F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500C1B51280A341
3B7FBA45>I<B612F8A31D037AAF2A>22 D<001C131C007E137E007F137F39FF80FF80A2
6D13C0007F137FA2001C131C00001300A43901800180A33903000300A300061306485BA2
485B485B002013201A197DB92A>34 D<017C166048B416F02603C380140148C66C5D000E
01601403001E0170EC0FC0001C013C4A5A003C013F147F91271BE003FFC7FC007C0118B5
129E007891381FFC3E6EC75A00F8167817F84C5A5F16034C5A5F160F4CC8FC0078151E4A
133E007C5D003C15784A13F8001C4A5A001E01605B000E14036C49485A2603C3805B3901
FF000FD8007C49C9FC90C7001EEB07C0033EEB1FF04BEB3C380378EB700C03F8EBF00691
3901F001E003E0800203EB03C0DA07C0EC0180ED8007020F1480EC1F00021E010FEB00C0
143E5C147814F8495A5C1303495A5C010F0207EB018049C7FC011E15C0013E140349EE03
000178EC01E001F816064848EC00F049ED700C0003EE3C3849ED1FF06C48ED07C03A437B
BD45>37 D<121C127E127FEAFF80A213C0127FA2121C1200A4EA0180A3EA0300A312065A
A25A5A12200A1979B917>39 D<146014E0EB01C0EB0380EB0700130E5B133C13385B13F0
5B1201485AA2485AA348C7FCA25A121EA2123EA2123CA2127CA5127812F8B01278127CA5
123CA2123EA2121EA2121F7EA26C7EA36C7EA26C7E12007F13707F133C131C7F7FEB0380
EB01C0EB00E01460135278BD20>I<7E7E7E12707E7E7E120F7E6C7E7F12017F6C7EA213
78A37FA2133E131EA2131FA27FA21480A5130714C0B01480130FA51400A25BA2131EA213
3E133CA25BA35BA2485A5B12035B48C7FC5A120E5A5A5A5A5A5A12527BBD20>I<EB0380
497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF80
3900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F83
83FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247BBD2A>I<15301578B3A6
007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>I<121C127E127FEAFF
80A213C0127FA2121C1200A4EA0180A3EA0300A312065AA25A5A12200A19798817>I<B5
12FCA516057F941C>I<121C123E127FEAFF80A3EA7F00123E121C0909798817>I<150C15
1EA2153E153CA2157C1578A215F815F0A2140115E0A2140315C0A214071580A2140F1500
5C141EA2143E143CA2147C1478A214F85CA213015CA213035CA213075CA2130F91C7FCA2
5B131EA2133E133CA2137C1378A213F85BA212015B12035BA212075BA2120F90C8FCA25A
121EA2123E123CA2127C1278A212F85AA212601F537BBD2A>I<EB03F8EB1FFF90387E0F
C09038F803E03903E000F84913780007147C48487FA248C77EA2481580A3007EEC0FC0A5
00FE15E0B2007E15C0A4007F141F6C1580A36C1500A26C6C133EA26C6C5B6C6C5BA23900
F803E090387E0FC0D91FFFC7FCEB07FC23387DB62A>I<497E1307130F133FEA01FFB5FC
13DFEAFE1F1200B3B3A7497E007FB512E0A31B3779B62A>I<EB1FF0EB7FFE48B57E3903
E03FE03907000FF0000CEB03F84880486D7E00701300006080127CB48016807FA36CC7FC
A2121CC81300A25D5DA24A5A5D14035D4A5A4A5A5D4AC7FC143E5C5C5CEB01C0495A49C8
FC130E5B49EB01805B5B49EB0300485A48C7FC1206485C001FB6FC5A485CB6FCA321377C
B62A>I<EB07F8EB3FFF90B512C03901F00FE039038003F048486C7E488001C07F381FE0
0081A3120F5BEA0380C85AA214015D5D4A5A5D4A5A4A5A027FC7FCEB1FFCECFF80903800
0FE0EC03F0EC01FC6E7E8181168016C0153FA216E0A2123E127F487EA316C090C7127F00
7E1580127C0030ECFF0000385C6C495A000F495A3907F00FF00001B512C06C6C5BD90FFC
C7FC23387DB62A>I<1570A215F01401A214031407A2140F141F141B1433147314E314C3
1301EB038314031307130E130C131C13381330137013E013C0EA0180120313001206120E
120C5A123812305A12E0B712F8A3C73803F000AB4A7E0103B512F0A325387EB72A>I<00
06140CD80780133C9038F003F890B55A5D5D5D92C7FC14FC38067FE090C9FCABEB07F8EB
3FFF9038F80F803907C003C090380001F000066D7E1204C8127C157EA281A31680A3123C
127EB4FCA316005A485C0060147EA26C5C00385C00181301000E495A6C495A3903E03F80
6CB5C7FC38007FFCEB1FE021387CB62A>I<EC3FC0903801FFF0010713FC90380FE03E90
383F0007017E131F01F8EB3F800001147F485A5B12074848EB3F00151E001F91C7FC5B12
3FA348C9FCA2EB01FC903807FF8039FF0E07E090381801F0496C7E49137C49137E815B16
80ED1FC0A290C7FC16E0A37EA57E6D14C0A2121F1680000F143F6D14000007143E6D137E
6C6C5B6C6C485A3900FE07F090383FFFC06D5BD903FCC7FC23387DB62A>I<1230123812
3E003FB612E0A316C048158016000070C71203006014065DA25D485C5DA2C85A4A5A4AC7
FCA214065CA25C143814301470A25C1301A213035C1307A3130FA2495AA4133FA5137FA8
6DC8FC131E233A7BB82A>I<EB03FCEB1FFF017F13C09038FC07E03901E001F039038000
7848C77E81120E81121EA4121F150E6D131ED80FE0131C6D133CD807FC5B6D13703903FF
81E06CEBC3C06C01FFC7FCEB7FFCEB1FFE6D6C7E497F017913F09038F07FF83901C01FFC
3907800FFE390F0003FF001E6D1380001CEB007F003CEC3FC048140FED07E00070140312
F01501A416C012781503007C1580003CEC07006C5C6C6C131E6C6C137C3903F803F0C6B5
5A013F1380D907FCC7FC23387DB62A>I<EB07F8EB1FFF017F13C09038FC07E03901F001
F048486C7E48487F000F147C4848137E003F80A248C7FC1680A248141F16C0A416E0A47E
153FA26C7E121F157F6C7E000714DF3903E0019F3901F0031F3800FC0ED93FFC13C0EB07
F090C7FCA2ED3F80A31600A2000F147E487E486C137C15FC4A5A5D49485A6C48485A001C
EB1F80260F807FC7FC3807FFFC00015B38003FC023387DB62A>I<121C123E127FEAFF80
A3EA7F00123E121CC7FCB2121C123E127FEAFF80A3EA7F00123E121C092479A317>I<12
1C123E127FEAFF80A3EA7F00123E121CC7FCB2121C127E127F5A1380A2127FA2121D1201
A4EA0300A41206A25AA25A5AA21220093479A317>I<007FB812F8B912FCA3CCFCAEB912
FCA36C17F836167B9F41>61 D<1538A3157CA315FEA24A7EA34A7F153FA202077FEC061F
A2020C7F150FA24A6C7EA34A6C7EA34A6C7EA34A6C7EA34948137FA201038191C7123FA2
49B67EA3010EC7EA1FE0010C140FA249811607A2496E7EA3496E7EA301E06E7E1201486C
81D80FFC02031380B56C017F13FEA3373B7DBA3E>65 D<B712E016FC16FF000190C7EA7F
C06C48EC1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5A04FFC7FC90B6
12FCA249C7B47EEE1FE0EE07F0707E83707E707EA21880177F18C0A7188017FFA24C1300
5F16034C5AEE1FF8486CEC7FE0B85A94C7FC16F832397DB83B>I<913A01FF800180020F
13E0027FEBF803903A01FF807E07903A03FC000F0FD90FF0EB038FD91FC0EB01DF4948EB
007F49C8123F13FE4848151F4848150F1207491507120F491503121FA2485A1701127FA2
5B94C7FC12FFAB127FA26DED0180A2123FA26C7E1703000F17007F00075E6D150612036C
6C5D6C6C5D017F15386D6C5C6D6C5CD90FF0495AD903FCEB0780902701FF803EC7FC9039
007FFFFC020F13F002011380313B7BB93C>I<B712C016F816FE000190390001FF806C48
9038003FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A4
18FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0
486CECFF80B8C7FC16F816C036397DB83F>I<B812FCA3000190C7120F6C481401EE007E
173E171E170EA31706A317078316C0A394C7FCA31501A21503150F90B6FCA39038FE000F
15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F173F177F486C
913807FF00B9FCA333397DB839>I<B812F8A3000190C7121F6C481401EE00FC177C173C
171CA3170CA3170E1706A2ED0180A21700A41503A21507151F90B6FCA39038FE001F1507
1503A21501A692C8FCAD486C7EB67EA32F397DB836>I<DBFF8013C0020F13F0023FEBFC
019139FF803F03903A03FC000787D90FF0EB01C7D91FC0EB00EF4948147F49C8123F01FE
151F4848150F48481507A248481503120F5B001F1601A2485A1700127FA25B180012FFAA
047FB5FC127FA26D9138003FE0EF1FC0123FA26C7EA2120F7F12076C7E7F12016C7E137F
6D6C143FD91FE0147F6D6C14E7D903FEEB03C3903A00FFC01F8391393FFFFE01020FEBF8
00020001C01300383B7CB941>I<B500FE90B512FEA3000190C7000113006C486E5AB3A4
90B7FCA349C8FCB3A6486C4A7EB500FE90B512FEA337397DB83E>I<B61280A3C6EB8000
6DC7FCB3B3AD497EB61280A319397EB81E>I<013FB512C0A39039001FF800EC07F0B3B3
A3121C127FA2EAFF80A25DEB000F6C5C127C0030495A6C49C7FC6C137E380781F86CB45A
38007F80223A7CB82B>I<B500FE49B5FCA3000190C8EA7FF06C48ED3F80051EC7FC1718
5F5F5F4C5A4CC8FC16065E5E5E5E5E4B5A4BC9FC15065D151C153C157E4AB4FC5C913806
3F80020C7FEC181F4A6C7E02607FECC0076D486C7E02007F4913016F7E8282707E83161F
707E831607707E831601707E83838484486CEDFFF0B500FE010FEBFF80A339397DB841>
I<B612C0A300010180C8FC6C48C9FCB3AD1718A517381730A31770A317F0A21601160316
0FEE1FE0486CEB01FFB8FCA32D397DB834>I<D8FFFE93380FFFE06D5EA20001F0F00026
00DF80ED37E0A3D9CFC01567A2D9C7E015C7A3D9C3F0EC0187A3D9C1F8EC0307A2D9C0FC
1406A3027E140CA36E1418A26E6C1330A36E6C1360A26E6C13C0A3913903F00180A39139
01F80300A2913800FC06A3ED7E0CA36F5AA2ED1FB0A3ED0FE0A2487E486C6D5AD80FFC4C
7EB527C0038007B512E0A343397CB84C>I<D8FFFE913807FFFE7FA2C66D9038007FE06E
EC1F8001DFED0F00D9CFE014068013C7EBC3F88013C1EBC0FE80806E7E81141F6E7E8114
076E7E8114016E7E8181ED3F8016C0151FED0FE0ED07F0A2ED03F8ED01FCA2ED00FE167F
A2EE3F86EE1FC6A2EE0FE6EE07F6A2EE03FE1601A21600177EA2486C153E486C151EEA0F
FCB500C0140E1706A237397DB83E>I<EC03FF021F13E09138FE01FC903903F8007FD907
E0EB1F80D91FC0EB0FE049C7EA03F0017E6E7E01FE8148486E7E4848157FA24848ED3F80
000F17C049151F001F17E0A24848ED0FF0A3007F17F8491507A300FF17FCAB007F17F86D
150FA3003F17F0A26D151F001F17E0A26C6CED3FC0A2000717806C6CED7F006D5D00015E
6C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91
383FFFF0020390C8FC363B7BB941>I<B712C016F816FE000190390001FF806C48903800
3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0
EE3FC0923801FF0090B612FC16F049C9FCB3A5487EB512FEA330397DB839>I<EC03FF02
1F13E09138FE01FC903903F8007FD907E0EB1F80D91FC0EB0FE049486D7E49C76C7E01FE
6E7E48486E7E4848157FA24848ED3F80000F17C049151F001F17E0A24848ED0FF0A3007F
17F8A2491507A200FF17FCAB007F17F8A26D150FA2003F17F0A36C6CED1FE0A2000F17C0
6D153F000702FC14806C6C486CEB7F00EC03033B01FC060080FE6C6C48EBC1FC017FEC63
F8D93F8CEB67F0D91FCCEB7FE0D907ECEB3F80D903FE49C7FC903900FF01FC91263FFFF8
130C0203133C91C7121C161E181C161FEF803CEFC0F8EE0FFFA218F08218E0827013C070
1380EF7E00364A7BB941>I<B612FEEDFFE016F8000190380007FE6C48903800FF80EE3F
C0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC90B612E0
93C9FC9039FE000FC0ED01F06F7E167C82163FA2707EA283A383A483A3F0018017F8160F
A2933907FC0300486C1403B500FE903801FE06706C5AEF3FF8CAEA07F0393A7DB83D>I<
D90FF813C0EB3FFF90B512813903F807E33907C000F74848133F001EC7121F150F481407
127C00781403A200F81401A315007EA3007E1500127F7FEA3FE013FE381FFFE06C13FE6C
EBFFC06C14F06C14FC6C6C7F010F7F01011480D9001F13C014019138003FE0ED0FF01507
150316F81501124000C01400A47E16F0A26C140116E07E6CEC03C06CEC07806C6CEB0F00
D8FBE0131ED8F0FE13FC39E07FFFF8D8C00F13E001011380253B7CB92E>I<003FB812E0
A3903AC003FE001F273E0001FC130348EE01F00078160000701770A300601730A400E017
38481718A4C71600B3B0EC07FF011FB612C0A335397DB83C>I<B500FE903807FFFEA300
0190C8EA7FE06C48ED1F80EF0F001706B3B2017E150E170C137F6D151C17186D6C143817
306D6C5C010715E06D6C495AD901F8495A6D6C010FC7FC91387F807E91381FFFF8020713
E002001380373A7DB83E>I<B500F891387FFF80A3000390C8380FF8006C48ED03E00000
5F715A7F6D4BC7FCA26E5C013F1506A26D6C5CA280010F5DA26E143801071530A26D6C5C
A28001015DA26E130101005DA2027F49C8FCA26F5A023F1306A26E6C5AA215E0020F5BA2
EDF03802071330A26E6C5AA215FC02015BA215FF6E5BA26FC9FCA3153EA3151CA2393A7E
B83E>I<B5D8F803B5D8F001B5FCA3000790C7D80FFCC7EA1FF8D803FC6E48EC07E00001
0303ED03C01B807F00006F6C1500A27F6D4A6C1406A36D6C496C5CEE067FA26D6C010E6D
5BEE0C3FA26D6C011C6D5BEE181FA26D6C5F4C6C7EA26E17E001034A6C6C5BA26E160101
019126C003F85BA26E160301009027018001FC90C7FCA3DA7F03C7EAFE06A3DA3F876E5A
0386147FA2DA1FCE159803CC143FA2DA0FEC15B003F8EC1FF0A202075E4B140FA36E486E
5AA36E486E5AA3503A7EB855>I<267FFFFE90381FFFFCA3C601F001071380D93FC0D901
FCC7FCEE00F06D6C5C5F6D6C495A6D6C130394C8FC6D6C13066D6C130E160C6D6C5B6E13
38ED80306E6C5A021F13E06F5A91380FF180EC07F303FBC9FCEC03FE1401A26E7E818282
15FFEDDFE09138018FF01403ED07F891380603FC140E91380C01FEEC180002387F02306D
7E4A133F02E0804A6D7E4948130F01038191C76C7E01061403010E81010C6E7E011C1400
013C8101FE82D807FF02037FB500E0011FEBFF80A339397EB83E>I<B500FC91383FFFE0
A3000101C0913807FE006C90C8EA03F06D6C6E5A606D6C5D6D6C4AC7FC5F6D6C1406170E
6D6C140C01035D6E14386D6C14305F6D7E6E5CED8001DA3FC05B4CC8FCEC1FE0020F1306
EDF00E913807F80C5E913803FC3802011330EDFE70913800FF605E157F6F5AB3A24B7E02
3FB57EA33B397FB83E>I<003FB7FCA301FCC75A01C0495A5B003EC7485A003C14075E00
384A5A0078141F00705D153F5E00604AC7FC5D5D4A5AA2C7485A14075D4A5A141F5D4A5A
A24AC8FC5C5C495AA2495A13075C4948EB0180131F5C495AA249C7FC4914035B485A1203
5B0007ED07005B48485C001F5D495C48485C4B5A48C7120FB8FCA329397BB833>I<EAFF
F8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>I<485B485B00061306485BA2485B485B
A3485BA3485BA400CE13CE39FF80FF80A26D13C0007F137FA2393F803F80001F131F390E
000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>I<EB1FE0EB
FFFC3803E03F3907000F80486C6C7E6D6C7E486C6C7E81A214006C487F6C5AC8FCA4147F
EB07FFEB3FE0EBFE00EA03F8EA07E0485A485A48C7FC5A160C12FEA31401A2127E007FEB
037C6C9038063E18381F800C3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>
97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9038F3800F9039F6000780
01FCEB03C04914E0ED01F04914F8ED00FCA216FE167EA3167FA8167EA216FE16FCA216F8
15016D14F0ED03E001ECEB07C001C6148001C3EB1F00903881E07E903800FFF8C7EA1FC0
283B7EB92E>I<EB03FC90381FFF8090387E03E09038F80070D801E013F8000313013907
C003FCEA0F80121FA2393F0001F8EC00F0481400127EA212FEA9127EA2127FA26C1406A2
6C6C130C120F6C6C13186C7E00011430D800F813E090387C07C090381FFF00EB07F81F27
7DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F800CFD801
E0136F0003143F4848131F485A001F140F90C7FC5AA25A127EA212FEA8127EA3127F7EA2
6C7E000F141F6C6C133F12036C6CEB6FF03A00F001CFFF90387C078F90381FFE0FD907F8
13C0283B7DB92E>I<EB07F8EB1FFF90387C0F809038F003C03901E001E03903C000F000
0714F84848137C121F90C7127E48143EA2007E143FA312FEA2B7FCA248C8FCA5127EA212
7F7E15037E6D1306120F6C6C130C6C7E6C6C13386C6C137090383E03C090381FFF809038
03FC0020277EA525>I<147E903803FF80903807C1C090380F07E0011E13F0EB3E0F137C
13FCEC07E09038F803C0000190C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B
7FBA19>I<90390FF003F090393FFC1FF89039F81F7C7C3901F00FE03A03E007C0383A07
C003E010160048486C7EA2001F80A6000F5CA26C6C485AA26C6C485A6C6C485A486C48C7
FC38063FFCEB0FF0000EC9FCA4120FA26C7E90B512C06C14F86C14FE6CECFF80000315C0
3A0F80007FE0001EC7120F003EEC03F048140116F8481400A5007CEC01F0A26CEC03E06C
EC07C06C6CEB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26377EA42A>I<
EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03E9038F1C01F9039F3000F8001F6801507
01FC805BA35BB3A4486C497EB500C1B51280A3293A7EB92E>I<EA0380487E487E487EA3
6C5A6C5A6C5AC8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01
C0EB03E0EB07F0EB0FF8A3EB07F0EB03E0EB01C090C7FCAAEB01F813FFA313071301B3B3
A2123C127E00FF13F0130314E0A2387E07C0007C1380383C0F00EA0FFEEA03F8154984B7
19>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC0ED3E0015385D5D4A5A4AC7
FC14065C5C143814F8EBF1FCEBF37EEBF63FEBFC1F01F87F496C7E1407816E7E6E7E1400
81157E153E153FED1F8016C0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3
120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8
913AF03E01E07C903BF1C01F03803E3C0FF3000F86001FD803F602CC14800307140F01FC
02F814C0495CA3495CB3A4486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903
F00FF000FFEB3FFCECF03E9038F1C01F3A0FF3000F80D803F680150701FC805BA35BB3A4
486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F8
4848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15
F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137E
C66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF8
9038F1E07E9038F3801F3A07F6000F80D803FCEB07C049EB03E016F049EB01F816FC1500
16FEA3167E167FA8167E16FEA216FCA2ED01F8A26DEB03F016E06DEB07C001F6EB0F8001
F3EB1F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903
F813C090381FFE0190387E07819038F801C33901F000634848136748481337000F141F48
5AA248C7120FA25AA2127E12FEA8127E127FA37E7F001F141F6C7E0007143F6C6C136F6C
6C13CF3900F8018F90387E070FEB1FFEEB07F890C7FCABED1FE00203B5FCA328357DA42C
>I<3807E01F00FFEB7FC0ECE3E09038E183F0380FE307EA03E6A29038EC03E0EC008001
F81300A35BB3A3487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381C001F48
7F127800707F12F080A37E7E007E90C7FCEA7FE06CB4FC14E06C7F000713FC6C7FC67F13
079038007F80141F0040EB0FC000C01307A26C1303A37E15807EEC07006C130600F6131E
38E3C07838C1FFF038C03F801A277DA521>I<1318A51338A31378A313F8120112031207
001FB5FCB6FCA2D801F8C7FCB215C0A90000EB018013FC137C90383E0300EB1F06EB0FFC
EB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A5150FA3
0001141F15376C6C14F8017C9038E7FF8090383F03C790381FFF07D903FCEBE00029267E
A42E>I<B538803FFEA33A07F8000FF06C48EB03C016807F00011500A26C6C1306A26D13
0E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FB
C7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF800903800
07F86C48017EEB03E00003EE01C0033E1480A26C6C013FEB0300A36C6CEC8006156FA201
7E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260F
C6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA2010014
1E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE001FE0C64814806D010EC7FC
017E5B6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E
8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01307F01F0
6D7E000181D80FF8497ED8FFFE90B51280A329247FA32C>I<B538803FFEA33A07F8000F
F06C48EB03C016806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F
1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A2147014
60A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C
>I<003FB512FCA290388001F8393E0003F0003C1307003814E00030EB0FC00070131F15
800060EB3F005C14FE5C495AEA00035C495A130F495A5C49C7FC491306137E5B1201485A
49130E485A000F140C49131C485A003F143C90C7127C007EEB03FCB6FCA21F247EA325>
I E /Fk 7 117 df<ED03E0A24B7EA24B7EA34B7EA24B7EA34B7EA292B57E15F7020180
15E715E302038015C10207801580A24A487F167F4A80021E133F023E80143C161F027C80
02787F02F8814A7FA249488191B7FC4982A24982913880000182010F8291C8127F498201
1E153FA24982171F017C8201788101FC83B500F00107B61280A441397DB848>65
D<EB3FFE48B512E0000714F8390FF007FCEC01FE486C6C7E6F7E82153F6C48806C5AEA01
80C8FCA3EC07FF0103B5FC133F9038FFF03F00031300EA0FFC485A485A485AA2485AA415
7F6C7E15DF3A3FF0039FF03B1FFC0F1FFFC0390FFFFE0F0003EBF80739003FE0012A257D
A42E>97 D<13FE12FFA412071203AFEC03FF021F13E0027F13F89039FFFC07FC9138E001
FFDA8000138091C7EA7FC049EC3FE0A217F0161F17F8A317FCA917F8A3EE3FF0A217E06D
EC7FC017806EEBFF009039FBE001FE9039F8F80FFC9039F07FFFF0D9E01F13C09026C007
FEC7FC2E3A7DB935>I<903801FFE0010F13FC017F13FF9039FF807F803801FE00D807FC
EBFFC0485AA2485A003FEC7F80ED3F004848130C92C7FCA212FFA9127FA27F123FED01E0
6C7E000FEC03C07F6C6CEB0780D801FFEB0F006CEBC07E6DB45A010F13F0010113802325
7DA42A>I<3901FC03F000FFEB0FFC4AB4FC91383C7F80147000079038E0FFC000035BEB
FD80A201FFEB7F809138003F00150C92C7FC5BB3A2B512FCA422257EA427>114
D<90387FF0383903FFFEF84813FF381FC00F383F0003003E13005A157812FCA27E6C1400
13E06CB47E14F86C13FF6C14806C14E06C14F0000114F86C6C13FC13039038000FFE1403
0070130012F0157E7EA26C147C7E6C14F890388001F09038F00FE090B512C000F0140038
C01FF81F257DA426>I<131EA5133EA4137EA213FEA2120112031207001FB512E0B6FCA3
D803FEC7FCB21578A8000114F07F6CEB01E090387F83C090383FFF806D1300EB03FC1D35
7EB425>I E /Fl 21 118 df<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A5
13C0A4EA0180A2EA0300A212065AA25A5A12200B1D78891B>44 D<143014F01301130313
1F13FFB5FC13E713071200B3B3AF497E497E007FB6FCA3204178C031>49
D<EC07FC91383FFF8091B512C0903903FC03E0903907E00070D90F80131849C712F8013E
EB01FC4913035B1201485A49EB01F80007EC00F0000F15005B121FA25B123FA3127F90C9
FCEC7F80903801FFF039FF0780FC90380E003E0118130F49EB078016C049EB03E04914F0
ED01F8A24914FC150016FEA290C8FC16FFA27EA66C7EA216FE121FA2ED01FC6C7E16F800
0714036C6C14F06DEB07E0000115C06C6CEB0F80017EEB3F0090383F80FE90380FFFF86D
5B0100138028427CC031>54 D<14FF010713E0011F13F890387F80FC9038FC003E48487F
4848EB0F804848EB07C0484814E01503484814F0123FED01F848C7FCA216FC5AA2ED00FE
A516FFA37E5DA27E7F001F5CA26C7E000714066C6C5B12016C6C5B017C137090383F01E0
90390FFF80FE903801FE0090C8FCA2150116FCA316F8150316F0A2000FEC07E0487E486C
EB0FC01680151F160049133E6CC75A001C5C6CEB03F03907C01FC06CB55AC649C7FCEB1F
F028427CC031>57 D<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1FE0EF
07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A38584A31A80AD1A00
A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FFED7F
C0486DD907FFC8FCB812FC17F094C9FC41447CC34B>68 D<B712FCEEFFC017F800019039
C0000FFC6C6C48EB01FF9338007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FF
A718FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017
800280C9FCB3AA3801FFE0B612C0A338447CC342>80 D<B712E016FF17C000019039C000
3FF86C6C48EB03FCEE00FF717E717E717E717E717EA284170384A760A21707604D5AA24D
5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE01F883
707E177FA284173F84A784A61A6084171FA2050F14C0717E2601FFE00203EB0180B600C0
903901FC0300716C5AF03FFCCBEA07F843457CC348>82 D<49B41303010F13E0013FEBF8
079038FE00FCD801F8EB1F0FD803E0EB079F4848EB01DF48486DB4FC48C87E001E81123E
007E81127C8212FC82A46C81A37E6C6C91C7FC7F6C7E7FEA1FFEEBFFE06C13FE6CEBFFE0
6C14FC6C14FF6C15C0013F80010F80010180D9001F7F02017F9138001FFF150303001380
167FEE3FC0A2161FEE0FE0124012C01607A47EA217C07E160F6C1680A26CED1F006C151E
6C153ED8FBC05CD8F9F05CD8F07CEB03F03AE03FC00FE0010FB51280D8C00349C7FC9038
003FF02B467BC436>I<EB07FC90383FFF809038F80FC03901C001F048C77E0006147C48
80D80F80133F486C7F6D80A26F7EA26C5A6C5AC8FCA4EC07FF91B5FC90380FFE0FEB3FE0
EBFF00EA01FCEA07F8EA0FE0121F5B485A127F176048C7FCA3151FA36C14377F003F0263
13406C6C9038C3E0C03A0FE00383F13B07F80F01FF802701FFFC00130026001FF0133C2B
2E7CAC31>97 D<EA03F812FFA3120712031201B3EC03FC91380FFF8091383C07E0913870
00F802C0137CD9F9807F01FBC77E01FEEC0F804915C0EE07E04915F0160317F8A217FC16
01A317FEA917FCA21603A217F8A2EE07F017E07FEE0FC001F6EC1F8001F3150001E3143E
D9E1C05B9039C0E001F891383C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EC7F
80903803FFF090380FC07C90383E000E49130349EB01804848EB00C0000314074848EB0F
E04848131FA2121F485AED0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA2123F16306C
7EA2000F15606C7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC078903807FF
F001001380242E7DAC2B>I<EB01FE903807FFC090381F03F090387C00F849137C48487F
48487F0007158049130F000F15C0121F4914E0003F1407A2127F90C713F0A35AA290B6FC
A290C9FCA67EA36C7EA21630121F7F000F15606C7E000315C06C6CEB01806C6CEB030001
7C13066D131C90380F80F8903803FFE0010090C7FC242E7DAC2B>101
D<EA03F812FFA3120712031201B3EC01FE91380FFFC091381E03E091383001F04A6C7E4A
137CD9F980137E01FBC7FC01FE143E163F5BA35BB3A9486CEC7F80B539F01FFFFEA32F45
7DC436>104 D<EA01E0487E487E487EA46C5A6C5A6C5AC8FCADEA01F812FFA312071203
1201B3B0487EB512F0A314437DC21B>I<2703F801FEEC3FC000FF903B0FFFC001FFF891
3B1E03E003C07C913B3001F006003E0007496C6C487F000349D97C186D7E2601F980D97E
308001FBC75B01FEDA3EC01307043F81495DA34992C7FCB3A9486C4A6C497EB528F01FFF
FE03B512C0A34A2C7DAB51>109 D<3903F801FE00FF90380FFFC091381E03E091383001
F00007496C7E000349137C2601F980137E01FBC7FC01FE143E163F5BA35BB3A9486CEC7F
80B539F01FFFFEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E
496D7E48486D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A448
16C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C
6C495A6C6C495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3903
F803FC00FF90380FFF8091383C07E091387001F800079038C0007C2603F9807FD801FBC7
123F01FEEC1F8049EC0FC017E049EC07F0A217F8160317FCA3160117FEA917FC1603A317
F8160717F0EE0FE07FEE1FC06D158001FBEC3F00167ED9F9C05B9039F8E001F891383C0F
E091381FFF80DA03FCC7FC91C9FCAE487EB512F0A32F3F7DAB36>I<3903F007F000FFEB
1FF8EC383CEC607E0007EBC0FF3803F1801201EBF30001F6137E153C150013FCA45BB3A7
EA03FEB512FCA3202C7DAB26>114 D<130CA6131CA4133CA2137CA213FC120112031207
001FB512F0B6FCA2D800FCC7FCB3A4150CAA017C1318137EA2013E13307F90380F806090
3807C0C0903803FF809038007F001E3E7EBC26>116 D<D803F8147F00FFEC1FFFA30007
1400000381000181B3A85EA400005DA26DEB01BF017C9038033F806D010613C06D010C13
FE90380FC078903803FFF09026007F8013802F2D7DAB36>I E /Fm
32 121 df<B712F0A7240780A12B>45 D<4AB4FC021F13F091387F01FC903901F8003FD9
03E0EB0F80D90FC0EB07E049486D7E49C76C7E017E6E7E017C157C01FC157E484881A248
48ED1F80A2000717C049150F000F17E0A2001F17F0491507A3003F17F8A44848ED03FCA7
00FF17FEB3A8007F17FCA56D1507A2003F17F8A5001F17F06D150FA2000F17E0A26C6CED
1FC0A36C6CED3F8000011700A26C6C157E6D15FE017E5D6D4A5A6D6C495A6D6C495AD903
F0EB1F806D6C49C7FC9039007F01FC91381FFFF0020190C8FC375E7BDC42>48
D<ED03FF033F13E092B512F8020314FE91390FFE00FFDA1FE0EB0F80DA3F80EB03C002FF
C71201D901FCEC00E0494814074948EC0FF04948141F4948143F5C133F49C8FCEF1FE001
FEED0FC00001EE07804992C7FC12035B1207A2485AA3121F5B123FA4127FEDFFC0D9C007
13F891380F007E0238EB1F804AEB07C000FF01C0EB03F0D9C1806D7E01C3C87E01C6157E
177F01CC81188001D8ED1FC018E001F0150F18F0A24916F8A2EF07FCA44916FEA2127FA4
7F5BA26C7EA4001F17FCA36C7EEF0FF8A212076D16F00003161F18E06C6C16C0173F6C6C
1680017EED7F00017F15FE6D6C495A6D6C495A6D6C495AD907F8EB1FE0D901FFEBFFC06D
90B5C7FC023F5B020F13F002011380375E7BDC42>54 D<120E121E121F7F13F890B912C0
A44818801900A260003ECA121C123C00385F00785FA200705F4D5A4D5AA24DC7FC48160E
A25F5FCAFC5F5FA24C5A4C5AA24CC8FC160EA25E5EA25E16F05E15015E1503A24B5AA24B
C9FCA25DA2153EA2157EA2157C15FCA314015DA21403A31407A4140F5DA4141FA7143FAC
6E5A6E5A6E5A3A627AE042>I<4AB47E021F13F0027F13FC49B57E903A07FE00FF80D90F
F0EB3FC0D91FC0EB0FE049486D7E49C76C7E01FE6E7E48486E7E0003167E4848157F4981
000F1780001F17C049151F123F18E0A24848ED0FF0A400FF17F8A4EF07FCA2170F1707A4
18FE007F160FA4123F7F171F121F120F6D153712076C6C1567A26C6C15C71200017EEC01
876DEC03076D6C1306D907C0131CD903F0013813FC903900FC01E091383FFFC0913807FE
0091C8FC170F18F8A418F0A2171F18E0A3EF3FC0A21880177FD803C01600486C5D486C5D
486C4A5AA24C5A4C5A495D494A5A6C484A5A90C848C7FC6C157E01C0495AD803F0EB07F8
6CB4EB3FF06C6CB512C06D91C8FC010F13FC010013E0375E7BDC42>57
D<DD7FF81560040FB56C14E0047F14F00303B600FC1301030F9038E003FEDB3FFEC7383F
8003DBFFF0EC07C04A0180913801F007DA07FEC912F84A48EE3C0FDA1FF0161E4A48EE0F
1FDAFF80EE07BF4990CAEA03FF4948834948834A187F130F4948183F495A4948181F1B0F
495A481A0791CCFC5A49190312075B000F1A01A2485AA21B00123F5BA3007F1B00A35BA2
12FFAE127FA27FA3123FA21CE07F121FA36C7EA20007F201C07F12037F6CF20380806C1A
076D6C1900A26D6C180E6D6C181E6D6C181C0107616E18786D6C18706D6C606D6D4C5ADA
3FE04C5A6E6C040FC7FCDA0FFC161E6E6C5E912601FF8015F86E01F0EC03F0DB3FFEEC1F
C0923B0FFFE001FF80030390B548C8FCDB007F14F0040F14C09326007FF8C9FC53647AE2
60>67 D<B912E018FEF0FFC019F0C601F8C813FCD93FF0ED1FFF011F04037F060013E0F1
3FF0737EF107FC737E737E737F747E747E1A1F87747E1A0787747EA2747EA2741380A21C
C01B7FA21CE0A21B3F1CF0A31CF8A21B1FA41CFCAF1CF8A51B3F1CF0A4F37FE0A21CC0A2
1BFF1C80621C00A2505AA2505A505AA2505A505A505A505A614F90C7FC4F5AF10FF8F13F
F0F1FFE006031380013F040F90C8FCD9FFF8EDFFFCBA12F019C04EC9FC18E0566278E165
>I<BCFCA4C601F8C81203D93FF0DB003F1380011F17071901851A7F1A3F1A1F1A0FA21A
07A21BC01A03A41A01A6F200E018E0A41B00A41701A417031707170F171F17FF91B7FCA4
02F0C7FC171F170F170717031701A41700A31B1CA41B3895C8FCA51B781B70A31BF0A4F2
01E0A31A03A21A071A0FA2F21FC01A3F1AFF611907013F173FD9FFF80307B5FCBC1280A4
4E6278E15A>I<DDFFF015C0040F01FF140193B612E0030303F81303030F9038E003FEDB
3FFCC7003F1307DBFFE0EC0FC002030180913803E00F4A48C912F0DA0FF8EE781FDA3FF0
163CDA7FC0EE1E3F4A48EE0F7F4990CAEA07FF4948834948834948835C011F197F494818
3F495A1B1F495A481A0F91CCFC5A49190712075B000F1A03A2485AA21B01123F5BA3007F
97C8FCA35BA212FFAE127FA27F96B712E0A2123FA2DF0007EBF0006D06005B001F631B7F
7F120FA26C7EA212037F7E807E6D7E80133F6D7E6D7EA26D7E6D6C18FF6D7E6D13C06E6C
5E6E6CEE03DFDA0FFCEE079F6EB4EE0F0F6E01C0153E020001F0EDFC07DB3FFEEC07F092
260FFFF090387FE003030390B6EA800103004BC7FC040F02E01440040001FCCAFC5B647A
E268>71 D<B712C0A4C691CBFCEB3FF8131F5CB3B3B21A38A61A781A70A61AF0A41901A2
1AE01903A21907190FA2191F193F197F19FF1803180F013F043F13C0D9FFF80207B5FCBB
FCA4456278E153>76 D<B812F8EFFFC018F818FFC601F8C7001F13C0D93FF002007F011F
EE3FF8F00FFEF003FF727F727F737E737E737EA2737E861907A28685A287A898C8FC61A2
62A24F5A62191F624F5A4F5A4F5A4E48C9FC4E5AF00FF0F03FC04DB4CAFCEF1FFC91B712
C095CBFC02F0C7EA3FE0EF03F8EF00FE187FF01FC0727E727E727E85180185727EA28619
7FA286A586A786A674EB01C0193FA3191F74EB0380190FA2496C706CEB0700D9FFFE0403
1406B600FE6F6C130E736C6C5A97383FE078973807FFE0CE13805A6378E162>82
D<DA07FF1403023F01F05B49B512FC010702FF5B90260FFC0013C0D93FE090380FE01F49
C7EA03F801FE913800FC3FD801F8153E4848151E48486F5A715A4848814848818348CAFC
845A007E83A300FE83A384A37E84A26C7EA27F95C7FC6C7E7F6C7E7F6CB4FC6C7F14F06C
13FF6C14E06C14FE6DEBFFE06D14FE010FECFFC06D15F0010115FCD9003F14FF020781DA
007F80030780030080040F7F04007FEF3FFEEF0FFF83050113808319C0187FF03FE0A218
1FA20060EF0FF012E0A21807A47EA46C18E0A2180F7E19C06C171F6C1880A26DEE3F006D
5E6D167E486C5ED8FC784B5A013E4B5A6D6C4A5A26F80FE0EC1FC0D907FCEC7F8029F001
FFE003FFC7FC6D6CB512FC48011F14F0020314C0489026001FFEC8FC3C647AE249>I<00
3FBC12F8A49126C00003903880000701FCC76C90C8127F01E0190F4919074848F103FC90
C81701007E1A00007C1B7CA300781B3CA400701B1CA600F01B1E481B0EA7C91800B3B3B3
A54C7FA2041F13F04AB8FCA457627CE160>I<EC1FF0ECFFFE903903E03F8090390F0007
E0011C6D7E49EB00FC498049147F48486E7E485A707E48C87F160F01C081EA0FF06D1407
6D81A46C5AA26C5AC9FCA4160FED3FFF0207B5FC91383FF807903801FF80903807FC00EB
1FF0EB3FC001FFC7FC485A485A485A120F5B485A123F4917E0127FA3485AA3160FA3161B
127F6D1433043114C06C6C913861FC01001F15C16C6C903A0180FE03806C6CEB0700D801
FE010E90387F8F002700FF8078EB3FFE90261FFFF0EB0FFC01010180EB03F03B417ABF42
>97 D<4AB47E020F13F091383F007C02FC130FD903F0EB03C04948EB00E0D90F80147049
C87E4981137E49811201484881171F4848ED7F80000F16FF495C121FA25B003F6F1300A2
007F167E94C7FCA25BA212FFAC127FA27FA2123FA36C7EEF01C0120F7F0007EE03807F00
03EE07006C7E0000160E7F017F5D6D5DD90F805CD907E05C6D6CEB03C0D900FC010FC7FC
023F137E91380FFFF80201138032417CBF3A>99 D<181EEF3FFEEE07FFA4EE000F1703A2
1701B3AAED7FC0913807FFF891383FC03E91397E000781D901F8EB01C1D907E0EB00E149
4814314948141949C8120D017E150F49150700011603485A1701485A120F5B121FA2485A
A3127FA25BA212FFAC127FA37F123FA3121F7F120FA26C7E17036C7E000116076C6C150F
017E150D17196DED39FFD90F8014716D6CD901E113C0D903F0D90381EBFF80D900FCEB0F
01023F137C91380FFFF00201018091C7FC41657CE349>I<EC03FE91381FFFE09138FE03
F8903901F0007ED907E07FD90F80EB0F8049C76C7E013E81017E6E7E496E7E4848810003
150049811207177F485A121F188049153F123FA3007F17C05BA312FFA290B8FCA20180CA
FCA9127FA27FA2123FA36C7EEF01C0120FA26C6CED0380A26C6CED070012016C6C150E01
7E5D133E6D5D6D6C5C6D6C495AD903F0EB0380D900FC010FC7FC023F137C91380FFFF002
01138032417CBF3A>I<ED1FE0ED7FFC913801F81E913807E00791390FC00F8091391F80
1FC091393F003FE0027E137F14FE495AA24948EB3FC0EE1F800107EC0F0093C7FC5C130F
B3A5B712F0A426000FF0C8FCB3B3B0497EEB3FFE003FB6FCA42B657EE428>I<DA07FEEC
3F80913B3FFFC001FFE0913BFE07F007C0F0903C01F000F81E01F8D907E0EB7E38D90F80
EB1FE0011F03C013F049C7000FEB00E0017E6E6C130001FE81491403000182A200038249
1401A2000782A900035EA26D140300015EA200005E6D1407017E5D6D4A5A6D6C495A94C8
FCD937E0137ED931F013F8903960FE07F09039E03FFFC0DA07FEC9FC49CBFC1201A67FA2
7FA2EA00FC13FF6DB512FEEEFFF06D15FE6D6F7E6D16E06D82011F82017EC700017FD801
F89138001FFED803E0ED03FF484815004848EE7F8048CA123F48EF1FC0003E170F127E19
E0481707A7007EEF0FC0A2003E1880003F171F6C6CEE3F00000F173E6C6C5ED803F04B5A
6C6C4B5AD8007EED0FC06D6CEC3F80D90FE002FEC7FCD901FFEB1FF0D9003FB512800203
01F8C8FC3D5D7DBE42>I<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FE0923803
FFFC92380F807F92393C001FC003706D7E03C06D7EDAC1806D7E02C3C7FC02C66E7EA202
CC8114D8170002F081A35CA45CB3B3496C4A7F496C4A7FB6D8F003B612C0A442647DE349
>I<133C13FF487FA2487FA46C5BA26C90C7FC133C90C8FCB3A2EB03C0EA07FF127FA412
01EA007FA2133FB3B3AC497E497EB612E0A41B5F7DDE23>I<EB03C0EA07FFB5FCA41201
EA007FA2133FB3B3B3B3AD497E497EB612F0A41C647DE323>108
D<D903C0D9FFC0EC07FED807FF010301F891381FFFC0B590260F00FE91387807F0033C90
3B3F8001E001FC0370903B0FC00380007E03C0DAE006C7127F0001D9C1806D6C486E7E26
007FC3C75C02C66E6C486E7E133F02CC6F488102D85E0501160F02F0DBFF8081A34A93C8
FCA44A5DB3B3496C4A6C4B7E496C4A6D4A7EB6D8F007B6D8803FB512FCA4663F7CBE6F>
I<D903C0EB7FE0D807FF903803FFFCB590380F807F92393C001FC003706D7E03C06D7E00
01D9C1806D7E26007FC3C7FC02C66E7E133F02CC8114D8170002F081A35CA45CB3B3496C
4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>I<EDFF80020F13F891383F80FE9139FC
001F80D903F0EB07E0D907C0EB01F049486D7E013FC8127E017E81017C8101FC8248486F
7E00038349150700078348486F7EA2001F83491501A2003F83A348486F7EA400FF1880AC
007F1800A36D5D003F5FA3001F5F6D1503A2000F5F6C6C4B5AA26C6C4B5A00015F6D151F
6C6C4B5A017E93C7FC6D157E6D6C5C6D6C495AD903F0EB07E0D900FCEB1F8091267F80FF
C8FC91380FFFF8020113C039417CBF42>I<D903C0EBFFC0D807FF010713F8B590381F00
FE0378EB1F80DAC1E0EB07E0DAC3806D7E000101C7C76C7E26007FCEEC00FE02DC157FD9
3FF8814A82727E4A82727E5C727EA2727EA2851801A285A3841A80AC1A0060A3611803A2
61A24E5AA24E5A6E5E181F6E5E4E5A6E4BC7FC02DC15FE02CE5D02C64A5ADAC380EB07F0
DAC1C0EB0FC0DAC0F0013FC8FC92383E01FE92380FFFF0030190C9FC92CBFCB3A3497E49
7EB612F0A4415B7DBE49>I<9039078003F8D807FFEB0FFFB590383C0780037013C09238
C01FE0DA818013F00001903883003F38007F86A2EB3F8CEE1FE00298EB0FC0EE030002B0
90C7FCA414E0A55CB3B1497EEBFFF8B612FCA42C3F7CBE33>114
D<9139FFE00180010FEBFC0390387F001F01F0EB0387D803C0EB01CF4848EB007F48C812
3F121E001C151F003C150F5AA2160712F8A21603A27EA27E7E6C7E01E091C7FCEA3FF813
FF6C13F06CEBFF806C14F86C14FF6C15C06C6C14F0011F80010780D9007F7F02037FDA00
1F1380030313C09238007FE0163F0060ED0FF000E01507A2EE03F86C1501A316007EA36C
16F0A27E16016C16E017C06D1403D8FDC0158000FCED0700D8F870140E6D143CD8F01E14
F83AE007C00FE00101B5128027C0003FF8C7FC2D417DBF34>I<1438A71478A514F8A313
01A21303A21307A2130F131F133F137F13FF000390B6FC120FB8FCA2260007F8C8FCB3AE
17E0AE010315C06E1301A21301EE03806D7E1700027F5B6E130E91381FC01C913807F078
913801FFF09138003FC02B597FD733>I<D903C0150FD807FFED1FFFB50203B5FCA40001
ED0007D8007F1501A2013F81B3B25FA45FA2131F1706A26D6C5C5F0107836D6C5C01014B
13E06D6C4948EBFFC0027E495A91393FC01E00913807FFFC020001E0EC800042407DBE49
>I<B66C49B512E0A4000101F8C8387FFE0026007FE0ED1FF8013FEE0FE06161011F94C7
FC80010F160EA26E151E0107161C8001035EA26E157801011670806D5EA26F1301027F5D
A26E6C495AA26F1307021F92C8FCA26E6C130EA26F131E0207141CA26F133C0203143881
02015CA26F13F06E5C168092387F81C0A216C3033F5B16E3DB1FE7C9FCA216FF6F5AA26F
5AA36F5AA26F5AA36F5A433F7FBD46>I<007FB500C0010FB512E0A4C691C70003EBFC00
D91FFC6E13E0010F6F90C7FC01075E18F86D6C5D6D6C4A5A6D7F4D5A6E6C495A6E6C49C8
FC6E6C130E171E6E6C5B6E6C5B6E6C5B5F913801FF016EEB83C092387FC780033F90C9FC
16EFED1FFE6F5A6F5A826F7E6F7E5D834B7F92380F3FE0ED1E1F033C7F9238380FF89238
7807FCEDF003DA01E07F4A486C7E707F4A486D7E4AC7FC021E6E7E021C6E7E023C6E7E5C
4A6E7E49486E7E01036F7E1307010F6F7F013F83D9FFF04A7F00076D4A13FCB56C020FEB
FFF8A4453E80BD46>120 D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
letter

%%EndSetup
%%Page: 0 1
0 0 bop 587 2051 a Fm(Empirical)46 b(Comparison)d(of)g(Gradien)l(t)h
(Descen)l(t)h(and)606 2233 y(Exp)t(onen)l(tiated)g(Gradien)l(t)f
(Descen)l(t)h(in)f(Sup)t(ervised)1139 2416 y(and)g(Reinforcemen)l(t)g
(Learning)1289 2599 y(T)-11 b(ec)l(hnical)46 b(Rep)t(ort)c(96-70)1376
2964 y Fl(Doina)32 b(Precup,)i(Ric)m(h)f(Sutton)1538
3205 y(Septem)m(b)s(er)h(19,)e(1996)p eop
%%Page: 0 2
0 1 bop 1773 1771 a Fk(Abstract)523 1954 y Fj(This)35
b(rep)r(ort)g(describ)r(es)g(a)f(series)h(of)g(results)g(using)g(the)g
(exp)r(onen)n(tiated)g(gradien)n(t)g(de-)523 2053 y(scen)n(t)28
b(\(EG\))g(metho)r(d)h(recen)n(tly)e(prop)r(osed)g(b)n(y)h(Kivinen)g
(and)f(W)-7 b(arm)n(uth.)39 b(Prior)26 b(w)n(ork)g(is)523
2153 y(extended)34 b(b)n(y)f(comparing)e(sp)r(eed)j(of)f(learning)f(on)
h(a)g(nonstationary)f(problem)h(and)g(on)523 2253 y(an)i(extension)g
(to)g(bac)n(kpropagation)d(net)n(w)n(orks.)57 b(Most)35
b(signi\014can)n(tly)-7 b(,)36 b(w)n(e)f(presen)n(t)g(an)523
2352 y(extension)26 b(of)f(the)i(EG)e(metho)r(d)i(to)f(temp)r
(oral-di\013erence)f(and)g(reinforcemen)n(t)g(learning.)523
2452 y(This)j(extension)f(is)h(compared)e(to)i(con)n(v)n(en)n(tional)e
(reinforcemen)n(t)h(learning)g(metho)r(ds)h(on)523 2552
y(t)n(w)n(o)d(test)i(problems)f(using)f(CMA)n(C)i(function)g(appro)n
(ximators)c(and)j(replace)f(traces.)36 b(On)523 2651
y(the)25 b(larger)e(of)i(the)h(t)n(w)n(o)e(problems,)h(the)g(a)n(v)n
(erage)d(loss)i(w)n(as)g(appro)n(ximately)f(25\045)h(smaller)523
2751 y(for)g(the)h(EG)f(metho)r(d.)37 b(The)24 b(relativ)n(e)g
(computational)f(complexit)n(y)h(and)h(parameter)e(sen-)523
2850 y(sitivit)n(y)28 b(of)f(the)h(t)n(w)n(o)f(metho)r(ds)h(is)f(also)g
(discussed.)p eop
%%Page: 1 3
1 2 bop 523 614 a Fi(1.)60 b(In)l(tro)t(duction)523 796
y Fj(This)24 b(rep)r(ort)g(presen)n(ts)f(the)h(results)g(of)g(sev)n
(eral)f(exp)r(erimen)n(ts)g(designed)h(to)g(compare)f(t)n(w)n(o)523
896 y(di\013eren)n(t)k(metho)r(ds)h(for)f(learning)f(the)h(w)n(eigh)n
(ts)g(of)g(neural)g(net)n(w)n(orks:)35 b(gradien)n(t)26
b(descen)n(t)523 995 y(\(GD\))g(and)e(exp)r(onen)n(tiated)g(gradien)n
(t)f(descen)n(t)h(\(EG\),)g(in)h(the)f(framew)n(ork)f(of)h(sup)r
(ervised)523 1095 y(and)j(reinforcemen)n(t)g(learning)g(tasks.)648
1195 y(Exp)r(onen)n(tiated)20 b(gradien)n(t)f(descen)n(t)i(w)n(as)e
(prop)r(osed)h(as)g(an)h(alternativ)n(e)e(on-line)i(learn-)523
1294 y(ing)26 b(rule)g(for)g(linear)f(predictors)g(b)n(y)h(Kivinen)g
(and)g(W)-7 b(arm)n(uth)26 b(\(1994\).)35 b(EG)26 b(replaces)f(the)523
1394 y(usual)i(additiv)n(e)h(up)r(dates)f(of)h(the)g(w)n(eigh)n(ts)f(b)
n(y)g(m)n(ultiplicativ)n(e)g(up)r(dates.)648 1494 y(Kivinen)21
b(and)h(W)-7 b(arm)n(uth)22 b(\(1994\))e(ha)n(v)n(e)h(established)h
(theoretical)f(w)n(orst)f(case)h(b)r(ounds)523 1593 y(for)j(the)i(cum)n
(ulativ)n(e)e(error)f(of)i(b)r(oth)h(w)n(eigh)n(t)e(up)r(date)h(metho)r
(ds,)h(in)f(the)h(con)n(text)e(of)h(func-)523 1693 y(tion)d(appro)n
(ximation)e(problems)h(with)h(linear)f(predictors.)34
b(The)22 b(theoretical)e(and)i(exp)r(eri-)523 1792 y(men)n(tal)f
(evidence)g(presen)n(ted)f(suggest)g(that)h(EG)f(has)h(a)f(lo)n(w)n(er)
g(b)r(ound)h(on)g(the)g(cum)n(ulativ)n(e)523 1892 y(error)29
b(for)h(problems)h(in)g(whic)n(h)g(only)f(few)h(of)g(the)g(input)h
(features)f(are)e(relev)-5 b(an)n(t.)47 b(Th)n(us,)523
1992 y(EG)27 b(con)n(v)n(erges)e(faster)i(for)g(this)h(class)f(of)h
(problems.)648 2091 y(EG)33 b(has)g(b)r(een)h(applied)g(successfully)f
(to)h(train)f(linear)g(classi\014ers)f(for)h(information)523
2191 y(routing)38 b(tasks,)i(in)f(whic)n(h)f(ev)n(ery)f(w)n(ord)g(is)i
(considered)e(a)h(feature)g(\(Lewis,)j(Sc)n(hapire,)523
2291 y(Callan)d(and)g(P)n(apk)-5 b(a,)40 b(1996\).)68
b(The)38 b(exp)r(erimen)n(ts)g(con\014rm)g(the)h(h)n(yp)r(othesis)f
(that)h(ex-)523 2390 y(p)r(onen)n(tiated)f(gradien)n(t)f(is)h(faster)g
(than)g(the)h(classical)d(Widro)n(w-Ho\013)i(up)r(date)g(rule)g(in)523
2490 y(iden)n(tifying)28 b(irrelev)-5 b(an)n(t)26 b(features,)h(for)g
(sparse)g(target)f(problems.)648 2589 y(Exp)r(onen)n(tiated)h(gradien)n
(t)g(descen)n(t)g(has)h(sev)n(eral)e(features)h(that)i(mak)n(e)e(it)h
(app)r(ealing)523 2689 y(for)36 b(reinforcemen)n(t)f(learning.)62
b(It)37 b(enables)f(on-line)g(up)r(dates,)j(required)c(in)i(RL)f
(tasks.)523 2789 y(The)19 b(results)g(from)g(sup)r(ervised)g(learning)f
(exp)r(erimen)n(ts)h(suggest)g(that)g(EG)g(w)n(orks)f(b)r(est)i(for)523
2888 y(training)h(linear)h(predictors)e(with)j(a)e(big)h(n)n(um)n(b)r
(er)g(of)g(input)h(features,)f(few)h(of)f(them)g(b)r(eing)523
2988 y(relev)-5 b(an)n(t.)63 b(Man)n(y)37 b(reinforcemen)n(t)e
(learning)h(tasks)g(in)h(con)n(tin)n(uous)e(state)i(spaces)f(ha)n(v)n
(e)523 3088 y(b)r(een)23 b(tac)n(kled)g(using)f(linear)h(function)g
(appro)n(ximators)d(with)k(man)n(y)e(input)i(features)e(\(e.g.)523
3187 y(CMA)n(Cs\).)39 b(Moreo)n(v)n(er,)26 b(in)i(reinforcemen)n(t)g
(learning,)f(getting)h(go)r(o)r(d)g(b)r(eha)n(viour)f(quic)n(kly)523
3287 y(is)32 b(paramoun)n(t)g(for)g(the)h(p)r(erformance)e(of)i(the)g
(system.)51 b(EG)33 b(up)r(dates)f(can)h(p)r(oten)n(tially)523
3386 y(bring)27 b(a)g(learning)g(sp)r(eed)g(gain)g(to)h(RL)g(metho)r
(ds.)648 3569 y(The)f(researc)n(h)f(presen)n(ted)h(in)h(this)f(rep)r
(ort)g(has)g(the)h(follo)n(wing)f(goals:)648 3735 y Fh(\017)41
b Fj(con\014rm)24 b(and)g(extend)h(exp)r(erimen)n(ts)f(with)h(exp)r
(onen)n(tiated)f(gradien)n(t)f(metho)r(ds)i(for)731 3835
y(linear)h(predictors,)h(in)h(particular)e(for)h(non-stationary)f
(problems)648 4001 y Fh(\017)41 b Fj(exp)r(erimen)n(t)27
b(EG)g(up)r(dates)h(in)g(feed-forw)n(ard)e(m)n(ulti-la)n(y)n(ered)g
(nets)648 4167 y Fh(\017)41 b Fj(adapt)27 b(exp)r(onen)n(tiated)g
(gradien)n(t)g(descen)n(t)g(for)g(reinforcemen)n(t)g(learning)648
4333 y Fh(\017)41 b Fj(test)36 b(EG)g(in)h(RL)f(tasks,)i(in)f(order)e
(to)h(asess)f(its)i(sp)r(eed)f(and)g(parameter)f(tuning)731
4433 y(di\016cult)n(y)-7 b(,)28 b(with)g(resp)r(ect)f(to)h(additiv)n(e)
f(up)r(dates)1934 5147 y(1)p eop
%%Page: 2 4
2 3 bop 523 614 a Fi(2.)60 b(Exp)t(onen)l(tiated)47 b(gradien)l(t)f
(metho)t(d)523 796 y Fj(The)40 b(exp)r(onen)n(tiated)g(gradien)n(t)e
(descen)n(t)i(\(EG\))g(up)r(date)g(rule)g(is)g(similar)f(to)h(gradien)n
(t)523 896 y(descen)n(t)28 b(\(GD\),)h(in)g(the)f(sense)g(that)g(it)h
(applies)f(at)g(eac)n(h)f(step)h(a)g(correction)e Fg(\016)3018
908 y Ff(i)3046 896 y Fg(;)14 b(i)23 b Fj(=)h(0)p Fg(::N)523
995 y Fj(to)33 b(the)g(existing)f(w)n(eigh)n(t)g(v)n(ector)g
Fg(w)1672 1007 y Ff(i)1700 995 y Fg(;)14 b(i)31 b Fj(=)g(0)p
Fg(::N)9 b Fj(.)52 b Fg(\016)2169 1007 y Ff(i)2230 995
y Fj(is)32 b(computed)h(based)g(on)f(the)h(error)523
1095 y(b)r(et)n(w)n(een)e(the)h(predicted)g(and)f(the)h(desired)f(v)-5
b(alue)31 b(for)g(the)h(curren)n(t)e(training)h(example,)523
1195 y(estimated)d(through)f(a)g(sp)r(eci\014ed)h(error)d(function.)648
1294 y(The)35 b(form)f(of)h(the)h(up)r(dates)f(p)r(erformed)g(b)n(y)f
(the)i(t)n(w)n(o)e(metho)r(ds)h(is)g(di\013eren)n(t.)60
b(GD)523 1394 y(mak)n(es)27 b(additiv)n(e)g(steps)g(in)h(w)n(eigh)n(t)f
(space:)1718 1577 y Fg(w)1777 1589 y Ff(i)1828 1577 y
Fj(:=)c Fg(w)1998 1589 y Ff(i)2045 1577 y Fj(+)18 b Fg(\016)2165
1589 y Ff(i)523 1759 y Fj(EG)27 b(mak)n(es)g(additiv)n(e)g(steps)h(in)f
(the)h(space)f(of)h(the)g(logarithm)e(of)i(the)g(w)n(eigh)n(ts:)1535
1942 y(log\()p Fg(w)1733 1954 y Ff(i)1761 1942 y Fj(\))c(:=)f(log\()p
Fg(w)2126 1954 y Ff(i)2154 1942 y Fj(\))c(+)f Fg(\016)2325
1954 y Ff(i)2352 1942 y Fg(;)523 2125 y Fj(whic)n(h)28
b(leads)f(to)g(m)n(ultiplicativ)n(e)h(up)r(dates)f(in)h(w)n(eigh)n(t)f
(space:)1666 2307 y Fg(w)1725 2319 y Ff(i)1776 2307 y
Fj(:=)c Fg(w)1946 2319 y Ff(i)1988 2307 y Fj(exp\()p
Fg(\016)2184 2319 y Ff(i)2212 2307 y Fj(\))648 2490 y(The)g(GD)i(and)e
(EG)h(up)r(date)g(rules)f(are)f(obtained)i(through)f(similar)g(deriv)-5
b(ations.)34 b(The)523 2589 y(starting)27 b(idea)h(is)h(that)f(the)h
(goal)e(of)h(an)n(y)g(up)r(date)g(rule)g(is)h(to)f(correct)f(the)h(w)n
(eigh)n(ts)g(using)523 2689 y(the)h(error)d(on)i(the)g(training)g
(examples,)f(while)i(a)n(v)n(oiding)d(big)i(up)r(dates,)h(whic)n(h)f
(can)g(lead)523 2789 y(to)d(instabilit)n(y)-7 b(.)36
b(Th)n(us,)25 b(the)g(up)r(date)h(rules)e(for)g(linear)g(units)i(can)e
(b)r(e)i(view)n(ed)e(as)g(trying)h(to)523 2888 y(minimize)j(a)f
(function)i(of)e(the)h(form:)1475 3071 y Fg(d)p Fj(\()17
b(\026)-59 b Fg(w)1609 3083 y Ff(t)p Fe(+1)1723 3071
y Fg(;)31 b Fj(\026)-59 b Fg(w)1819 3083 y Ff(t)1849
3071 y Fj(\))18 b(+)g Fg(\013E)5 b Fj(\()p Fg(y)s(;)32
b Fj(\026)-60 b Fg(w)2273 3083 y Ff(t)2309 3071 y Fj(\026)-48
b Fg(x)2350 3037 y Ff(T)2403 3071 y Fj(\))523 3254 y(where)31
b(\026)-47 b Fg(x)27 b Fj(is)g(the)g(input)h(v)n(ector,)d
Fg(y)30 b Fj(is)c(the)h(desired)g(output)g(v)-5 b(alue)26
b(for)h(the)g(curren)n(t)f(input,)540 3353 y(\026)-59
b Fg(w)582 3365 y Ff(t)640 3353 y Fj(and)45 b(\026)-59
b Fg(w)861 3365 y Ff(t)p Fe(+1)1003 3353 y Fj(are)27
b(the)i(w)n(eigh)n(t)f(v)n(ectors)e(at)i(t)n(w)n(o)g(succesiv)n(e)f
(time)i(steps,)f Fg(d)h Fj(is)f(a)g(distance)523 3453
y(metric)g(and)g Fg(E)33 b Fj(is)27 b(an)h(error)e(function.)38
b(The)28 b(v)-5 b(alue)28 b(of)g(the)g(learning)f(rate)g
Fg(\013)i Fj(determines)523 3553 y(if)e(the)g(emphasis)g(is)f(on)h(the)
g(correctiv)n(e)e(or)g(on)i(the)g(conserv)-5 b(ativ)n(e)25
b(part)h(of)h(the)g(equation.)648 3652 y(If)33 b Fg(d)g
Fj(is)g(the)g(Euclidian)g(distance)f(\()p Fg(d)p Fj(\()p
Fg(u;)14 b(v)s Fj(\))33 b(=)2149 3590 y Fd(P)2237 3610
y Ff(N)2237 3677 y(i)p Fe(=1)2349 3652 y Fj(\()p Fg(u)2429
3664 y Ff(i)2478 3652 y Fh(\000)22 b Fg(v)2605 3664 y
Ff(i)2632 3652 y Fj(\))2664 3622 y Fe(2)2702 3652 y Fj(\),)35
b(then)e(minimizing)523 3752 y(the)28 b(previous)e(form)n(ula)h(yields)
h(the)g(GD)g(up)r(date)g(rule:)1403 3985 y Fg(w)1462
3997 y Ff(t)p Fe(+1)p Ff(;i)1642 3985 y Fj(:=)23 b Fg(w)1812
3997 y Ff(t;i)1903 3985 y Fj(+)18 b Fg(\013)2049 3929
y(@)5 b(E)g Fj(\()p Fg(y)s(;)31 b Fj(\026)-59 b Fg(w)2336
3941 y Ff(t)2371 3929 y Fj(\026)-47 b Fg(x)2413 3899
y Ff(T)2465 3929 y Fj(\))p 2049 3966 449 4 v 2183 4042
a Fg(@)5 b(w)2291 4054 y Ff(t;i)648 4239 y Fj(If)28 b
Fg(d)h Fj(is)g(an)f(unnormalized)f(relativ)n(e)h(en)n(trop)n(y)f
(measure)g(\()p Fg(d)p Fj(\()p Fg(u;)14 b(v)s Fj(\))25
b(=)2826 4176 y Fd(P)2914 4197 y Ff(N)2914 4264 y(i)p
Fe(=1)3026 4239 y Fj(\()p Fg(v)3098 4251 y Ff(i)3145
4239 y Fh(\000)19 b Fg(u)3277 4251 y Ff(i)3323 4239 y
Fj(+)523 4338 y Fg(u)571 4350 y Ff(i)612 4338 y Fj(log\()761
4304 y Ff(u)800 4312 y Fc(i)p 762 4319 66 4 v 765 4367
a Ff(v)798 4375 y Fc(i)837 4338 y Fj(\)\)\),)43 b(assuming)38
b(that)i(the)f(w)n(eigh)n(ts)f(are)g(restricted)h(to)g(p)r(ositiv)n(e)f
(v)-5 b(alues,)42 b(the)523 4438 y(same)27 b(deriv)-5
b(ation)27 b(yields)g(an)h(EG)f(t)n(yp)r(e)h(of)f(up)r(date:)1351
4671 y Fg(w)1410 4683 y Ff(t)p Fe(+1)p Ff(;i)1590 4671
y Fj(:=)c Fg(w)1760 4683 y Ff(t;i)1846 4671 y Fj(exp\()p
Fg(\013)2068 4615 y(@)5 b(E)g Fj(\()p Fg(y)s(;)31 b Fj(\026)-59
b Fg(w)2355 4627 y Ff(t)2390 4615 y Fj(\026)-47 b Fg(x)2432
4585 y Ff(T)2485 4615 y Fj(\))p 2068 4652 449 4 v 2203
4728 a Fg(@)5 b(w)2311 4740 y Ff(t;i)2527 4671 y Fj(\))1934
5147 y(2)p eop
%%Page: 3 5
3 4 bop 648 614 a Fj(Let)27 b(the)h(target)f(function)h(ha)n(v)n(e)f
(the)h(form:)1724 846 y Fg(k)1767 858 y Fe(0)1823 846
y Fj(+)1937 742 y Ff(N)1906 767 y Fd(X)1912 944 y Ff(i)p
Fe(=1)2040 846 y Fg(k)2083 858 y Ff(i)2111 846 y Fg(x)2158
858 y Ff(i)523 1074 y Fj(where)c Fg(k)803 1086 y Ff(i)830
1074 y Fg(;)14 b(i)23 b Fj(=)g(0)p Fg(::N)32 b Fj(are)23
b(\014xed)h(real)g(co)r(e\016cien)n(ts,)g(and)g(the)g
Fg(x)2469 1086 y Ff(i)2497 1074 y Fg(;)14 b(i)23 b Fj(=)g(1)p
Fg(::N)32 b Fj(are)23 b(real)g(v)-5 b(alued)523 1173
y(input)21 b(features.)33 b(Let)20 b(the)h(error)d(function)i
Fg(E)25 b Fj(b)r(e)20 b(the)h(sum)f(squared)e(error)g(on)i(the)g
(training)523 1273 y(examples.)648 1373 y(The)27 b(gradien)n(t)g
(descen)n(t)g(\(GD\))i(or)d(Widro)n(w-Ho\013)h(up)r(date)h(rule)g(is:)
1359 1528 y Fg(w)1418 1540 y Ff(i)1469 1528 y Fj(:=)23
b Fg(w)1639 1540 y Ff(i)1686 1528 y Fj(+)18 b Fg(\013)p
Fj(\()p Fg(y)j Fh(\000)d Fg(o)p Fj(\))p Fg(x)2118 1540
y Ff(i)2147 1528 y Fg(;)c Fh(8)p Fg(i)22 b Fj(=)g(0)p
Fg(::N)t(;)523 1683 y Fj(where)27 b Fg(\013)h Fj(is)g(the)g(learning)e
(rate,)1633 1915 y Fg(o)d Fj(=)g Fg(w)1843 1927 y Fe(0)1899
1915 y Fj(+)2012 1811 y Ff(N)1982 1836 y Fd(X)1988 2013
y Ff(i)p Fe(=1)2116 1915 y Fg(w)2175 1927 y Ff(i)2203
1915 y Fg(x)2250 1927 y Ff(i)523 2142 y Fj(is)28 b(the)g(real)e(output)
i(of)g(the)g(predictor,)f(and)1647 2374 y Fg(y)f Fj(=)d
Fg(k)1845 2386 y Fe(0)1900 2374 y Fj(+)2014 2270 y Ff(N)1983
2295 y Fd(X)1990 2472 y Ff(i)p Fe(=1)2117 2374 y Fg(k)2160
2386 y Ff(i)2188 2374 y Fg(x)2235 2386 y Ff(i)523 2606
y Fj(is)28 b(the)g(desired)f(output)h(for)f(the)h(training)f(instance)g
(\(1)p Fg(;)14 b(x)2369 2618 y Fe(1)2406 2606 y Fg(;)g(::x)2536
2618 y Ff(N)2600 2606 y Fj(\).)648 2706 y(Exp)r(onen)n(tiated)31
b(gradien)n(t)f(descen)n(t)i(tak)n(es)e(steps)i(of)g(the)g(same)f
(magnitude,)i(but)f(in)523 2806 y(the)c(log)f(w)n(eigh)n(t)g(space:)
1247 2961 y(log)14 b Fg(w)1427 2973 y Ff(i)1479 2961
y Fj(:=)22 b(log)14 b Fg(w)1769 2973 y Ff(i)1816 2961
y Fj(+)k Fg(\013)p Fj(\()p Fg(y)k Fh(\000)c Fg(o)p Fj(\))p
Fg(x)2249 2973 y Ff(i)2277 2961 y Fg(;)c Fh(8)p Fg(i)22
b Fj(=)h(0)p Fg(::N)523 3116 y Fj(One)33 b(implemen)n(tation)h(problem)
e(that)i(arises)e(for)h(EG)g(up)r(dates)h(is)f(the)h(need)f(to)g(allo)n
(w)523 3215 y(b)r(oth)27 b(p)r(ositiv)n(e)g(and)f(negativ)n(e)g(w)n
(eigh)n(ts.)36 b(The)26 b(solution)h(adopted)f(in)h(Kivinen)g(and)f(W)
-7 b(ar-)523 3315 y(m)n(uth)19 b(\(1994\))e(is)h(to)g(duplicate)h(the)g
(input)g(v)n(ector,)g(replacing)e(it)i(b)n(y)f(\(1)p
Fg(;)c(x)2794 3327 y Fe(1)2831 3315 y Fg(;)g(:::x)2984
3327 y Ff(N)3048 3315 y Fg(;)g Fh(\000)p Fj(1)p Fg(;)g
Fh(\000)p Fg(x)3341 3327 y Fe(1)3377 3315 y Fg(;)g(:::;)g
Fh(\000)p Fg(x)3632 3327 y Ff(N)3695 3315 y Fj(\).)523
3415 y(Th)n(us,)24 b(although)f(eac)n(h)f(w)n(eigh)n(t)h(is)g(strictly)
g(p)r(ositiv)n(e,)h(the)g(di\013erence)f(of)h(the)f(w)n(eigh)n(ts)g
(cor-)523 3514 y(resp)r(onding)k(to)g(eac)n(h)g(feature)g(can)h(ha)n(v)
n(e)e(an)n(y)h(sign.)648 3697 y(EG)h(and)h(GD)h(up)r(dates)f(b)r(oth)g
(ha)n(v)n(e)f(linear)g(complexit)n(y)g(in)h(the)h(n)n(um)n(b)r(er)e(of)
h(w)n(eigh)n(ts)523 3797 y(\()p Fg(O)r Fj(\()p Fg(N)9
b Fj(\)\).)47 b(Ho)n(w)n(ev)n(er,)30 b(EG)g(needs)h(t)n(wice)f(as)g
(man)n(y)g(w)n(eigh)n(ts,)g(and)h(is)f(more)g(exp)r(ensiv)n(e)g(in)523
3896 y(\015oating)24 b(p)r(oin)n(t)g(op)r(erations)g(\(instead)g(of)h
(an)f(addition,)h(for)f(eac)n(h)g(w)n(eigh)n(t)g(w)n(e)g(p)r(erform)g
(an)523 3996 y(exp)r(onen)n(tiation)j(and)g(a)h(m)n(ultiplication\).)
648 4095 y(EG)37 b(also)f(has)h(an)g(additional)g(parameter)f(that)i
(needs)f(to)g(b)r(e)h(tuned:)57 b(the)38 b(initial)523
4195 y(magnitude)20 b(of)h(the)f(w)n(eigh)n(ts.)34 b(If)21
b(this)f(magnitude)h(is)f(small,)h(the)g(algorithm)e(will)i(con)n(v)n
(erge)523 4295 y(v)n(ery)26 b(slo)n(wly)-7 b(.)36 b(Big)27
b(initial)h(magnitudes)f(can)h(lead)f(to)g(instabilit)n(y)h(and)f(o)n
(v)n(er\015o)n(w)e(errors.)648 4394 y(In)37 b(order)f(to)h(k)n(eep)g
(the)h(w)n(eigh)n(t)f(magnitudes)g(b)r(ounded,)j(Kivinen)d(and)g(W)-7
b(arm)n(uth)523 4494 y(prop)r(osed)28 b(a)g(v)-5 b(ariation)28
b(of)h(the)g(EG)g(algorithm,)f(whic)n(h)h(applies)f(a)g(supplemen)n
(tary)g(nor-)523 4594 y(malization)f(step,)h(linear)f(in)g(the)h(w)n
(eigh)n(ts:)1741 4721 y Fe(2)p Fb(\003)p Ff(N)1744 4746
y Fd(X)1751 4923 y Ff(i)p Fe(=0)1881 4825 y Fg(w)1940
4837 y Ff(i)1991 4825 y Fj(=)23 b Fg(W)1934 5147 y Fj(3)p
eop
%%Page: 4 6
4 5 bop 523 614 a Fj(Normalization)31 b(in)n(tro)r(duces)h(a)g
(supplemen)n(tary)g(parameter)e(that)j(needs)g(to)f(b)r(e)h(tuned,)523
714 y(i.e.)k(the)28 b(upp)r(er)g(b)r(ound)g(on)f(the)h(w)n(eigh)n(ts)f
Fg(W)12 b Fj(.)523 989 y Fi(3.)60 b(Exp)t(erimen)l(ts)46
b(with)g(linear)g(predictors)523 1170 y Fj(The)34 b(\014rst)f(exp)r
(erimen)n(t)h(ev)-5 b(aluated)33 b(EG)h(and)f(GD)i(up)r(dates)f(on)f(a)
h(sparse)e(target.)54 b(The)523 1270 y(target)25 b(function)i(has)f
(100)f(real-v)-5 b(alued)25 b(input)i(features)f(that)h(can)f(tak)n(e)f
(v)-5 b(alues)26 b(b)r(et)n(w)n(een)523 1370 y Fh(\000)p
Fj(1)37 b(and)h(1.)67 b(The)38 b(target)f(v)n(ector)g(is)h(\(1)p
Fg(;)14 b Fh(\000)p Fj(1)p Fg(;)g Fj(1)p Fg(;)g Fj(0)p
Fg(;)g(:::)p Fj(0\).)65 b(Th)n(us,)41 b(97)c(of)h(the)g(100)f(input)523
1469 y(features)27 b(are)g(irrelev)-5 b(an)n(t)26 b(in)i(this)g
(problem.)648 1569 y(The)36 b(exp)r(erimen)n(t)f(tested)i(four)e
(learners:)52 b(GD)37 b(\(the)f(usual)g(Widro)n(w-Ho\013)f(up)r(date)
523 1669 y(rule\),)27 b(EG)g(\(whic)n(h)h(p)r(erforms)e(additiv)n(e)h
(up)r(dates)h(in)f(log)g(w)n(eigh)n(t)g(space\),)f(EG-T)h(\(whic)n(h)
523 1768 y(also)j(includes)h(normalization)e(with)j(a)f(tigh)n(t)g(w)n
(eigh)n(t)f(b)r(ound\))h(and)g(EG-L)g(\(whic)n(h)g(p)r(er-)523
1868 y(forms)c(normalization)f(with)i(a)f(lo)r(ose)g(w)n(eigh)n(t)g(b)r
(ound\).)648 1967 y(All)22 b(the)h(learners)e(w)n(ere)h(used)g(to)g
(train)g(a)g(linear)g(unit)h(with)g Fg(N)32 b Fj(=)23
b(100)e(input)i(features.)523 2067 y(The)28 b(training)f(instances)g(w)
n(ere)f(dra)n(wn)h(b)n(y)g(sampling)g(uniformly)h(from)f([)p
Fh(\000)p Fj(1)p Fg(::)p Fj(1])3089 2037 y Ff(N)3151
2067 y Fj(.)648 2167 y(The)21 b(learning)f(rates)g(for)g(the)i
(algorithms)d(w)n(ere)h(set)h(according)f(to)h(the)g(recommended)523
2266 y(v)-5 b(alues)27 b(from)h(\(Kivinen)f(and)h(W)-7
b(arm)n(uth,)27 b(1994\):)1719 2488 y Fg(\013)1772 2500
y Ff(GD)1907 2488 y Fj(=)2061 2432 y(1)p 2004 2469 155
4 v 2004 2545 a(4)p Fg(X)2122 2521 y Fe(2)2168 2488 y
Fg(;)523 2699 y Fj(where)g(X)h(is)g(an)f(estimated)h(upp)r(er)f(b)r
(ound)h(for)f(max)2206 2711 y Ff(x)2271 2699 y Fh(k)h
Fj(\026)-48 b Fg(x)24 b Fh(k)2448 2711 y Fe(2)2485 2699
y Fj(.)1706 2920 y Fg(\013)1759 2932 y Ff(E)s(G)1890
2920 y Fj(=)2059 2864 y(1)p 1988 2901 184 4 v 1988 2977
a(3)p Fg(X)7 b(Y)2181 2920 y(;)523 3131 y Fj(where)29
b(X)g(is)g(an)g(upp)r(er)g(b)r(ound)g(on)g(the)h(feature)e(v)-5
b(alues)29 b(\()p Fh(j)d Fg(x)2473 3143 y Ff(i)2526 3131
y Fh(j\024)f Fg(X)r(;)14 b Fh(8)p Fg(i)24 b Fj(=)h(0)p
Fg(::N)9 b Fj(\))29 b(and)g(Y)523 3241 y(is)f(an)f(upp)r(er)h(b)r(ound)
g(on)f(the)h(output)g(v)-5 b(alue)27 b(\()p Fh(j)d Fg(k)2082
3253 y Fe(0)2138 3241 y Fj(+)2221 3179 y Fd(P)2308 3200
y Ff(N)2308 3266 y(i)p Fe(=1)2434 3241 y Fg(k)2477 3253
y Ff(i)2505 3241 y Fg(x)2552 3253 y Ff(i)2603 3241 y
Fh(j\024)f Fg(Y)5 b(;)14 b Fh(8)p Fj(\(1)p Fg(;)g(x)3009
3253 y Fe(1)3045 3241 y Fg(;)g(:::x)3198 3253 y Ff(N)3261
3241 y Fj(\)\))1586 3467 y Fg(\013)1639 3479 y Ff(E)s(Gnor)r(m)1935
3467 y Fj(=)2153 3411 y(1)p 2033 3448 282 4 v 2033 3524
a(3)p Fg(W)2165 3500 y Fe(2)2202 3524 y Fg(X)2278 3500
y Fe(2)523 3685 y Fj(where)27 b(X)h(is)g(an)f(upp)r(er)h(b)r(ound)g
(for)f(max)1827 3655 y Ff(N)1827 3707 y(i)p Fe(=0)1962
3685 y Fh(j)c Fg(x)2055 3697 y Ff(i)2106 3685 y Fh(j)648
3785 y Fj(The)30 b(starting)g(w)n(eigh)n(ts)g(w)n(ere)g(set)h(to)g(0)f
(for)g(GD.)i(F)-7 b(or)30 b(the)h(exp)r(onen)n(tiated)g(gradien)n(t)523
3885 y(algorithms,)42 b(the)e(initial)g(w)n(eigh)n(t)f(magnitude)h(w)n
(as)f(10,)j(whic)n(h)e(actually)g(started)f(the)523 3984
y(algorithms)26 b(at)i(0)f(w)n(eigh)n(ts)g(for)g(eac)n(h)f(feature)i
(\(the)g(same)f(starting)g(p)r(oin)n(t)g(as)g(for)g(GD\).)648
4084 y(The)f(algorithms)f(w)n(ere)h(trained)g(on)g(the)h(same)f(p)r(o)r
(ol)h(of)f(instances,)h(and)f(then)h(tested)523 4184
y(on)33 b(the)g(same)f(indep)r(enden)n(t)i(test)f(set.)53
b(Tw)n(o)32 b(di\013eren)n(t)h(measures)e(w)n(ere)h(used)h(to)g(asess)
523 4283 y(p)r(erformance:)648 4449 y Fh(\017)41 b Fj(the)28
b(cum)n(ulativ)n(e)f(squared)f(error)g(on)h(the)h(training)f(instances)
648 4615 y Fh(\017)41 b Fj(the)28 b(ro)r(ot)e(mean)i(squared)e(error)g
(on)h(the)h(test)g(set)648 4781 y(Figure)18 b(1)g(sho)n(ws)g(the)h
(RMSE)g(on)g(the)g(test)g(set)g(and)g(cum)n(ulativ)n(e)f(error)f(on)i
(the)g(training)523 4881 y(set)28 b(a)n(v)n(eraged)c(o)n(v)n(er)i(30)h
(runs.)1934 5147 y(4)p eop
%%Page: 5 7
5 6 bop 523 2631 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: esparse.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1135 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(5) Rshow
1200 1769 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(10) Rshow
1200 2403 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(15) Rshow
1200 3037 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(20) Rshow
1200 3671 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(25) Rshow
1200 4305 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(30) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(35) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1770 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(5) Cshow
2339 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(10) Cshow
2909 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(15) Cshow
3479 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(25) Cshow
4618 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(30) Cshow
5188 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(35) Cshow
5758 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
6327 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(45) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(50) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(RMSE on the test set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
4049 881 M
(GD) Lshow
3023 881 M
(EG-L) Lshow
1998 1135 M
(EG-T) Rshow
1998 755 M
(EG) Rshow
LT0
2339 1309 M
1998 1135 L
2339 971 M
1998 755 L
1200 4061 M
114 19 V
114 -158 V
114 -27 V
114 -366 V
114 -478 V
114 -280 V
114 -807 V
114 -436 V
113 58 V
114 -277 V
114 -263 V
2567 878 L
114 -79 V
2795 694 L
114 -43 V
114 -27 V
114 -13 V
114 -43 V
114 4 V
114 -24 V
114 -8 V
114 -3 V
114 -7 V
114 1 V
114 5 V
113 -11 V
114 -1 V
114 1 V
114 -9 V
114 0 V
114 0 V
114 -1 V
114 4 V
114 -3 V
114 -1 V
114 -1 V
114 -5 V
114 -1 V
114 1 V
114 0 V
114 -1 V
113 -2 V
114 1 V
114 1 V
114 -1 V
114 0 V
114 -1 V
114 1 V
114 -1 V
LT1
1200 4061 M
114 25 V
114 -135 V
114 18 V
114 -242 V
114 -213 V
114 -122 V
114 -543 V
114 -479 V
113 -131 V
114 -296 V
114 -357 V
114 -296 V
114 -95 V
2795 966 L
2909 850 L
114 -92 V
114 -47 V
3251 605 L
114 3 V
114 -36 V
114 -16 V
114 -16 V
114 -4 V
114 -8 V
114 8 V
113 -2 V
114 -10 V
114 -1 V
114 0 V
114 -3 V
114 -2 V
114 -4 V
114 2 V
114 1 V
114 -5 V
114 -1 V
114 1 V
114 4 V
114 -2 V
114 -1 V
114 3 V
113 -3 V
114 -2 V
114 4 V
114 -2 V
114 -2 V
114 3 V
114 0 V
114 -2 V
LT2
1200 4061 M
114 432 V
114 -283 V
114 342 V
114 -179 V
114 -530 V
114 335 V
114 38 V
2112 2918 L
113 -219 V
114 -414 V
114 -219 V
114 -378 V
114 279 V
114 -147 V
114 -236 V
114 142 V
114 -243 V
114 -235 V
114 93 V
114 -144 V
114 -197 V
3707 894 L
3821 792 L
114 -42 V
114 27 V
113 21 V
114 -11 V
114 -76 V
114 -8 V
114 66 V
114 -20 V
114 -80 V
114 -25 V
114 -53 V
114 8 V
114 -16 V
114 28 V
114 -26 V
114 -9 V
114 18 V
114 7 V
113 -14 V
114 8 V
114 -36 V
114 -18 V
114 -3 V
114 -14 V
114 8 V
114 -2 V
LT3
1200 4061 M
114 2 V
114 -67 V
114 -20 V
114 -246 V
114 -396 V
114 -358 V
1998 1915 L
114 -588 V
113 -74 V
2339 971 L
2453 658 L
114 -74 V
114 -9 V
114 -24 V
114 -8 V
114 -6 V
114 -2 V
114 -8 V
114 17 V
114 -9 V
114 -3 V
114 -11 V
114 4 V
114 -10 V
114 7 V
113 5 V
114 -8 V
114 -2 V
114 -2 V
114 -2 V
114 1 V
114 -5 V
114 5 V
114 0 V
114 -6 V
114 1 V
114 4 V
114 1 V
114 -3 V
114 -1 V
114 3 V
113 -4 V
114 0 V
114 2 V
114 -1 V
114 0 V
114 1 V
114 -1 V
114 -2 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 2109 x @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: lsparse.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1241 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(20) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(40) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(60) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(80) Rshow
1200 4199 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(100) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(120) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1770 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(5) Cshow
2339 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(10) Cshow
2909 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(15) Cshow
3479 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(25) Cshow
4618 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(30) Cshow
5188 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(35) Cshow
5758 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
6327 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(45) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(50) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Cumulative squared error on the training set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
6099 3090 M
(EG-T) Lshow
6099 2424 M
(EG) Lshow
6099 3608 M
(EG-L) Lshow
6099 4569 M
(GD) Lshow
LT0
6327 2838 M
-228 141 V
228 -208 R
6099 2535 L
228 827 R
-228 135 V
228 818 R
-228 143 V
1200 501 M
114 247 V
114 371 V
114 318 V
114 265 V
114 254 V
114 179 V
114 232 V
114 114 V
113 79 V
114 42 V
114 55 V
114 47 V
114 15 V
114 22 V
114 13 V
114 13 V
114 8 V
114 9 V
114 5 V
114 6 V
114 5 V
114 4 V
114 4 V
114 4 V
114 2 V
113 1 V
114 3 V
114 2 V
114 2 V
114 2 V
114 1 V
114 2 V
114 1 V
114 2 V
114 0 V
114 1 V
114 1 V
114 1 V
114 1 V
114 1 V
114 0 V
113 1 V
114 1 V
114 0 V
114 1 V
114 0 V
114 1 V
114 0 V
114 1 V
114 0 V
LT1
1200 501 M
114 247 V
114 372 V
114 325 V
114 281 V
114 289 V
114 219 V
114 318 V
114 189 V
113 142 V
114 79 V
114 104 V
114 94 V
114 33 V
114 45 V
114 24 V
114 18 V
114 10 V
114 12 V
114 7 V
114 6 V
114 5 V
114 2 V
114 3 V
114 3 V
114 2 V
113 2 V
114 2 V
114 2 V
114 1 V
114 2 V
114 1 V
114 1 V
114 2 V
114 1 V
114 2 V
114 1 V
114 2 V
114 1 V
114 1 V
114 1 V
114 1 V
113 1 V
114 1 V
114 1 V
114 1 V
114 1 V
114 1 V
114 1 V
114 1 V
114 1 V
LT2
1200 501 M
114 242 V
114 357 V
114 300 V
114 255 V
114 320 V
114 182 V
114 258 V
114 181 V
113 138 V
114 109 V
114 137 V
114 135 V
114 118 V
114 148 V
114 91 V
114 69 V
114 56 V
114 82 V
114 75 V
114 52 V
114 59 V
114 48 V
114 36 V
114 29 V
114 33 V
113 38 V
114 37 V
114 23 V
114 23 V
114 23 V
114 15 V
114 15 V
114 23 V
114 14 V
114 12 V
114 12 V
114 11 V
114 11 V
114 9 V
114 7 V
114 5 V
113 7 V
114 5 V
114 5 V
114 5 V
114 4 V
114 3 V
114 3 V
114 2 V
114 3 V
LT3
1200 501 M
114 249 V
114 380 V
114 339 V
114 295 V
114 279 V
114 211 V
114 260 V
114 103 V
113 53 V
114 17 V
114 22 V
114 9 V
114 5 V
114 2 V
114 2 V
114 2 V
114 1 V
114 3 V
114 2 V
114 3 V
114 3 V
114 1 V
114 1 V
114 3 V
114 1 V
113 1 V
114 2 V
114 1 V
114 2 V
114 1 V
114 1 V
114 1 V
114 2 V
114 1 V
114 2 V
114 1 V
114 1 V
114 1 V
114 2 V
114 0 V
114 1 V
113 1 V
114 1 V
114 1 V
114 0 V
114 1 V
114 1 V
114 2 V
114 0 V
114 1 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 944 4922 a Fj(Figure)27 b(1.)37 b(Sup)r(ervised)27
b(learning,)g(linear)g(unit,)h(sparse)e(target)1934 5147
y(5)p eop
%%Page: 6 8
6 7 bop 648 614 a Fj(All)21 b(EG)g(metho)r(ds)g(con)n(v)n(erge)d(to)j
(the)g(target)f(t)n(wice)h(as)g(fast)f(as)h(GD.)g(Their)g(cum)n(ulativ)
n(e)523 714 y(loss)k(on)g(the)h(training)f(set)h(is)f(also)g(smaller.)
35 b(The)26 b(unnormalized)f(v)n(ersion)f(\(EG\))i(and)f(the)523
814 y(tigh)n(t)34 b(b)r(ound)h(algorithm)d(\(EG-T\))i(ha)n(v)n(e)f(v)n
(ery)g(similar)g(p)r(erformance,)i(and)f(they)g(b)r(oth)523
913 y(p)r(erform)27 b(b)r(etter)h(than)g(the)g(lo)r(ose)f(b)r(ound)h
(algorithm)e(\(EG-L\).)648 1096 y(The)34 b(second)g(task)g(consisted)h
(of)f(a)g(dense)h(target,)g(in)g(whic)n(h)g(all)f(the)h(features)f(are)
523 1196 y(relev)-5 b(an)n(t)25 b(and)g(they)h(ha)n(v)n(e)f(equal)g(w)n
(eigh)n(ts:)35 b(\(0)p Fg(:)p Fj(01)p Fg(;)14 b(:::)p
Fj(0)p Fg(:)p Fj(01\).)34 b(This)25 b(is)h(a)f(w)n(orst)g(case)f
(target)523 1295 y(for)39 b(EG)h(algorithms,)i(whic)n(h)e(ha)n(v)n(e)f
(bigger)f(theoretical)h(loss)g(b)r(ounds)h(than)h(gradien)n(t)523
1395 y(descen)n(t)27 b(for)g(this)h(t)n(yp)r(e)g(of)g(problems.)648
1494 y(The)f(exp)r(erimen)n(tal)g(metho)r(dology)g(is)g(similar)g(to)h
(the)g(previous)e(exp)r(erimen)n(t.)648 1594 y(In)f(this)g(case,)g(GD)h
(is)f(the)g(fastest)g(algorithm)f(to)h(con)n(v)n(erge,)f(as)g(exp)r
(ected,)i(according)523 1694 y(to)34 b(the)g(results)f(presen)n(ted)g
(in)h(\(Kivinen)g(and)f(W)-7 b(arm)n(uth,)35 b(1994\).)54
b(It)34 b(is)g(w)n(orth)f(noting)523 1793 y(that)27 b(the)g
(unnormalized)f(v)n(ersion)f(of)h(EG)h(is)f(faster)g(and)h(has)f(a)g
(smaller)g(cum)n(ulated)g(loss)523 1893 y(than)i(an)n(y)f(of)g(the)h
(normalized)f(v)n(ersions.)648 2076 y(The)18 b(third)h(exp)r(erimen)n
(t)g(aimed)f(to)h(ev)-5 b(aluate)18 b(the)h(algorithms)e(in)i(terms)g
(of)f(robustness)523 2175 y(to)k(noise)g(in)h(the)g(target)f(v)-5
b(alue.)35 b(The)22 b(target)g(w)n(as)g(the)g(same)g(as)g(for)g(the)h
(\014rst)f(exp)r(erimen)n(t,)523 2275 y(but)h(for)g(eac)n(h)f(training)
g(instance,)i(random)d(noise)i(w)n(as)f(added)g(to)h(the)g(target)f(v)
-5 b(alue.)35 b(The)523 2374 y(amoun)n(t)25 b(of)h(noise)g(w)n(as)f(at)
g(most)h(10\045)f(of)h(the)g(maxim)n(um)g(p)r(ossible)g(v)-5
b(alue)26 b(for)f(the)h(target)523 2474 y(function.)648
2574 y(The)34 b(exp)r(erimen)n(tal)f(setting)h(and)g(p)r(erformance)e
(measures)h(w)n(ere)g(the)h(same)g(as)f(for)523 2673
y(the)28 b(previous)e(exp)r(erimen)n(ts.)648 2773 y(The)21
b(results)g(of)g(the)h(exp)r(erimen)n(t)f(are)g(presen)n(ted)g(in)g
(\014gure)g(3.)34 b(All)22 b(EG)f(metho)r(ds)h(con-)523
2873 y(v)n(erge)g(faster)h(than)h(GD.)g(The)g(unnormalized)f(v)n
(ersion)f(app)r(ears)h(to)g(b)r(e)h(the)g(most)g(robust.)523
2972 y(The)i(tigh)n(t)g(b)r(ound)g(algorithm)e(has)h(a)h(v)n(ery)e
(similar)h(b)r(eha)n(viour)g(with)h(the)g(unnormalized)523
3072 y(v)n(ersion,)g(while)i(the)g(lo)r(ose)f(b)r(ound)h(algorithm)e
(has)h(a)g(p)r(o)r(orer)g(p)r(erformance.)648 3254 y(The)e(forth)g(exp)
r(erimen)n(t)g(w)n(as)f(set)i(up)f(to)g(test)h(the)f(algorithms)f(in)i
(the)f(case)g(of)g(a)g(non-)523 3354 y(stationary)f(problem.)36
b(The)26 b(initial)f(target)g(w)n(as)g(the)h(same)f(as)g(for)g(the)h
(\014rst)f(exp)r(erimen)n(t.)523 3454 y(After)39 b(500)e(instances,)k
(the)d(target)g(w)n(as)f(mo)r(di\014ed)i(b)n(y)f(switc)n(hing)g(the)h
(four)f(non-zero)523 3553 y(w)n(eigh)n(ts)25 b(with)h(four)f(n)n(ull)g
(w)n(eigh)n(ts)g(c)n(hosen)f(randomly)-7 b(,)25 b(and)g(adding)g(other)
g(t)n(w)n(o)g(non-zero)523 3653 y(w)n(eigh)n(ts.)648
3753 y(The)39 b(p)r(erformance)f(measures)f(for)i(this)g(exp)r(erimen)n
(t)g(are)f(presen)n(ted)g(in)h(\014gure)g(4.)523 3852
y(The)29 b(EG)g(algoirithm)e(con)n(v)n(erges)g(t)n(wice)h(as)g(fast)h
(to)g(the)g(new)g(target,)g(compared)e(to)i(the)523 3952
y(p)r(erformance)24 b(of)g(GD.)i(This)e(exp)r(erimen)n(t)h(also)f
(indicates)g(that)h(normalization)e(can)i(b)r(e)g(a)523
4051 y(problem)31 b(in)g(non-stationary)e(en)n(vironemen)n(ts.)46
b(The)31 b(normalized)f(algorithm)g(that)h(has)523 4151
y(a)c(tigh)n(t)g(w)n(eigh)n(t)g(b)r(ound)g(do)r(esn't)h(con)n(v)n(erge)
c(after)j(the)h(target)e(is)h(mo)r(di\014ed,)h(b)r(ecause)f(the)523
4251 y(new)h(target)e(is)i(outside)f(its)h(w)n(eigh)n(t)f(space.)648
4433 y(These)40 b(exp)r(erimen)n(ts)g(supp)r(ort)h(the)g(h)n(yp)r
(othesis)f(that)h(EG)g(metho)r(ds)g(outp)r(erform)523
4533 y(GD)28 b(for)f(linear)g(targets)f(with)i(man)n(y)e(irrelev)-5
b(an)n(t)27 b(features.)36 b(EG)27 b(also)f(seems)h(to)g(b)r(e)h(more)
523 4633 y(robust)33 b(to)g(noise)g(and)h(faster)e(to)i(adapt)f(to)g
(new)h(conditions)f(in)h(non-stationary)d(en)n(vi-)523
4732 y(ronmen)n(ts.)50 b(This)32 b(latter)g(result)g(is)g(imp)r(ortan)n
(t)g(particularly)f(from)h(the)h(p)r(ersp)r(ectiv)n(e)e(of)523
4832 y(using)g(EG)h(up)r(dates)g(in)g(reinforcemen)n(t)f(learning)f
(tasks.)49 b(Normalization)30 b(hasn't)i(b)r(een)1934
5147 y(6)p eop
%%Page: 7 9
7 8 bop 523 2631 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: edense.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1135 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(2) Rshow
1200 1769 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(4) Rshow
1200 2403 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(6) Rshow
1200 3037 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(8) Rshow
1200 3671 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(10) Rshow
1200 4305 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(12) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(14) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
2150 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
3099 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(60) Cshow
4998 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(80) Cshow
5948 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(100) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(120) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(RMSE on the test set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
1627 818 M
(GD) Lshow
2482 818 M
(EG) Lshow
4998 1294 M
(EG-T) Cshow
5473 1294 M
(EG-L) Cshow
LT0
4998 649 M
0 486 V
0 -523 R
475 523 V
1200 4625 M
47 -216 V
48 -208 V
47 -236 V
48 -187 V
47 -125 V
48 -161 V
47 -128 V
48 -126 V
47 -117 V
48 -116 V
47 -91 V
48 -104 V
47 -80 V
48 -75 V
47 -116 V
48 -83 V
47 -90 V
48 -67 V
47 -61 V
48 -74 V
47 -72 V
47 -78 V
48 -48 V
47 -72 V
48 -74 V
47 -39 V
48 -48 V
47 -50 V
48 -39 V
47 -41 V
48 -38 V
47 -47 V
48 -19 V
47 -37 V
48 -34 V
47 -33 V
48 -34 V
47 -26 V
48 -35 V
47 -30 V
47 -20 V
48 -16 V
47 -52 V
48 -29 V
47 -27 V
48 -30 V
47 -25 V
48 -18 V
47 -32 V
48 -13 V
47 -21 V
48 -21 V
47 -16 V
48 -21 V
47 -17 V
48 -15 V
47 -23 V
48 -11 V
47 -15 V
48 -15 V
47 -11 V
47 -14 V
48 -12 V
47 -7 V
48 -10 V
47 -10 V
48 -11 V
47 -12 V
48 -11 V
47 -8 V
48 -14 V
47 -7 V
48 -7 V
47 -10 V
48 -5 V
47 -9 V
48 -7 V
47 -6 V
48 -7 V
47 -6 V
47 -6 V
48 -5 V
47 -6 V
48 -5 V
47 -4 V
48 -4 V
47 -4 V
48 -4 V
47 -4 V
48 -2 V
47 -4 V
48 -2 V
47 -4 V
48 -2 V
47 -5 V
48 -3 V
47 -3 V
48 -3 V
47 -2 V
48 -2 V
47 -3 V
47 -4 V
48 -2 V
47 -3 V
48 -1 V
47 -2 V
48 -2 V
47 -3 V
48 -2 V
47 -1 V
48 -2 V
47 -2 V
48 -2 V
47 -2 V
48 -1 V
47 -1 V
48 -2 V
47 -2 V
48 -1 V
LT1
1200 4625 M
47 -216 V
48 -208 V
47 -236 V
48 -188 V
47 -124 V
48 -162 V
47 -129 V
48 -126 V
47 -119 V
48 -117 V
47 -92 V
48 -104 V
47 -82 V
48 -75 V
47 -118 V
48 -85 V
47 -91 V
48 -69 V
47 -61 V
48 -76 V
47 -74 V
47 -79 V
48 -50 V
47 -74 V
48 -76 V
47 -39 V
48 -50 V
47 -51 V
48 -41 V
47 -42 V
48 -40 V
47 -48 V
48 -19 V
47 -39 V
48 -34 V
47 -35 V
48 -34 V
47 -27 V
48 -36 V
47 -30 V
47 -21 V
48 -16 V
47 -53 V
48 -30 V
47 -27 V
48 -31 V
47 -26 V
48 -18 V
47 -33 V
48 -13 V
47 -21 V
48 -20 V
47 -17 V
48 -21 V
47 -17 V
48 -15 V
47 -22 V
48 -11 V
47 -15 V
48 -15 V
47 -11 V
47 -13 V
48 -12 V
47 -7 V
48 -10 V
47 -9 V
48 -10 V
47 -12 V
48 -11 V
47 -8 V
48 -12 V
47 -7 V
48 -6 V
47 -9 V
48 -5 V
47 -9 V
48 -6 V
47 -6 V
48 -6 V
47 -6 V
47 -4 V
48 -5 V
47 -5 V
48 -4 V
47 -5 V
48 -3 V
47 -3 V
48 -3 V
47 -4 V
48 -2 V
47 -3 V
48 -2 V
47 -3 V
48 -2 V
47 -4 V
48 -3 V
47 -2 V
48 -2 V
47 -2 V
48 -2 V
47 -2 V
47 -3 V
48 -1 V
47 -3 V
48 -1 V
47 -1 V
48 -2 V
47 -2 V
48 -1 V
47 -1 V
48 -2 V
47 -1 V
48 -1 V
47 -2 V
48 -1 V
47 -1 V
48 -1 V
47 -1 V
48 -1 V
LT2
1200 4625 M
47 -920 V
48 -702 V
47 -624 V
48 -445 V
47 -209 V
48 -267 V
47 -132 V
48 -142 V
47 -135 V
48 -72 V
47 -49 V
48 -71 V
47 -62 V
48 -49 V
47 -39 V
48 -33 V
47 -35 V
48 -17 V
47 -20 V
48 -16 V
47 -16 V
47 -22 V
48 -6 V
47 -15 V
48 -6 V
47 1 V
48 -5 V
47 -3 V
48 0 V
47 -3 V
48 -4 V
47 -1 V
48 0 V
47 -1 V
48 0 V
47 -1 V
48 0 V
47 0 V
48 -1 V
47 0 V
47 -1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 -1 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
LT3
1200 4625 M
47 -525 V
48 -459 V
47 -472 V
48 -359 V
47 -206 V
48 -259 V
47 -177 V
48 -175 V
47 -159 V
48 -127 V
47 -95 V
48 -120 V
47 -93 V
48 -75 V
47 -93 V
48 -73 V
47 -78 V
48 -47 V
47 -46 V
48 -49 V
47 -49 V
47 -55 V
48 -28 V
47 -44 V
48 -36 V
47 -13 V
48 -22 V
47 -16 V
48 -14 V
47 -15 V
48 -17 V
47 -14 V
48 -5 V
47 -12 V
48 -9 V
47 -9 V
48 -7 V
47 -6 V
48 -7 V
47 -5 V
47 -4 V
48 -1 V
47 -9 V
48 -5 V
47 -3 V
48 -5 V
47 -3 V
48 -2 V
47 -4 V
48 -1 V
47 -2 V
48 -2 V
47 -2 V
48 -1 V
47 -1 V
48 0 V
47 -2 V
48 0 V
47 -1 V
48 -1 V
47 0 V
47 -1 V
48 0 V
47 0 V
48 -1 V
47 0 V
48 0 V
47 -1 V
48 0 V
47 0 V
48 0 V
47 -1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
47 -1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 2109 x @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: ldense.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 994 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.1) Rshow
1200 1487 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.2) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.3) Rshow
1200 2473 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.4) Rshow
1200 2967 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.5) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.6) Rshow
1200 3953 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.7) Rshow
1200 4446 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.8) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.9) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
2150 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
3099 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(60) Cshow
4998 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(80) Cshow
5948 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(100) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(120) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Cumulative squared error on the training set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
5948 4249 M
(EG-T) Cshow
5948 1684 M
(GD) Cshow
5948 3065 M
(EG) Cshow
6422 4249 M
(EG-L) Cshow
LT0
5948 4743 M
0 -396 V
0 -2146 R
0 -418 V
0 792 R
0 392 V
474 1661 R
0 -281 V
1200 501 M
47 168 V
48 194 V
47 170 V
48 220 V
47 120 V
48 130 V
47 124 V
48 122 V
47 106 V
48 95 V
47 99 V
48 91 V
47 92 V
48 66 V
47 106 V
48 85 V
47 89 V
48 76 V
47 72 V
48 61 V
47 75 V
47 84 V
48 66 V
47 64 V
48 87 V
47 47 V
48 51 V
47 56 V
48 45 V
47 40 V
48 60 V
47 47 V
48 29 V
47 50 V
48 39 V
47 43 V
48 39 V
47 35 V
48 38 V
47 30 V
47 25 V
48 25 V
47 51 V
48 40 V
47 30 V
48 35 V
47 33 V
48 24 V
47 44 V
48 19 V
47 26 V
48 23 V
47 20 V
48 26 V
47 23 V
48 18 V
47 29 V
48 16 V
47 17 V
48 22 V
47 14 V
47 22 V
48 15 V
47 10 V
48 13 V
47 15 V
48 15 V
47 15 V
48 12 V
47 14 V
48 19 V
47 11 V
48 9 V
47 16 V
48 6 V
47 13 V
48 11 V
47 9 V
48 10 V
47 10 V
47 8 V
48 7 V
47 10 V
48 7 V
47 7 V
48 7 V
47 7 V
48 6 V
47 7 V
48 4 V
47 7 V
48 4 V
47 8 V
48 3 V
47 7 V
48 6 V
47 4 V
48 6 V
47 3 V
48 4 V
47 4 V
47 4 V
48 4 V
47 5 V
48 3 V
47 4 V
48 3 V
47 5 V
48 2 V
47 3 V
48 3 V
47 3 V
48 4 V
47 2 V
48 3 V
47 3 V
48 2 V
47 3 V
48 3 V
47 2 V
LT1
1200 501 M
47 168 V
48 194 V
47 170 V
48 219 V
47 121 V
48 130 V
47 123 V
48 123 V
47 105 V
48 96 V
47 98 V
48 91 V
47 92 V
48 66 V
47 105 V
48 85 V
47 88 V
48 75 V
47 72 V
48 60 V
47 75 V
47 82 V
48 65 V
47 64 V
48 86 V
47 46 V
48 50 V
47 55 V
48 43 V
47 40 V
48 58 V
47 45 V
48 28 V
47 49 V
48 38 V
47 41 V
48 37 V
47 34 V
48 36 V
47 29 V
47 24 V
48 24 V
47 47 V
48 38 V
47 28 V
48 33 V
47 32 V
48 22 V
47 41 V
48 17 V
47 24 V
48 22 V
47 18 V
48 24 V
47 20 V
48 16 V
47 27 V
48 14 V
47 15 V
48 19 V
47 12 V
47 20 V
48 13 V
47 8 V
48 12 V
47 13 V
48 13 V
47 13 V
48 10 V
47 12 V
48 16 V
47 9 V
48 8 V
47 12 V
48 5 V
47 12 V
48 8 V
47 8 V
48 7 V
47 9 V
47 6 V
48 6 V
47 8 V
48 6 V
47 5 V
48 5 V
47 5 V
48 6 V
47 5 V
48 3 V
47 5 V
48 4 V
47 5 V
48 3 V
47 5 V
48 5 V
47 3 V
48 4 V
47 3 V
48 2 V
47 3 V
47 3 V
48 3 V
47 3 V
48 2 V
47 3 V
48 2 V
47 3 V
48 2 V
47 2 V
48 2 V
47 2 V
48 3 V
47 2 V
48 1 V
47 2 V
48 2 V
47 2 V
48 2 V
47 1 V
LT2
1200 501 M
47 173 V
48 174 V
47 132 V
48 154 V
47 82 V
48 88 V
47 70 V
48 76 V
47 77 V
48 44 V
47 39 V
48 48 V
47 56 V
48 39 V
47 42 V
48 46 V
47 33 V
48 24 V
47 31 V
48 24 V
47 22 V
47 25 V
48 17 V
47 20 V
48 14 V
47 16 V
48 12 V
47 10 V
48 11 V
47 11 V
48 10 V
47 9 V
48 7 V
47 7 V
48 5 V
47 5 V
48 4 V
47 4 V
48 4 V
47 3 V
47 3 V
48 3 V
47 2 V
48 2 V
47 3 V
48 2 V
47 1 V
48 2 V
47 1 V
48 1 V
47 1 V
48 1 V
47 1 V
48 1 V
47 1 V
48 1 V
47 0 V
48 1 V
47 0 V
48 1 V
47 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
LT3
1200 501 M
47 169 V
48 182 V
47 148 V
48 187 V
47 90 V
48 98 V
47 85 V
48 88 V
47 78 V
48 53 V
47 54 V
48 55 V
47 70 V
48 40 V
47 51 V
48 50 V
47 47 V
48 35 V
47 40 V
48 30 V
47 30 V
47 40 V
48 27 V
47 27 V
48 27 V
47 18 V
48 17 V
47 17 V
48 16 V
47 16 V
48 19 V
47 12 V
48 10 V
47 16 V
48 8 V
47 12 V
48 9 V
47 9 V
48 7 V
47 5 V
47 5 V
48 4 V
47 6 V
48 7 V
47 4 V
48 5 V
47 4 V
48 4 V
47 4 V
48 2 V
47 2 V
48 3 V
47 2 V
48 2 V
47 3 V
48 2 V
47 2 V
48 1 V
47 2 V
48 1 V
47 1 V
47 2 V
48 1 V
47 1 V
48 1 V
47 1 V
48 1 V
47 1 V
48 0 V
47 1 V
48 1 V
47 0 V
48 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 956 4922 a Fj(Figure)27 b(2.)37 b(Sup)r(ervised)27
b(learning,)g(linear)f(unit,)j(dense)e(target)1934 5147
y(7)p eop
%%Page: 8 10
8 9 bop 523 2631 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: enoise.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1135 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(5) Rshow
1200 1769 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(10) Rshow
1200 2403 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(15) Rshow
1200 3037 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(20) Rshow
1200 3671 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(25) Rshow
1200 4305 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(30) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(35) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1770 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(5) Cshow
2339 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(10) Cshow
2909 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(15) Cshow
3479 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(25) Cshow
4618 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(30) Cshow
5188 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(35) Cshow
5758 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
6327 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(45) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(50) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(RMSE on the test set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
4049 1008 M
(GD) Lshow
2909 1008 M
(EG-L) Lshow
1998 1008 M
(EG-T) Rshow
1998 755 M
(EG) Rshow
LT0
2339 1081 M
-341 -73 V
2339 820 M
1998 755 L
1200 4061 M
114 27 V
114 -245 V
114 -485 V
114 -268 V
114 -60 V
114 -303 V
114 -595 V
114 -258 V
113 -500 V
114 -293 V
2453 908 L
2567 794 L
114 -88 V
114 27 V
114 5 V
114 -57 V
114 -25 V
114 -59 V
114 8 V
114 -31 V
114 6 V
114 -7 V
114 19 V
114 -38 V
114 -15 V
113 8 V
114 15 V
114 -36 V
114 -2 V
114 2 V
114 5 V
114 15 V
114 44 V
114 -74 V
114 -5 V
114 14 V
114 1 V
114 -15 V
114 4 V
114 4 V
114 -2 V
113 2 V
114 -9 V
114 7 V
114 2 V
114 6 V
114 10 V
114 -12 V
114 -7 V
LT1
1200 4061 M
114 8 V
114 -199 V
114 -336 V
114 -240 V
114 -127 V
114 -185 V
114 -397 V
114 -71 V
113 -471 V
114 -333 V
114 -302 V
114 -192 V
114 -165 V
2795 907 L
114 -84 V
114 -26 V
114 -52 V
114 -86 V
114 -29 V
114 -36 V
114 -9 V
114 -19 V
114 -3 V
114 -16 V
114 -1 V
113 -8 V
114 -3 V
114 -9 V
114 2 V
114 7 V
114 4 V
114 -18 V
114 9 V
114 2 V
114 -8 V
114 -8 V
114 -1 V
114 7 V
114 10 V
114 -1 V
114 18 V
113 -6 V
114 -1 V
114 0 V
114 6 V
114 -7 V
114 12 V
114 -12 V
114 -6 V
LT2
1200 4061 M
114 275 V
114 -443 V
1542 2836 L
114 -699 V
114 202 V
114 405 V
114 -514 V
114 -210 V
113 -304 V
114 -24 V
114 172 V
114 -23 V
114 -220 V
114 44 V
114 231 V
114 92 V
114 -220 V
114 -401 V
114 163 V
114 -107 V
3593 948 L
114 -79 V
114 4 V
114 19 V
4049 752 L
113 96 V
114 18 V
114 75 V
114 -87 V
114 158 V
114 55 V
114 244 V
114 -153 V
114 74 V
114 -150 V
114 -56 V
114 -65 V
114 74 V
114 6 V
114 -51 V
114 150 V
113 -43 V
114 19 V
6213 924 L
114 38 V
6441 853 L
6555 665 L
114 -1 V
114 5 V
LT3
1200 4061 M
114 5 V
114 -104 V
114 -286 V
114 -211 V
114 -68 V
114 -175 V
114 -768 V
114 -438 V
113 -807 V
2339 820 L
2453 699 L
114 -86 V
114 -23 V
114 -57 V
114 6 V
114 63 V
114 12 V
114 -74 V
114 17 V
114 -31 V
114 19 V
114 -20 V
114 -2 V
114 -6 V
114 8 V
113 -6 V
114 28 V
114 -17 V
114 10 V
114 0 V
114 14 V
114 -21 V
114 12 V
114 4 V
114 -15 V
114 -5 V
114 -11 V
114 22 V
114 8 V
114 -10 V
114 16 V
113 4 V
114 -11 V
114 2 V
114 12 V
114 7 V
114 10 V
114 -21 V
114 1 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 2109 x @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: lnoise.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1135 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(20) Rshow
1200 1769 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(40) Rshow
1200 2403 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(60) Rshow
1200 3037 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(80) Rshow
1200 3671 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(100) Rshow
1200 4305 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(120) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(140) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1770 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(5) Cshow
2339 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(10) Cshow
2909 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(15) Cshow
3479 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(25) Cshow
4618 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(30) Cshow
5188 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(35) Cshow
5758 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
6327 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(45) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(50) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Cumulative squared error on the training set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
5758 2752 M
(EG) Lshow
5758 3005 M
(EG-T) Lshow
5758 3481 M
(EG-L) Lshow
5758 4495 M
(GD) Lshow
LT0
1200 501 M
114 384 V
114 189 V
114 306 V
114 148 V
114 167 V
114 176 V
114 136 V
114 156 V
113 110 V
114 88 V
114 66 V
114 47 V
114 27 V
114 25 V
114 24 V
114 19 V
114 18 V
114 22 V
114 14 V
114 18 V
114 14 V
114 12 V
114 13 V
114 14 V
114 10 V
113 13 V
114 12 V
114 10 V
114 15 V
114 13 V
114 12 V
114 12 V
114 12 V
114 18 V
114 11 V
114 14 V
114 13 V
114 10 V
114 10 V
114 12 V
114 10 V
113 11 V
114 9 V
114 10 V
114 9 V
114 10 V
114 11 V
114 11 V
114 11 V
114 11 V
LT1
1200 501 M
114 384 V
114 190 V
114 316 V
114 162 V
114 192 V
114 213 V
114 177 V
114 210 V
113 164 V
114 149 V
114 122 V
114 86 V
114 44 V
114 46 V
114 36 V
114 23 V
114 23 V
114 22 V
114 15 V
114 15 V
114 14 V
114 13 V
114 12 V
114 15 V
114 10 V
113 10 V
114 12 V
114 9 V
114 14 V
114 13 V
114 11 V
114 14 V
114 12 V
114 15 V
114 10 V
114 13 V
114 12 V
114 11 V
114 8 V
114 10 V
114 12 V
113 14 V
114 11 V
114 11 V
114 11 V
114 12 V
114 10 V
114 11 V
114 11 V
114 12 V
LT2
1200 501 M
114 355 V
114 169 V
114 294 V
114 192 V
114 155 V
114 208 V
114 224 V
114 199 V
113 129 V
114 122 V
114 118 V
114 137 V
114 87 V
114 103 V
114 150 V
114 102 V
114 94 V
114 78 V
114 82 V
114 53 V
114 77 V
114 55 V
114 46 V
114 44 V
114 49 V
113 54 V
114 38 V
114 33 V
114 44 V
114 51 V
114 33 V
114 37 V
114 36 V
114 32 V
114 35 V
114 33 V
114 34 V
114 22 V
114 22 V
114 29 V
114 23 V
113 25 V
114 26 V
114 32 V
114 22 V
114 21 V
114 24 V
114 18 V
114 29 V
114 19 V
LT3
1200 501 M
114 392 V
114 200 V
114 326 V
114 158 V
114 194 V
114 193 V
114 149 V
114 166 V
113 102 V
114 68 V
114 28 V
114 17 V
114 15 V
114 13 V
114 13 V
114 13 V
114 9 V
114 14 V
114 11 V
114 12 V
114 13 V
114 13 V
114 13 V
114 17 V
114 10 V
113 10 V
114 13 V
114 10 V
114 15 V
114 13 V
114 13 V
114 15 V
114 12 V
114 15 V
114 11 V
114 14 V
114 13 V
114 12 V
114 8 V
114 12 V
114 12 V
113 14 V
114 11 V
114 12 V
114 12 V
114 13 V
114 10 V
114 11 V
114 11 V
114 13 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 739 4922 a Fj(Figure)27 b(3.)36 b(Sup)r(ervised)28
b(learning,)e(linear)h(unit,)h(sparse)f(target,)f(10\045)h(noise)1934
5147 y(8)p eop
%%Page: 9 11
9 10 bop 523 2631 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: emove.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1056 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(20) Rshow
1200 1611 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(40) Rshow
1200 2165 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(60) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(80) Rshow
1200 3275 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(100) Rshow
1200 3830 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(120) Rshow
1200 4384 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(140) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(160) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
2150 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
3099 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(60) Cshow
4998 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(80) Cshow
5948 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(100) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(120) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(RMSE on the test set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
5948 1416 M
(EG-T) Lshow
5330 778 M
(GD) Lshow
4049 778 M
(EG) Rshow
4286 2359 M
(EG-L) Cshow
LT0
4286 1121 M
0 1183 V
1200 1280 M
47 8 V
48 16 V
47 -135 V
48 -109 V
47 -169 V
48 -32 V
47 -52 V
48 -119 V
47 -47 V
48 -42 V
47 -34 V
48 -8 V
47 -11 V
48 1 V
47 -11 V
48 -13 V
47 -6 V
48 -2 V
47 -4 V
48 0 V
47 -2 V
47 1 V
48 -2 V
47 -1 V
48 0 V
47 0 V
48 -1 V
47 0 V
48 -1 V
47 1 V
48 -1 V
47 -1 V
48 0 V
47 0 V
48 0 V
47 -1 V
48 0 V
47 0 V
48 0 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 -1 V
47 1 V
48 -1 V
47 1 V
48 3891 V
47 -1143 V
48 -894 V
47 -591 V
48 -401 V
47 -244 V
48 -59 V
47 121 V
48 241 V
47 -9 V
48 299 V
47 24 V
47 163 V
48 -3 V
47 -379 V
48 109 V
47 -269 V
48 -26 V
47 -5 V
48 18 V
47 5 V
48 -177 V
47 196 V
48 -27 V
47 -269 V
48 -91 V
47 102 V
48 52 V
47 -10 V
48 65 V
47 -116 V
47 -99 V
48 -35 V
47 80 V
48 -13 V
47 -139 V
48 447 V
47 -181 V
48 -60 V
47 91 V
48 -56 V
47 48 V
48 97 V
47 -108 V
48 6 V
47 127 V
48 -179 V
47 -7 V
48 -25 V
47 -3 V
48 -77 V
47 296 V
47 -22 V
48 -85 V
47 -31 V
48 -8 V
47 92 V
48 -210 V
47 14 V
48 -71 V
47 -29 V
48 153 V
47 -50 V
48 -140 V
47 71 V
48 -5 V
47 185 V
48 -171 V
47 -30 V
48 110 V
LT1
1200 1280 M
47 10 V
48 24 V
47 -116 V
48 -41 V
47 -108 V
48 -27 V
47 -59 V
48 -119 V
47 -80 V
48 -60 V
47 -83 V
48 -25 V
47 -14 V
48 -12 V
47 -18 V
48 -17 V
47 -14 V
48 -4 V
47 -6 V
48 -1 V
47 -3 V
47 2 V
48 -3 V
47 0 V
48 0 V
47 0 V
48 -1 V
47 0 V
48 -1 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 -1 V
48 0 V
47 0 V
48 1 V
47 0 V
47 1 V
48 -1 V
47 0 V
48 -1 V
47 0 V
48 -1 V
47 0 V
48 0 V
47 0 V
48 3917 V
47 -1062 V
48 -509 V
47 -379 V
48 -548 V
47 -606 V
48 -237 V
47 -8 V
48 113 V
47 -30 V
48 100 V
47 -20 V
47 49 V
48 -16 V
47 -145 V
48 -17 V
47 -153 V
48 -92 V
47 -103 V
48 7 V
47 -11 V
48 -62 V
47 3 V
48 -27 V
47 -61 V
48 -31 V
47 -6 V
48 0 V
47 -6 V
48 -2 V
47 -9 V
47 -14 V
48 -10 V
47 0 V
48 -3 V
47 -7 V
48 13 V
47 -7 V
48 -4 V
47 -1 V
48 -2 V
47 1 V
48 2 V
47 -3 V
48 -1 V
47 2 V
48 -3 V
47 -2 V
48 -1 V
47 -1 V
48 -2 V
47 5 V
47 -1 V
48 -2 V
47 -1 V
48 0 V
47 0 V
48 -2 V
47 0 V
48 -1 V
47 -1 V
48 2 V
47 -1 V
48 -2 V
47 0 V
48 1 V
47 0 V
48 0 V
47 -1 V
48 1 V
LT2
1200 1280 M
47 139 V
48 190 V
47 -380 V
48 -7 V
47 -202 V
48 115 V
47 -176 V
48 -81 V
47 -91 V
48 78 V
47 -138 V
48 -80 V
47 -3 V
48 67 V
47 8 V
48 8 V
47 -10 V
48 -78 V
47 -21 V
48 -22 V
47 11 V
47 29 V
48 62 V
47 -8 V
48 -54 V
47 -31 V
48 -26 V
47 8 V
48 -28 V
47 -5 V
48 11 V
47 -11 V
48 10 V
47 1 V
48 -1 V
47 -14 V
48 -1 V
47 1 V
48 -5 V
47 -1 V
47 -1 V
48 -15 V
47 -11 V
48 1 V
47 -2 V
48 -1 V
47 0 V
48 -3 V
47 3 V
48 3902 V
47 -1657 V
48 225 V
47 -83 V
48 -506 V
47 -474 V
48 -428 V
47 442 V
48 244 V
47 -453 V
48 208 V
47 -297 V
47 311 V
48 -77 V
47 -211 V
48 -9 V
47 -234 V
48 155 V
47 -83 V
48 -290 V
47 112 V
48 -247 V
47 -121 V
48 -54 V
47 -38 V
48 -17 V
47 -14 V
48 -39 V
47 -23 V
48 98 V
47 -56 V
47 -60 V
48 -4 V
47 -47 V
48 47 V
47 59 V
48 -103 V
47 -27 V
48 -36 V
47 7 V
48 -33 V
47 -14 V
48 -34 V
47 8 V
48 -7 V
47 -3 V
48 -17 V
47 -13 V
48 -9 V
47 5 V
48 -7 V
47 -3 V
47 -1 V
48 -1 V
47 3 V
48 -1 V
47 -2 V
48 -1 V
47 1 V
48 4 V
47 -1 V
48 1 V
47 -1 V
48 -2 V
47 -1 V
48 -1 V
47 -2 V
48 0 V
47 -2 V
48 1 V
LT3
1200 1280 M
47 2 V
48 5 V
47 -68 V
48 -82 V
47 -176 V
48 -67 V
47 -114 V
48 -136 V
47 -52 V
48 -50 V
47 -29 V
48 -4 V
47 2 V
48 0 V
47 -3 V
48 -3 V
47 1 V
48 -1 V
47 1 V
48 -1 V
47 -1 V
47 2 V
48 0 V
47 -1 V
48 1 V
47 0 V
48 -2 V
47 1 V
48 -1 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 0 V
47 -1 V
48 0 V
47 0 V
48 1 V
47 1 V
47 0 V
48 -1 V
47 -1 V
48 0 V
47 -1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 3966 V
47 -1123 V
48 -579 V
47 -869 V
48 -584 V
47 -6 V
48 -328 V
47 230 V
48 78 V
47 -309 V
48 144 V
47 -327 V
47 -81 V
48 -169 V
47 2 V
48 22 V
47 -30 V
48 44 V
47 -25 V
48 19 V
47 -5 V
48 -41 V
47 -1 V
48 11 V
47 -21 V
48 8 V
47 -8 V
48 -5 V
47 2 V
48 -8 V
47 4 V
47 1 V
48 2 V
47 19 V
48 -15 V
47 -9 V
48 10 V
47 1 V
48 5 V
47 2 V
48 -13 V
47 0 V
48 -4 V
47 1 V
48 -5 V
47 -1 V
48 1 V
47 -3 V
48 1 V
47 7 V
48 -7 V
47 1 V
47 0 V
48 -2 V
47 5 V
48 -5 V
47 1 V
48 1 V
47 3 V
48 3 V
47 -7 V
48 -3 V
47 1 V
48 2 V
47 4 V
48 -4 V
47 0 V
48 -1 V
47 -1 V
48 -1 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 2109 x @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: lmove.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 945 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(50) Rshow
1200 1389 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(100) Rshow
1200 1832 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(150) Rshow
1200 2276 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(200) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(250) Rshow
1200 3164 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(300) Rshow
1200 3608 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(350) Rshow
1200 4051 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(400) Rshow
1200 4495 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(450) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(500) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
2150 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
3099 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(60) Cshow
4998 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(80) Cshow
5948 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(100) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(120) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Cumulative squared error on the training set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
6422 2409 M
(EG) Rshow
6422 3048 M
(EG-L) Rshow
6422 3963 M
(GD) Rshow
6422 4318 M
(EG-T) Rshow
LT0
1200 572 M
47 76 V
48 86 V
47 89 V
48 52 V
47 42 V
48 43 V
47 25 V
48 17 V
47 14 V
48 11 V
47 6 V
48 4 V
47 4 V
48 2 V
47 2 V
48 3 V
47 1 V
48 1 V
47 2 V
48 1 V
47 0 V
47 1 V
48 1 V
47 1 V
48 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 221 V
47 264 V
48 205 V
47 141 V
48 134 V
47 89 V
48 121 V
47 90 V
48 80 V
47 63 V
48 54 V
47 63 V
47 53 V
48 52 V
47 40 V
48 40 V
47 47 V
48 35 V
47 47 V
48 35 V
47 26 V
48 40 V
47 22 V
48 42 V
47 29 V
48 32 V
47 33 V
48 28 V
47 38 V
48 26 V
47 40 V
47 29 V
48 38 V
47 36 V
48 31 V
47 35 V
48 34 V
47 25 V
48 22 V
47 34 V
48 27 V
47 30 V
48 26 V
47 35 V
48 31 V
47 32 V
48 30 V
47 29 V
48 29 V
47 32 V
48 36 V
47 32 V
47 31 V
48 33 V
47 35 V
48 43 V
47 32 V
48 35 V
47 21 V
48 27 V
47 33 V
48 31 V
47 28 V
48 35 V
47 27 V
48 28 V
47 24 V
48 33 V
47 31 V
48 30 V
LT1
1200 572 M
47 76 V
48 88 V
47 95 V
48 65 V
47 53 V
48 64 V
47 43 V
48 31 V
47 28 V
48 24 V
47 12 V
48 7 V
47 8 V
48 4 V
47 3 V
48 2 V
47 2 V
48 1 V
47 2 V
48 0 V
47 1 V
47 1 V
48 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 220 V
47 249 V
48 176 V
47 140 V
48 145 V
47 94 V
48 113 V
47 91 V
48 74 V
47 56 V
48 46 V
47 54 V
47 44 V
48 39 V
47 31 V
48 25 V
47 29 V
48 18 V
47 22 V
48 16 V
47 9 V
48 11 V
47 5 V
48 9 V
47 6 V
48 6 V
47 4 V
48 3 V
47 5 V
48 2 V
47 4 V
47 2 V
48 3 V
47 2 V
48 2 V
47 1 V
48 2 V
47 1 V
48 1 V
47 1 V
48 1 V
47 1 V
48 1 V
47 1 V
48 1 V
47 0 V
48 1 V
47 1 V
48 0 V
47 1 V
48 1 V
47 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 1 V
LT2
1200 575 M
47 73 V
48 84 V
47 90 V
48 47 V
47 53 V
48 57 V
47 40 V
48 31 V
47 37 V
48 46 V
47 32 V
48 20 V
47 24 V
48 20 V
47 16 V
48 21 V
47 13 V
48 13 V
47 12 V
48 9 V
47 9 V
47 8 V
48 8 V
47 7 V
48 7 V
47 7 V
48 7 V
47 3 V
48 6 V
47 4 V
48 4 V
47 4 V
48 2 V
47 4 V
48 2 V
47 2 V
48 2 V
47 2 V
48 2 V
47 2 V
47 2 V
48 2 V
47 0 V
48 1 V
47 1 V
48 1 V
47 0 V
48 1 V
47 1 V
48 224 V
47 279 V
48 238 V
47 152 V
48 159 V
47 140 V
48 116 V
47 131 V
48 105 V
47 66 V
48 58 V
47 73 V
47 53 V
48 70 V
47 55 V
48 39 V
47 49 V
48 31 V
47 43 V
48 32 V
47 30 V
48 39 V
47 33 V
48 25 V
47 19 V
48 21 V
47 16 V
48 16 V
47 13 V
48 12 V
47 10 V
47 9 V
48 9 V
47 8 V
48 8 V
47 5 V
48 6 V
47 6 V
48 5 V
47 5 V
48 4 V
47 3 V
48 4 V
47 2 V
48 4 V
47 2 V
48 3 V
47 3 V
48 2 V
47 2 V
48 2 V
47 2 V
47 1 V
48 1 V
47 1 V
48 1 V
47 1 V
48 1 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 1 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
48 0 V
LT3
1200 572 M
47 78 V
48 89 V
47 97 V
48 63 V
47 50 V
48 46 V
47 22 V
48 10 V
47 5 V
48 3 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 1 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 1 V
47 0 V
48 0 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
48 0 V
47 0 V
47 1 V
48 0 V
47 0 V
48 0 V
47 0 V
48 0 V
47 1 V
48 0 V
47 0 V
48 209 V
47 231 V
48 131 V
47 112 V
48 113 V
47 86 V
48 98 V
47 65 V
48 47 V
47 25 V
48 25 V
47 23 V
47 22 V
48 12 V
47 5 V
48 3 V
47 3 V
48 3 V
47 3 V
48 1 V
47 4 V
48 3 V
47 2 V
48 2 V
47 1 V
48 2 V
47 2 V
48 1 V
47 2 V
48 1 V
47 1 V
47 2 V
48 1 V
47 1 V
48 1 V
47 2 V
48 0 V
47 2 V
48 1 V
47 0 V
48 1 V
47 1 V
48 0 V
47 1 V
48 0 V
47 1 V
48 1 V
47 0 V
48 1 V
47 0 V
48 1 V
47 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 1 V
48 0 V
47 0 V
48 1 V
47 0 V
48 1 V
47 0 V
48 0 V
47 1 V
48 0 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 791 4922 a Fj(Figure)27 b(4.)37 b(Sup)r(ervised)27
b(learning,)g(linear)f(unit,)j(non-stationary)c(target)1934
5147 y(9)p eop
%%Page: 10 12
10 11 bop 523 614 a Fj(found)31 b(to)f(impro)n(v)n(e)f(p)r(erformance;)
i(moreo)n(v)n(er,)d(it)j(can)f(signi\014can)n(tly)f(degrade)h(it)g(in)h
(the)523 714 y(non-stationary)26 b(case.)523 989 y Fi(4.)55
b(Exp)t(erimen)l(ts)31 b(with)g(m)l(ultila)l(y)l(er)h(feed-forw)l(ard)f
(neu-)523 1138 y(ral)46 b(nets)523 1320 y Fj(The)24 b(extension)g(of)g
(the)g(EG)g(up)r(date)g(algorithm)f(from)h(a)f(single)h(neuron)f(to)h
(feed-forw)n(ard)523 1419 y(m)n(ultila)n(y)n(ered)32
b(nets)h(is)g(straigh)n(tforw)n(ard.)51 b(Assuming)33
b(a)f(sigmoid)h(squashing)f(function,)523 1519 y(the)c(algorithm)e(p)r
(erforms)h(the)h(follo)n(wing)f(up)r(date)1543 1702 y(log)14
b Fg(w)1723 1714 y Ff(i;j)1825 1702 y Fj(:=)22 b(log)14
b Fg(w)2115 1714 y Ff(i;j)2213 1702 y Fj(+)k Fg(\016)2333
1714 y Ff(j)523 1884 y Fj(where)1265 1984 y Fg(\016)1302
1996 y Ff(j)1360 1984 y Fj(:=)23 b Fg(o)1511 1996 y Ff(j)1546
1984 y Fj(\(1)18 b Fh(\000)g Fg(o)1761 1996 y Ff(j)1797
1984 y Fj(\)\()p Fg(y)1902 1996 y Ff(j)1955 1984 y Fh(\000)g
Fg(o)2078 1996 y Ff(j)2113 1984 y Fj(\))p Fg(;)c Fh(8)p
Fg(j)28 b Fh(2)23 b Fg(outputs)1155 2153 y(\016)1192
2165 y Ff(j)1250 2153 y Fj(:=)g Fg(o)1401 2165 y Ff(j)1436
2153 y Fj(\(1)c Fh(\000)f Fg(o)1652 2165 y Ff(j)1687
2153 y Fj(\))1827 2074 y Fd(X)1733 2253 y Ff(k)q Fb(2)p
Ff(outputs)2055 2153 y Fg(w)2114 2165 y Ff(j;k)2202 2153
y Fg(\016)2239 2165 y Ff(k)2280 2153 y Fg(;)c Fh(8)p
Fg(j)27 b Fh(2)d Fg(hidden)523 2388 y Fj(Some)g(theoretical)g(prop)r
(erties)f(of)i(EG)f(up)r(dates)g(used)h(with)g(sigmoid)e(neurons)h(are)
f(giv)n(en)523 2488 y(in)28 b(\(Helm)n(b)r(old,)g(Kivinen)f(and)h(W)-7
b(arm)n(uth,)28 b(1995\).)648 2588 y(The)34 b(learning)f(task)g(w)n(as)
g(a)h(randomly)f(generated)g(function)i(with)f(w)n(eigh)n(ts)g(in)g
(the)523 2687 y(in)n(terv)-5 b(al)27 b([-1,)h(1],)g(that)g(can)f(b)r(e)
i(represen)n(ted)d(b)n(y)i(a)g(3-la)n(y)n(ered)d(net)j(with)h(5)e
(hidden)i(units.)523 2787 y(The)c(function)h(has)f(10)g(real-v)-5
b(alued)24 b(input)i(v)-5 b(ariables)24 b(that)h(can)g(tak)n(e)g(v)-5
b(alues)25 b(b)r(et)n(w)n(een)g(-1)523 2886 y(and)i(1.)37
b(The)28 b(output)g(is)f(also)g(a)g(real)g(v)-5 b(alue)27
b(b)r(et)n(w)n(een)h(-1)e(and)i(1.)648 2986 y(The)22
b(algorithms)e(in)n(v)n(olv)n(ed)h(in)h(the)h(exp)r(erimen)n(t)f(w)n
(ere)f(EG)g(and)h(the)h(usual)e(bac)n(kprop-)523 3086
y(agation)27 b(algorithm)g(\()h(denoted)g(GD\).)h(F)-7
b(or)27 b(EG,)h(the)h(same)e(sc)n(heme)h(of)g(using)f(duplicate)523
3185 y(negativ)n(e)g(inputs)h(w)n(as)e(used)i(in)g(order)e(to)h(allo)n
(w)g(for)g(negativ)n(e)f(w)n(eigh)n(ts.)648 3285 y(The)36
b(exp)r(erimen)n(t)g(w)n(as)f(p)r(erformed)h(on)g(a)g(3-la)n(y)n(ered)e
(net)j(with)f(10)g(input)h(units,)i(5)523 3385 y(hidden)29
b(units)g(and)f(one)h(output.)40 b(All)29 b(the)g(units)g(used)f(a)h
(sigmoid)e(squashing)h(function.)523 3484 y(The)35 b(training)f
(instances)g(w)n(ere)g(generated)f(b)n(y)i(random)e(sampling)h(from)h
(the)g(in)n(terv)-5 b(al)523 3584 y([)p Fh(\000)p Fj(1)p
Fg(;)14 b Fj(1])755 3554 y Fe(10)824 3584 y Fj(.)648
3683 y(The)27 b(learning)g(rate)g(w)n(as)g(the)h(same)g(for)f(all)h
(the)g(units.)38 b(The)28 b(initial)g(w)n(eigh)n(ts)f(w)n(ere)g(0)523
3783 y(for)e(GD)g(and)g(1)g(for)f(EG)h(\(th)n(us)g(e\013ectiv)n(ely)g
(starting)f(b)r(oth)h(algorithms)f(at)h(n)n(ull)g(w)n(eigh)n(ts\).)648
3883 y(In)30 b(order)f(to)h(pro)n(vide)f(a)h(fair)g(comparaison,)f(eac)
n(h)h(algorithm)f(w)n(as)g(tested)i(at)f(5)g(dif-)523
3982 y(feren)n(t)d(learning)g(rates.)648 4082 y(Figure)h(5)i(presen)n
(ts)e(the)i(cum)n(ulativ)n(e)f(training)g(error)e(and)j(the)g(ro)r(ot)e
(mean)i(squared)523 4182 y(error)35 b(on)i(an)g(indep)r(enden)n(t)h
(test)f(set,)j(for)d(a)f(t)n(ypical)h(learning)f(curv)n(e)g(obtained)h
(for)g(a)523 4281 y(\\b)r(est")27 b(learning)g(rate.)648
4381 y(EG)38 b(has)g(a)h(smaller)f(cum)n(ulated)h(loss)f(on)g(the)h
(training)g(set,)i(but)f(stabilizes)e(at)h(a)523 4480
y(higher)31 b(error)e(on)j(the)f(test)h(set.)49 b(The)31
b(same)g(pattern)h(of)f(b)r(eha)n(vior)f(has)h(b)r(een)h(observ)n(ed)
523 4580 y(in)c(sev)n(eral)d(test)j(problems.)36 b(Ho)n(w)n(ev)n(er,)25
b(more)h(exp)r(erimen)n(ts)h(w)n(ould)g(b)r(e)h(needed)f(in)h(order)523
4680 y(to)g(form)f(a)g(conclusion)g(for)g(the)h(m)n(ultila)n(y)n(ered)e
(net)i(case.)1914 5147 y(10)p eop
%%Page: 11 13
11 12 bop 523 2631 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: ebp.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 994 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(5) Rshow
1200 1487 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(10) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(15) Rshow
1200 2473 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(20) Rshow
1200 2967 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(25) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(30) Rshow
1200 3953 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(35) Rshow
1200 4446 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(40) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(45) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1770 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(5) Cshow
2339 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(10) Cshow
2909 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(15) Cshow
3479 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(25) Cshow
4618 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(30) Cshow
5188 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(35) Cshow
5758 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
6327 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(45) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(50) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(RMSE on the test set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
2453 1487 M
(EG) Lshow
3137 1487 M
(GD) Lshow
LT0
1200 4904 M
114 -977 V
114 -499 V
114 841 V
1656 3261 L
114 -376 V
114 -551 V
114 -52 V
114 -329 V
113 -178 V
114 357 V
114 202 V
114 -387 V
114 533 V
114 -583 V
114 -382 V
114 -274 V
114 126 V
114 -164 V
114 -178 V
114 -67 V
114 16 V
114 16 V
114 4 V
114 -71 V
4049 811 L
113 -5 V
114 126 V
114 31 V
4504 733 L
114 27 V
114 -30 V
114 -25 V
114 -11 V
114 -8 V
114 -76 V
114 40 V
114 -64 V
114 -18 V
114 -22 V
114 1 V
114 -15 V
113 -3 V
114 -4 V
114 -2 V
114 2 V
114 -4 V
114 0 V
114 5 V
114 0 V
LT1
1200 4904 M
114 -68 V
114 -63 V
114 -49 V
114 -190 V
114 -305 V
114 -477 V
114 -568 V
114 -951 V
113 -366 V
114 -351 V
114 -233 V
114 -70 V
2681 992 L
114 -43 V
114 -41 V
114 -73 V
114 -43 V
114 27 V
114 -55 V
114 10 V
114 5 V
114 -18 V
114 2 V
114 -16 V
114 13 V
113 -11 V
114 -15 V
114 9 V
114 -23 V
114 -9 V
114 4 V
114 38 V
114 -1 V
114 -17 V
114 -9 V
114 -10 V
114 -4 V
114 7 V
114 -23 V
114 0 V
114 -5 V
113 1 V
114 -2 V
114 -17 V
114 17 V
114 27 V
114 -9 V
114 -20 V
114 0 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 2109 x @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: lbp.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
5697 0 V
-5697 0 R
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0) Rshow
1200 1241 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(20) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(40) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(60) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(80) Rshow
1200 4199 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(100) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(120) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1770 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(5) Cshow
2339 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(10) Cshow
2909 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(15) Cshow
3479 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(20) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(25) Cshow
4618 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(30) Cshow
5188 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(35) Cshow
5758 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(40) Cshow
6327 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(45) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(50) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Cumulative squared error on the training set) Cshow
grestore
4048 101 M
(Number of training instances \(over 10\)) Cshow
6327 3608 M
(EG) Lshow
6327 4421 M
(GD) Lshow
LT0
1200 501 M
114 318 V
114 233 V
114 331 V
114 312 V
114 217 V
114 304 V
114 189 V
114 214 V
113 135 V
114 140 V
114 189 V
114 132 V
114 138 V
114 136 V
114 110 V
114 74 V
114 64 V
114 48 V
114 54 V
114 43 V
114 50 V
114 41 V
114 33 V
114 28 V
114 21 V
113 29 V
114 22 V
114 25 V
114 20 V
114 21 V
114 17 V
114 22 V
114 7 V
114 8 V
114 12 V
114 10 V
114 9 V
114 10 V
114 10 V
114 8 V
114 6 V
113 4 V
114 5 V
114 5 V
114 6 V
114 3 V
114 3 V
114 3 V
114 4 V
114 3 V
LT1
1200 501 M
114 347 V
114 212 V
114 416 V
114 365 V
114 345 V
114 405 V
114 209 V
114 232 V
113 183 V
114 71 V
114 55 V
114 50 V
114 34 V
114 17 V
114 6 V
114 4 V
114 3 V
114 2 V
114 2 V
114 1 V
114 2 V
114 2 V
114 1 V
114 2 V
114 2 V
113 1 V
114 2 V
114 1 V
114 1 V
114 2 V
114 1 V
114 2 V
114 1 V
114 1 V
114 1 V
114 2 V
114 1 V
114 1 V
114 1 V
114 2 V
114 1 V
113 1 V
114 1 V
114 1 V
114 2 V
114 1 V
114 1 V
114 1 V
114 1 V
114 1 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 1097 4922 a Fj(Figure)27 b(5.)37 b(Sup)r(ervised)27
b(learning,)g(m)n(ultila)n(y)n(ered)f(net)1914 5147 y(11)p
eop
%%Page: 12 14
12 13 bop 523 614 a Fi(5.)72 b(Exp)t(onen)l(tiated)50
b(gradien)l(t)g(descen)l(t)f(for)g(reinforce-)523 764
y(men)l(t)d(learning)523 946 y Fj(EG)24 b(up)r(dates)g(can)g(b)r(e)h
(adapted)f(to)g(w)n(ork)f(with)i(reinforcemen)n(t)e(learning)g
(algorithms,)h(b)n(y)523 1045 y(using)33 b(the)g(same)f(t)n(yp)r(e)h
(of)g(up)r(date)h(as)e(in)h(the)g(linear)f(sup)r(ervised)h(learning)e
(algorithm,)523 1145 y(but)i(b)n(y)g(computing)f(a)g(TD)i(error)c
(instead)j(of)f(the)h(training)f(error.)50 b(Th)n(us,)34
b(the)f(w)n(eigh)n(t)523 1245 y(up)r(date)28 b(rule)f(b)r(ecomes:)1536
1344 y(log)14 b Fg(w)1716 1356 y Ff(i)1767 1344 y Fj(:=)23
b(log)14 b Fg(w)2058 1356 y Ff(i)2104 1344 y Fj(+)k Fg(\013\016)2277
1356 y Ff(t)2307 1344 y Fg(e)2346 1356 y Ff(t)523 1487
y Fj(F)-7 b(or)27 b(state)g(v)-5 b(alue)28 b(computation,)1458
1659 y Fg(\016)1495 1671 y Ff(t)1547 1659 y Fj(:=)23
b Fg(r)e Fj(+)d Fg(\015)5 b(V)1895 1671 y Ff(t)1924 1659
y Fj(\()p Fg(s)1995 1671 y Ff(t)p Fe(+1)2109 1659 y Fj(\))18
b Fh(\000)g Fg(V)2290 1671 y Ff(t)2320 1659 y Fj(\()p
Fg(s)2391 1671 y Ff(t)2420 1659 y Fj(\))523 1831 y(In)35
b(order)f(to)h(prev)n(en)n(t)f(the)h(w)n(eigh)n(ts)f(from)h(getting)g
(to)r(o)g(big,)h(replace)e(traces)g(are)g(used)523 1931
y(instead)27 b(of)h(accum)n(ulating)f(traces)f(\(Singh)i(and)g(Sutton,)
g(1996\):)1365 2153 y Fg(e)1404 2165 y Ff(t)1432 2153
y Fj(\()p Fg(s)p Fj(\))c(=)1647 2036 y Fd(\032)1750 2102
y Fj(1)338 b(if)28 b Fg(s)23 b Fj(=)g Fg(s)2395 2114
y Ff(t)1750 2202 y Fg(\015)5 b(\025e)1885 2214 y Ff(t)1914
2202 y Fj(\()p Fg(s)1985 2214 y Ff(t)2015 2202 y Fj(\))83
b Fg(other)r(w)r(ise)648 2507 y Fj(The)37 b(\014rst)g(task)g(tak)n(en)g
(in)n(to)g(consideration)e(is)j(a)f(prediction)g(task)f(in)i(a)f(b)r
(ounded)523 2607 y(con)n(tin)n(uous)32 b(random)f(w)n(alk)h(problem.)52
b(The)33 b(w)n(alking)e(in)n(terv)-5 b(al)32 b(is)h([0,1].)51
b(The)33 b(starting)523 2707 y(p)r(oin)n(t)23 b(is)f(alw)n(a)n(ys)e(in)
j(the)g(middle)g(of)f(the)h(in)n(terv)-5 b(al.)34 b(The)23
b(steps)f(can)g(ha)n(v)n(e)f(random)h(lengths)523 2806
y(b)r(et)n(w)n(een)28 b(-0.2)f(and)h(0.2.)38 b(The)28
b(outcome)f(is)h(0)g(if)h(exiting)f(the)g(in)n(terv)-5
b(al)28 b(through)f(the)i(left,)523 2906 y(and)c(1)f(if)h(exiting)g(on)
f(the)h(righ)n(t.)35 b(There)25 b(is)f(no)h(rew)n(ard)e(for)h(an)n(y)g
(in)n(termediate)g(step.)36 b(The)523 3005 y(discoun)n(t)27
b(factor)g(is)h Fg(\015)f Fj(=)c(1.)648 3105 y(Based)33
b(on)i(the)g(theoretical)f(prop)r(erties)g(of)g(the)h(sup)r(ervised)g
(learning)e(linear)h(case,)523 3205 y(this)h(problem)g(is)f(one)h(in)g
(whic)n(h)g(EG)f(should)h(ha)n(v)n(e)f(a)g(disadv)-5
b(an)n(tage)33 b(with)j(resp)r(ect)f(to)523 3304 y(GD,)g(b)r(ecause)e
(all)h(the)g(features)f(in)h(this)g(case)f(are)g(relev)-5
b(an)n(t)33 b(and)h(the)g(w)n(eigh)n(ts)f(ha)n(v)n(e)g(a)523
3404 y(linear)27 b(v)-5 b(ariation.)648 3504 y(Because)26
b(the)h(problem)g(has)g(a)f(con)n(tin)n(uous)h(state)g(space,)f(w)n(e)h
(used)g(an)g(appro)n(ximate)523 3603 y(v)-5 b(alue)27
b(function,)g(implemen)n(ted)h(through)e(a)g(CMA)n(C.)h(The)g(p)r
(osition,)g(whic)n(h)g(is)g(the)g(only)523 3703 y(state)32
b(v)-5 b(ariable)31 b(in)h(this)g(case,)g(w)n(as)f(divided)h(in)h(in)n
(to)e(10)g(ev)n(enly)h(spaced)f(in)n(terv)-5 b(als.)49
b(An)523 3802 y(additional)39 b(division)f(w)n(as)g(added,)k(in)e
(order)d(to)i(allo)n(w)f(for)h(an)g(initial)g(o\013set)g(of)g(eac)n(h)
523 3902 y(tile.)65 b(W)-7 b(e)37 b(used)g(10)f(tilings,)j(with)e
(di\013eren)n(t)g(randomly)e(selected)i(o\013sets.)64
b(Th)n(us,)39 b(the)523 4002 y(algorithms)33 b(ha)n(v)n(e)g(11)21
b Fh(\003)i Fj(11)e Fh(\003)i Fj(10)32 b(=)i(1210)e(input)j(features.)
55 b(A)n(t)35 b(eac)n(h)e(step,)j(exactly)d(10)523 4101
y(features)27 b(are)g(activ)n(e)g(\(one)g(for)g(eac)n(h)g(tiling\),)h
(represen)n(ting)e(the)i(curren)n(t)f(state.)648 4201
y(The)33 b(detailed)g(learning)f(algorithm)g(with)h(EG)g(up)r(dates)h
(is)f(presen)n(ted)f(in)h(\014gure)g(6.)523 4301 y(In)i(order)e(to)i
(allo)n(w)f(for)g(negativ)n(e)g(w)n(eigh)n(ts,)h(w)n(e)g(used)f(the)i
(input)f(duplication)g(sc)n(heme)523 4400 y(describ)r(ed)24
b(in)h(section)e(2.)36 b(W)-7 b(e)24 b(denote)g(b)n(y)g
Fg(w)1931 4365 y Fe(+)1929 4423 y Ff(i)2011 4400 y Fj(and)g
Fg(w)2230 4365 y Fb(\000)2228 4423 y Ff(i)2311 4400 y
Fj(the)h(w)n(eigh)n(ts)e(asso)r(ciated)g(resp)r(ec-)523
4500 y(tiv)n(ely)k(to)h Fg(x)900 4512 y Ff(i)956 4500
y Fj(and)f Fh(\000)p Fg(x)1229 4512 y Ff(i)1257 4500
y Fj(.)648 4599 y(Both)18 b(algorithms)f(start)h(at)h(n)n(ull)g(actual)
f(w)n(eigh)n(ts.)33 b(In)19 b(order)e(to)i(accoun)n(t)f(for)g(the)h
(e\013ect)523 4699 y(of)32 b(the)h(learning)e(rate)h(and)g(step-size,)h
(there)g(w)n(ere)e(sev)n(eral)g(instances)g(of)i(the)f(learning)523
4799 y(algorithms,)25 b(generated)f(for)h(di\013eren)n(t)g(v)-5
b(alues)25 b(of)g Fg(\025)h Fj(and)f Fg(\013)p Fj(.)37
b(Eac)n(h)24 b(of)h(them)h(w)n(as)f(treated)523 4898
y(as)e(a)h(separate)f(algorithm,)g(whic)n(h)h(ran)g(for)f(10)g(trials.)
35 b(The)24 b(p)r(erformance)f(measure)g(for)h(a)1914
5147 y(12)p eop
%%Page: 13 15
13 14 bop 523 1352 a Fj(1.)37 b(Initialisation:)1061
1534 y Fg(w)1122 1499 y Fe(+)1120 1558 y Ff(i)1200 1534
y Fj(:=)23 b(1)p Fg(:)p Fj(0)p Fg(;)14 b(w)1516 1499
y Fb(\000)1514 1558 y Ff(i)1595 1534 y Fj(:=)23 b(1)p
Fg(:)p Fj(0)p Fg(;)14 b(e)1889 1546 y Ff(i)1938 1534
y Fj(:=)23 b(0)p Fg(;)14 b Fh(8)p Fg(i)21 b Fh(2)i Fg(C)6
b(M)j(AC)25 b Fh(\000)18 b Fg(til)r(es)523 1717 y Fj(2.)37
b(Start)27 b(of)g(trial:)1827 1817 y Fg(s)c Fj(=)g(0)p
Fg(:)p Fj(5)1641 1966 y Fg(F)35 b Fj(:=)22 b Fg(f)9 b(eatur)r(es)p
Fj(\()p Fg(s)p Fj(\))523 2116 y(3.)37 b(Eligibilit)n(y)26
b(trace)h(up)r(dating:)1430 2298 y Fg(e)1469 2310 y Ff(i)1519
2298 y Fj(=)c Fg(\025e)1694 2310 y Ff(i)1721 2298 y Fg(;)14
b Fh(8)p Fg(i)22 b Fh(2)h Fg(C)6 b(M)j(AC)25 b Fh(\000)18
b Fg(til)r(es)1707 2481 y(e)1746 2493 y Ff(i)1796 2481
y Fj(=)23 b(1)p Fg(;)14 b Fh(8)p Fg(i)21 b Fh(2)j Fg(F)523
2630 y Fj(4.)37 b(Mak)n(e)26 b(a)h(random)g(step)h Fg(ds)23
b Fh(2)g Fj([)p Fh(\000)p Fj(0)p Fg(:)p Fj(2)p Fg(;)14
b Fj(0)p Fg(:)p Fj(2])26 b(and)h(get)h(the)g(rew)n(ard)d
Fg(r)r Fj(.)1746 2813 y Fg(s)1785 2779 y Fb(0)1831 2813
y Fj(:=)e Fg(s)18 b Fj(+)g Fg(ds)1286 3032 y(F)1351 2997
y Fb(0)1397 3032 y Fj(:=)1508 2915 y Fd(\032)1612 2981
y Fg(f)9 b(eatur)r(es)p Fj(\()p Fg(s)2011 2951 y Fb(0)2033
2981 y Fj(\))84 b(if)28 b Fg(s)2264 2951 y Fb(0)2310
2981 y Fh(2)23 b Fj(\(0)p Fg(;)14 b Fj(1\))1612 3081
y Fh(;)495 b Fj(otherwise)523 3226 y(5.)37 b(Up)r(date)28
b(w)n(eigh)n(ts:)789 3426 y(log\()p Fg(w)989 3390 y Fe(+)987
3449 y Ff(i)1045 3426 y Fj(\))23 b(:=)g(log\()p Fg(w)1411
3390 y Fe(+)1409 3449 y Ff(i)1467 3426 y Fj(\))c(+)1626
3370 y Fg(\013)p 1611 3407 84 4 v 1611 3483 a Fj(10)1704
3426 y([)p Fg(r)i Fj(+)1879 3347 y Fd(X)1868 3525 y Ff(i)p
Fb(2)p Ff(F)1987 3508 y Fa(0)2010 3426 y Fj(\()p Fg(w)2103
3390 y Fe(+)2101 3449 y Ff(i)2177 3426 y Fh(\000)d Fg(w)2321
3390 y Fb(\000)2319 3449 y Ff(i)2378 3426 y Fj(\))h Fh(\000)2512
3347 y Fd(X)2512 3525 y Ff(i)p Fb(2)p Ff(F)2632 3426
y Fj(\()p Fg(w)2725 3390 y Fe(+)2723 3449 y Ff(i)2799
3426 y Fh(\000)f Fg(w)2943 3390 y Fb(\000)2941 3449 y
Ff(i)3000 3426 y Fj(\)])p Fg(e)3094 3438 y Ff(i)788 3721
y Fj(log\()p Fg(w)988 3685 y Fb(\000)986 3744 y Ff(i)1045
3721 y Fj(\))23 b(:=)g(log\()p Fg(w)1411 3685 y Fb(\000)1409
3744 y Ff(i)1468 3721 y Fj(\))c Fh(\000)1627 3665 y Fg(\013)p
1612 3702 V 1612 3778 a Fj(10)1705 3721 y([)p Fg(r)i
Fj(+)1880 3642 y Fd(X)1869 3820 y Ff(i)p Fb(2)p Ff(F)1988
3803 y Fa(0)2011 3721 y Fj(\()p Fg(w)2104 3685 y Fe(+)2102
3744 y Ff(i)2178 3721 y Fh(\000)d Fg(w)2322 3685 y Fb(\000)2320
3744 y Ff(i)2379 3721 y Fj(\))h Fh(\000)2513 3642 y Fd(X)2513
3820 y Ff(i)p Fb(2)p Ff(F)2633 3721 y Fj(\()p Fg(w)2726
3685 y Fe(+)2724 3744 y Ff(i)2800 3721 y Fh(\000)f Fg(w)2944
3685 y Fb(\000)2942 3744 y Ff(i)3001 3721 y Fj(\)])p
Fg(e)3095 3733 y Ff(i)523 3953 y Fj(6.)37 b(If)28 b Fg(s)747
3923 y Fb(0)793 3953 y Fh(2)23 b Fj(\(0)p Fg(;)14 b Fj(1\))p
Fg(;)g(F)35 b Fj(:=)22 b Fg(F)1356 3923 y Fb(0)1379 3953
y Fg(;)14 b(s)23 b Fj(:=)g Fg(s)1628 3923 y Fb(0)1651
3953 y Fj(.)37 b(Go)28 b(to)f(3.)37 b(Otherwise,)26 b(go)h(to)g(2.)1078
4119 y(Figure)g(6.)37 b(TD)28 b(prediction)f(task)g(learning)f
(algorithm)1914 5147 y(13)p eop
%%Page: 14 16
14 15 bop 523 2631 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: wbest.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.2) Rshow
1200 994 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.22) Rshow
1200 1487 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.24) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.26) Rshow
1200 2473 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.28) Rshow
1200 2967 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.3) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.32) Rshow
1200 3953 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.34) Rshow
1200 4446 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.36) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(0.38) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1833 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.1) Cshow
2466 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
3099 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.3) Cshow
3732 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4365 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.5) Cshow
4998 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
5631 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.7) Cshow
6264 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.9) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Average RMSE on seen states at best alpha) Cshow
grestore
4048 101 M
(lambda) Cshow
4365 1487 M
(EG) Lshow
4365 2350 M
(GD) Lshow
LT0
1200 4212 M
3099 3224 L
4365 2235 L
5631 791 L
1266 820 V
LT1
1200 4746 M
3099 3312 L
4365 1721 L
5631 1082 L
1266 306 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 714 2814 a Fj(Figure)27 b(7.)36 b(Summary)27
b(of)h(the)g(p)r(erformance)e(of)i(EG)f(and)h(GD)g(up)r(dates)g(on)f(a)
1520 2914 y(con)n(tin)n(uous)f(random)h(task)523 3163
y(trial)i(w)n(as)g(the)i(RMSE)e(b)r(et)n(w)n(een)h(the)g(correct)f
(predictions)g(and)h(the)g(predictions)g(made)523 3262
y(at)e(the)g(end)h(of)f(the)g(trial)g(for)f(the)i(states)f(previously)e
(seen)i(in)h(that)f(or)f(a)h(previous)f(trial.)523 3362
y(These)i(errors)e(w)n(ere)h(then)i(a)n(v)n(eraged)d(o)n(v)n(er)g(10)h
(trials)h(and)g(o)n(v)n(er)e(100)h(runs,)i(to)f(pro)n(vide)f(a)523
3462 y(measure)f(of)g(the)h(p)r(erformance)f(of)g(eac)n(h)g(algorithm.)
648 3561 y(Figure)g(7)g(sho)n(ws)f(the)i(p)r(erformance)f(as)g(a)g
(function)h(of)g Fg(\025)p Fj(,)g(at)f(the)h(b)r(est)g
Fg(\013)g Fj(v)-5 b(alue.)648 3661 y(The)34 b(EG)g(and)h(GD)g(up)r
(date)g(rules)f(yield)h(similar)e(errors)g(at)h(all)g(the)h(v)-5
b(alues)34 b(of)h(the)523 3760 y(learning)c(rate.)50
b(The)33 b(di\013erences)f(are)f(not)h(statistically)g(signi\014can)n
(t.)50 b(As)32 b(this)h(t)n(yp)r(e)f(of)523 3860 y(target)27
b(is)g(preferred)g(b)n(y)g(GD,)h(the)g(result)g(can)f(b)r(e)h
(considered)e(fa)n(v)n(ourable)g(to)h(EG.)648 4043 y(The)f(second)f
(task)h(w)n(as)f(the)h(moun)n(tain-car)f(con)n(trol)g(problem,)h(prop)r
(osed)f(b)n(y)g(Mo)r(ore)523 4142 y(\(1991\))c(\(see)h(\014gure)f(8\).)
35 b(The)22 b(ob)5 b(jectiv)n(e)21 b(of)h(the)h(car)e(is)h(to)g(pass)f
(the)h(top)g(of)g(the)h(moun)n(tain.)523 4242 y(Because)35
b(the)h(gra)n(vit)n(y)e(is)h(stronger)f(than)i(the)g(engine,)h(the)g
(solution)e(is)g(to)h(accelerate)523 4342 y(bac)n(kw)n(ards)20
b(\014rst)i(and)h(then)g(thrust)f(forw)n(ards)f(to)n(w)n(ards)f(the)j
(goal.)34 b(The)23 b(detailed)f(ph)n(ysics)523 4441 y(of)28
b(the)g(problem)f(are)f(giv)n(en)h(in)h(\(Singh)g(and)f(Sutton,)h
(1996\).)648 4541 y(This)20 b(is)h(a)f(minim)n(um)i(time)f(con)n(trol)f
(problem,)h(so)f(the)i(rew)n(ard)d(is)h(-1)g(for)h(all)f(time)h(steps)
523 4640 y(un)n(til)32 b(the)g(goal)e(is)i(reac)n(hed,)f(without)h(an)n
(y)f(discoun)n(ting.)48 b(The)32 b(three)f(p)r(ossible)g(actions)523
4740 y(at)d(eac)n(h)e(step)i(are:)36 b(accelerate)26
b(forw)n(ard,)g(accelerate)g(bac)n(kw)n(ard)f(and)j(no)f(acceleration.)
648 4840 y(The)38 b(algorithm)f(applied)h(to)g(the)g(problem)g(is)g
(Sarsa)e(\(Rummery)j(and)f(Niranjan,)1914 5147 y(14)p
eop
%%Page: 15 17
15 16 bop 523 2769 a @beginspecial 135 @llx 322 @lly
482.500000 @urx 590.500000 @ury 3474 @rwi @setspecial
%%BeginDocument: mountain-car.eps
save
/CricketDrawIII where
{
pop
/CDIIIEnd %% -- 
{
} def
}
{
/CDIIIDict 200 dict def
CDIIIDict begin
/CricketDrawIII 1 def
/ndf %% key value -- %%
{
1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse
} def
/languagelevel {1} ndf
/FindFlatness %% Proc -- %%
{
{
dup 
{flattenpath exec} stopped
{
pop currentflat 100 ge {exit} if 
currentflat 1.25 mul setflat
}
{pop exit} ifelse
} bind loop
newpath
} def
/QDShow %% string qdwidth -- %%
{
1 index length 1 le
{
pop show
}
{
1 index stringwidth pop sub 1 index length 1 sub div 0 3 -1 roll ashow
} ifelse
} def
/MakeUnderlineFont 
{
dup FontDirectory exch known 
{ 
pop pop
}
{
exch dup length 4 add dict begin
/BaseFont exch findfont def
BaseFont
{
1 index dup dup /FID ne exch /UniqueID ne and exch /XUID ne and
{def}
{pop pop} ifelse
} forall
/FontType 3 def
/Upos 
BaseFont /FontInfo 2 copy known
{
get /UnderlinePosition 2 copy known
{get}
{pop pop -0.1 BaseFont /FontMatrix get 0 get div}ifelse
}
{
pop pop -0.1 BaseFont /FontMatrix get 0 get div
} ifelse 
def
/Uwid 
BaseFont /FontInfo 2 copy known
{
get /UnderlineThickness 2 copy known
{get}
{
pop pop 0.05 BaseFont /FontMatrix get 0 get div
} ifelse
}
{
pop pop 0.05 BaseFont /FontMatrix get 0 get div
} ifelse
def
currentdict /FontBBox get 1 get Upos gt
{
currentdict /FontBBox get 1 Upos put
}if
/theChar 1 string def
/BuildChar
{
exch
begin
theChar 0 3 -1 roll put
BaseFont dup /FontMatrix get 0 get 1 exch div scalefont setfont
theChar stringwidth setcharwidth
newpath
0 0 moveto
theChar show
0 Upos rmoveto
0 Upos lineto
Uwid setlinewidth stroke
end
} def
currentdict 
end
definefont pop
} ifelse
} def
/MakeOutlineFont
{
dup FontDirectory exch known 
{ 
pop pop
}
{
exch findfont dup dup length 2 add dict begin
{
1 index dup dup /FID ne exch /UniqueID ne and exch /XUID ne and
{def}
{pop pop} ifelse
} forall
/FontMatrix get 0 get 1 exch div 100 div /StrokeWidth exch def
/PaintType 2 def
currentdict
end
definefont pop
} ifelse
} def
/macvec dup where not 
{ 256 array def
macvec 0 StandardEncoding
0 128 getinterval putinterval
macvec 16#27 /quotesingle put
macvec 16#60 /grave put
/Adieresis /Aring /Ccedilla /Eacute /Ntilde /Odieresis /Udieresis /aacute
/agrave /acircumflex /adieresis /atilde /aring /ccedilla /eacute /egrave
/ecircumflex /edieresis /iacute /igrave /icircumflex /idieresis /ntilde /oacute
/ograve /ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex /udieresis
/dagger /degree /cent /sterling /section /bullet /paragraph /germandbls
/registersans /copyrightsans /trademarksans /acute /dieresis /notequal /AE /Oslash
/infinity /plusminus /lessequal /greaterequal /yen /mu /partialdiff /summation
/product /pi /integral /ordfeminine /ordmasculine /Omega /ae /oslash
/questiondown /exclamdown /logicalnot /radical /florin /approxequal /Delta /guillemotleft
/guillemotright /ellipsis /space /Aacute /Atilde /Otilde /OE /oe
/endash /emdash /quotedblleft /quotedblright /quoteleft /quoteright /divide /lozenge
/ydieresis /Ydieresis /fraction /currency /guilsinglleft /guilsinglright /fi /fl
/daggerdbl /periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Agrave
/Edieresis /Egrave /Iacute /Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex
/apple /Ograve /Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde
/macron /breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
macvec 128 128 getinterval astore pop
}
{pop pop} ifelse
/CreateFontDict 
{
dup length dict
/cd_NewFontDict exch def
{
1 index
/FID ne
{
cd_NewFontDict 3 1 roll put
}
{
pop pop
} ifelse
} forall
cd_NewFontDict
} def
/CoordinateFont 
{
dup 
/cd_FontString exch def 
length 7 add string
/cd_CoFontString exch def
cd_CoFontString 0 (|______) putinterval cd_CoFontString 7 cd_FontString putinterval
/cd_FontName cd_CoFontString cvn def 
FontDirectory cd_FontName known not
{
cd_FontString cvn findfont CreateFontDict
/cd_NewFontDict exch def
cd_NewFontDict dup 
/FontName cd_FontName put 
/Encoding macvec put
cd_FontName cd_NewFontDict definefont pop
} if
} def
/currenthalftone
{
currentscreen dup type /dicttype eq
{
3 1 roll pop pop
}
{
4 dict begin
/HalftoneType 1 def
/SpotFunction exch def
/Angle exch def
/Frequency exch def
currentdict
end
} ifelse
} ndf
/cd_setscreen /setscreen load def
/setscreen
{ 
dup type /dicttype eq
{
languagelevel 1 eq
{ 
3 1 roll pop pop dup 
/Frequency get 
exch dup 
/Angle get
exch 
/SpotFunction get
cd_setscreen
}
{
3 1 roll pop pop 
sethalftone
} ifelse
}
{
cd_setscreen
} ifelse
} def
/cd_defaulthalftone currenthalftone def
/SetDefaultHalftone
{
0
0
cd_defaulthalftone setscreen
} def
/max
{
2 copy lt{exch}if pop
} def
/min
{
2 copy gt{exch}if pop
} def
/concatprocs %% Proc1 Proc2 -- Proc1Proc2 %%
{
/Proc1 exch cvlit def
/Proc2 exch cvlit def
/NewProc Proc1 length Proc2 length add array def
NewProc 0 Proc1 putinterval
NewProc Proc1 length Proc2 putinterval
NewProc cvx
} def
/setcmykcolor %% Cyan Magenta Yellow Black -- %%
{
1 exch sub 3 {dup 5 -1 roll sub 0 max exch} repeat pop setrgbcolor
} ndf
/findcmykcustomcolor %% Cyan Magenta Yellow Black SpotName -- Object %%
{
[ 6 1 roll ] 
} ndf
/setcustomcolor %% object tint -- %%
{
/cd_tint exch def
0 4 getinterval
{ cd_tint mul } forall
setcmykcolor
} ndf
/setoverprint %% flag -- %%
{
pop
} ndf
/setseparationgray %% gray -- %%
{
setgray
} ndf
/cmyktorgb %% Cyan Magenta Yellow Black -- Red Green Blue %%
{
3 {dup 5 -1 roll add dup 1 gt {pop 1} if 1 exch sub exch} repeat pop
} def
/rgbtocmyk %% Red Green Blue -- Cyan Magenta Yellow Black %%
{
3 {3 -1 roll 1 exch sub} repeat
3 copy min min 
3 {4 -1 roll 1 index sub exch} repeat
} def
/cmyktohls %% Cyan Magenta Yellow Black -- Hue Lightness Saturation %%
{
cmyktorgb
3 copy min min 4 1 roll
3 copy max max 5 -1 roll
2 copy add 2 div 6 1 roll
2 copy eq 
{
5 {pop} repeat
0 exch 0
}
{
5 index
0.5 le
{
2 copy 2 copy
sub 3 1 roll
add div
}
{
2 copy 2 copy
2 3 -1 roll sub exch sub
3 1 roll sub exch div 
} ifelse
6 1 roll
2 copy sub
5 index 3 index eq
{
3 1 roll pop pop
4 -3 roll sub exch pop exch div
}
{
4 index 3 index eq
{
3 1 roll pop pop
4 -3 roll exch pop exch sub exch div 2 add 
}
{
3 1 roll pop pop
4 -3 roll pop sub exch div 4 add 
} ifelse
} ifelse
60 mul dup 0 lt {360 add} if
3 1 roll
} ifelse
} def
/value
{
dup 1 gt {1 sub} if
dup 0 lt {1 add} if
dup
60 360 div lt 
{
60 360 div div 3 1 roll 2 copy exch sub 4 -1 roll mul exch pop add
}
{
dup .5 lt
{
pop exch pop
}
{
dup 240 360 div lt
{
240 360 div exch sub 60 360 div div
3 copy pop exch sub mul exch pop add
}
{
pop pop
} ifelse
} ifelse
} ifelse
} def
/hlstocmyk %% Hue Lightness Saturation -- Cyan Magenta Yellow Black %%
{
dup 0 eq
{
pop exch pop dup dup
}
{
1 index 0.5 le
{
2 copy 1 add mul
}
{
2 copy 2 copy add 3 1 roll mul sub
} ifelse
2 index 2 mul 1 index sub exch
5 -3 roll pop pop
3 copy 120 360 div add value 4 1 roll
3 copy value 4 1 roll
120 360 div sub value 
} ifelse
rgbtocmyk
} def
/D3PathProc %% PathArray -- %%
{
{
dup length
dup 6 eq
{ pop aload pop curveto }
{ 
dup 2 eq
{ pop aload pop lineto }
{
3 eq
{ aload pop pop moveto }
{ pop closepath } ifelse
} ifelse
} ifelse
} forall
} def
/colorimage %% width height bitspersample matrix proc multi numplanes --
{
exch {6 {pop} repeat exit} if
/cd_Planes exch def
/cd_Proc exch def
cd_Planes 3 eq
{
{
cd_Proc /cd_string exch def
0 1 cd_string length 3 div 1 sub
{
dup 3 mul
dup cd_string exch get 6 mul exch
dup 1 add cd_string exch get 3 mul exch 
2 add cd_string exch get
add add 10 div round cvi
cd_string 3 1 roll put
} for
cd_string dup length 3 idiv 0 exch getinterval
}
}
if
cd_Planes 4 eq
{
{
cd_Proc /cd_string exch def
0 1 cd_string length 4 div 1 sub
{
dup 4 mul
dup 3 add cd_string exch get exch
dup 2 add cd_string exch get 9 mul exch
dup 1 add cd_string exch get 7 mul exch 
cd_string exch get 4 mul
add add 10 div add round cvi
dup 255 gt 
{pop 0}
{255 exch sub} ifelse
cd_string 3 1 roll put
} for
cd_string dup length 4 idiv 0 exch getinterval
}
}
if
image
} ndf
/ReadToAsterick %% --
{
/cd_String 1 string def
0
{
currentfile cd_String readstring not {pop exit} if
0 get dup 42 eq 
{ 
pop 1 eq 
{ 
(BitMap Error: To much data) ==
} if 
exit
} 
{
32 gt 
{pop 1} if 
} ifelse
} loop
} def
/D3ImageProc %% Width Height -- %%
{
/cd_ImageStr 2 index 7 add 8 idiv string def
true
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
imagemask
ReadToAsterick
} def
/D3ColorImageProc %% Width Height BitsPerSample -- %%
{
/cd_ImageStr 3 index 8 3 index idiv dup 1 sub 3 -1 roll add exch idiv 4 mul string def
[ 3 index 0 dup 5 index neg 0 dup ]
{ currentfile cd_ImageStr readhexstring pop }
false 4
colorimage
ReadToAsterick
} def
/CDIIIEnd %% -- 
{
currentdict CDIIIDict eq { end } if
} def
} ifelse

systemdict /setpacking known
{
true setpacking
} if
2 setlinecap
0 setlinejoin
1.0 setmiterlimit

gsave
newpath
135 590.5 moveto
482.5 590.5 lineto
482.5 322 lineto
135 322 lineto
closepath
eoclip
(Helvetica) CoordinateFont
% Object: Bezier Path Stroked 
SetDefaultHalftone
/D3PathArray 5 array def
D3PathArray 0 [136 448 0 ] put
D3PathArray 1 [154 418 192 318 262 323 ] put
D3PathArray 2 [319.853 327.132 361 430 368 450 ] put
D3PathArray 3 [375 470 416 567 439 570 ] put
D3PathArray 4 [462.798 573.104 475 569 475 569 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Group Stroked Filled 
% Object: Group Stroked Filled 
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [322.072 393.621 0 ] put
D3PathArray 1 [330.061 389.033 ] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 11 array def
D3PathArray 0 [330.061 389.033 0 ] put
D3PathArray 1 [329.954 388.847 347.591 420.653 347.591 420.653 ] put
D3PathArray 2 [340.739 423.356 ] put
D3PathArray 3 [332.403 412.356 ] put
D3PathArray 4 [323.26 413.662 ] put
D3PathArray 5 [313.827 397.71 ] put
D3PathArray 6 [320.073 392.303 ] put
D3PathArray 7 [315.978 384.788 317.977 386.106 317.977 386.106 ] put
D3PathArray 8 [325.645 380.962 ] put
D3PathArray 9 [325.645 380.962 331.876 392.184 330.061 389.033 ] put
D3PathArray 10 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [330.584 409.208 0 ] put
D3PathArray 1 [324.312 410.344 ] put
D3PathArray 2 [320.513 403.941 ] put
D3PathArray 3 [326.382 401.507 ] put
D3PathArray 4 [330.584 409.208 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [344.657 416.201 0 ] put
D3PathArray 1 [342.515 417.316 339.662 416.467 338.283 414.304 ] put
D3PathArray 2 [336.904 412.141 337.523 409.484 339.664 408.368 ] put
D3PathArray 3 [341.805 407.253 344.658 408.102 346.037 410.265 ] put
D3PathArray 4 [347.416 412.428 346.798 415.086 344.657 416.201 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [319.73 402.434 0 ] put
D3PathArray 1 [317.105 397.863 ] put
D3PathArray 2 [321.994 393.913 ] put
D3PathArray 3 [325.019 399.576 ] put
D3PathArray 4 [319.73 402.434 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Filled 
SetDefaultHalftone
/D3PathArray 6 array def
D3PathArray 0 [332.415 393.857 0 ] put
D3PathArray 1 [330.274 394.973 327.42 394.124 326.042 391.961 ] put
D3PathArray 2 [324.663 389.798 325.281 387.14 327.422 386.025 ] put
D3PathArray 3 [329.563 384.909 332.417 385.758 333.796 387.921 ] put
D3PathArray 4 [335.174 390.084 334.556 392.742 332.415 393.857 ] put
D3PathArray 5 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
0 0 0 0 setcmykcolor
/eofill load
FindFlatness
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [347.842 427.348 0 ] put
D3PathArray 1 [360.842 449.348 ] put
/D3ArrowArray 5 array def
D3ArrowArray 0 [358.299 445.043 0 ] put
D3ArrowArray 1 [360.451 443.771 ] put
D3ArrowArray 2 [363.386 453.652 ] put
D3ArrowArray 3 [356.146 446.315 ] put
D3ArrowArray 4 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Bezier Path Stroked Arrows 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [354.842 387.348 0 ] put
D3PathArray 1 [354.842 346.348 ] put
/D3ArrowArray 5 array def
D3ArrowArray 0 [354.842 351.348 0 ] put
D3ArrowArray 1 [352.342 351.348 ] put
D3ArrowArray 2 [354.842 341.348 ] put
D3ArrowArray 3 [357.342 351.348 ] put
D3ArrowArray 4 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultHalftone
false setoverprint
[ 1 0 0 1 355.842 378.348 ] concat
0.4 0 0 1 setcmykcolor
/|______Helvetica findfont 12 scalefont setfont
4 -14 moveto
(Gravity) 38 QDShow
grestore
% Object: Bezier Path Stroked Arrows 
SetDefaultHalftone
/D3PathArray 2 array def
D3PathArray 0 [316.842 378.348 0 ] put
D3PathArray 1 [302.842 356.348 ] put
/D3ArrowArray 5 array def
D3ArrowArray 0 [305.527 360.566 0 ] put
D3ArrowArray 1 [303.417 361.908 ] put
D3ArrowArray 2 [300.158 352.129 ] put
D3ArrowArray 3 [307.636 359.224 ] put
D3ArrowArray 4 [] put
/D3ObjectProc {newpath
D3PathArray D3PathProc } def
false setoverprint
D3ObjectProc
1 setlinewidth
[ ] 0 setdash
2 setlinecap
0.4 0 0 1 setcmykcolor
/stroke load
FindFlatness
newpath
[ ] 0 setdash
2 setlinecap
D3ArrowArray D3PathProc /fill load
FindFlatness
% Object: Text 
gsave
SetDefaultHalftone
false setoverprint
[ 1 0 0 1 437.5 590.5 ] concat
0.4 0 0 1 setcmykcolor
/|______Helvetica findfont 12 scalefont setfont
4 -14 moveto
(GOAL) 33 QDShow
grestore
grestore
CDIIIEnd
showpage
restore



%%EndDocument
 @endspecial 1440 2951 a Fj(Figure)27 b(8.)36 b(Moun)n(tain-car)26
b(task)523 3217 y(1994\))38 b(with)h(replacing)f(eligibilit)n(y)h
(traces.)71 b(The)39 b(algorithm)f(with)i(gradien)n(t)e(descen)n(t)523
3316 y(additiv)n(e)c(up)r(dates)g(is)f(describ)r(ed)h(in)g(detail)g(in)
g(\(Singh)g(and)g(Sutton,)i(1996\).)54 b(The)34 b(EG)523
3416 y(up)r(date)23 b(algorithm)e(is)h(analogous,)f(but)i(uses)f(the)h
(additiv)n(e)f(up)r(date)g(in)h(log)e(w)n(eigh)n(t)h(space.)523
3516 y(F)-7 b(or)27 b(the)h(implemen)n(tation,)g(w)n(e)f(used)h
(Mahadev)-5 b(an's)26 b(co)r(de)i(as)e(a)i(strating)e(p)r(oin)n(t.)648
3615 y(The)19 b(moun)n(tain-car)f(task)g(has)h(a)g(con)n(tin)n(uous)g
(state)g(space,)h(with)g(t)n(w)n(o)e(state)i(v)-5 b(ariables:)523
3715 y(p)r(osition)23 b(and)h(v)n(elo)r(cit)n(y)-7 b(.)35
b(W)-7 b(e)24 b(used)f(a)g(set)h(of)g(three)f(CMA)n(Cs,)h(one)g(for)f
(eac)n(h)g(action.)35 b(Eac)n(h)523 3814 y(CMA)n(C)c(has)e(5)h(tilings)
h(with)g(random)e(o\013sets.)45 b(Eac)n(h)30 b(v)-5 b(ariable)29
b(w)n(as)h(ev)n(enly)f(divided)i(in)523 3914 y(8)h(in)n(terv)-5
b(als,)33 b(adding)f(one)g(additional)f(division)h(in)h(order)e(to)h(b)
r(e)h(able)f(to)g(generate)f(the)523 4014 y(o\013sets.)43
b(Th)n(us,)30 b(there)f(are)g(9)19 b Fh(\003)h Fj(9)f
Fh(\003)h Fj(5)26 b(=)g(405)i(input)i(features,)g(from)g(whic)n(h)f(5)g
(are)g(activ)n(e)523 4113 y(sim)n(ultaneously)-7 b(.)648
4213 y(The)22 b(initial)g(v)-5 b(alues)21 b(w)n(ere)g(0)h(for)f(all)h
(the)g(states,)h(whic)n(h)f(giv)n(es)f(an)g(optimistic)h(estimate)523
4313 y(of)29 b(the)g(true)f(v)-5 b(alues.)40 b(This)29
b(ensures)f(exploration)f(in)i(the)g(b)r(eginning,)g(ev)n(en)f(when)h
(using)523 4412 y(a)i(greedy)f(p)r(olicy)h(for)f(pic)n(king)g(actions.)
47 b(F)-7 b(or)30 b(EG,)h(the)h(initial)f(w)n(eigh)n(t)f(magnitude)h(w)
n(as)523 4512 y(1.)648 4611 y(The)26 b(p)r(erformance)g(measure)f(for)h
(a)g(trial)g(w)n(as)g(the)h(n)n(um)n(b)r(er)f(of)h(steps)f(un)n(til)h
(reac)n(hing)523 4711 y(the)34 b(goal,)f(a)n(v)n(eraged)e(o)n(v)n(er)g
(the)j(\014rst)f(20)g(trials,)h(and)f(then)h(o)n(v)n(er)e(30)g(runs.)54
b(A)33 b(range)f(of)523 4811 y(di\013eren)n(t)d Fg(\025)g
Fj(and)f Fg(\013)h Fj(v)-5 b(alues)28 b(w)n(ere)g(used,)h(in)f(order)g
(to)g(pro)n(vide)f(a)h(fair)g(comparaison.)38 b(All)1914
5147 y(15)p eop
%%Page: 16 18
16 17 bop 523 2631 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: mcall.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(200) Rshow
1200 1241 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(300) Rshow
1200 1980 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(400) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(500) Rshow
1200 3460 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(600) Rshow
1200 4199 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(700) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(800) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.1) Cshow
1912 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
2624 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.3) Cshow
3336 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4049 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.5) Cshow
4761 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
5473 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.7) Cshow
6185 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.9) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Average number of steps/trial) Cshow
grestore
4048 101 M
(alpha) Cshow
1342 2424 M
(EG) Lshow
1342 4273 M
(GD) Lshow
5473 3830 M
(0.9) Lshow
6577 1167 M
(0.0) Lshow
6577 1389 M
(0.3) Lshow
6256 2128 M
(0.5) Lshow
5686 1758 M
(0.7) Lshow
4554 2069 M
(0.1) Lshow
LT0
6185 2128 M
5473 1830 L
58 -24 R
-58 24 V
23 58 V
689 240 R
5473 1061 L
61 12 R
-61 -12 V
-13 61 V
226 562 R
5473 1424 L
213 260 R
5473 1328 L
-926 726 R
4405 719 L
49 39 R
-49 -39 V
-40 49 V
182 1286 R
4405 1266 L
51 35 R
-51 -35 V
-36 51 V
1200 4473 M
2268 1974 L
3336 1456 L
4405 1192 L
5473 964 L
1068 118 V
1200 2473 M
2268 1273 L
3336 861 L
4405 772 L
5473 677 L
1068 543 V
LT1
1200 4383 M
2268 2224 L
3336 1441 L
4405 1266 L
1200 2292 M
2268 1515 L
3336 856 L
4405 719 L
LT2
1200 4186 M
2268 1834 L
3336 1580 L
4405 1480 L
5473 1371 L
1068 36 V
1200 2185 M
2268 1152 L
3336 903 L
4405 875 L
1068 420 V
1068 40 V
LT3
1200 3996 M
2268 2025 L
1068 3 V
4405 1512 L
1068 318 V
1200 2318 M
2268 1231 L
3336 882 L
4405 762 L
1068 299 V
LT4
1200 4110 M
2268 2240 L
3336 1551 L
4405 1276 L
1068 148 V
1200 2314 M
2268 1227 L
3336 755 L
1069 425 V
1068 148 V
LT5
1200 4171 M
2268 2338 L
3336 1778 L
1069 425 V
5473 4053 L
1200 2241 M
2268 1097 L
3336 2143 L
1069 87 V
5473 3707 L
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 561 2814 a Fj(Figure)27 b(9.)36 b(Results)28
b(for)f(the)h(moun)n(tain-car)e(problem,)h(at)g(sev)n(eral)f(v)-5
b(alues)27 b(of)h Fg(\025)g Fj(and)f Fg(\013)523 3079
y Fj(the)h(algorithm)e(instances)i(used)f(the)h(same)f(random)g
(starting)f(p)r(ositions)i(for)f(the)h(trials.)648 3179
y(Figure)23 b(9)h(sho)n(ws)g(the)g(detailed)h(results)f(for)f
(di\013eren)n(t)i(v)-5 b(alues)24 b(of)g Fg(\025)h Fj(and)f
Fg(\013)p Fj(.)37 b(Figure)23 b(10)523 3278 y(is)c(a)h(summary)e(of)i
(the)g(results,)g(sho)n(wing)f(only)g(the)h(b)r(est)g(p)r(erformance)e
(of)i(eac)n(h)f(algorithm)523 3378 y(at)28 b(eac)n(h)e
Fg(\025)i Fj(v)-5 b(alue.)648 3478 y(EG)20 b(generates)f(shorter)h
(trials)g(than)h(GD)h(at)e(almost)h(all)f(com)n(binations)g(of)h
(parameter)523 3577 y(settings.)56 b(Moreo)n(v)n(er,)32
b(for)i(all)f Fg(\025)i Fj(v)-5 b(alues,)35 b(EG)f(is)f(ab)r(out)h
(25\045)f(faster)h(than)g(GD)g(at)g(the)523 3677 y(b)r(est)28
b Fg(\013)p Fj(,)g(and)g(the)g(sp)r(eed)f(di\013erences)h(are)e
(statistically)h(signi\014can)n(t.)523 3951 y Fi(5.)60
b(Conclusions)523 4133 y Fj(The)36 b(exp)r(erimen)n(ts)g(con\014rmed)f
(that)h(exp)r(onen)n(tiated)g(gradien)n(t)f(metho)r(ds)h(yield)g
(faster)523 4233 y(con)n(v)n(ergence)25 b(for)i(sup)r(ervised)g
(learning)f(problems)h(with)h(linear)e(targets)h(that)g(ha)n(v)n(e)g
(lots)523 4333 y(of)32 b(irrelev)-5 b(an)n(t)30 b(input)j(features.)49
b(Moreo)n(v)n(er,)30 b(EG)h(is)h(more)f(robust)g(to)h(noise)f(in)h(the)
g(tar-)523 4432 y(get)37 b(v)-5 b(alue)36 b(and)h(adapts)f(faster)g(to)
g(target)g(alterations)g(in)g(non-stationary)f(problems.)523
4532 y(Normalization)26 b(do)r(es)h(not)h(app)r(ear)f(to)g(impro)n(v)n
(e)f(p)r(erformance.)648 4631 y(The)g(rep)r(ort)f(also)g(presen)n(ts)h
(a)f(straigh)n(tforw)n(ard)f(extension)h(of)i(EG)f(up)r(dates)g(to)g
(rein-)523 4731 y(forcemen)n(t)31 b(learning)f(algorithms.)47
b(In)32 b(this)g(case,)f(replace)g(traces)f(are)h(used)g(instead)g(of)
523 4831 y(accum)n(ulating)h(traces,)i(in)f(order)f(to)h(k)n(eep)f(the)
i(w)n(eigths)e(b)r(ounded.)54 b(The)33 b(exp)r(erimen)n(ts)1914
5147 y(16)p eop
%%Page: 17 19
17 18 bop 523 3624 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: mcbest.eps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -66 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 200 scalefont setfont
newpath
LTa
1200 501 M
0 4438 V
LTb
1200 501 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(200) Rshow
1200 945 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(220) Rshow
1200 1389 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(240) Rshow
1200 1832 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(260) Rshow
1200 2276 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(280) Rshow
1200 2720 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(300) Rshow
1200 3164 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(320) Rshow
1200 3608 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(340) Rshow
1200 4051 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(360) Rshow
1200 4495 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(380) Rshow
1200 4939 M
63 0 V
5634 0 R
-63 0 V
-5754 0 R
(400) Rshow
1200 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0) Cshow
1833 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.1) Cshow
2466 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.2) Cshow
3099 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.3) Cshow
3732 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.4) Cshow
4365 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.5) Cshow
4998 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.6) Cshow
5631 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.7) Cshow
6264 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.8) Cshow
6897 501 M
0 63 V
0 4375 R
0 -63 V
0 -4575 R
(0.9) Cshow
1200 501 M
5697 0 V
0 4438 V
-5697 0 V
0 -4438 V
200 2720 M
currentpoint gsave translate 90 rotate 0 0 M
(Average number of steps at best alpha) Cshow
grestore
4048 101 M
(lambda) Cshow
6264 2054 M
(EG) Lshow
6264 4051 M
(GD) Lshow
LT0
1200 4108 M
1833 2795 L
1266 316 V
1266 423 V
5631 2826 L
6897 4331 L
LT1
1200 4108 D
1833 2795 D
3099 3111 D
4365 3534 D
5631 2826 D
6897 4331 D
1200 3729 M
0 757 V
-31 -757 R
62 0 V
-62 757 R
62 0 V
1833 2479 M
0 632 V
-31 -632 R
62 0 V
-62 632 R
62 0 V
3099 2629 M
0 964 V
-31 -964 R
62 0 V
-62 964 R
62 0 V
1235 385 R
0 -888 V
-31 888 R
62 0 V
-62 -888 R
62 0 V
5631 2622 M
0 409 V
-31 -409 R
62 0 V
-62 409 R
62 0 V
1235 979 R
0 643 V
-31 -643 R
62 0 V
-62 643 R
62 0 V
LT2
1200 3248 M
1833 1156 L
1266 467 V
4365 1283 L
1266 -21 V
6897 2290 L
LT3
1200 3248 A
1833 1156 A
3099 1623 A
4365 1283 A
5631 1262 A
6897 2290 A
1200 2930 M
0 637 V
-31 -637 R
62 0 V
-62 637 R
62 0 V
1833 861 M
0 590 V
1802 861 M
62 0 V
-62 590 R
62 0 V
3099 1223 M
0 799 V
-31 -799 R
62 0 V
-62 799 R
62 0 V
4365 950 M
0 666 V
4334 950 M
62 0 V
-62 666 R
62 0 V
5631 969 M
0 586 V
5600 969 M
62 0 V
-62 586 R
62 0 V
1235 318 R
0 834 V
-31 -834 R
62 0 V
-62 834 R
62 0 V
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 526 3806 a Fj(Figure)27 b(10.)36 b(Summary)28
b(results)f(of)g(the)h(moun)n(tain-car)e(problem,)h(using)g(the)h(b)r
(est)g Fg(\013)h Fj(for)1838 3906 y(eac)n(h)d Fg(\025)1914
5147 y Fj(17)p eop
%%Page: 18 20
18 19 bop 523 614 a Fj(suggest)33 b(that)i(EG)f(up)r(dates)h(yield)f
(faster)g(reinforcemen)n(t)g(learning)f(algorithms)g(when)523
714 y(used)25 b(with)h(linear)e(function)i(appro)n(ximators.)33
b(In)26 b(the)f(bigger)f(task)h(\(moun)n(tain-car\))f(EG)523
814 y(has)g(a)f(25\045)h(smaller)f(a)n(v)n(erage)e(loss)i(than)i(the)f
(classic)f(additiv)n(e)h(up)r(date)g(rule.)36 b(P)n(arameter)523
913 y(tuning)i(is)g(not)f(signi\014can)n(tly)g(harder)f(than)i(in)g
(the)g(case)f(of)h(m)n(ultiplicativ)n(e)f(up)r(dates,)523
1013 y(although)30 b(the)i(initial)f(magnitude)g(of)f(the)i(w)n(eigh)n
(ts)e(impacts)h(on)f(the)h(sp)r(eed)h(of)e(con)n(v)n(er-)523
1112 y(gence.)523 1387 y Fi(References)523 1652 y Fj(Kivinen)f(J.,)h
(Manfred)f(K.W.)h(\(1994\).)41 b(Exp)r(onen)n(tiated)29
b(gradien)n(t)f(v)n(ersus)g(gradien)n(t)h(de-)523 1752
y(scen)n(t)k(for)g(linear)f(predictors.)53 b(T)-7 b(ec)n(hnical)33
b(Rep)r(ort)g(UCSC-CRL-94-16,)f(Univ)n(ersit)n(y)g(of)523
1851 y(California,)g(San)n(ta)f(Cruz,)h(June)g(1994.)47
b(\(Short)32 b(v)n(ersion)e(app)r(eared)h(as)g("Additiv)n(e)h(v)n(er-)
523 1951 y(sus)26 b(exp)r(onen)n(tiated)h(gradien)n(t)e(up)r(dates)i
(for)g(linear)f(prediction")f(in)i(Pro)r(ceedings)e(of)i(the)523
2050 y(27th)33 b(Ann)n(ual)g(A)n(CM)h(Symp)r(osium)g(on)f(Theory)f(of)h
(Computing,)i(pages)e(209-218,)e(The)523 2150 y(Asso)r(ciation)c(for)g
(Computing)g(Mac)n(hinery)-7 b(,)27 b(New)h(Y)-7 b(ork,)27
b(Ma)n(y)f(1995.\))648 2333 y(Helm)n(b)r(old)18 b(D.P)-7
b(.,)21 b(Kivinen)d(J.,)i(and)e(W)-7 b(arm)n(uth)18 b(M.K.)h(\(1995\))e
(W)-7 b(orst-case)16 b(loss)i(b)r(ounds)523 2432 y(for)28
b(sigmoided)g(neurons.)40 b(In)29 b(Da)n(vid)f(S.)h(T)-7
b(ouretzky)g(,)28 b(Mic)n(hael)g(C.)h(Mozer,)f(and)h(Mic)n(hael)523
2532 y(E.)i(Hasselmo,)h(editors,)g(Adv)-5 b(ances)32
b(in)f(Neural)h(Information)e(Precesses)g(8)h(\(NIPS*95\).)523
2632 y(MIT)d(Press,)e(Cam)n(bridge,)g(Massac)n(h)n(usetts:)35
b(309-315)648 2814 y(Lewis,)g(D.D.,)j(Sc)n(hapire,)d(R.E.,)h(Callan,)g
(J.P)-7 b(.)33 b(and)i(P)n(apk)-5 b(a,)35 b(R.)f(\(1996\).)56
b(T)-7 b(raining)523 2914 y(algorithms)29 b(for)h(linear)g(text)h
(classi\014ers.)44 b(In)30 b(Pro)r(ceedings)f(of)h(the)h(Nineteen)n(th)
g(Ann)n(ual)523 3013 y(In)n(ternational)f(A)n(CM)h(SIGIR)g(Conference)f
(on)h(Researc)n(h)e(and)h(Dev)n(elopmen)n(t)h(in)g(Infor-)523
3113 y(mation)c(Retriev)-5 b(al,)28 b(Zuric)n(h,)f(Switzerland:)36
b(298-315.)648 3296 y(Mo)r(ore)19 b(A.W.)i(\(1991\).)33
b(V)-7 b(ariable)19 b(Resolution)h(Dynamic)g(Programming:)31
b(E\016cien)n(tly)523 3395 y(learning)21 b(action)g(mapsin)h(m)n(ultiv)
-5 b(ariate)22 b(real-v)-5 b(alued)21 b(state-spaces.)33
b(In)22 b(Mac)n(hine)g(Learn-)523 3495 y(ing:)32 b(Pro)r(ceedings)17
b(of)i(the)g(Eigh)n(th)f(In)n(ternational)g(W)-7 b(orkshop,)19
b(San)g(Mateo,)h(CA.)f(Morgan)523 3595 y(Kaufmann:)37
b(333-337.)648 3777 y(Rummery)22 b(G.A.,)j(Niranjan)d(M.)i(\(1994\).)34
b(On-line)22 b(Q-learning)f(using)i(connectionist)523
3877 y(systems.)54 b(T)-7 b(ec)n(hnical)32 b(rep)r(ort)h
(CUED/F-INFENG/TR)g(166,)g(Cam)n(bridge)f(Univ)n(ersit)n(y)523
3977 y(Engineering)26 b(Dept.)648 4159 y(Singh,)37 b(S.P)-7
b(.,)37 b(Sutton,)h(R.S.)e(\(1996\).)59 b(Reinforcemen)n(t)35
b(Learning)f(with)i(Replacing)523 4259 y(Eligibilit)n(y)27
b(T)-7 b(races.)36 b(Mac)n(hine)27 b(Learning)f(22:)36
b(123-158.)1914 5147 y(18)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
