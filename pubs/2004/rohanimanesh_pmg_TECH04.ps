%!PS-Adobe-3.0
%%Title: (rohanimanesh_pmg_TECH04.pdf)
%%Version: 1 2
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 612 792
%%Pages: 17
%%DocumentProcessColors: (atend)
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 10
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdflev1
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, with code specific for Level 1
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {_defaulthalftone sethalftone} if
} bd
/terminate { } bd
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q /gsave ld
/Q /grestore ld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput {
3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes {
_categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/setoverprint where
{ pop }
{ /setoverprint { pop } bd }
ifelse
/_safeput
{
Level1?
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
}
if
3 -1 roll load 3 1 roll put
}
bd
Level1?
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
if
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: pdfasc.prc
%%Version: 4.0 2
%%Copyright: Copyright 1992-1997 Adobe Systems Incorporated. All Rights Reserved.
/AS {
9 dict begin
/shrink? xdd
/Pury xdd
/Purx xdd
/Plly xdd
/Pllx xdd
gsave newpath clippath pathbbox newpath grestore
/Dury xdd
/Durx xdd
/Dlly xdd
/Dllx xdd
Durx Dllx sub Dury Dlly sub
Pury Plly sub div exch Purx Pllx sub div
2 copy gt { exch } if pop
Durx Dllx add 2 div Dury Dlly add 2 div translate
shrink? { dup scale } { pop } ifelse
Purx Pllx add -2 div Pury Plly add -2 div translate
end
} [/shrink? /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica
[/N359/Helvetica -1 TZ
%%IncludeResource Times-Roman
[ 2 /fi/fl 32 /space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quoteright/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/quotedblleft/quotedblright/.notdef
/endash/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/exclamdown
/cent/sterling/fraction/yen/florin/section
/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright
/fi/fl/.notdef/endash/dagger/daggerdbl
/periodcentered/.notdef/paragraph/bullet/quotesinglbase/quotedblbase
/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
/.notdef/grave/acute/circumflex/tilde/macron
/breve/dotaccent/dieresis/.notdef/ring/cedilla
/.notdef/hungarumlaut/ogonek/caron/emdash/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/AE/.notdef/ordfeminine
/.notdef/.notdef/.notdef/.notdef/Lslash/Oslash
/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
/.notdef/ae/.notdef/.notdef/.notdef/dotlessi
/.notdef/.notdef/lslash/oslash/oe/germandbls
/.notdef/.notdef/.notdef/.notdef
/N22/Times-Roman -1 TZ
%%IncludeResource Times-Italic
[ 2 /fi 32 /space/exclam/quotedbl/numbersign/dollar
/percent/ampersand/quoteright/parenleft/parenright/asterisk
/plus/comma/hyphen/period/slash/zero
/one/two/three/four/five/six
/seven/eight/nine/colon/semicolon/less
/equal/greater/question/at/A/B
/C/D/E/F/G/H
/I/J/K/L/M/N
/O/P/Q/R/S/T
/U/V/W/X/Y/Z
/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft
/a/b/c/d/e/f
/g/h/i/j/k/l
/m/n/o/p/q/r
/s/t/u/v/w/x
/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/exclamdown/cent
/sterling/fraction/yen/florin/section/currency
/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi
/fl/.notdef/endash/dagger/daggerdbl/periodcentered
/.notdef/paragraph/bullet/quotesinglbase/quotedblbase/quotedblright
/guillemotright/ellipsis/perthousand/.notdef/questiondown/.notdef
/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef
/hungarumlaut/ogonek/caron/emdash/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/AE/.notdef/ordfeminine/.notdef
/.notdef/.notdef/.notdef/Lslash/Oslash/OE
/ordmasculine/.notdef/.notdef/.notdef/.notdef/.notdef
/ae/.notdef/.notdef/.notdef/dotlessi/.notdef
/.notdef/lslash/oslash/oe/germandbls/.notdef
/.notdef/.notdef/.notdef
/N24/Times-Italic -1 TZ
%%IncludeResource Times-Bold
[ 2 /fi 32 /space/exclam/quotedbl/numbersign/dollar
/percent/ampersand/quoteright/parenleft/parenright/asterisk
/plus/comma/hyphen/period/slash/zero
/one/two/three/four/five/six
/seven/eight/nine/colon/semicolon/less
/equal/greater/question/at/A/B
/C/D/E/F/G/H
/I/J/K/L/M/N
/O/P/Q/R/S/T
/U/V/W/X/Y/Z
/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft
/a/b/c/d/e/f
/g/h/i/j/k/l
/m/n/o/p/q/r
/s/t/u/v/w/x
/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/exclamdown/cent
/sterling/fraction/yen/florin/section/currency
/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi
/fl/.notdef/endash/dagger/daggerdbl/periodcentered
/.notdef/paragraph/bullet/quotesinglbase/quotedblbase/quotedblright
/guillemotright/ellipsis/perthousand/.notdef/questiondown/.notdef
/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef
/hungarumlaut/ogonek/caron/emdash/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/AE/.notdef/ordfeminine/.notdef
/.notdef/.notdef/.notdef/Lslash/Oslash/OE
/ordmasculine/.notdef/.notdef/.notdef/.notdef/.notdef
/ae/.notdef/.notdef/.notdef/dotlessi/.notdef
/.notdef/lslash/oslash/oe/germandbls/.notdef
/.notdef/.notdef/.notdef
/N110/Times-Bold -1 TZ
%%IncludeResource Times-Bold
[/N9/Times-Bold -1 TZ
%%IncludeResource Times-Roman
[ 2 /fi 32 /space/exclam/quotedbl/numbersign/dollar
/percent/ampersand/quoteright/parenleft/parenright/asterisk
/plus/comma/hyphen/period/slash/zero
/one/two/three/four/five/six
/seven/eight/nine/colon/semicolon/less
/equal/greater/question/at/A/B
/C/D/E/F/G/H
/I/J/K/L/M/N
/O/P/Q/R/S/T
/U/V/W/X/Y/Z
/bracketleft/backslash/bracketright/asciicircum/underscore/quoteleft
/a/b/c/d/e/f
/g/h/i/j/k/l
/m/n/o/p/q/r
/s/t/u/v/w/x
/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/exclamdown/cent
/sterling/fraction/yen/florin/section/currency
/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi
/fl/.notdef/endash/dagger/daggerdbl/periodcentered
/.notdef/paragraph/bullet/quotesinglbase/quotedblbase/quotedblright
/guillemotright/ellipsis/perthousand/.notdef/questiondown/.notdef
/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef
/hungarumlaut/ogonek/caron/emdash/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/AE/.notdef/ordfeminine/.notdef
/.notdef/.notdef/.notdef/Lslash/Oslash/OE
/ordmasculine/.notdef/.notdef/.notdef/.notdef/.notdef
/ae/.notdef/.notdef/.notdef/dotlessi/.notdef
/.notdef/lslash/oslash/oe/germandbls/.notdef
/.notdef/.notdef/.notdef
/N15/Times-Roman -1 TZ
%%IncludeResource Times-Roman
[/N214/Times-Roman -1 TZ
%%IncludeResource Helvetica-Bold
[/N58/Helvetica-Bold -1 TZ
%%IncludeResource Times-Roman
[/N11/Times-Roman -1 TZ
%%IncludeResource Times-Bold
[/N13/Times-Bold -1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
%%Page: 1 1
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
{} settransfer
q
10 0 0 10 0 0 cm
0 setgray
172.44 591.84 m
/N9 14.3462 Tf
(Coarticulation)
[10.3148 7.18754 7.18754 6.35526 4.79162 3.95956 6.35526 7.91913 3.95956 7.18754 4.79162 
3.95956 7.18754 7.91913 ] pdfxs
265.236 591.84 m
(in)
[3.95956 7.91913 ] pdfxs
280.714 591.84 m
(Mark)
[13.5573 7.18754 6.35526 7.91913 ] pdfxs
315.494 591.84 m
(o) show
322.561 591.84 m
(v) show
333.349 591.84 m
(Decision)
[10.3148 6.35526 6.35526 3.95956 5.63813 3.95956 7.18754 7.91913 ] pdfxs
388.758 591.84 m
(Pr)
[8.75119 6.35526 ] pdfxs
403.625 591.84 m
(ocesses)
[7.18754 6.35526 6.35526 5.63813 5.63813 6.35526 5.63813 ] pdfxs
234.48 565.44 m
/N11 14.3462 Tf
(Khashayar)
[10.3148 7.18754 6.35526 5.63813 7.18754 6.35526 7.18754 6.35526 4.79162 ] pdfxs
299.333 565.44 m
(Rohanimanesh)
[9.59769 7.18754 7.18754 6.35526 7.18754 3.95956 11.1469 6.35526 7.18754 6.35526 5.63813 
7.18754 ] pdfxs
275.16 547.56 m
(Robert)
[9.59769 7.18754 7.18754 6.35526 4.79162 3.95956 ] pdfxs
317.719 547.56 m
(Platt)
[7.91913 3.95956 6.35526 3.95956 3.95956 ] pdfxs
253.56 529.56 m
(Sridhar)
[7.91913 4.79162 3.95956 7.18754 7.18754 6.35526 4.79162 ] pdfxs
299.352 529.56 m
(Mahade)
[12.7107 6.35526 7.18754 6.35526 7.18754 6.35526 ] pdfxs
345.144 529.56 m
(v) show
351.971 529.56 m
(an)
[6.35526 7.18754 ] pdfxs
263.639 511.68 m
(Roderic)
[9.59769 7.18754 7.18754 6.35526 4.79162 3.95956 6.35526 ] pdfxs
312.554 511.68 m
(Grupen)
[10.3148 4.79162 7.18754 7.18754 6.35526 7.18754 ] pdfxs
213.839 486.48 m
(CMPSCI)
[9.59769 12.7107 7.91913 7.91913 9.59769 4.79162 ] pdfxs
270.095 486.48 m
(T) show
277.886 486.48 m
(echnical)
[6.35526 6.35526 7.18754 7.18754 3.95956 6.35526 6.35526 3.95956 ] pdfxs
329.202 486.48 m
(Report)
[9.59769 6.35526 7.18754 7.18754 4.79162 3.95956 ] pdfxs
371.761 486.48 m
(04-33)
[7.18754 7.18754 4.79162 7.18754 7.18754 ] pdfxs
273.119 418.2 m
(June)
[5.63813 7.18754 7.18754 6.35526 ] pdfxs
302.968 418.2 m
(3,)
[7.18754 3.58655 ] pdfxs
317.342 418.2 m
(2004)
[7.18754 7.18754 7.18754 7.18754 ] pdfxs
213.36 378.6 m
(Department)
[10.3148 6.35526 7.18754 6.35526 4.79162 3.95956 11.1469 6.35526 7.18754 3.95956 ] pdfxs
284.574 378.6 m
(of)
[7.18754 4.79162 ] pdfxs
300.153 378.6 m
(Computer)
[9.59769 7.18754 11.1469 7.18754 7.18754 3.95956 6.35526 4.79162 ] pdfxs
361.046 378.6 m
(Science)
[7.91913 6.35526 3.95956 6.35526 7.18754 6.35526 6.35526 ] pdfxs
228.599 360.72 m
(Uni)
[10.3148 7.18754 3.95956 ] pdfxs
249.701 360.72 m
(v) show
256.649 360.72 m
(ersity)
[6.35526 4.79162 5.63813 3.95956 3.95956 7.18754 ] pdfxs
292.14 360.72 m
(of)
[7.18754 4.79162 ] pdfxs
307.599 360.72 m
(Massachusetts)
[12.7107 6.35526 5.63813 5.63813 6.35526 6.35526 7.18754 7.18754 5.63813 6.35526 3.95956 
3.95956 5.63813 ] pdfxs
249.119 342.84 m
(140)
[7.18754 7.18754 7.18754 ] pdfxs
274.162 342.84 m
(Go)
[10.3148 7.18754 ] pdfxs
291.424 342.84 m
(v) show
298.371 342.84 m
(ernors)
[6.35526 4.79162 7.18754 7.18754 4.79162 5.63813 ] pdfxs
337.803 342.84 m
(Dri)
[10.3148 4.79162 3.95956 ] pdfxs
356.509 342.84 m
(v) show
363.457 342.84 m
(e) show
220.2 324.84 m
(Amherst,)
[10.3148 11.1469 7.18754 6.35526 4.79162 5.63813 3.95956 3.58655 ] pdfxs
276.66 324.84 m
(Massachusetts)
[12.7107 6.35526 5.63813 5.63813 6.35526 6.35526 7.18754 7.18754 5.63813 6.35526 3.95956 
3.95956 5.63813 ] pdfxs
363.119 324.84 m
(01003)
[7.18754 7.18754 7.18754 7.18754 7.18754 ] pdfxs
291.119 211.32 m
/N13 9.96254 Tf
(Abstract)
[7.19296 5.51926 3.83552 3.35743 4.4334 5.03113 4.4334 3.35743 ] pdfxs
135.839 192.36 m
/N15 9.96254 Tf
(W) show
144.354 192.36 m
(e) show
151.068 192.36 m
(in)
[2.75955 5.03113 ] pdfxs
158.498 192.36 m
(v) show
163.409 192.36 m
(estigate)
[4.4334 3.83552 2.75955 2.75955 5.03113 4.4334 2.75955 4.4334 ] pdfxs
195.775 192.36 m
(an)
[4.4334 5.03113 ] pdfxs
207.4 192.36 m
(approach)
[4.4334 5.03113 5.03113 3.35743 5.03113 4.4334 4.4334 5.03113 ] pdfxs
246.102 192.36 m
(for)
[3.35743 5.03113 3.35743 ] pdfxs
260.008 192.36 m
(simultaneously)
[3.83552 2.75955 7.79068 5.03113 2.75955 2.75955 4.4334 5.03113 4.4334 5.03113 5.03113 
3.83552 2.75955 5.03113 ] pdfxs
322.451 192.36 m
(committing)
[4.4334 5.03113 7.79068 7.79068 2.75955 2.75955 2.75955 2.75955 5.03113 5.03113 ] pdfxs
370.638 192.36 m
(to)
[2.75955 5.03113 ] pdfxs
380.588 192.36 m
(multiple)
[7.79068 5.03113 2.75955 2.75955 2.75955 5.03113 2.75955 4.4334 ] pdfxs
415.953 192.36 m
(acti)
[4.4334 4.4334 2.75955 2.75955 ] pdfxs
430.099 192.36 m
(vities,)
[5.03113 2.75955 2.75955 2.75955 4.4334 3.83552 2.51055 ] pdfxs
456.469 192.36 m
(each)
[4.4334 4.4334 4.4334 5.03113 ] pdfxs
476.84 192.36 m
(mod-)
[7.79068 5.03113 5.03113 3.35743 ] pdfxs
120.839 180.48 m
(eled)
[4.4334 2.75955 4.4334 5.03113 ] pdfxs
141.096 180.48 m
(as)
[4.4334 3.83552 ] pdfxs
153.085 180.48 m
(a) show
161.239 180.48 m
(temporally)
[2.75955 4.4334 7.79068 5.03113 5.03113 3.35743 4.4334 2.75955 2.75955 5.03113 ] pdfxs
207.986 180.48 m
(e) show
212.299 180.48 m
(xtended)
[5.03113 2.75955 4.4334 5.03113 5.03113 4.4334 5.03113 ] pdfxs
247.41 180.48 m
(action)
[4.4334 4.4334 2.75955 2.75955 5.03113 5.03113 ] pdfxs
275.459 180.48 m
(in)
[2.75955 5.03113 ] pdfxs
286.849 180.48 m
(a) show
295.003 180.48 m
(semi-Mark)
[3.83552 4.4334 7.79068 2.75955 3.35743 8.87669 4.4334 3.35743 5.03113 ] pdfxs
338.758 180.48 m
(o) show
343.669 180.48 m
(v) show
352.06 180.48 m
(decision)
[5.03113 4.4334 4.4334 2.75955 3.83552 2.75955 5.03113 5.03113 ] pdfxs
388.855 180.48 m
(process)
[5.03113 3.35743 5.03113 4.4334 4.4334 3.83552 3.83552 ] pdfxs
422.413 180.48 m
(\(SMDP\).)
[3.35743 5.51926 8.87669 7.19296 5.51926 3.35743 2.51055 ] pdfxs
462.347 180.48 m
(F) show
467.746 180.48 m
(or)
[5.03113 3.35743 ] pdfxs
479.734 180.48 m
(each)
[4.4334 4.4334 4.4334 5.03113 ] pdfxs
120.838 168.48 m
(acti)
[4.4334 4.4334 2.75955 2.75955 ] pdfxs
134.984 168.48 m
(vity)
[5.03113 2.75955 2.75955 5.03113 ] pdfxs
153.206 168.48 m
(we)
[7.19296 4.4334 ] pdfxs
167.472 168.48 m
(de\002ne)
[5.03113 4.4334 5.51926 5.03113 4.4334 ] pdfxs
194.441 168.48 m
(a) show
201.514 168.48 m
(set)
[3.83552 4.4334 2.75955 ] pdfxs
215.183 168.48 m
(of)
[5.03113 3.35743 ] pdfxs
226.211 168.48 m
(admissible)
[4.4334 5.03113 7.79068 2.75955 3.83552 3.83552 2.75955 5.03113 2.75955 4.4334 ] pdfxs
271.401 168.48 m
(solutions)
[3.83552 5.03113 2.75955 5.03113 2.75955 2.75955 5.03113 5.03113 3.83552 ] pdfxs
309.996 168.48 m
(consisting)
[4.4334 5.03113 5.03113 3.83552 2.75955 3.83552 2.75955 2.75955 5.03113 5.03113 ] pdfxs
353.144 168.48 m
(of)
[5.03113 3.35743 ] pdfxs
364.052 168.48 m
(the)
[2.75955 5.03113 4.4334 ] pdfxs
378.916 168.48 m
(redundant)
[3.35743 4.4334 5.03113 5.03113 5.03113 5.03113 4.4334 5.03113 2.75955 ] pdfxs
421.336 168.48 m
(set)
[3.83552 4.4334 2.75955 ] pdfxs
435.004 168.48 m
(of)
[5.03113 3.35743 ] pdfxs
446.033 168.48 m
(optimal)
[5.03113 5.03113 2.75955 2.75955 7.79068 4.4334 2.75955 ] pdfxs
479.118 168.48 m
(poli-)
[5.03113 5.03113 2.75955 2.75955 3.35743 ] pdfxs
120.838 156.48 m
(cies,)
[4.4334 2.75955 4.4334 3.83552 2.51055 ] pdfxs
142.171 156.48 m
(and)
[4.4334 5.03113 5.03113 ] pdfxs
159.787 156.48 m
(those)
[2.75955 5.03113 5.03113 3.83552 4.4334 ] pdfxs
183.997 156.48 m
(policies)
[5.03113 5.03113 2.75955 2.75955 4.4334 2.75955 4.4334 3.83552 ] pdfxs
218.161 156.48 m
(that)
[2.75955 5.03113 4.4334 2.75955 ] pdfxs
236.385 156.48 m
(ascend)
[4.4334 3.83552 4.4334 4.4334 5.03113 5.03113 ] pdfxs
266.583 156.48 m
(the)
[2.75955 5.03113 4.4334 ] pdfxs
281.927 156.48 m
(optimal)
[5.03113 5.03113 2.75955 2.75955 7.79068 4.4334 2.75955 ] pdfxs
315.612 156.48 m
(state-v)
[3.83552 2.75955 4.4334 2.75955 4.4334 3.35743 5.03113 ] pdfxs
341.982 156.48 m
(alue)
[4.4334 2.75955 5.03113 4.4334 ] pdfxs
361.64 156.48 m
(function)
[3.35743 5.03113 5.03113 4.4334 2.75955 2.75955 5.03113 5.03113 ] pdfxs
398.075 156.48 m
(associated)
[4.4334 3.83552 3.83552 5.03113 4.4334 2.75955 4.4334 2.75955 4.4334 5.03113 ] pdfxs
442.181 156.48 m
(with)
[7.19296 2.75955 2.75955 5.03113 ] pdfxs
463.044 156.48 m
(them.)
[2.75955 5.03113 4.4334 7.79068 2.51055 ] pdfxs
490.73 156.48 m
(A) show
120.839 144.6 m
(plan)
[5.03113 2.75955 4.4334 5.03113 ] pdfxs
140.134 144.6 m
(is)
[2.75955 3.83552 ] pdfxs
148.889 144.6 m
(then)
[2.75955 5.03113 4.4334 5.03113 ] pdfxs
168.064 144.6 m
(generated)
[5.03113 4.4334 5.03113 4.4334 3.35743 4.4334 2.75955 4.4334 5.03113 ] pdfxs
208.928 144.6 m
(by)
[5.03113 5.03113 ] pdfxs
220.911 144.6 m
(mer)
[7.79068 4.4334 3.35743 ] pdfxs
236.372 144.6 m
(ging)
[5.03113 2.75955 5.03113 5.03113 ] pdfxs
256.025 144.6 m
(them)
[2.75955 5.03113 4.4334 7.79068 ] pdfxs
278.08 144.6 m
(in)
[2.75955 5.03113 ] pdfxs
287.911 144.6 m
(such)
[3.83552 5.03113 4.4334 5.03113 ] pdfxs
308.282 144.6 m
(a) show
314.875 144.6 m
(w) show
321.948 144.6 m
(ay)
[4.4334 5.03113 ] pdfxs
333.453 144.6 m
(that)
[2.75955 5.03113 4.4334 2.75955 ] pdfxs
350.477 144.6 m
(the)
[2.75955 5.03113 4.4334 ] pdfxs
364.741 144.6 m
(solutions)
[3.83552 5.03113 2.75955 5.03113 2.75955 2.75955 5.03113 5.03113 3.83552 ] pdfxs
402.735 144.6 m
(to)
[2.75955 5.03113 ] pdfxs
412.686 144.6 m
(the)
[2.75955 5.03113 4.4334 ] pdfxs
426.95 144.6 m
(subordinate)
[3.83552 5.03113 5.03113 5.03113 3.35743 5.03113 2.75955 5.03113 4.4334 2.75955 4.4334 
] pdfxs
475.485 144.6 m
(acti)
[4.4334 4.4334 2.75955 2.75955 ] pdfxs
489.631 144.6 m
(v-)
[5.03113 3.35743 ] pdfxs
120.838 132.6 m
(ities)
[2.75955 2.75955 2.75955 4.4334 3.83552 ] pdfxs
140.026 132.6 m
(are)
[4.4334 3.35743 4.4334 ] pdfxs
154.65 132.6 m
(realized)
[3.35743 4.4334 4.4334 2.75955 2.75955 4.4334 4.4334 5.03113 ] pdfxs
188.571 132.6 m
(in)
[2.75955 5.03113 ] pdfxs
198.882 132.6 m
(the)
[2.75955 5.03113 4.4334 ] pdfxs
213.506 132.6 m
(set)
[3.83552 4.4334 2.75955 ] pdfxs
227.055 132.6 m
(of)
[5.03113 3.35743 ] pdfxs
237.843 132.6 m
(admissible)
[4.4334 5.03113 7.79068 2.75955 3.83552 3.83552 2.75955 5.03113 2.75955 4.4334 ] pdfxs
282.913 132.6 m
(solutions)
[3.83552 5.03113 2.75955 5.03113 2.75955 2.75955 5.03113 5.03113 3.83552 ] pdfxs
321.388 132.6 m
(satisfying)
[3.83552 4.4334 2.75955 2.75955 3.83552 3.35743 5.03113 2.75955 5.03113 5.03113 ] pdfxs
362.622 132.6 m
(the)
[2.75955 5.03113 4.4334 ] pdfxs
377.246 132.6 m
(superior)
[3.83552 5.03113 5.03113 4.4334 3.35743 2.75955 5.03113 3.35743 ] pdfxs
412.363 132.6 m
(acti)
[4.4334 4.4334 2.75955 2.75955 ] pdfxs
426.509 132.6 m
(vities.)
[5.03113 2.75955 2.75955 2.75955 4.4334 3.83552 2.51055 ] pdfxs
453.719 132.6 m
(W) show
462.233 132.6 m
(e) show
469.187 132.6 m
(present)
[5.03113 3.35743 4.4334 3.83552 4.4334 5.03113 2.75955 ] pdfxs
120.838 120.72 m
(our)
[5.03113 5.03113 3.35743 ] pdfxs
136.657 120.72 m
(theoretical)
[2.75955 5.03113 4.4334 5.03113 3.35743 4.4334 2.75955 2.75955 4.4334 4.4334 2.75955 
] pdfxs
181.129 120.72 m
(results)
[3.35743 4.4334 3.83552 5.03113 2.75955 2.75955 3.83552 ] pdfxs
209.541 120.72 m
(and)
[4.4334 5.03113 5.03113 ] pdfxs
226.437 120.72 m
(empirically)
[4.4334 7.79068 5.03113 2.75955 3.35743 2.75955 4.4334 4.4334 2.75955 2.75955 5.03113 
] pdfxs
274.266 120.72 m
(e) show
278.46 120.72 m
(v) show
283.251 120.72 m
(aluate)
[4.4334 2.75955 5.03113 4.4334 2.75955 4.4334 ] pdfxs
309.381 120.72 m
(our)
[5.03113 5.03113 3.35743 ] pdfxs
325.201 120.72 m
(approach)
[4.4334 5.03113 5.03113 3.35743 5.03113 4.4334 4.4334 5.03113 ] pdfxs
364.143 120.72 m
(in)
[2.75955 5.03113 ] pdfxs
374.333 120.72 m
(a) show
381.287 120.72 m
(simulated)
[3.83552 2.75955 7.79068 5.03113 2.75955 4.4334 2.75955 4.4334 5.03113 ] pdfxs
422.401 120.72 m
(domain.)
[5.03113 5.03113 7.79068 4.4334 2.75955 5.03113 2.51055 ] pdfxs
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 2 2
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.6 672.12 m
/N9 14.3462 Tf
(1) show
115.067 672.12 m
(Intr)
[5.63813 7.91913 4.79162 6.35526 ] pdfxs
139.532 672.12 m
(oduction)
[7.18754 7.91913 7.91913 6.35526 4.79162 3.95956 7.18754 7.91913 ] pdfxs
93.5999 647.28 m
/N22 10.9091 Tf
(Man)
[9.70908 4.78904 5.38913 ] pdfxs
113.367 647.28 m
(y) show
122.956 647.28 m
(real-w)
[3.58903 4.78904 4.78904 2.98911 3.58903 7.90916 ] pdfxs
150.491 647.28 m
(orld)
[5.38913 3.58903 2.98911 5.38913 ] pdfxs
172.287 647.28 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
214.56 647.28 m
(problems)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 4.18912 ] pdfxs
259.232 647.28 m
(in)
[2.98911 5.38913 ] pdfxs
267.13 647.28 m
(v) show
272.28 647.28 m
(olv)
[5.38913 2.98911 5.38913 ] pdfxs
285.927 647.28 m
(e) show
295.156 647.28 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
345.807 647.28 m
(optimization)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 4.78904 2.98911 2.98911 5.38913 
5.38913 ] pdfxs
404.956 647.28 m
(of)
[5.38913 3.58903 ] pdfxs
418.134 647.28 m
(a) show
427.123 647.28 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
443.29 647.28 m
(of)
[5.38913 3.58903 ] pdfxs
456.468 647.28 m
(prioritized)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 
] pdfxs
505.908 647.28 m
(sub-)
[4.18912 5.38913 5.38913 3.58903 ] pdfxs
93.5992 633.84 m
(goals)
[5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
119.705 633.84 m
(of)
[5.38913 3.58903 ] pdfxs
131.803 633.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
148.21 633.84 m
(problem)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 ] pdfxs
187.614 633.84 m
(by)
[5.38913 5.38913 ] pdfxs
201.632 633.84 m
(dynamically)
[5.38913 5.38913 5.38913 4.78904 8.50908 2.98911 4.78904 4.78904 2.98911 2.98911 5.38913 
] pdfxs
258.512 633.84 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
275.159 633.84 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
297.675 633.84 m
(a) show
305.704 633.84 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
320.792 633.84 m
(of)
[5.38913 3.58903 ] pdfxs
333.01 633.84 m
(\(pre)
[3.58903 5.38913 3.58903 4.78904 ] pdfxs
350.126 633.84 m
(viously)
[5.38913 2.98911 5.38913 5.38913 4.18912 2.98911 5.38913 ] pdfxs
385.45 633.84 m
(learned\))
[2.98911 4.78904 4.78904 3.58903 5.38913 4.78904 5.38913 3.58903 ] pdfxs
424.123 633.84 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
461.115 633.84 m
(optimizing)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 2.98911 5.38913 5.38913 ] pdfxs
511.406 633.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5993 620.28 m
(subgoals.)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
139.461 620.28 m
(A) show
150.61 620.28 m
(f) show
154.079 620.28 m
(amiliar)
[4.78904 8.50908 2.98911 2.98911 2.98911 4.78904 3.58903 ] pdfxs
188.323 620.28 m
(e) show
192.992 620.28 m
(xample)
[5.38913 4.78904 8.50908 5.38913 2.98911 4.78904 ] pdfxs
228.326 620.28 m
(of)
[5.38913 3.58903 ] pdfxs
240.665 620.28 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
259.701 620.28 m
(type)
[2.98911 5.38913 5.38913 4.78904 ] pdfxs
281.617 620.28 m
(of)
[5.38913 3.58903 ] pdfxs
294.075 620.28 m
(problem)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 ] pdfxs
333.599 620.28 m
(w) show
341.388 620.28 m
(ould)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
364.024 620.28 m
(be)
[5.38913 4.78904 ] pdfxs
377.562 620.28 m
(a) show
385.711 620.28 m
(dri)
[5.38913 3.58903 2.98911 ] pdfxs
397.439 620.28 m
(ving)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
420.195 620.28 m
(task)
[2.98911 4.78904 4.18912 5.38913 ] pdfxs
441.031 620.28 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
470.857 620.28 m
(may)
[8.50908 4.78904 5.38913 ] pdfxs
492.904 620.28 m
(in)
[2.98911 5.38913 ] pdfxs
500.802 620.28 m
(v) show
505.951 620.28 m
(olv)
[5.38913 2.98911 5.38913 ] pdfxs
519.598 620.28 m
(e) show
93.5984 606.72 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
134.791 606.72 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
157.787 606.72 m
(as)
[4.78904 4.18912 ] pdfxs
169.886 606.72 m
(safely)
[4.18912 4.78904 3.58903 4.78904 2.98911 5.38913 ] pdfxs
198.86 606.72 m
(na)
[5.38913 4.78904 ] pdfxs
208.798 606.72 m
(vigating)
[5.38913 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
247.591 606.72 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
263.998 606.72 m
(car)
[4.78904 4.78904 3.58903 ] pdfxs
276.685 606.72 m
(,) show
282.674 606.72 m
(talking)
[2.98911 4.78904 2.98911 5.38913 2.98911 5.38913 5.38913 ] pdfxs
315.958 606.72 m
(on)
[5.38913 5.38913 ] pdfxs
329.976 606.72 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
346.264 606.72 m
(cell)
[4.78904 4.78904 2.98911 2.98911 ] pdfxs
365.06 606.72 m
(phone,)
[5.38913 5.38913 5.38913 5.38913 4.78904 2.74908 ] pdfxs
397.514 606.72 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
416.322 606.72 m
(drinking)
[5.38913 3.58903 2.98911 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
456.194 606.72 m
(cof)
[4.78904 5.38913 3.58903 ] pdfxs
469.722 606.72 m
(fee,)
[3.58903 4.78904 4.78904 2.74908 ] pdfxs
488.998 606.72 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
511.394 606.72 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5982 593.16 m
(\002rst)
[6.10906 3.58903 4.18912 2.98911 ] pdfxs
113.594 593.16 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
150.598 593.16 m
(taking)
[2.98911 4.78904 5.38913 2.98911 5.38913 5.38913 ] pdfxs
180.893 593.16 m
(precedence)
[5.38913 3.58903 4.78904 4.78904 4.78904 5.38913 4.78904 5.38913 4.78904 4.78904 ] pdfxs
232.983 593.16 m
(o) show
238.253 593.16 m
(v) show
243.522 593.16 m
(er)
[4.78904 3.58903 ] pdfxs
255.14 593.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
271.547 593.16 m
(others.)
[5.38913 2.98911 5.38913 4.78904 3.58903 4.18912 2.74908 ] pdfxs
305.311 593.16 m
(In)
[3.58903 5.38913 ] pdfxs
317.529 593.16 m
(general)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 ] pdfxs
352.732 593.16 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
371.529 593.16 m
(is)
[2.98911 4.18912 ] pdfxs
381.827 593.16 m
(a) show
389.856 593.16 m
(challenging)
[4.78904 5.38913 4.78904 2.98911 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 
] pdfxs
443.736 593.16 m
(problem,)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 2.74908 ] pdfxs
485.889 593.16 m
(since)
[4.18912 2.98911 5.38913 4.78904 4.78904 ] pdfxs
511.394 593.16 m
(ac-)
[4.78904 4.78904 3.58903 ] pdfxs
93.5981 579.6 m
(ti)
[2.98911 2.98911 ] pdfxs
99.3362 579.6 m
(vities)
[5.38913 2.98911 2.98911 2.98911 4.78904 4.18912 ] pdfxs
125.431 579.6 m
(often)
[5.38913 3.58903 2.98911 4.78904 5.38913 ] pdfxs
150.336 579.6 m
(ha)
[5.38913 4.78904 ] pdfxs
160.274 579.6 m
(v) show
165.543 579.6 m
(e) show
173.092 579.6 m
(con\003icting)
[4.78904 5.38913 5.38913 6.10906 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
222.063 579.6 m
(objecti)
[5.38913 5.38913 2.98911 4.78904 4.78904 2.98911 2.98911 ] pdfxs
251.147 579.6 m
(v) show
256.416 579.6 m
(es)
[4.78904 4.18912 ] pdfxs
268.274 579.6 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
286.601 579.6 m
(compete)
[4.78904 5.38913 8.50908 5.38913 4.78904 2.98911 4.78904 ] pdfxs
326.005 579.6 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
341.212 579.6 m
(limited)
[2.98911 2.98911 8.50908 2.98911 2.98911 4.78904 5.38913 ] pdfxs
374.496 579.6 m
(amount)
[4.78904 8.50908 5.38913 5.38913 5.38913 2.98911 ] pdfxs
409.71 579.6 m
(of)
[5.38913 3.58903 ] pdfxs
421.328 579.6 m
(resources)
[3.58903 4.78904 4.18912 5.38913 5.38913 3.58903 4.78904 4.78904 4.18912 ] pdfxs
464.91 579.6 m
(in)
[2.98911 5.38913 ] pdfxs
475.928 579.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
491.736 579.6 m
(system.)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 2.74908 ] pdfxs
93.5977 566.04 m
(W) show
103.067 566.04 m
(e) show
111.216 566.04 m
(refer)
[3.58903 4.78904 3.58903 4.78904 3.58903 ] pdfxs
135.161 566.04 m
(to)
[2.98911 5.38913 ] pdfxs
147.019 566.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
163.667 566.04 m
(beha)
[5.38913 4.78904 5.38913 4.78904 ] pdfxs
183.783 566.04 m
(vior)
[5.38913 2.98911 5.38913 3.58903 ] pdfxs
204.979 566.04 m
(of)
[5.38913 3.58903 ] pdfxs
217.317 566.04 m
(an)
[4.78904 5.38913 ] pdfxs
231.095 566.04 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
258.041 566.04 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
277.677 566.04 m
(simultaneously)
[4.18912 2.98911 8.50908 5.38913 2.98911 2.98911 4.78904 5.38913 4.78904 5.38913 5.38913 
4.18912 2.98911 5.38913 ] pdfxs
347.004 566.04 m
(commits)
[4.78904 5.38913 8.50908 8.50908 2.98911 2.98911 4.18912 ] pdfxs
387.848 566.04 m
(to)
[2.98911 5.38913 ] pdfxs
399.706 566.04 m
(multiple)
[8.50908 5.38913 2.98911 2.98911 2.98911 5.38913 2.98911 4.78904 ] pdfxs
439.459 566.04 m
(objecti)
[5.38913 5.38913 2.98911 4.78904 4.78904 2.98911 2.98911 ] pdfxs
468.542 566.04 m
(v) show
473.812 566.04 m
(es)
[4.78904 4.18912 ] pdfxs
486.51 566.04 m
(as)
[4.78904 4.18912 ] pdfxs
498.968 566.04 m
/N24 10.9091 Tf
(Coar)
[7.30907 5.38913 5.38913 4.18912 ] pdfxs
521.004 566.04 m
(-) show
93.5972 552.48 m
(ticulation)
[2.98911 2.98911 4.78904 5.38913 2.98911 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
134.888 552.48 m
/N22 10.9091 Tf
(,) show
142.557 552.48 m
(inspired)
[2.98911 5.38913 4.18912 5.38913 2.98911 3.58903 4.78904 5.38913 ] pdfxs
181.71 552.48 m
(by)
[5.38913 5.38913 ] pdfxs
196.688 552.48 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
214.175 552.48 m
(coarticulation)
[4.78904 5.38913 4.78904 3.58903 2.98911 2.98911 4.78904 5.38913 2.98911 4.78904 2.98911 
2.98911 5.38913 5.38913 ] pdfxs
278.102 552.48 m
(phenomenon)
[5.38913 5.38913 4.78904 5.38913 5.38913 8.50908 4.78904 5.38913 5.38913 5.38913 ] pdfxs
338.473 552.48 m
(in)
[2.98911 5.38913 ] pdfxs
351.171 552.48 m
(speech.)
[4.18912 5.38913 4.78904 4.78904 4.78904 5.38913 2.74908 ] pdfxs
391.055 552.48 m
(In)
[3.58903 5.38913 ] pdfxs
404.233 552.48 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
424.109 552.48 m
(paper)
[5.38913 4.78904 5.38913 4.78904 3.58903 ] pdfxs
452.375 552.48 m
(we)
[7.90916 4.78904 ] pdfxs
469.273 552.48 m
(in)
[2.98911 5.38913 ] pdfxs
477.171 552.48 m
(v) show
482.44 552.48 m
(estigate)
[4.78904 4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 4.78904 ] pdfxs
519.913 552.48 m
(a) show
93.5967 538.92 m
(frame)
[3.58903 3.58903 4.78904 8.50908 4.78904 ] pdfxs
118.622 538.92 m
(w) show
126.411 538.92 m
(ork)
[5.38913 3.58903 5.38913 ] pdfxs
144.138 538.92 m
(based)
[5.38913 4.78904 4.18912 4.78904 5.38913 ] pdfxs
171.924 538.92 m
(on)
[5.38913 5.38913 ] pdfxs
185.942 538.92 m
(semi-Mark)
[4.18912 4.78904 8.50908 2.98911 3.58903 9.70908 4.78904 3.58903 5.38913 ] pdfxs
233.364 538.92 m
(o) show
238.633 538.92 m
(v) show
247.502 538.92 m
(decision)
[5.38913 4.78904 4.78904 2.98911 4.18912 2.98911 5.38913 5.38913 ] pdfxs
286.895 538.92 m
(processes)
[5.38913 3.58903 5.38913 4.78904 4.78904 4.18912 4.18912 4.78904 4.18912 ] pdfxs
331.676 538.92 m
(\(SMDPs\))
[3.58903 6.10906 9.70908 7.90916 6.10906 4.18912 3.58903 ] pdfxs
375.88 538.92 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
391.687 538.92 m
(studying)
[4.18912 2.98911 5.38913 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
432.28 538.92 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
451.196 538.92 m
(problem.)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 2.74908 ] pdfxs
494.669 538.92 m
(W) show
504.138 538.92 m
(e) show
512.047 538.92 m
(as-)
[4.78904 4.18912 3.58903 ] pdfxs
93.5961 525.36 m
(sume)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
119.712 525.36 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
139.109 525.36 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
155.516 525.36 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
182.221 525.36 m
(has)
[5.38913 4.78904 4.18912 ] pdfxs
199.829 525.36 m
(access)
[4.78904 4.78904 4.78904 4.78904 4.18912 4.18912 ] pdfxs
230.723 525.36 m
(to)
[2.98911 5.38913 ] pdfxs
242.341 525.36 m
(a) show
250.25 525.36 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
265.458 525.36 m
(of)
[5.38913 3.58903 ] pdfxs
277.676 525.36 m
(learned)
[2.98911 4.78904 4.78904 3.58903 5.38913 4.78904 5.38913 ] pdfxs
312.759 525.36 m
(acti)
[4.78904 4.78904 2.98911 2.98911 ] pdfxs
328.076 525.36 m
(vities)
[5.38913 2.98911 2.98911 2.98911 4.78904 4.18912 ] pdfxs
354.89 525.36 m
(modeled)
[8.50908 5.38913 5.38913 4.78904 2.98911 4.78904 5.38913 ] pdfxs
395.494 525.36 m
(by)
[5.38913 5.38913 ] pdfxs
409.512 525.36 m
(a) show
417.421 525.36 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
432.628 525.36 m
(of)
[5.38913 3.58903 ] pdfxs
444.846 525.36 m
(SMDP)
[6.10906 9.70908 7.90916 6.10906 ] pdfxs
477.563 525.36 m
/N24 10.9091 Tf
(contr)
[4.78904 5.38913 5.38913 2.98911 4.18912 ] pdfxs
499.828 525.36 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
520.054 525.36 m
(s) show
94 519.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000\002\001\004\003\006\005\b\007\n\t\013\005\r\f\016\t\006\017\006\017\
\006\017\020\t\013\005\022\021\024\023)
[0 9.89909 0 12.9988 0 4.79956 0 6.29942 0 4.89955 0 
4.09962 0 5.99945 0 5.29951 0 4.79956 0 4.79956 0 4.79956 
0 4.99954 0 4.09962 0 5.89946 0 6.09944 0 ] pdfxs
192 511.8 m
/N22 10.9091 Tf
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
215.236 511.8 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
237.742 511.8 m
(ving)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
260.738 511.8 m
(a) show
269.007 511.8 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
306.5 511.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025\027\026)
[0 6.99936 0 ] pdfxs
320.04 511.8 m
/N22 10.9091 Tf
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
344.596 511.8 m
(a) show
352.865 511.8 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
368.312 511.8 m
(of)
[5.38913 3.58903 ] pdfxs
380.771 511.8 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
422.7 511.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
434.899 519.399 m
(\001\004\003)
[0 12.9988 0 ] pdfxs
452.797 511.8 m
(\025) show
460.297 519.399 m
(\007\n\t)
[0 4.89955 0 ] pdfxs
469.396 511.8 m
(\025) show
476.295 519.399 m
(\f\031\t\006\017\006\017\006\017\032\t)
[0 5.19952 0 4.79956 0 4.79956 0 4.79956 0 5.09953 0 
] pdfxs
505.192 511.8 m
(\025) show
511.992 519.399 m
(\021\024\023)
[0 6.09944 0 ] pdfxs
522.84 511.8 m
/N22 10.9091 Tf
(.) show
93.6 498.24 m
(W) show
103.069 498.24 m
(e) show
111.458 498.24 m
(further)
[3.58903 5.38913 3.58903 2.98911 5.38913 4.78904 3.58903 ] pdfxs
144.622 498.24 m
(assume)
[4.78904 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
180.316 498.24 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
200.312 498.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
217.2 498.24 m
(agent-en)
[4.78904 5.38913 4.78904 5.38913 2.98911 3.58903 4.78904 5.38913 ] pdfxs
253.832 498.24 m
(vironment)
[5.38913 2.98911 3.58903 5.38913 5.38913 8.50908 4.78904 5.38913 2.98911 ] pdfxs
302.574 498.24 m
(interaction)
[2.98911 5.38913 2.98911 4.78904 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 
] pdfxs
352.734 498.24 m
(is)
[2.98911 4.18912 ] pdfxs
363.632 498.24 m
(an)
[4.78904 5.38913 ] pdfxs
377.41 498.24 m
(episodic)
[4.78904 5.38913 2.98911 4.18912 5.38913 5.38913 2.98911 4.78904 ] pdfxs
417.403 498.24 m
(task)
[2.98911 4.78904 4.18912 5.38913 ] pdfxs
438.48 498.24 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
468.665 498.24 m
(at)
[4.78904 2.98911 ] pdfxs
480.163 498.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
497.05 498.24 m
(be)
[5.38913 4.78904 ] pdfxs
507.109 498.24 m
(gin-)
[5.38913 2.98911 5.38913 3.58903 ] pdfxs
93.5995 484.8 m
(ning)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
116.236 484.8 m
(of)
[5.38913 3.58903 ] pdfxs
128.574 484.8 m
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
151.81 484.8 m
(episode)
[4.78904 5.38913 2.98911 4.18912 5.38913 5.38913 4.78904 ] pdfxs
188.334 484.8 m
(a) show
196.483 484.8 m
(subset)
[4.18912 5.38913 5.38913 4.18912 4.78904 2.98911 ] pdfxs
227.017 484.8 m
(of)
[5.38913 3.58903 ] pdfxs
239.356 484.8 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
281 484.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025\034\033\035\030)
[0 11.7989 0 12.0989 0 ] pdfxs
315.709 484.8 m
/N22 10.9091 Tf
(are)
[4.78904 3.58903 4.78904 ] pdfxs
332.356 484.8 m
(introduced)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 4.78904 5.38913 ] pdfxs
382.167 484.8 m
(to)
[2.98911 5.38913 ] pdfxs
393.905 484.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
410.552 484.8 m
(agent,)
[4.78904 5.38913 4.78904 5.38913 2.98911 2.74908 ] pdfxs
440.247 484.8 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
470.072 484.8 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
511.505 484.8 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
93.6 471.24 m
(rank)
[3.58903 4.78904 5.38913 5.38913 ] pdfxs
112.636 471.24 m
(ed)
[4.78904 5.38913 ] pdfxs
126.055 471.24 m
(according)
[4.78904 4.78904 4.78904 5.38913 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
172.036 471.24 m
(to)
[2.98911 5.38913 ] pdfxs
183.414 471.24 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
209.411 471.24 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
244.963 471.24 m
(ranking)
[3.58903 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
281.247 471.24 m
(system.)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 2.74908 ] pdfxs
318.371 471.24 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
338.258 471.24 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
364.843 471.24 m
(is)
[2.98911 4.18912 ] pdfxs
375.021 471.24 m
(to)
[2.98911 5.38913 ] pdfxs
386.52 471.24 m
(de)
[5.38913 4.78904 ] pdfxs
396.458 471.24 m
(vise)
[5.38913 2.98911 4.18912 4.78904 ] pdfxs
417.054 471.24 m
(a) show
424.843 471.24 m
(global)
[5.38913 2.98911 5.38913 5.38913 4.78904 2.98911 ] pdfxs
455.018 471.24 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
476.443 471.24 m
(y) show
485.072 471.24 m
(by)
[5.38913 5.38913 ] pdfxs
498.97 471.24 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
515.617 471.24 m
(g-)
[5.38913 3.58903 ] pdfxs
93.5994 457.68 m
(ing)
[2.98911 5.38913 5.38913 ] pdfxs
110.487 457.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
126.774 457.68 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
163.647 457.68 m
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
211.298 457.68 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
233.694 457.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
249.981 457.68 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
299.541 457.68 m
(into)
[2.98911 5.38913 2.98911 5.38913 ] pdfxs
319.417 457.68 m
(a) show
327.206 457.68 m
(global)
[5.38913 2.98911 5.38913 5.38913 4.78904 2.98911 ] pdfxs
357.501 457.68 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
378.926 457.68 m
(y) show
387.435 457.68 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
406.832 457.68 m
(simultaneously)
[4.18912 2.98911 8.50908 5.38913 2.98911 2.98911 4.78904 5.38913 4.78904 5.38913 5.38913 
4.18912 2.98911 5.38913 ] pdfxs
475.679 457.68 m
(commits)
[4.78904 5.38913 8.50908 8.50908 2.98911 2.98911 4.18912 ] pdfxs
516.162 457.68 m
(to)
[2.98911 5.38913 ] pdfxs
93.5995 444.12 m
(them)
[2.98911 5.38913 4.78904 8.50908 ] pdfxs
119.236 444.12 m
(according)
[4.78904 4.78904 4.78904 5.38913 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
165.938 444.12 m
(to)
[2.98911 5.38913 ] pdfxs
178.276 444.12 m
(their)
[2.98911 5.38913 4.78904 2.98911 3.58903 ] pdfxs
202.101 444.12 m
(de)
[5.38913 4.78904 ] pdfxs
212.159 444.12 m
(gree)
[5.38913 3.58903 4.78904 4.78904 ] pdfxs
234.796 444.12 m
(of)
[5.38913 3.58903 ] pdfxs
247.734 444.12 m
(signi\002cance.)
[4.18912 2.98911 5.38913 5.38913 2.98911 6.10906 4.78904 4.78904 5.38913 4.78904 4.78904 
2.74908 ] pdfxs
309.163 444.12 m
(In)
[3.58903 5.38913 ] pdfxs
322.101 444.12 m
(general)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 ] pdfxs
357.905 444.12 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
395.028 444.12 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
432.741 444.12 m
(of)
[5.38913 3.58903 ] pdfxs
445.679 444.12 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
496.079 444.12 m
(do)
[5.38913 5.38913 ] pdfxs
510.817 444.12 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
93.5992 430.56 m
(of)
[5.38913 3.58903 ] pdfxs
102.337 430.56 m
(fer)
[3.58903 4.78904 3.58903 ] pdfxs
117.665 430.56 m
(\003e)
[6.10906 4.78904 ] pdfxs
128.443 430.56 m
(xibility)
[5.38913 2.98911 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 ] pdfxs
163.035 430.56 m
(required)
[3.58903 4.78904 5.38913 5.38913 2.98911 3.58903 4.78904 5.38913 ] pdfxs
202.428 430.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
218.235 430.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
234.763 430.56 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
251.41 430.56 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
274.046 430.56 m
(process.)
[5.38913 3.58903 5.38913 4.78904 4.78904 4.18912 4.18912 2.74908 ] pdfxs
314.159 430.56 m
(Thus)
[6.70915 5.38913 5.38913 4.18912 ] pdfxs
339.075 430.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
354.882 430.56 m
(e) show
359.432 430.56 m
(v) show
364.701 430.56 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
381.828 430.56 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
427.319 430.56 m
(we)
[7.90916 4.78904 ] pdfxs
443.257 430.56 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
463.973 430.56 m
(compute)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 4.78904 ] pdfxs
504.577 430.56 m
(a) show
512.606 430.56 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
93.5988 417 m
(of)
[5.38913 3.58903 ] pdfxs
105.937 417 m
/N24 10.9091 Tf
(admissible)
[5.38913 5.38913 7.90916 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
155.748 417 m
/N22 10.9091 Tf
(suboptimal)
[4.18912 5.38913 5.38913 5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
207.359 417 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
244.471 417 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
264.108 417 m
(re\003ect)
[3.58903 4.78904 6.10906 4.78904 4.78904 2.98911 ] pdfxs
294.522 417 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
311.169 417 m
(de)
[5.38913 4.78904 ] pdfxs
321.228 417 m
(gree)
[5.38913 3.58903 4.78904 4.78904 ] pdfxs
343.264 417 m
(of)
[5.38913 3.58903 ] pdfxs
355.602 417 m
(\003e)
[6.10906 4.78904 ] pdfxs
366.38 417 m
(xibility)
[5.38913 2.98911 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 ] pdfxs
400.973 417 m
(we)
[7.90916 4.78904 ] pdfxs
417.031 417 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
435.358 417 m
(af)
[4.78904 3.58903 ] pdfxs
443.497 417 m
(ford)
[3.58903 5.38913 3.58903 5.38913 ] pdfxs
464.933 417 m
(in)
[2.98911 5.38913 ] pdfxs
476.671 417 m
(it.)
[2.98911 2.98911 2.74908 ] pdfxs
490.438 417 m
(Gi)
[7.90916 2.98911 ] pdfxs
501.096 417 m
(v) show
506.365 417 m
(en)
[4.78904 5.38913 ] pdfxs
519.903 417 m
(a) show
93.5984 403.44 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
135.009 403.44 m
(,) show
141.838 403.44 m
(an)
[4.78904 5.38913 ] pdfxs
155.496 403.44 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
205.547 403.44 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
226.973 403.44 m
(y) show
236.082 403.44 m
(is)
[2.98911 4.18912 ] pdfxs
246.74 403.44 m
(either)
[4.78904 2.98911 2.98911 5.38913 4.78904 3.58903 ] pdfxs
274.995 403.44 m
(an)
[4.78904 5.38913 ] pdfxs
288.773 403.44 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
325.416 403.44 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
346.842 403.44 m
(y) show
351.511 403.44 m
(,) show
358.1 403.44 m
(or)
[5.38913 3.58903 ] pdfxs
370.678 403.44 m
(it)
[2.98911 2.98911 ] pdfxs
380.136 403.44 m
(is)
[2.98911 4.18912 ] pdfxs
390.914 403.44 m
(a) show
399.183 403.44 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
420.608 403.44 m
(y) show
429.717 403.44 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
449.474 403.44 m
/N24 10.9091 Tf
(ascends)
[5.38913 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 ] pdfxs
487.317 403.44 m
/N22 10.9091 Tf
(the)
[2.98911 5.38913 4.78904 ] pdfxs
504.085 403.44 m
(opti-)
[5.38913 5.38913 2.98911 2.98911 3.58903 ] pdfxs
93.5976 389.88 m
(mal)
[8.50908 4.78904 2.98911 ] pdfxs
113.365 389.88 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
141.848 389.88 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
163.645 389.88 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
203.397 389.88 m
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
251.528 389.88 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
274.285 389.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
291.052 389.88 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
336.783 389.88 m
(\(i.e.,)
[3.58903 2.98911 2.74908 4.78904 2.74908 2.74908 ] pdfxs
359.997 389.88 m
(in)
[2.98911 5.38913 ] pdfxs
371.855 389.88 m
(a) show
376.404 389.88 m
(v) show
381.673 389.88 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
408.739 389.88 m
(leads)
[2.98911 4.78904 4.78904 5.38913 4.18912 ] pdfxs
434.604 389.88 m
(to)
[2.98911 5.38913 ] pdfxs
446.462 389.88 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
474.117 389.88 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
496.873 389.88 m
(higher)
[5.38913 2.98911 5.38913 5.38913 4.78904 3.58903 ] pdfxs
93.5972 376.32 m
(v) show
98.7463 376.32 m
(alues\),)
[4.78904 2.98911 5.38913 4.78904 4.18912 3.58903 2.74908 ] pdfxs
130.23 376.32 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
148.677 376.32 m
(is)
[2.98911 4.18912 ] pdfxs
158.615 376.32 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
175.262 376.32 m
(too)
[2.98911 5.38913 5.38913 ] pdfxs
191.91 376.32 m
(of)
[5.38913 3.58903 ] pdfxs
200.648 376.32 m
(f) show
206.997 376.32 m
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
230.953 376.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
247 376.32 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
282.924 376.32 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
304.349 376.32 m
(y) show
309.018 376.32 m
(.) show
Q
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
W
n
n
2721.39 2792.58 m
2721.39 2503.22 2336.75 2268.64 1862.28 2268.64 c
1387.81 2268.64 1003.17 2503.22 1003.17 2792.58 c
1003.17 3081.95 1387.81 3316.52 1862.28 3316.52 c
2336.75 3316.52 2721.39 3081.95 2721.39 2792.58 c
0 1 1 setrgbcolor
eofill
2.44524 w
n
2721.39 2792.58 m
2721.39 2503.22 2336.75 2268.64 1862.28 2268.64 c
1387.81 2268.64 1003.17 2503.22 1003.17 2792.58 c
1003.17 3081.95 1387.81 3316.52 1862.28 3316.52 c
2336.75 3316.52 2721.39 3081.95 2721.39 2792.58 c
h
0 setgray
S
n
2487.3 2781.82 m
2487.3 2572.59 2208.2 2402.97 1863.91 2402.97 c
1519.63 2402.97 1240.53 2572.59 1240.53 2781.82 c
1240.53 2991.06 1519.63 3160.68 1863.91 3160.68 c
2208.2 3160.68 2487.3 2991.06 2487.3 2781.82 c
0.528992 0.811996 1 setrgbcolor
eofill
n
2487.3 2781.82 m
2487.3 2572.59 2208.2 2402.97 1863.91 2402.97 c
1519.63 2402.97 1240.53 2572.59 1240.53 2781.82 c
1240.53 2991.06 1519.63 3160.68 1863.91 3160.68 c
2208.2 3160.68 2487.3 2991.06 2487.3 2781.82 c
h
0 setgray
S
n
2291.67 2782.15 m
2291.67 2653.76 2101.03 2549.68 1865.87 2549.68 c
1630.7 2549.68 1440.06 2653.76 1440.06 2782.15 c
1440.06 2910.53 1630.7 3014.61 1865.87 3014.61 c
2101.03 3014.61 2291.67 2910.53 2291.67 2782.15 c
0 0 1 setrgbcolor
eofill
n
2291.67 2782.15 m
2291.67 2653.76 2101.03 2549.68 1865.87 2549.68 c
1630.7 2549.68 1440.06 2653.76 1440.06 2782.15 c
1440.06 2910.53 1630.7 3014.61 1865.87 3014.61 c
2101.03 3014.61 2291.67 2910.53 2291.67 2782.15 c
h
0 setgray
S
n
2071.92 2769.76 m
2071.92 2702.23 1973.39 2647.49 1851.85 2647.49 c
1730.3 2647.49 1631.77 2702.23 1631.77 2769.76 c
1631.77 2837.28 1730.3 2892.02 1851.85 2892.02 c
1973.39 2892.02 2071.92 2837.28 2071.92 2769.76 c
0 0 0.560989 setrgbcolor
eofill
n
2071.92 2769.76 m
2071.92 2702.23 1973.39 2647.49 1851.85 2647.49 c
1730.3 2647.49 1631.77 2702.23 1631.77 2769.76 c
1631.77 2837.28 1730.3 2892.02 1851.85 2892.02 c
1973.39 2892.02 2071.92 2837.28 2071.92 2769.76 c
h
0 setgray
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
1572.11 2542.84 m
1551.24 2563.7 l
1498.75 2511.21 l
1550.92 2542.18 l
1519.62 2490.34 l
h
eoclip
n
n
1411.7 2402.97 m
1558.41 2549.68 l
0 1 1 setrgbcolor
eofill
4.89049 w
n
1411.7 2402.97 m
1558.41 2549.68 l
0 setgray
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
W
n
n
1519.62 2490.34 m
1550.92 2542.18 l
1498.75 2511.21 l
1519.62 2490.34 l
0 setgray
eofill
4.89049 w
n
1519.62 2490.34 m
1550.92 2542.18 l
1498.75 2511.21 l
1519.62 2490.34 l
h
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
1475.93 2599.89 m
1447.24 2607.07 l
1429.3 2535.34 l
1457.99 2588.48 l
1457.99 2528.17 l
h
eoclip
n
n
1411.7 2402.97 m
1460.6 2598.59 l
0 1 1 setrgbcolor
eofill
4.89049 w
n
1411.7 2402.97 m
1460.6 2598.59 l
0 setgray
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
W
n
n
1457.99 2528.17 m
1457.99 2588.48 l
1429.3 2535.34 l
1457.99 2528.17 l
0 setgray
eofill
4.89049 w
n
1457.99 2528.17 m
1457.99 2588.48 l
1429.3 2535.34 l
1457.99 2528.17 l
h
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
1349.75 2584.57 m
1322.69 2573.16 l
1352.03 2504.69 l
1342.58 2564.36 l
1379.09 2516.43 l
h
eoclip
n
n
1411.7 2402.97 m
1338.34 2574.14 l
0 1 1 setrgbcolor
eofill
4.89049 w
n
1411.7 2402.97 m
1338.34 2574.14 l
0 setgray
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
W
n
n
1379.09 2516.43 m
1342.58 2564.36 l
1352.03 2504.69 l
1379.09 2516.43 l
0 setgray
eofill
4.89049 w
n
1379.09 2516.43 m
1342.58 2564.36 l
1352.03 2504.69 l
1379.09 2516.43 l
h
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
1243.46 2516.1 m
1228.79 2490.67 l
1293.02 2453.83 l
1249.66 2495.56 l
1307.69 2479.26 l
h
eoclip
n
n
1411.7 2402.97 m
1240.53 2500.78 l
0 1 1 setrgbcolor
eofill
4.89049 w
n
1411.7 2402.97 m
1240.53 2500.78 l
0 setgray
S
Q
q
n
996 3563.12 m
996 2264.4 l
2724 2264.4 l
2724 3563.12 l
h
W
n
n
1307.69 2479.26 m
1249.66 2495.56 l
1293.02 2453.83 l
1307.69 2479.26 l
0 setgray
eofill
4.89049 w
n
1307.69 2479.26 m
1249.66 2495.56 l
1293.02 2453.83 l
1307.69 2479.26 l
h
S
q
10 0 0 10 0 0 cm
141.17 230.516 m
/N58 11.7374 Tf
(S) show
Q
q
10 0 0 10 0 0 cm
1 0 1 setrgbcolor
158.287 247.633 m
/N58 11.7374 Tf
(a) show
141.17 259.859 m
(b) show
126.498 257.414 m
(c) show
116.717 247.633 m
(d) show
Q
q
10 0 0 10 0 0 cm
177.849 340.553 m
/N58 20.5404 Tf
(C) show
Q
Q
q
n
2978.4 3610.8 m
2978.4 2264.4 l
5354.4 2264.4 l
5354.4 3610.8 l
h
W
n
n
4683.84 2764.42 m
4683.84 2489.9 4304.85 2267.36 3837.35 2267.36 c
3369.85 2267.36 2990.86 2489.9 2990.86 2764.42 c
2990.86 3038.93 3369.85 3261.48 3837.35 3261.48 c
4304.85 3261.48 4683.84 3038.93 4683.84 2764.42 c
0 1 1 setrgbcolor
eofill
2.37599 w
n
4683.84 2764.42 m
4683.84 2489.9 4304.85 2267.36 3837.35 2267.36 c
3369.85 2267.36 2990.86 2489.9 2990.86 2764.42 c
2990.86 3038.93 3369.85 3261.48 3837.35 3261.48 c
4304.85 3261.48 4683.84 3038.93 4683.84 2764.42 c
h
0 setgray
S
n
4445.6 2769.17 m
4445.6 2570.58 4170.58 2409.6 3831.33 2409.6 c
3492.08 2409.6 3217.06 2570.58 3217.06 2769.17 c
3217.06 2967.75 3492.08 3128.74 3831.33 3128.74 c
4170.58 3128.74 4445.6 2967.75 4445.6 2769.17 c
0.528992 0.811996 1 setrgbcolor
eofill
n
4445.6 2769.17 m
4445.6 2570.58 4170.58 2409.6 3831.33 2409.6 c
3492.08 2409.6 3217.06 2570.58 3217.06 2769.17 c
3217.06 2967.75 3492.08 3128.74 3831.33 3128.74 c
4170.58 3128.74 4445.6 2967.75 4445.6 2769.17 c
h
0 setgray
S
n
4255.84 2749.21 m
4255.84 2627.26 4068.05 2528.4 3836.4 2528.4 c
3604.75 2528.4 3416.96 2627.26 3416.96 2749.21 c
3416.96 2871.16 3604.75 2970.02 3836.4 2970.02 c
4068.05 2970.02 4255.84 2871.16 4255.84 2749.21 c
0 0 1 setrgbcolor
eofill
n
4255.84 2749.21 m
4255.84 2627.26 4068.05 2528.4 3836.4 2528.4 c
3604.75 2528.4 3416.96 2627.26 3416.96 2749.21 c
3416.96 2871.16 3604.75 2970.02 3836.4 2970.02 c
4068.05 2970.02 4255.84 2871.16 4255.84 2749.21 c
h
0 setgray
S
n
4066.4 2739.07 m
4066.4 2674.86 3969.24 2622.81 3849.39 2622.81 c
3729.54 2622.81 3632.38 2674.86 3632.38 2739.07 c
3632.38 2803.28 3729.54 2855.34 3849.39 2855.34 c
3969.24 2855.34 4066.4 2803.28 4066.4 2739.07 c
0 0 0.560989 setrgbcolor
eofill
n
4066.4 2739.07 m
4066.4 2674.86 3969.24 2622.81 3849.39 2622.81 c
3729.54 2622.81 3632.38 2674.86 3632.38 2739.07 c
3632.38 2803.28 3729.54 2855.34 3849.39 2855.34 c
3969.24 2855.34 4066.4 2803.28 4066.4 2739.07 c
h
0 setgray
S
n
5349.12 2837.28 m
5349.12 2574.83 4992.83 2362.08 4553.32 2362.08 c
4113.81 2362.08 3757.52 2574.83 3757.52 2837.28 c
3757.52 3099.73 4113.81 3312.48 4553.32 3312.48 c
4992.83 3312.48 5349.12 3099.73 5349.12 2837.28 c
1 0.737 1 setrgbcolor
eofill
n
5349.12 2837.28 m
5349.12 2574.83 4992.83 2362.08 4553.32 2362.08 c
4113.81 2362.08 3757.52 2574.83 3757.52 2837.28 c
3757.52 3099.73 4113.81 3312.48 4553.32 3312.48 c
4992.83 3312.48 5349.12 3099.73 5349.12 2837.28 c
h
0 setgray
S
n
5135.28 2825.56 m
5135.28 2635.37 4869.34 2481.2 4541.28 2481.2 c
4213.22 2481.2 3947.28 2635.37 3947.28 2825.56 c
3947.28 3015.74 4213.22 3169.92 4541.28 3169.92 c
4869.34 3169.92 5135.28 3015.74 5135.28 2825.56 c
1 0.395996 1 setrgbcolor
eofill
n
5135.28 2825.56 m
5135.28 2635.37 4869.34 2481.2 4541.28 2481.2 c
4213.22 2481.2 3947.28 2635.37 3947.28 2825.56 c
3947.28 3015.74 4213.22 3169.92 4541.28 3169.92 c
4869.34 3169.92 5135.28 3015.74 5135.28 2825.56 c
h
0 setgray
S
n
4945.2 2813.52 m
4945.2 2695.42 4764.36 2599.68 4541.28 2599.68 c
4318.2 2599.68 4137.36 2695.42 4137.36 2813.52 c
4137.36 2931.62 4318.2 3027.36 4541.28 3027.36 c
4764.36 3027.36 4945.2 2931.62 4945.2 2813.52 c
0.936996 0.0349884 0.936996 setrgbcolor
eofill
n
4945.2 2813.52 m
4945.2 2695.42 4764.36 2599.68 4541.28 2599.68 c
4318.2 2599.68 4137.36 2695.42 4137.36 2813.52 c
4137.36 2931.62 4318.2 3027.36 4541.28 3027.36 c
4764.36 3027.36 4945.2 2931.62 4945.2 2813.52 c
h
0 setgray
S
n
4754.8 2813.52 m
4754.8 2747.91 4653.81 2694.72 4529.24 2694.72 c
4404.67 2694.72 4303.68 2747.91 4303.68 2813.52 c
4303.68 2879.13 4404.67 2932.32 4529.24 2932.32 c
4653.81 2932.32 4754.8 2879.13 4754.8 2813.52 c
0.560989 0 0.560989 setrgbcolor
eofill
n
4754.8 2813.52 m
4754.8 2747.91 4653.81 2694.72 4529.24 2694.72 c
4404.67 2694.72 4303.68 2747.91 4303.68 2813.52 c
4303.68 2879.13 4404.67 2932.32 4529.24 2932.32 c
4653.81 2932.32 4754.8 2879.13 4754.8 2813.52 c
h
0 setgray
S
n
4232.4 2748.58 m
4232.4 2626.98 4051.56 2528.4 3828.48 2528.4 c
3605.4 2528.4 3424.56 2626.98 3424.56 2748.58 c
3424.56 2870.18 3605.4 2968.75 3828.48 2968.75 c
4051.56 2968.75 4232.4 2870.18 4232.4 2748.58 c
h
S
n
4422.16 2766 m
4422.16 2569.17 4150.97 2409.6 3816.44 2409.6 c
3481.91 2409.6 3210.72 2569.17 3210.72 2766 c
3210.72 2962.83 3481.91 3122.4 3816.44 3122.4 c
4150.97 3122.4 4422.16 2962.83 4422.16 2766 c
h
S
n
4671.8 2766 m
4671.8 2492.01 4294.23 2269.89 3828.48 2269.89 c
3362.73 2269.89 2985.16 2492.01 2985.16 2766 c
2985.16 3039.99 3362.73 3262.11 3828.48 3262.11 c
4294.23 3262.11 4671.8 3039.99 4671.8 2766 c
h
S
n
4074.32 2735.27 m
4074.32 2669.66 3973.33 2616.47 3848.75 2616.47 c
3724.18 2616.47 3623.19 2669.66 3623.19 2735.27 c
3623.19 2800.88 3724.18 2854.07 3848.75 2854.07 c
3973.33 2854.07 4074.32 2800.88 4074.32 2735.27 c
h
S
Q
q
n
2978.4 3610.8 m
2978.4 2264.4 l
5354.4 2264.4 l
5354.4 3610.8 l
h
4363.55 2662.72 m
4346.13 2685.22 l
4289.11 2641.18 l
4342.96 2664.62 l
4306.53 2618.37 l
h
eoclip
n
4.752 w
n
4137.36 2504.64 m
4351.2 2670.96 l
0 setgray
S
Q
q
n
2978.4 3610.8 m
2978.4 2264.4 l
5354.4 2264.4 l
5354.4 3610.8 l
h
W
n
n
4306.53 2618.37 m
4342.96 2664.62 l
4289.11 2641.18 l
4306.53 2618.37 l
0 setgray
eofill
4.752 w
n
4306.53 2618.37 m
4342.96 2664.62 l
4289.11 2641.18 l
4306.53 2618.37 l
h
S
Q
q
n
2978.4 3610.8 m
2978.4 2264.4 l
5354.4 2264.4 l
5354.4 3610.8 l
h
3902.93 2662.09 m
3888.04 2637.7 l
3950.13 2600.31 l
3908.63 2641.81 l
3964.7 2624.71 l
h
eoclip
n
4.752 w
n
4137.36 2504.64 m
3899.76 2647.2 l
0 setgray
S
Q
q
n
2978.4 3610.8 m
2978.4 2264.4 l
5354.4 2264.4 l
5354.4 3610.8 l
h
W
n
n
3964.7 2624.71 m
3908.63 2641.81 l
3950.13 2600.31 l
3964.7 2624.71 l
0 setgray
eofill
4.752 w
n
3964.7 2624.71 m
3908.63 2641.81 l
3950.13 2600.31 l
3964.7 2624.71 l
h
S
Q
q
n
2978.4 3610.8 m
2978.4 2264.4 l
5354.4 2264.4 l
5354.4 3610.8 l
h
4053.41 2728.62 m
4027.11 2717.21 l
4056.26 2651.32 l
4046.44 2708.98 l
4082.55 2662.72 l
h
eoclip
n
4.752 w
n
4137.36 2504.64 m
4042.32 2718.48 l
0 setgray
S
Q
q
n
2978.4 3610.8 m
2978.4 2264.4 l
5354.4 2264.4 l
5354.4 3610.8 l
h
W
n
n
4082.55 2662.72 m
4046.44 2708.98 l
4056.26 2651.32 l
4082.55 2662.72 l
0 setgray
eofill
4.752 w
n
4082.55 2662.72 m
4046.44 2708.98 l
4056.26 2651.32 l
4082.55 2662.72 l
h
S
[28.512 ] 0 d
2 j
n
4042.32 2694.72 m
4042 2695.04 l
4041.69 2695.99 l
4040.73 2697.25 l
4039.15 2699.47 l
4037.25 2702.64 l
4035.03 2706.76 l
4031.86 2711.51 l
4028.7 2717.21 l
4025.21 2723.87 l
4021.41 2730.84 l
4017.93 2738.44 l
4014.12 2746.68 l
4010.64 2755.23 l
4007.47 2764.1 l
4004.62 2772.97 l
4002.09 2782.47 l
4000.18 2791.98 l
3998.92 2802.12 l
3998.6 2812.57 l
3998.92 2823.34 l
4000.5 2834.75 l
4003.04 2846.78 l
4006.84 2859.14 l
4011.91 2871.81 l
4018.56 2884.8 l
4025.21 2895.89 l
4032.81 2906.34 l
4040.42 2916.16 l
4047.7 2925.35 l
4054.67 2933.9 l
4061.33 2941.51 l
4067.35 2948.48 l
4072.73 2954.81 l
4077.48 2960.52 l
4081.92 2965.58 l
4085.72 2970.34 l
4088.89 2974.45 l
4092.06 2978.57 l
4094.91 2982.37 l
4097.76 2985.86 l
4100.61 2989.34 l
4104.09 2992.51 l
4107.58 2996 l
4111.7 2999.17 l
4116.77 3002.65 l
4122.79 3006.13 l
4129.44 3009.3 l
4137.68 3012.79 l
4146.86 3016.27 l
4157.95 3019.44 l
4169.99 3022.29 l
4183.93 3024.83 l
4199.13 3026.41 l
4215.29 3027.36 l
4232.4 3027.36 l
4248.87 3026.09 l
4265.35 3023.56 l
4281.5 3020.39 l
4297.34 3016.27 l
4312.87 3011.2 l
4327.76 3005.82 l
4342.01 3000.12 l
4355.95 2993.46 l
4369.57 2986.81 l
4382.88 2979.52 l
4395.55 2972.24 l
4408.22 2964.32 l
4420.26 2956.4 l
4432.3 2948.16 l
4443.7 2939.92 l
4455.11 2931.69 l
4466.2 2923.45 l
4476.65 2915.21 l
4486.47 2907.29 l
4495.66 2899.69 l
4504.21 2892.72 l
4512.13 2886.07 l
4519.1 2880.36 l
4524.81 2875.3 l
4529.87 2871.18 l
4533.68 2867.69 l
4536.84 2865.16 l
4538.74 2863.26 l
4540.33 2861.99 l
4540.96 2861.36 l
4541.28 2861.04 l
0 0 0.560989 setrgbcolor
S
q
10 0 0 10 0 0 cm
0 setgray
456.504 345.504 m
/N58 19.9584 Tf
(C) show
373.344 345.504 m
(C) show
387.6 345.504 m
/N58 13.3056 Tf
(1) show
470.76 345.504 m
(2) show
408.984 236.208 m
(S) show
Q
q
10 0 0 10 0 0 cm
1 1 0  setrgbcolor
437.496 262.344 m
/N58 11.4048 Tf
(c) show
378.096 259.968 m
(a) show
411.36 264.72 m
(b) show
Q
Q
q
q
10 0 0 10 0 0 cm
0 setgray
182.76 212.88 m
/N22 10.9091 Tf
(\(a\))
[3.58903 4.78904 3.58903 ] pdfxs
410.247 212.88 m
(\(b\))
[3.58903 5.38913 3.58903 ] pdfxs
93.6 178.32 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
125.095 178.32 m
(1:)
[5.38913 2.98911 ] pdfxs
137.793 178.32 m
(\(a\))
[3.58903 4.78904 3.58903 ] pdfxs
153 178.32 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
187.2 178.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
192.644 178.32 m
/N22 10.9091 Tf
(,) show
199 178.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\037) show
203.313 178.32 m
/N22 10.9091 Tf
(,) show
209.182 178.32 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
228.3 178.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
( ) show
235.909 178.32 m
/N22 10.9091 Tf
(are)
[4.78904 3.58903 4.78904 ] pdfxs
252.196 178.32 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
298.898 178.32 m
(on)
[5.38913 5.38913 ] pdfxs
312.916 178.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
329.324 178.32 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
357.807 178.32 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
379.243 178.32 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
418.636 178.32 m
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
466.527 178.32 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
488.923 178.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
505.331 178.32 m
(con-)
[4.78904 5.38913 5.38913 3.58903 ] pdfxs
93.6006 164.76 m
(troller)
[2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
123.1 172.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
129.404 164.76 m
/N22 10.9091 Tf
(,) show
135.033 164.76 m
(while)
[7.90916 5.38913 2.98911 2.98911 4.78904 ] pdfxs
162.098 164.76 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
191.9 164.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(!) show
200.073 164.76 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
210.131 164.76 m
(descending;)
[5.38913 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 2.98911 
] pdfxs
265.091 164.76 m
(\(b\))
[3.58903 5.38913 3.58903 ] pdfxs
280.658 164.76 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
310.4 164.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
318.752 164.76 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
337.6 164.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
( ) show
344.88 164.76 m
/N22 10.9091 Tf
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
377.335 164.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
393.502 164.76 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
421.985 164.76 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
443.302 164.76 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
482.4 172.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005"\007)
[0 7.19934 0 ] pdfxs
496.56 164.76 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
515.2 172.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\r\f)
[0 5.99945 0 ] pdfxs
93.6 151.2 m
/N22 10.9091 Tf
(respecti)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 2.98911 ] pdfxs
126.873 151.2 m
(v) show
132.142 151.2 m
(ely)
[4.78904 2.98911 5.38913 ] pdfxs
144.589 151.2 m
(,) show
150.578 151.2 m
(while)
[7.90916 5.38913 2.98911 2.98911 4.78904 ] pdfxs
177.523 151.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
190.571 151.2 m
(y) show
198.84 151.2 m
(descend)
[5.38913 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
236.683 151.2 m
(on)
[5.38913 5.38913 ] pdfxs
250.342 151.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
266.389 151.2 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
294.872 151.2 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
316.069 151.2 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
355.101 151.2 m
(of)
[5.38913 3.58903 ] pdfxs
366.96 151.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
383.007 151.2 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
408.152 151.2 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
449.443 151.2 m
(.) show
456.032 151.2 m
(Ho)
[7.90916 5.38913 ] pdfxs
469.09 151.2 m
(we)
[7.90916 4.78904 ] pdfxs
481.548 151.2 m
(v) show
486.818 151.2 m
(er)
[4.78904 3.58903 ] pdfxs
498.076 151.2 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
94 137.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\037) show
100.56 137.64 m
/N22 10.9091 Tf
(ascends)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 ] pdfxs
136.604 137.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
152.171 137.64 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
180.654 137.64 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
201.371 137.64 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
239.803 137.64 m
(of)
[5.38913 3.58903 ] pdfxs
251.181 137.64 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
272.738 137.64 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
321.578 137.64 m
(\(the)
[3.58903 2.98911 5.38913 4.78904 ] pdfxs
340.734 137.64 m
(dotted)
[5.38913 5.38913 2.98911 2.98911 4.78904 5.38913 ] pdfxs
370.189 137.64 m
(line)
[2.98911 2.98911 5.38913 4.78904 ] pdfxs
388.745 137.64 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
403.472 137.64 m
(ws)
[7.90916 4.18912 ] pdfxs
417.97 137.64 m
(a) show
425.039 137.64 m
(trajectory)
[2.98911 3.58903 4.78904 2.98911 4.78904 4.78904 2.98911 5.38913 3.58903 5.38913 ] pdfxs
468.97 137.64 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
487.647 137.64 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
510.152 137.64 m
(v) show
515.421 137.64 m
(es)
[4.78904 4.18912 ] pdfxs
93.6001 124.08 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
115.636 124.08 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
156.469 124.08 m
(while)
[7.90916 5.38913 2.98911 2.98911 4.78904 ] pdfxs
183.414 124.08 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
229.636 124.08 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
251.793 124.08 m
(v) show
256.942 124.08 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
277.778 124.08 m
(functions\).)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 3.58903 2.74908 
] pdfxs
306.84 77.28 m
(2) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 3 3
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font B
10 dict begin
T3Defs
/FontType 3 def
/FontName /N68 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-38 
119 
115 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 31 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 41 2 setcachedevice
41 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 50 def
/ImageMatrix [41 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFFF80FFE001FFFF80FF00003FFF80F80FFC07FF80E00FFC01FF80C0FF
FFC0FF80C1FFFFE03F80C3FFFFF03F8083FFFFF81F8080FFFFFE0F80801FFFFE
0F80801FFFFE0780801FFFFF0780801FFFFF0780C00FFFFF0380C00FFFFF0380
C00FFFFF0380E01FFFFF0380F8FFFFFE0380FFFFFFFE0380FFFFFFF80380FFFF
FFE00380FFFFFE000380FFFF80000380FFFE00000780FFFE00000780FFFC0000
0F80FFF800003F80FFE000003F80FFC00000FF80FFC00007FF80FFC000FFFF80
FFC01FFFFF80FFC03FFFFF80FFC03FFF8780FFC07FFF0080FFC07FFF0080FFC0
7FFF0080FFE07FFF0000FFE07FFF0000FFE07FFF0000FFE03FFF8000FFF81FFF
C000FFFC1FFFE000FFFC1FFFE080FFFF03FFC380FFFF00FF0380FFFF80000780
FFFFF0000F80FFFFFE00FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 109 75 setcachedevice
109 0 0 75 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 109 def
/Height 75 def
/ImageMatrix [109 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000FFF83FFE00000003FFFF88000000FFF03FFE00000001FFFF88000000F
FF01FFE00000001FFFF88000000FFF00FFE00000001FFFF8FF000FFFFF00FFFF
FC003FFFFFF8FFC01FFFFF00FFFFFE00FFFFFFF8FFE03FFFFF007FFFFE003FFF
FFF8FFF83FFFFF003FFFFE003FFFFFF8FFF83FFFFF003FFFFE003FFFFFF8FFFC
3FFFFE000FFFFF803FFFFFF8FFFC1FFFFE000FFFFF801FFFFFF8FFFC1FFFFE00
0FFFFF801FFFFFF8FFFE1FFFFE0087FFFF801FFFFFF8FFFE1FFFFE00C3FFFFC0
1FFFFFF8FFFE1FFFFE00C3FFFFC01FFFFFF8FFFE0FFFFE00C1FFFFC00FFFFFF8
FFFE0FFFFE00E0FFFFC00FFFFFF8FFFF0FFFFE00F0FFFFC00FFFFFF8FFFF0FFF
FE00F0FFFFE00FFFFFF8FFFF0FFFFE00F83FFFE00FFFFFF8FFFF03FFFC00F83F
FFE007FFFFF8FFFF03FFFC01F81FFFE007FFFFF8FFFF83FFFC01FE0FFFE007FF
FFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF
81FFFC01FF87FFF003FFFFF8FFFF81FFFC01FF87FFF003FFFFF8FFFFE1FFFC01
FF83FFF003FFFFF8FFFFE1FFFC01FFC0FFF803FFFFF8FFFFE1FFFC01FFE0FFF8
03FFFFF8FFFFE0FFF803FFE0FFF800FFFFF8FFFFF0FFF803FFF87FF800FFFFF8
FFFFF0FFF803FFF83FF800FFFFF8FFFFF0FFF803FFFC3FFE00FFFFF8FFFFF07F
F803FFFC1FFE007FFFF8FFFFF07FF803FFFE1FFE007FFFF8FFFFF87FF803FFFE
1FFE007FFFF8FFFFF87FF803FFFF0FFF007FFFF8FFFFF87FF803FFFF03FF007F
FFF8FFFFF83FE003FFFF83FF003FFFF8FFFFF83FE00FFFFF81FF003FFFF8FFFF
FC3FE00FFFFFE1FF003FFFF8FFFFFC3FE00FFFFFF0FF803FFFF8FFFFFC3FE00F
FFFFF0FF803FFFF8FFFFFC0FE00FFFFFF07F801FFFF8FFFFFC0FE00FFFFFF87F
801FFFF8FFFFFE0FE00FFFFFF83F801FFFF8FFFFFE0FE00FFFFFFC3FC01FFFF8
FFFFFE0FE00FFFFFFE0FC01FFFF8FFFFFE07C01FFFFFFE0FC00FFFF8FFFFFE07
C01FFFFFFE07C00FFFF8FFFFFF87C01FFFFFFF83C00FFFF8FFFFFF87C01FFFFF
FFC3E00FFFF8FFFFFF87C01FFFFFFFC3E00FFFF8FFFFFF83C01FFFFFFFE1E003
FFF8FFFFFFC3C01FFFFFFFE1E003FFF8FFFFFFC3C01FFFFFFFE0E003FFF8FFFF
FFC3C01FFFFFFFF03803FFF8FFFFFFC1C01FFFFFFFF83801FFF8FFFFFFC1C01F
FFFFFFF83801FFF8FFFFFFE1803FFFFFFFFE1801FFF8FFFFFFE1803FFFFFFFFE
1C01FFF8FFFFFFE1803FFFFFFFFE0C01FFF8FFFFFFE0803FFFFFFFFF0400FFF8
FFFFFFE0803FFFFFFFFF8400FFF8FFFFFFF0803FFFFFFFFF8400FFF8FFFFFFF0
803FFFFFFFFFC200FFF8FFFFFFF0803FFFFFFFFFE000FFF8FFFFFFF0003FFFFF
FFFFE0007FF8FFFFFFF0003FFFFFFFFFE0003FF8FFFFE000007FFFFFFFFFF800
0008FFFFE000007FFFFFFFFFF8000008FFFFE000007FFFFFFFFFFC000008FFFF
E000007FFFFFFFFFFE000000FFFFE000007FFFFFFFFFFE000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
109 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF880FFFFF000FFFFF000FFFFE000FFFFE000FFFFE000FFFF8080FFFF8080
FFFF8080FFFF8180FFFF0180FFFF0180FFFE0180FFFE0380FFFE0380FFFE0F80
FFFC0F80FFFC0F80FFFC0F80FFF81F80FFF81F80FFF81F80FFE03F80FFE03F80
FFE03F80FFC07F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80FF80FF80
FF83FF80FF03FF80FF03FF80FE03FF80FE07FF80FE07FF80FE0FFF80F80FFF80
F80FFF80F80FFF80F01FFF80F01FFF80F01FFF80E03FFF80E03FFF80E03FFF80
C0FFFF80C0FFFF80C0FFFF80C1FFFF8081FFFF8081FFFF8081FFFF8081FFFF80
81FFFF80C1FFFF80C0FFFF80C0FFFF80C0FFFF80E03FFF80E03FFF80E03FFF80
F01FFF80F01FFF80F01FFF80F80FFF80F80FFF80F80FFF80FE0FFF80FE07FF80
FE07FF80FE03FF80FF03FF80FF03FF80FF83FF80FF80FF80FF80FF80FF80FF80
FFC0FF80FFC07F80FFC07F80FFC07F80FFE03F80FFE03F80FFE03F80FFF81F80
FFF81F80FFF81F80FFFC0F80FFFC0F80FFFC0F80FFFE0F80FFFE0380FFFE0380
FFFE0180FFFF0180FFFF0180FFFF8180FFFF8080FFFF8080FFFF8080FFFFE000
FFFFE000FFFFE000FFFFF000FFFFF000FFFFF880>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
123 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -1 68 79 setcachedevice
68 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 80 def
/ImageMatrix [68 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF0003FFFFFFFFF0FFF000003FFFFFFFF0FFF000003FFFFFFFF0FFC0000003
FFFFFFF0FE00000000FFFFFFF0FC000000001FFFFFF0F80000000007FFFFF0F0
00007FC003FFFFF0F00007FFFE03FFFFF0E0001FFFFF807FFFF08000FFFFFFE0
3FFFF08000FFFFFFE01FFFF00001FFFFFFF80FFFF00003FFFFFFFC03FFF00007
FFFFFFFE03FFF0000FFFFFFFFE01FFF0000FFFFFFFFF00FFF0000FFFFFFFFF00
FFF0003FFFFFFFFF007FF0003FFFFFFFFF807FF0803FFFFFFFFF807FF0803FFF
FFFFFF803FF0803FFFFFFFFF803FF0803FFFFFFFFF800FF0E00FFFFFFFFF800F
F0E00FFFFFFFFF800FF0F00FFFFFFFFF800FF0F807FFFFFFFF000FF0FC01FFFF
FFFF000FF0FC00FFFFFFFE000FF0FF80FFFFFFFE000FF0FFE0FFFFFFFC000FF0
FFFFFFFFFFFC003FF0FFFFFFFFFFF8003FF0FFFFFFFFFFE0007FF0FFFFFFFFFF
80007FF0FFFFFFFFFF00007FF0FFFFFFFFF80000FFF0FFFFFFFFF80001FFF0FF
FFFFFFE00003FFF0FFFFFFFF80000FFFF0FFFFFFFC00000FFFF0FFFFFFF00000
3FFFF0FFFFFF8000007FFFF0FFFFFF800003FFFFF0FFFFFF00000FFFFFF0FFFF
FE00003FFFFFF0FFFFFC00003FFFFFF0FFFFF80001FFFFFFF0FFFFE00007FFFF
FFF0FFFFE0003FFFFFFFF0FFFFE0007FFFFFFFF0FFFFE000FFFFFFFFF0FFFFC0
00FFFFFFFFF0FFFFC001FFFFFFFFF0FFFFC003FFFFFFFFF0FFFFC003FFFFFFFF
F0FFFFC003FFFFFFFFF0FFFFC00FFFFFFFFFF0FFFFC00FFFFFFF87F0FFFFE00F
FFFFFF81F0FFFFE00FFFFFFF80F0FFFFE00FFFFFFFC0F0FFFFF80FFFFFFFC030
FFFFF803FFFFFFC010FFFFF803FFFFFFC010FFFFFC03FFFFFFC000FFFFFE01FF
FFFF8000FFFFFF01FFFFFF8000FFFFFF80FFFFFF8000FFFFFFE07FFFFE0000FF
FFFFE00FFFF00000FFFFFFF001FF000000FFFFFFFC0000000010FFFFFFFE0000
000010FFFFFFFFC000000030FFFFFFFFF0000000F0FFFFFFFFF0000000F0FFFF
FFFFFF000007F0FFFFFFFFFFE0007FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -3 85 82 setcachedevice
85 0 0 85 0 -3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 85 def
/ImageMatrix [85 0 0 -85 0 85]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFFFFFFFFF8F801FFFFFFFFFFFFFFFFF8F0003FFFFFFFFFFFE01F
F8E0001FFFFFFFFFFFC003F880000FFFFFFFFFFF8000F880000FFFFFFFFFFF80
00F8800007FFFFFFFFFF800078000003FFFFFFFFFF800008000000FFFFFFFFFF
000000000000FFFFFFFFFF000C000000007FFFFFFFFF001F80000F007FFFFFFF
FF001FF8007FC03FFFFFFFFF001FF880FFE01FFFFFFFFE003FF880FFE01FFFFF
FFFE003FF881FFF80FFFFFFFFE003FF8E3FFFC03FFFFFFFE003FF8E3FFFE03FF
FFFFFE003FF8F3FFFE01FFFFFFFE007FF8FFFFFF01FFFFFFFE007FF8FFFFFF00
FFFFFFF8007FF8FFFFFF807FFFFFF8007FF8FFFFFFE07FFFFFF8007FF8FFFFFF
E07FFFFFF8007FF8FFFFFFF000000000007FF8FFFFFFF80000000000FFF8FFFF
FFF80000000000FFF8FFFFFFFC0000000000FFF8FFFFFFFC0000000000FFF8FF
FFFFFE0000000000FFF8FFFFFFFF83FFFFF800FFF8FFFFFFFF81FFFFF800FFF8
FFFFFFFF81FFFFF800FFF8FFFFFFFFC0FFFFF000FFF8FFFFFFFFE03FFFF000FF
F8FFFFFFFFE03FFFF000FFF8FFFFFFFFF03FFFF000FFF8FFFFFFFFF81FFFF000
FFF8FFFFFFFFF81FFFF000FFF8FFFFFFFFF80FFFF003FFF8FFFFFFFFFE07FFF0
03FFF8FFFFFFFFFE07FFF003FFF8FFFFFFFFFF07FFF003FFF8FFFFFFFFFF83FF
F003FFF8FFFFFFFFFF83FFF003FFF8FFFFFFFFFF80FFF003FFF8FFFFFFFFFFC0
FFF003FFF8FFFFFFFFFFC0FFF003FFF8FFFFFFFFFFE07FF003FFF8FFFFFFFFFF
F83FF003FFF8FFFFFFFFFFF83FF003FFF8FFFFFFFFFFF81FF003FFF8FFFFFFFF
FFFC1FF003FFF8FFFFFFFFFFFC1FF003FFF8FFFFFFFFFFFE0FF003FFF8FFFFFF
FFFFFE0FF003FFF8FFFFFFFFFFFE03F003FFF8FFFFFFFFFFFF03F003FFF8FFFF
FFFFFFFF81F003FFF8FFFFFFFFFFFF81F003FFF8FFFFFFFFFFFFE1F003FFF8FF
FFFFFFFFFFE0F003FFF8FFFFFFFFFFFFE0F003FFF8FFFFFFFFFFFFF07003FFF8
FFFFFFFFFFFFF07003FFF8FFFFFFFFFFFFF87003FFF8FFFFFFFFFFFFF83003FF
F8FFFFFFFFFFFFFC3003FFF8FFFFFFFFFFFFFC0003FFF8FFFFFFFFFFFFFC0003
FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFF80
03FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF
C003FFF8FFFFFFFFFFFFFFC003FFF8FFFFFFFFFFFFFFE003FFF8FFFFFFFFFFFF
FFE003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFF
FFFFF803FFF8FFFFFFFFFFFFFFFE03FFF8FFFFFFFFFFFFFFFF03FFF8FFFFFFFF
FFFFFFFFC7FFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 85 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 1 78 82 setcachedevice
78 0 0 81 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 81 def
/ImageMatrix [78 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFFFCFFC1FFFFFFFFFFFFFFFCFFC03FFFFFFFFFFFFFFCFFC0
1FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE00FFF
FFFFFFFFFFFCFFF00FFFFFFFFFFFFFFCFFF007FFFFFFFFFFFFFCFFF007FFFFFF
FFFFFFFCFFF007FFFFFFFFFFFFFCFFF807FFFFFFFFFFFFFCFFF803FFFFFFFFFF
FFFCFFFE03FFFFFFFFFFFFFCFFFE03FFFFFFFFFFFFFCFFFE00FFFFFFFFFFFFFC
FFFE00FFFFFFFFFFFFFCFFFF00FFFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF
007FFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFF803F
FFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFFC03FFFFFFFFFFFFCFFFFC01FFFFF
FFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC00801FFFFFF
FFFCFFFFE00801FFFFFFFFFCFFFFE00C0007FFFFFFFCFFFFE00E00007FFFFFFC
FFFFE00E00001FFFFFFCFFFFF803800001FFFFFCFFFFF803E000007FFFFCFFFF
F803FFE0007FFFFCFFFFF803FFFF803FFFFCFFFFFC01FFFFF807FFFCFFFFFC01
FFFFF803FFFCFFFFFC01FFFFFE00FFFCFFFFFC01FFFFFF803FFCFFFFFC01FFFF
FFE03FFCFFFFFE00FFFFFFF01FFCFFFFFE00FFFFFFF80FFCFFFFFE00FFFFFFF8
07FCFFFFFE00FFFFFFFE03FCFFFFFE007FFFFFFF00FCFFFFFE007FFFFFFF00FC
FFFFFF007FFFFFFF807CFFFFFF007FFFFFFF807CFFFFFF007FFFFFFF803CFFFF
FF007FFFFFFFC03CFFFFFF003FFFFFFFC01CFFFFFF003FFFFFFFC01CFFFFFF80
3FFFFFFFE01CFFFFFF803FFFFFFFE00CFFFFFF803FFFFFFFE00CFFFFFF803FFF
FFFFE00C1FFFFF800FFFFFFFE0001FFFFF800FFFFFFFE00003FFFF800FFFFFFF
E00000FFFFE00FFFFFFFE000007FFFE00FFFFFFFC000007FFFE00FFFFFFFC000
803FFFE00FFFFFFFC000E03FFFE00FFFFFFFC000E03FFFE007FFFFFF8000F00F
FFE007FFFFFF000CF00FFFE007FFFFFE000CF807FFE007FFFFF0000CFC01FFE0
07FFFFC0000CFE01FFF007FFFFC0001CFF803FF007FFFE00003CFFE000F007FF
8000007CFFE0000000000000007CFFF800000000000000FCFFFF000000000000
07FCFFFFC000000000001FFCFFFFFC0000000000FFFCFFFFFFF00000003FFFFC
FFFFFFF00000003FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 1 88 79 setcachedevice
88 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 88 def
/Height 78 def
/ImageMatrix [88 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFFFFFFFE00FFFFFFFC0FFFFFFFFFF8000FFFFFFE0FFFFFFFFFF8000FF
FFFFE01FFFFFFFFE00001FFFFFE00FFFFFFFFC000003FFFFE00FFFFFFFF80000
01FFFFF007FFFFFFF80000007FFFF007FFFFFFF0000F003FFFF807FFFFFFF000
3FF03FFFF807FFFFFFF000FFF80FFFF803FFFFFFE001FFFC07FFF803FFFFFFE0
01FFFC03FFFE00FFFFFF8001FFFC01FFFE00FFFFFF8003FFFE01FFFE00FFFFFF
8003FFFF81FFFF00FFFFFF8007FFFFC0FFFF007FFFFF0007FFFFF8FFFF007FFF
FF0007FFFFF8FFFF007FFFFE000FFFFFFFFFFF803FFFFE000FFFFFFFFFFF803F
FFFE000FFFFFFFFFFF803FFFFE003FFFFFFFFFFFC03FFFFC003FFFFFFFFFFFC0
1FFFFC003FFFFFFFFFFFC01FFFF8007FFFFFFFFFFFC01FFFF8007FFFFFFFFFFF
E01FFFF8007FFFFFFFFFFFE00FFFE000FFFFFFFFFFFFE00FFFE000FFFFFFFFFF
FFE00FFFC000FFFFFFFFFFFFF803FF8001FFFFFFFFFFFFF803FE0001FFFFFFFF
FFFFF803FE0003FFFFFFFFFFFFF803E00003FFFFFFFFFFFFFC01F0000FFFFFFF
FFFFFFFC01F0000FFFFFFFFFFFFFFC01F80000FFFFFFFFFFFFFC01FE00003FFF
FFFFFFFFFC01FF80003FFFFFFFFFFFFE00FFFF000FFFFFFFFFFFFE00FFFFF803
FFFFFFFFFFFE00FFFFF801FFFFFFFFFFFE00FFFFFF803FFFFFFFFFFE007FFFFF
C01FFFFFFFFFFF007FFFFFF01FFFFFFFFFFF007FFFFFF80FFFFFFFFFFF007FFF
FFFE07FFFFFFFFFF007FFFFFFE03FFFFFFFFFF003FFFFFFF00FFFFFFFFFF003F
FFFFFF007FFFFFFFFF803FFFFFFF807FFFFFFFFF803FFFFFFFC07FFFFFFFFF80
3FFFFFFFC03FFFFFFFFF803FFFFFFFC01FFFFFFFFF800FFFFFFFC01FFF1FFFFF
800FFFFFFFE00FFF1FFFFF800FFFFFFFE00FFF03FFFFE00FFFFFFFE00FFF00FF
FFE00FFFFFFFE00FFF007FFFE00FFFFFFFE003FF007FFFE00FFFFFFFE003FF80
3FFFE007FFFFFFE003FFE03FFFE007FFFFFFE003FFE03FFFE007FFFFFFC003FF
F00FFFE007FFFFFFC003FFF00FFFE007FFFFFF8003FFF807FFE007FFFFFF0003
FFFC01FFF007FFFFF80003FFFE01FFF007FFFFF8000FFFFF803FF007FFFFC000
0FFFFFE000F007FFF000001FFFFFE0000000000000001FFFFFF8000000000000
003FFFFFFF000000000000007FFFFFFFC0000000000003FFFFFFFFFC00000000
001FFFFFFFFFFFF000000007FFFFFFFFFFFFF000000007FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
88 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFF8083FFFF8083FFFF8081FFFF8081FFFF8081FFFF80C07FFF80C07FFF80
C07FFF80E07FFF80E03FFF80E03FFF80E01FFF80F01FFF80F01FFF80FC1FFF80
FC0FFF80FC0FFF80FC0FFF80FE07FF80FE07FF80FE07FF80FF01FF80FF01FF80
FF01FF80FF80FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80FFC07F80
FFF07F80FFF03F80FFF03F80FFF01F80FFF81F80FFF81F80FFFC1F80FFFC0780
FFFC0780FFFC0780FFFE0380FFFE0380FFFE0380FFFF0180FFFF0180FFFF0180
FFFFC080FFFFC080FFFFC080FFFFE080FFFFE000FFFFE000FFFFE000FFFFE000
FFFFE000FFFFE080FFFFC080FFFFC080FFFFC080FFFF0180FFFF0180FFFF0180
FFFE0380FFFE0380FFFE0380FFFC0780FFFC0780FFFC0780FFFC1F80FFF81F80
FFF81F80FFF01F80FFF03F80FFF03F80FFF07F80FFC07F80FFC07F80FFC07F80
FFC0FF80FF80FF80FF80FF80FF80FF80FF01FF80FF01FF80FF01FF80FE07FF80
FE07FF80FE07FF80FC0FFF80FC0FFF80FC0FFF80FC1FFF80F01FFF80F01FFF80
E01FFF80E03FFF80E03FFF80E07FFF80C07FFF80C07FFF80C07FFF8081FFFF80
81FFFF8081FFFF8083FFFF8083FFFF80C7FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
95 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 -1 119 82 setcachedevice
119 0 0 83 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 119 def
/Height 83 def
/ImageMatrix [119 0 0 -83 0 83]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FFFFFFFFFFFFFFFFFFFFFFFFFFEF003FFFFFFFFFFFFFFFFFFFFFFFFFEC001
FFFFFFFFFFFFFFFFFFFFF807FE00007FFFFFFFFFFFFFFFFFFFF001FE00003FFF
FFFFFFFFFFFFFFFFF0003E00003FFFFFFFFFFFFFFFFFFFF0003E00003FFFFFFF
FFFFFFFFFFFFE0000E00001FFFFFFFFFFFFFFFFFFFE0000600000FFFFFFFFFFF
FFFFFFFFE0000000000FFFFFFFFF1FFFFFFFFFE00300000007FFFFFFFF0FFFFF
FFFFE003C0C01E07FFFFFFFF0FFFFFFFFFE007FEC0FF07FFFFFFFC07FFFFFFFF
E007FEE3FF81FFFFFFFC03FFFFFFFFE007FEE3FF81FFFFFFF801FFFFFFFFE007
FEFFFF80FFFFFFF8007FFFFFFFE007FEFFFFC0FFFFFFF0003FFFFFFFE007FEFF
FFF0FFFFFFF0003FFFFFFFE007FEFFFFF0FFFFFFF0001FFFFFFFE007FEFFFFF8
7FFFFFE0000FFFFFFFE007FEFFFFF87FFFFFE00007FFFFFFE007FEFFFFF83FFF
FFC00001FFFFFFE007FEFFFFF83FFFFFC00400FFFFFFE007FEFFFFFC3FFFFFC0
0600FFFFFFE007FEFFFFFC3FFFFF000F007FFFFFE007FEFFFFFE1FFFFF000F80
3FFFFFF007FEFFFFFE1FFFFF000F801FFFFFF007FEFFFFFE07FFFE001FC007FF
FFF007FEFFFFFE07FFFE001FF003FFFFF007FEFFFFFF07FFFE007FF803FFFFF0
07FEFFFFFF07FFFE007FFC01FFFFF003FEFFFFFFC3FFFE007FFE00FFFFF003FE
FFFFFFC3FFFC007FFE00FFFFF003FEFFFFFFC1FFFC00FFFF007FFFF003FEFFFF
FFC1FFFC00FFFFC01FFFF003FEFFFFFFE1FFFC00FFFFE01FFFF003FEFFFFFFE1
FFF800FFFFF00FFFF803FEFFFFFFE0FFF801FFFFF807FFF803FEFFFFFFE0FFF8
01FFFFF803FFF803FEFFFFFFF0FFF801FFFFFC01FFF803FEFFFFFFF07FF001FF
FFFF007FF801FEFFFFFFF07FF003FFFFFF007FF801FEFFFFFFF87FF003FFFFFF
807FF801FEFFFFFFF87FF003FFFFFFC03FF801FEFFFFFFF81FF003FFFFFFC01F
F801FEFFFFFFF81FC003FFFFFFE00FFC01FEFFFFFFFC1FC007FFFFFFF007FC01
FEFFFFFFFC1FC007FFFFFFFC07FC01FEFFFFFFFC0FC007FFFFFFFE01FC01FEFF
FFFFFC0FC007FFFFFFFF00FC007EFFFFFFFC0F8007FFFFFFFF00FC007EFFFFFF
FF0F801FFFFFFFFF007C007EFFFFFFFF07801FFFFFFFFF803F007EFFFFFFFF07
801FFFFFFFFFC03F007EFFFFFFFF07801FFFFFFFFFF01F007EFFFFFFFF87003F
FFFFFFFFF807007EFFFFFFFF87003FFFFFFFFFF803003EFFFFFFFF83003FFFFF
FFFFFC01003EFFFFFFFF83003FFFFFFFFFFE01003EFFFFFFFF83003FFFFFFFFF
FE01803EFFFFFFFFC3007FFFFFFFFFFF00803EFFFFFFFFC2007FFFFFFFFFFFC0
003EFFFFFFFFC0007FFFFFFFFFFFC0003EFFFFFFFFC0007FFFFFFFFFFFE0001E
FFFFFFFFC0007FFFFFFFFFFFF0001EFFFFFFFFC0007FFFFFFFFFFFF8001EFFFF
FFFFE000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFC001EFFFFFFFF
E000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFF000EFFFFFFFFE000
FFFFFFFFFFFFFF800EFFFFFFFFE000FFFFFFFFFFFFFFC00EFFFFFFFFE001FFFF
FFFFFFFFFFE00EFFFFFFFFF001FFFFFFFFFFFFFFF00EFFFFFFFFF001FFFFFFFF
FFFFFFF00EFFFFFFFFF001FFFFFFFFFFFFFFF006FFFFFFFFF001FFFFFFFFFFFF
FFFC06FFFFFFFFF001FFFFFFFFFFFFFFFE06FFFFFFFFF007FFFFFFFFFFFFFFFF
06FFFFFFFFFC07FFFFFFFFFFFFFFFF86FFFFFFFFFC07FFFFFFFFFFFFFFFF86FF
FFFFFFFE07FFFFFFFFFFFFFFFFC6FFFFFFFFFF87FFFFFFFFFFFFFFFFF6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
119 83 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 38 43 95 setcachedevice
43 0 0 57 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 57 def
/ImageMatrix [43 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFFFE0FFE007FFFFE0FF00007FFFE0FC00000FFFE0F8000007FFE0F000
0000FFE0C0001F807FE0C000FFF87FE0C003FFFC1FE08007FFFE07E08007FFFE
03E0801FFFFF01E0003FFFFFC0E0003FFFFFE0E0007FFFFFF8E0007FFFFFFFE0
007FFFFFFFE0007FFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FF
FFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE080FFFFFFFFE080FFFFFF
FFE080FFFFFFFFE0807FFFFFFFE0807FFFFFFFE0C07FFFFFFFE0C07FFFFFFFE0
C07FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F81FFFFFFFE0F81F
FFFFFFE0FC1FFFFE1FE0FC07FFFE07E0FC07FFFE03E0FE03FFFF01E0FF01FFFF
01E0FF01FFFFC1E0FFC1FFFFC0E0FFE0FFFFE0E0FFE07FFFE060FFF01FFFE060
FFF80FFFE000FFFC0FFFE000FFFF83FFC000FFFFC07F0000FFFFC0000000FFFF
F0000000FFFFFE000000FFFFFF800060FFFFFFFC00E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 1 73 76 setcachedevice
73 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 75 def
/ImageMatrix [73 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000003FFFFFF808000000000003FFFFF8080000000000003FFFF80E000
0000000001FFFF80F00000000000007FFF80FC0000000000007FFF80FFFFF81F
FFFFE03FFF80FFFFFC0FFFFFF80FFF80FFFFFC03FFFFF807FF80FFFFFE01FFFF
F803FF80FFFFFE00FFFFFC03FF80FFFFFF00FFFFFE03FF80FFFFFF00FFFFFF81
FF80FFFFFF807FFFFFE1FF80FFFFFF807FFFFFE1FF80FFFFFF803FFFFFFFFF80
FFFFFFE03FFFFFFFFF80FFFFFFE03FFFFFFFFF80FFFFFFE00FFFFFFFFF80FFFF
FFF00FFFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF0
07FFFFFFFF80FFFFFFF807FFFFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF803FF
FFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF801FFFFFFFF80FFFFFFFC01FFFFFF
FF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80
FFFFFFFC00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFF
FFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF
803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803F
FFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFF
FF80FFFFFFFFC01FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80
FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE007FFFFFF80FFFF
FFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFF
F807FFFFFF80FFFFFFFFF803FFFFFF80FE3FFFFFF803FFFFFF80FE07FFFFFE03
FFFFFF80FE01FFFFFE00FFFFFF80FE01FFFFFE00FFFFFF80FF80FFFFFF00FFFF
FF80FF80FFFFFF007FFFFF80FF803FFFFF007FFFFF80FFC03FFFFF807FFFFF80
FFE01FFFFFC03FFFFF80FFF01FFFFFC03FFFFF80FFF807FFFFE01FFFFF80FFFE
001FFFF81FFFFF80FFFE0000000000001F80FFFF8000000000000780FFFFE000
000000000080FFFFFC00000000000080FFFFFF80000000000000FFFFFFFE0000
00000000FFFFFFFE000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -1 61 98 setcachedevice
61 0 0 99 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 99 def
/ImageMatrix [61 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8
0FFFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF883FFFFFFFFFFFFF8
83FFFFFFFFFFFFF883FFFFFFFFFFFFF881FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8
E1FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8
F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F07FFFFFFFFFFFF8
F07FF800FFFFFFF8F87FF800FFFFFFF8F87FC0000FFFFFF8F87F03FC01FFFFF8
F83E03FC003FFFF8F8380FFFC01FFFF8FC303FFFF007FFF8FC30FFFFF807FFF8
FC20FFFFFE03FFF8FC01FFFFFF00FFF8FC01FFFFFF007FF8FE01FFFFFF803FF8
FE03FFFFFFC01FF8FE03FFFFFFE01FF8FE03FFFFFFE00FF8FF83FFFFFFF80FF8
FF83FFFFFFF803F8FF83FFFFFFF803F8FF83FFFFFFFC01F8FF83FFFFFFFC01F8
FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC1FFFFFFFE00F8
FFC1FFFFFFFE00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8
FFE0FFFFFFFF00F8FFE0FFFFFFFF00F8FFF0FFFFFFFF00F8FFF0FFFFFFFF00F8
FFF0FFFFFFFF00F8FFF03FFFFFFF00F8FFF03FFFFFFF00F8FFF83FFFFFFF00F8
FFF83FFFFFFF01F8FFF83FFFFFFF01F8FFF81FFFFFFE01F8FFFE1FFFFFFE03F8
FFFE1FFFFFFE03F8FFFE1FFFFFFC0FF8FFFE0FF800380FF8FFFE0FF800381FF8
FFFF0FE000003FF8FFFF0FE1FF00FFF8FFFF0FE000003FF8FFFF07E000001FF8
FFFF07F8001803F8FFFF87FFFFFC03F8FFFF87FFFFFE01F8FFFF83FFFFFF00F8
FFFF83FFFFFF00F8FFFFC3FFFFFF8078FFFFC0FFFFFFE038FFFFC0FFFFFFE038
FFFFE0FFFFFFF038FFFFE0FFFFFFF008FFFFE07FFFFFF008FFFFF87FFFFFF008
FFFFF83FFFFFF808FFFFFC3FFFFFF808FFFFFC1FFFFFF800FFFFFE1FFFFFF800
FFFFFE0FFFFFF800FFFFFE0FFFFFF800FFFFFF03FFFFFC00FFFFFF83FFFFFC00
FFFFFFE1FFFFF808FFFFFFE0FFFFF808FFFFFFE07FFFF808FFFFFFF03FFFF008
FFFFFFF80FFFF038FFFFFFFE0FFFF078FFFFFFFF83FFE0F8FFFFFFFFE0FF01F8
FFFFFFFFE00001F8FFFFFFFFF8000FF8FFFFFFFFFF003FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
65 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
74 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
132 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/B/N68 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
110.52 672.12 m
/N22 10.9091 Tf
(T) show
116.389 672.12 m
(o) show
125.018 672.12 m
(illustrate)
[2.98911 2.98911 2.98911 5.38913 4.18912 2.98911 3.58903 4.78904 2.98911 4.78904 ] pdfxs
166.309 672.12 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
185.225 672.12 m
(idea,)
[2.98911 5.38913 4.78904 4.78904 2.74908 ] pdfxs
209.411 672.12 m
(consider)
[4.78904 5.38913 5.38913 4.18912 2.98911 5.38913 4.78904 3.58903 ] pdfxs
249.523 672.12 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
281.138 672.12 m
(1\(a\))
[5.38913 3.58903 4.78904 3.58903 ] pdfxs
301.974 672.12 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
321.49 672.12 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
336.218 672.12 m
(ws)
[7.90916 4.18912 ] pdfxs
351.676 672.12 m
(a) show
359.705 672.12 m
(tw)
[2.98911 7.90916 ] pdfxs
370.483 672.12 m
(o) show
379.112 672.12 m
(dimensional)
[5.38913 2.98911 8.50908 4.78904 5.38913 4.18912 2.98911 5.38913 5.38913 4.78904 2.98911 
] pdfxs
435.632 672.12 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
464.116 672.12 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
485.672 672.12 m
(function.)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
93.6 658.68 m
(Re)
[7.30907 4.78904 ] pdfxs
105.578 658.68 m
(gions)
[5.38913 2.98911 5.38913 5.38913 4.18912 ] pdfxs
132.044 658.68 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
154.2 658.68 m
(dark)
[5.38913 4.78904 3.58903 5.38913 ] pdfxs
173.236 658.68 m
(er)
[4.78904 3.58903 ] pdfxs
184.854 658.68 m
(colors)
[4.78904 5.38913 2.98911 5.38913 3.58903 4.18912 ] pdfxs
214.309 658.68 m
(represents)
[3.58903 4.78904 5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 4.18912 ] pdfxs
261.36 658.68 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
288.414 658.68 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
310.571 658.68 m
(higher)
[5.38913 2.98911 5.38913 5.38913 4.78904 3.58903 ] pdfxs
341.345 658.68 m
(v) show
346.494 658.68 m
(alues.)
[4.78904 2.98911 5.38913 4.78904 4.18912 2.74908 ] pdfxs
375.469 658.68 m
(Assume)
[7.90916 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
413.443 658.68 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
432.6 658.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
448.767 658.68 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
475.232 658.68 m
(is)
[2.98911 4.18912 ] pdfxs
485.41 658.68 m
(currently)
[4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 2.98911 5.38913 ] pdfxs
93.5993 645.12 m
(in)
[2.98911 5.38913 ] pdfxs
104.618 645.12 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
127.243 645.12 m
(mark)
[8.50908 4.78904 3.58903 5.38913 ] pdfxs
149.399 645.12 m
(ed)
[4.78904 5.38913 ] pdfxs
162.7 645.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
167.498 645.12 m
/N22 10.9091 Tf
(.) show
173.487 645.12 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
193.014 645.12 m
(arro)
[4.78904 3.58903 3.58903 5.38913 ] pdfxs
210.131 645.12 m
(ws)
[7.90916 4.18912 ] pdfxs
224.989 645.12 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
239.716 645.12 m
(w) show
250.265 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
266.192 645.12 m
(direction)
[5.38913 2.98911 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
307.494 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
319.112 645.12 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
341.618 645.12 m
(transition)
[2.98911 3.58903 4.78904 5.38913 4.18912 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
385.429 645.12 m
(as)
[4.78904 4.18912 ] pdfxs
397.047 645.12 m
(a) show
404.476 645.12 m
(result)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 ] pdfxs
431.29 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
442.909 645.12 m
(e) show
447.578 645.12 m
(x) show
452.847 645.12 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
487.45 645.12 m
(dif)
[5.38913 2.98911 3.58903 ] pdfxs
499.177 645.12 m
(ferent)
[3.58903 4.78904 3.58903 4.78904 5.38913 2.98911 ] pdfxs
93.5995 631.56 m
(actions,)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 2.74908 ] pdfxs
130.832 631.56 m
(namely)
[5.38913 4.78904 8.50908 4.78904 2.98911 5.38913 ] pdfxs
166.407 631.56 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
201.1 631.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
206.531 631.56 m
/N22 10.9091 Tf
(,) show
213.3 631.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\037) show
217.56 631.56 m
/N22 10.9091 Tf
(,) show
224.3 631.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
( ) show
228.709 631.56 m
/N22 10.9091 Tf
(,) show
235.178 631.56 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
254.6 631.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(!) show
259.985 631.56 m
/N22 10.9091 Tf
(.) show
268.494 631.56 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
288.861 631.56 m
(\002rst)
[6.10906 3.58903 4.18912 2.98911 ] pdfxs
309.337 631.56 m
(three)
[2.98911 5.38913 3.58903 4.78904 4.78904 ] pdfxs
334.603 631.56 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
368.966 631.56 m
(lead)
[2.98911 4.78904 4.78904 5.38913 ] pdfxs
390.523 631.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
407.41 631.56 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
434.475 631.56 m
(to)
[2.98911 5.38913 ] pdfxs
446.453 631.56 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
474.108 631.56 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
496.984 631.56 m
(higher)
[5.38913 2.98911 5.38913 5.38913 4.78904 3.58903 ] pdfxs
93.5994 618 m
(v) show
98.7485 618 m
(alues,)
[4.78904 2.98911 5.38913 4.78904 4.18912 2.74908 ] pdfxs
126.883 618 m
(in)
[2.98911 5.38913 ] pdfxs
138.261 618 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
163.526 618 m
(w) show
171.315 618 m
(ords)
[5.38913 3.58903 5.38913 4.18912 ] pdfxs
192.992 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
206.039 618 m
(y) show
214.428 618 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
247.003 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
263.17 618 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
291.653 618 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
312.97 618 m
(function,)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
354.991 618 m
(while)
[7.90916 5.38913 2.98911 2.98911 4.78904 ] pdfxs
382.057 618 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
411.9 618 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(!) show
420.272 618 m
/N22 10.9091 Tf
(descends)
[5.38913 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 ] pdfxs
462.425 618 m
(it.)
[2.98911 2.98911 2.74908 ] pdfxs
475.232 618 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
506.607 618 m
(1\(b\))
[5.38913 3.58903 5.38913 3.58903 ] pdfxs
93.5996 604.44 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
108.327 604.44 m
(ws)
[7.90916 4.18912 ] pdfxs
124.145 604.44 m
(ho)
[5.38913 5.38913 ] pdfxs
134.683 604.44 m
(w) show
146.192 604.44 m
(introducing)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 2.98911 5.38913 5.38913 
] pdfxs
199.952 604.44 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
250.123 604.44 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
287.596 604.44 m
(enables)
[4.78904 5.38913 4.78904 5.38913 2.98911 4.78904 4.18912 ] pdfxs
323.76 604.44 m
(simultaneously)
[4.18912 2.98911 8.50908 5.38913 2.98911 2.98911 4.78904 5.38913 4.78904 5.38913 5.38913 
4.18912 2.98911 5.38913 ] pdfxs
393.327 604.44 m
(solving)
[4.18912 5.38913 2.98911 5.38913 2.98911 5.38913 5.38913 ] pdfxs
429.01 604.44 m
(multiple)
[8.50908 5.38913 2.98911 2.98911 2.98911 5.38913 2.98911 4.78904 ] pdfxs
468.883 604.44 m
(subgoals.)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
515.585 604.44 m
(In)
[3.58903 5.38913 ] pdfxs
93.5999 590.88 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
112.516 590.88 m
(\002gure,)
[6.10906 5.38913 5.38913 3.58903 4.78904 2.74908 ] pdfxs
144.011 590.88 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
174.2 590.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
182.945 590.88 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
202.2 590.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
( ) show
209.913 590.88 m
/N22 10.9091 Tf
(are)
[4.78904 3.58903 4.78904 ] pdfxs
226.44 590.88 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
262.844 590.88 m
(in)
[2.98911 5.38913 ] pdfxs
274.582 590.88 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
324.5 598.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
331.299 598.5 m
(\007) show
338.52 590.88 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
357.7 598.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\r\f)
[0 5.99945 0 ] pdfxs
371.28 590.88 m
/N22 10.9091 Tf
(respecti)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 2.98911 ] pdfxs
404.553 590.88 m
(v) show
409.822 590.88 m
(ely)
[4.78904 2.98911 5.38913 ] pdfxs
422.269 590.88 m
(,) show
428.858 590.88 m
(b) show
434.007 590.88 m
(ut)
[5.38913 2.98911 ] pdfxs
445.745 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
458.793 590.88 m
(y) show
467.542 590.88 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
490.178 590.88 m
(descend)
[5.38913 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
93.5999 577.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
109.407 577.32 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
137.891 577.32 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
158.727 577.32 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
197.52 577.32 m
(of)
[5.38913 3.58903 ] pdfxs
209.018 577.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
224.825 577.32 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
249.731 577.32 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
291.022 577.32 m
(.) show
297.491 577.32 m
(Ho)
[7.90916 5.38913 ] pdfxs
310.549 577.32 m
(we)
[7.90916 4.78904 ] pdfxs
323.007 577.32 m
(v) show
328.276 577.32 m
(er)
[4.78904 3.58903 ] pdfxs
339.174 577.32 m
(if)
[2.98911 3.58903 ] pdfxs
348.272 577.32 m
(we)
[7.90916 4.78904 ] pdfxs
363.491 577.32 m
(allo)
[4.78904 2.98911 2.98911 5.38913 ] pdfxs
379.407 577.32 m
(w) show
389.836 577.32 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
423.12 577.32 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
445.636 577.32 m
(as)
[4.78904 4.18912 ] pdfxs
457.134 577.32 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
486.6 577.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\037) show
490.909 577.32 m
/N22 10.9091 Tf
(,) show
496.178 577.32 m
(we)
[7.90916 4.78904 ] pdfxs
511.396 577.32 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
93.6003 563.76 m
(guaranteed)
[5.38913 5.38913 4.78904 3.58903 4.78904 5.38913 2.98911 4.78904 4.78904 5.38913 ] pdfxs
144.491 563.76 m
(to)
[2.98911 5.38913 ] pdfxs
156.109 563.76 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
188.924 563.76 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
211.44 563.76 m
(v) show
216.589 563.76 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
237.906 563.76 m
(functions,)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 2.74908 ] pdfxs
284.476 563.76 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
306.993 563.76 m
(a) show
315.022 563.76 m
(slight)
[4.18912 2.98911 2.98911 5.38913 5.38913 2.98911 ] pdfxs
342.316 563.76 m
(de)
[5.38913 4.78904 ] pdfxs
352.375 563.76 m
(generac)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 4.78904 ] pdfxs
385.778 563.76 m
(y) show
394.767 563.76 m
(in)
[2.98911 5.38913 ] pdfxs
406.385 563.76 m
(optimality)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
450.076 563.76 m
(.) show
457.865 563.76 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
477.992 563.76 m
(dotted)
[5.38913 5.38913 2.98911 2.98911 4.78904 5.38913 ] pdfxs
508.407 563.76 m
(line)
[2.98911 2.98911 5.38913 4.78904 ] pdfxs
93.6 550.2 m
(in)
[2.98911 5.38913 ] pdfxs
104.738 550.2 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
123.294 550.2 m
(\002gure)
[6.10906 5.38913 5.38913 3.58903 4.78904 ] pdfxs
151.32 550.2 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
166.047 550.2 m
(ws)
[7.90916 4.18912 ] pdfxs
181.025 550.2 m
(a) show
188.574 550.2 m
(trajectory)
[2.98911 3.58903 4.78904 2.98911 4.78904 4.78904 2.98911 5.38913 3.58903 5.38913 ] pdfxs
232.985 550.2 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
252.021 550.2 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
274.527 550.2 m
(v) show
279.796 550.2 m
(es)
[4.78904 4.18912 ] pdfxs
291.774 550.2 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
313.93 550.2 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
354.763 550.2 m
(while)
[7.90916 5.38913 2.98911 2.98911 4.78904 ] pdfxs
381.588 550.2 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
427.93 550.2 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
449.966 550.2 m
(v) show
455.116 550.2 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
475.952 550.2 m
(functions.)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 2.74908 ] pdfxs
93.5998 536.64 m
(Most)
[9.70908 5.38913 4.18912 2.98911 ] pdfxs
118.876 536.64 m
(of)
[5.38913 3.58903 ] pdfxs
130.854 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
147.021 536.64 m
(related)
[3.58903 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
179.585 536.64 m
(w) show
187.374 536.64 m
(ork)
[5.38913 3.58903 5.38913 ] pdfxs
204.741 536.64 m
(in)
[2.98911 5.38913 ] pdfxs
216.119 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
232.286 536.64 m
(conte)
[4.78904 5.38913 5.38913 2.98911 4.78904 ] pdfxs
255.512 536.64 m
(xt)
[5.38913 2.98911 ] pdfxs
267.13 536.64 m
(of)
[5.38913 3.58903 ] pdfxs
279.108 536.64 m
(MDPs)
[9.70908 7.90916 6.10906 4.18912 ] pdfxs
309.904 536.64 m
(assume)
[4.78904 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
344.759 536.64 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
364.035 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
380.202 536.64 m
(subprocesses)
[4.18912 5.38913 5.38913 5.38913 3.58903 5.38913 4.78904 4.78904 4.18912 4.18912 4.78904 
4.18912 ] pdfxs
439.951 536.64 m
(modeling)
[8.50908 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
484.024 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
500.191 536.64 m
(acti)
[4.78904 4.78904 2.98911 2.98911 ] pdfxs
515.508 536.64 m
(v-)
[5.38913 3.58903 ] pdfxs
93.5988 523.08 m
(ities)
[2.98911 2.98911 2.98911 4.78904 4.18912 ] pdfxs
114.544 523.08 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
130.711 523.08 m
(additi)
[4.78904 5.38913 5.38913 2.98911 2.98911 2.98911 ] pdfxs
155.006 523.08 m
(v) show
160.275 523.08 m
(e) show
168.184 523.08 m
(utility)
[5.38913 2.98911 2.98911 2.98911 2.98911 2.98911 5.38913 ] pdfxs
196.908 523.08 m
(independent)
[2.98911 5.38913 5.38913 4.78904 5.38913 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 
] pdfxs
252.948 523.08 m
(\(Boutilier)
[3.58903 7.30907 5.38913 5.38913 2.98911 2.98911 2.98911 2.98911 4.78904 3.58903 ] pdfxs
298.198 523.08 m
(et)
[4.78904 2.98911 ] pdfxs
308.857 523.08 m
(al.,)
[4.78904 2.98911 2.74908 2.74908 ] pdfxs
324.893 523.08 m
(1997;)
[5.38913 5.38913 5.38913 5.38913 2.98911 ] pdfxs
352.558 523.08 m
(Guestrin)
[7.90916 5.38913 4.78904 4.18912 2.98911 3.58903 2.98911 5.38913 ] pdfxs
392.911 523.08 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
411.478 523.08 m
(Gordon,)
[7.90916 5.38913 3.58903 5.38913 5.38913 5.38913 2.74908 ] pdfxs
450.282 523.08 m
(2002\))
[5.38913 5.38913 5.38913 5.38913 3.58903 ] pdfxs
478.427 523.08 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
496.994 523.08 m
(do)
[5.38913 5.38913 ] pdfxs
510.773 523.08 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
93.5985 509.64 m
(address)
[4.78904 5.38913 5.38913 3.58903 4.78904 4.18912 4.18912 ] pdfxs
128.802 509.64 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
178.013 509.64 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
218.726 509.64 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
240.642 509.64 m
(temporal)
[2.98911 4.78904 8.50908 5.38913 5.38913 3.58903 4.78904 2.98911 ] pdfxs
281.955 509.64 m
(acti)
[4.78904 4.78904 2.98911 2.98911 ] pdfxs
297.271 509.64 m
(vities.)
[5.38913 2.98911 2.98911 2.98911 4.78904 4.18912 2.74908 ] pdfxs
327.075 509.64 m
(In)
[3.58903 5.38913 ] pdfxs
338.693 509.64 m
(contrast)
[4.78904 5.38913 5.38913 2.98911 3.58903 4.78904 4.18912 2.98911 ] pdfxs
375.806 509.64 m
(we)
[7.90916 4.78904 ] pdfxs
391.144 509.64 m
(focus)
[3.58903 5.38913 4.78904 5.38913 4.18912 ] pdfxs
417.249 509.64 m
(on)
[5.38913 5.38913 ] pdfxs
430.787 509.64 m
(problems)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 4.18912 ] pdfxs
473.9 509.64 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
492.816 509.64 m
(in)
[2.98911 5.38913 ] pdfxs
500.714 509.64 m
(v) show
505.864 509.64 m
(olv)
[5.38913 2.98911 5.38913 ] pdfxs
519.511 509.64 m
(e) show
93.5988 496.08 m
(temporal)
[2.98911 4.78904 8.50908 5.38913 5.38913 3.58903 4.78904 2.98911 ] pdfxs
135.872 496.08 m
(abstraction)
[4.78904 5.38913 4.18912 2.98911 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 
] pdfxs
187.111 496.08 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
217.177 496.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
234.064 496.08 m
(o) show
239.333 496.08 m
(v) show
244.602 496.08 m
(erall)
[4.78904 3.58903 4.78904 2.98911 2.98911 ] pdfxs
267.468 496.08 m
(utility)
[5.38913 2.98911 2.98911 2.98911 2.98911 2.98911 5.38913 ] pdfxs
297.031 496.08 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
336.784 496.08 m
(may)
[8.50908 4.78904 5.38913 ] pdfxs
359.071 496.08 m
(be)
[5.38913 4.78904 ] pdfxs
372.849 496.08 m
(e) show
377.518 496.08 m
(xpressed)
[5.38913 5.38913 3.58903 4.78904 4.18912 4.18912 4.78904 5.38913 ] pdfxs
419.191 496.08 m
(as)
[4.78904 4.18912 ] pdfxs
431.769 496.08 m
(a) show
440.158 496.08 m
(non-linear)
[5.38913 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 4.78904 4.78904 3.58903 ] pdfxs
488.409 496.08 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
93.598 482.52 m
(of)
[5.38913 3.58903 ] pdfxs
106.296 482.52 m
(sub-utility)
[4.18912 5.38913 5.38913 3.58903 5.38913 2.98911 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
154.656 482.52 m
(functions)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
198.718 482.52 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
218.714 482.52 m
(ha)
[5.38913 4.78904 ] pdfxs
228.652 482.52 m
(v) show
233.921 482.52 m
(e) show
242.43 482.52 m
(dif)
[5.38913 2.98911 3.58903 ] pdfxs
254.158 482.52 m
(ferent)
[3.58903 4.78904 3.58903 4.78904 5.38913 2.98911 ] pdfxs
283.252 482.52 m
(priorities.)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.18912 2.74908 
] pdfxs
331.252 482.52 m
(Our)
[7.90916 5.38913 3.58903 ] pdfxs
351.86 482.52 m
(approach)
[4.78904 5.38913 5.38913 3.58903 5.38913 4.78904 4.78904 5.38913 ] pdfxs
395.332 482.52 m
(is)
[2.98911 4.18912 ] pdfxs
406.23 482.52 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
427.427 482.52 m
(similar)
[4.18912 2.98911 8.50908 2.98911 2.98911 4.78904 3.58903 ] pdfxs
461.19 482.52 m
(in)
[2.98911 5.38913 ] pdfxs
473.288 482.52 m
(spirit)
[4.18912 5.38913 2.98911 3.58903 2.98911 2.98911 ] pdfxs
499.263 482.52 m
(to)
[2.98911 5.38913 ] pdfxs
511.361 482.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5982 468.96 m
(redundanc)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 4.78904 ] pdfxs
138.38 468.96 m
(y) show
146.649 468.96 m
(utilization)
[5.38913 2.98911 2.98911 2.98911 2.98911 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 
] pdfxs
193.329 468.96 m
(formalism)
[3.58903 5.38913 3.58903 8.50908 4.78904 2.98911 2.98911 4.18912 8.50908 ] pdfxs
240.511 468.96 m
(in)
[2.98911 5.38913 ] pdfxs
251.529 468.96 m
(robotics)
[3.58903 5.38913 5.38913 5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
289.002 468.96 m
(\(Nakamura,)
[3.58903 7.90916 4.78904 5.38913 4.78904 8.50908 5.38913 3.58903 4.78904 2.74908 ] pdfxs
343.253 468.96 m
(1991;)
[5.38913 5.38913 5.38913 5.38913 2.98911 ] pdfxs
370.438 468.96 m
(Huber)
[7.90916 5.38913 5.38913 4.78904 3.58903 ] pdfxs
397.023 468.96 m
(,) show
402.413 468.96 m
(2000;)
[5.38913 5.38913 5.38913 5.38913 2.98911 ] pdfxs
429.718 468.96 m
(Platt)
[6.10906 2.98911 4.78904 2.98911 2.98911 ] pdfxs
452.223 468.96 m
(et)
[4.78904 2.98911 ] pdfxs
462.522 468.96 m
(al.,)
[4.78904 2.98911 2.74908 2.74908 ] pdfxs
478.318 468.96 m
(2002\),)
[5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
508.972 468.96 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
93.5983 455.4 m
(in)
[2.98911 5.38913 ] pdfxs
105.936 455.4 m
(motor)
[8.50908 5.38913 2.98911 5.38913 3.58903 ] pdfxs
135.762 455.4 m
(coordination)
[4.78904 5.38913 5.38913 3.58903 5.38913 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 
5.38913 ] pdfxs
194.671 455.4 m
(\(also)
[3.58903 4.78904 2.98911 4.18912 5.38913 ] pdfxs
219.696 455.4 m
(kno)
[5.38913 5.38913 5.38913 ] pdfxs
235.624 455.4 m
(w) show
247.493 455.4 m
(as)
[4.78904 4.18912 ] pdfxs
260.311 455.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
277.558 455.4 m
(\223uncontrolled)
[4.78904 5.38913 5.38913 4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 
4.78904 5.38913 ] pdfxs
341.256 455.4 m
(manifold\224\))
[8.50908 4.78904 5.38913 2.98911 3.58903 5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
392.867 455.4 m
(\(Pellionisz)
[3.58903 6.10906 4.78904 2.98911 2.98911 2.98911 5.38913 5.38913 2.98911 4.18912 4.78904 
] pdfxs
443.267 455.4 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
462.794 455.4 m
(Llinas,)
[6.70915 2.98911 2.98911 5.38913 4.78904 4.18912 2.74908 ] pdfxs
496.558 455.4 m
(1985\).)
[5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
93.5981 441.84 m
(Huber)
[7.90916 5.38913 5.38913 4.78904 3.58903 ] pdfxs
123.303 441.84 m
(et)
[4.78904 2.98911 ] pdfxs
133.602 441.84 m
(al.)
[4.78904 2.98911 2.74908 ] pdfxs
146.649 441.84 m
(\(1996\))
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 ] pdfxs
178.143 441.84 m
(propose)
[5.38913 3.58903 5.38913 5.38913 5.38913 4.18912 4.78904 ] pdfxs
215.147 441.84 m
(using)
[5.38913 4.18912 2.98911 5.38913 5.38913 ] pdfxs
241.132 441.84 m
(a) show
248.561 441.84 m
(small)
[4.18912 8.50908 4.78904 2.98911 2.98911 ] pdfxs
274.547 441.84 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
289.154 441.84 m
(of)
[5.38913 3.58903 ] pdfxs
300.652 441.84 m
(pre-de\002ned)
[5.38913 3.58903 4.78904 3.58903 5.38913 4.78904 6.10906 5.38913 4.78904 5.38913 ] pdfxs
352.743 441.84 m
(closed-loop)
[4.78904 2.98911 5.38913 4.18912 4.78904 5.38913 3.58903 2.98911 5.38913 5.38913 5.38913 
] pdfxs
406.023 441.84 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
454.983 441.84 m
(\(a)
[3.58903 4.78904 ] pdfxs
466.001 441.84 m
(control)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 ] pdfxs
499.285 441.84 m
(basis\))
[5.38913 4.78904 4.18912 2.98911 4.18912 3.58903 ] pdfxs
93.598 428.28 m
(to)
[2.98911 5.38913 ] pdfxs
104.736 428.28 m
(generate)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 ] pdfxs
144.129 428.28 m
(a) show
151.678 428.28 m
(wide)
[7.90916 2.98911 5.38913 4.78904 ] pdfxs
175.394 428.28 m
(v) show
180.543 428.28 m
(ariety)
[4.78904 3.58903 2.98911 4.78904 2.98911 5.38913 ] pdfxs
207.958 428.28 m
(of)
[5.38913 3.58903 ] pdfxs
219.696 428.28 m
(robot)
[3.58903 5.38913 5.38913 5.38913 2.98911 ] pdfxs
245.321 428.28 m
(beha)
[5.38913 4.78904 5.38913 4.78904 ] pdfxs
265.438 428.28 m
(vior)
[5.38913 2.98911 5.38913 3.58903 ] pdfxs
282.194 428.28 m
(.) show
288.543 428.28 m
(By)
[7.30907 5.38913 ] pdfxs
303.881 428.28 m
(e) show
308.55 428.28 m
(x) show
313.819 428.28 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
348.543 428.28 m
(closed-loop)
[4.78904 2.98911 5.38913 4.18912 4.78904 5.38913 3.58903 2.98911 5.38913 5.38913 5.38913 
] pdfxs
401.943 428.28 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
451.143 428.28 m
(concurrently)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 2.98911 
5.38913 ] pdfxs
508.732 428.28 m
(in)
[2.98911 5.38913 ] pdfxs
519.87 428.28 m
(a) show
93.5981 414.72 m
(prioritized)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 
] pdfxs
141.838 414.72 m
(relationship,)
[3.58903 4.78904 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 5.38913 2.98911 
5.38913 2.74908 ] pdfxs
198.936 414.72 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
215.224 414.72 m
(robot)
[3.58903 5.38913 5.38913 5.38913 2.98911 ] pdfxs
241.209 414.72 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
259.296 414.72 m
(realize)
[3.58903 4.78904 4.78904 2.98911 2.98911 4.78904 4.78904 ] pdfxs
291.26 414.72 m
(a) show
299.049 414.72 m
(more)
[8.50908 5.38913 3.58903 4.78904 ] pdfxs
324.325 414.72 m
(ef)
[4.78904 3.58903 ] pdfxs
332.463 414.72 m
(\002cient)
[6.10906 4.78904 2.98911 4.78904 5.38913 2.98911 ] pdfxs
362.638 414.72 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
384.063 414.72 m
(y) show
388.732 414.72 m
(.) show
395.801 414.72 m
(In)
[3.58903 5.38913 ] pdfxs
407.779 414.72 m
(addition,)
[4.78904 5.38913 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
449.201 414.72 m
(because)
[5.38913 4.78904 4.78904 4.78904 5.38913 4.18912 4.78904 ] pdfxs
486.685 414.72 m
(one)
[5.38913 5.38913 4.78904 ] pdfxs
505.252 414.72 m
(con-)
[4.78904 5.38913 5.38913 3.58903 ] pdfxs
93.598 401.16 m
(troller)
[2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
123.162 401.16 m
(al)
[4.78904 2.98911 ] pdfxs
130.82 401.16 m
(w) show
138.609 401.16 m
(ays)
[4.78904 5.38913 4.18912 ] pdfxs
156.216 401.16 m
(has)
[5.38913 4.78904 4.18912 ] pdfxs
173.703 401.16 m
(top)
[2.98911 5.38913 5.38913 ] pdfxs
190.591 401.16 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
222.183 401.16 m
(,) show
228.292 401.16 m
(it)
[2.98911 2.98911 ] pdfxs
237.391 401.16 m
(is)
[2.98911 4.18912 ] pdfxs
247.569 401.16 m
(possible)
[5.38913 5.38913 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
286.241 401.16 m
(to)
[2.98911 5.38913 ] pdfxs
297.74 401.16 m
(guarantee)
[5.38913 5.38913 4.78904 3.58903 4.78904 5.38913 2.98911 4.78904 4.78904 ] pdfxs
343.001 401.16 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
362.398 401.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
378.685 401.16 m
(system)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 ] pdfxs
411.859 401.16 m
(obe)
[5.38913 5.38913 4.78904 ] pdfxs
427.307 401.16 m
(ys)
[5.38913 4.18912 ] pdfxs
440.125 401.16 m
(a) show
447.914 401.16 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
463.001 401.16 m
(of)
[5.38913 3.58903 ] pdfxs
475.099 401.16 m
(pre-de\002ned)
[5.38913 3.58903 4.78904 3.58903 5.38913 4.78904 6.10906 5.38913 4.78904 5.38913 ] pdfxs
93.5984 387.6 m
(constraints.)
[4.78904 5.38913 5.38913 4.18912 2.98911 3.58903 4.78904 2.98911 5.38913 2.98911 4.18912 
2.74908 ] pdfxs
147.948 387.6 m
(Most)
[9.70908 5.38913 4.18912 2.98911 ] pdfxs
173.344 387.6 m
(of)
[5.38913 3.58903 ] pdfxs
185.562 387.6 m
(these)
[2.98911 5.38913 4.78904 4.18912 4.78904 ] pdfxs
210.947 387.6 m
(ideas,)
[2.98911 5.38913 4.78904 4.78904 4.18912 2.74908 ] pdfxs
239.202 387.6 m
(ho)
[5.38913 5.38913 ] pdfxs
249.74 387.6 m
(we)
[7.90916 4.78904 ] pdfxs
262.198 387.6 m
(v) show
267.467 387.6 m
(er)
[4.78904 3.58903 ] pdfxs
275.365 387.6 m
(,) show
281.474 387.6 m
(ha)
[5.38913 4.78904 ] pdfxs
291.413 387.6 m
(v) show
296.682 387.6 m
(e) show
304.711 387.6 m
(been)
[5.38913 4.78904 4.78904 5.38913 ] pdfxs
328.307 387.6 m
(in)
[2.98911 5.38913 ] pdfxs
336.205 387.6 m
(v) show
341.474 387.6 m
(estigated)
[4.78904 4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 4.78904 5.38913 ] pdfxs
383.376 387.6 m
(in)
[2.98911 5.38913 ] pdfxs
394.874 387.6 m
(continuous)
[4.78904 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 5.38913 5.38913 4.18912 ] pdfxs
445.765 387.6 m
(domains)
[5.38913 5.38913 8.50908 4.78904 2.98911 5.38913 4.18912 ] pdfxs
485.769 387.6 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
504.576 387.6 m
(ha)
[5.38913 4.78904 ] pdfxs
514.514 387.6 m
(v) show
519.783 387.6 m
(e) show
93.598 374.04 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
109.885 374.04 m
(been)
[5.38913 4.78904 4.78904 5.38913 ] pdfxs
132.882 374.04 m
(e) show
137.551 374.04 m
(xtended)
[5.38913 2.98911 4.78904 5.38913 5.38913 4.78904 5.38913 ] pdfxs
174.434 374.04 m
(to)
[2.98911 5.38913 ] pdfxs
185.332 374.04 m
(discrete)
[5.38913 2.98911 4.18912 4.78904 3.58903 4.78904 2.98911 4.78904 ] pdfxs
221.605 374.04 m
(domains.)
[5.38913 5.38913 8.50908 4.78904 2.98911 5.38913 4.18912 2.74908 ] pdfxs
264.478 374.04 m
(In)
[3.58903 5.38913 ] pdfxs
275.976 374.04 m
(contrast)
[4.78904 5.38913 5.38913 2.98911 3.58903 4.78904 4.18912 2.98911 ] pdfxs
312.849 374.04 m
(we)
[7.90916 4.78904 ] pdfxs
327.947 374.04 m
(focus)
[3.58903 5.38913 4.78904 5.38913 4.18912 ] pdfxs
353.932 374.04 m
(on)
[5.38913 5.38913 ] pdfxs
367.23 374.04 m
(discrete)
[5.38913 2.98911 4.18912 4.78904 3.58903 4.78904 2.98911 4.78904 ] pdfxs
403.503 374.04 m
(domains)
[5.38913 5.38913 8.50908 4.78904 2.98911 5.38913 4.18912 ] pdfxs
442.787 374.04 m
(modeled)
[8.50908 5.38913 5.38913 4.78904 2.98911 4.78904 5.38913 ] pdfxs
482.67 374.04 m
(as)
[4.78904 4.18912 ] pdfxs
494.168 374.04 m
(MDPs.)
[9.70908 7.90916 6.10906 4.18912 2.74908 ] pdfxs
93.5974 360.6 m
(In)
[3.58903 5.38913 ] pdfxs
106.056 360.6 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
125.212 360.6 m
(paper)
[5.38913 4.78904 5.38913 4.78904 3.58903 ] pdfxs
152.877 360.6 m
(we)
[7.90916 4.78904 ] pdfxs
168.936 360.6 m
(formally)
[3.58903 5.38913 3.58903 8.50908 4.78904 2.98911 2.98911 5.38913 ] pdfxs
209.888 360.6 m
(introduce)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 4.78904 ] pdfxs
254.43 360.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
271.197 360.6 m
(frame)
[3.58903 3.58903 4.78904 8.50908 4.78904 ] pdfxs
296.223 360.6 m
(w) show
304.012 360.6 m
(ork)
[5.38913 3.58903 5.38913 ] pdfxs
321.979 360.6 m
(of)
[5.38913 3.58903 ] pdfxs
334.437 360.6 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
381.379 360.6 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
431.419 360.6 m
(in)
[2.98911 5.38913 ] pdfxs
443.277 360.6 m
(terms)
[2.98911 4.78904 3.58903 8.50908 4.18912 ] pdfxs
470.942 360.6 m
(of)
[5.38913 3.58903 ] pdfxs
483.401 360.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
500.168 360.6 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
515.615 360.6 m
(of)
[5.38913 3.58903 ] pdfxs
93.597 347.04 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
143.168 347.04 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
179.921 347.04 m
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
227.692 347.04 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
249.968 347.04 m
(them)
[2.98911 5.38913 4.78904 8.50908 ] pdfxs
274.764 347.04 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
293.451 347.04 m
(present)
[5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
327.815 347.04 m
(an)
[4.78904 5.38913 ] pdfxs
341.113 347.04 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
386.375 347.04 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
402.062 347.04 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
418.71 347.04 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
441.226 347.04 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
464.102 347.04 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
500.975 347.04 m
(gi)
[5.38913 2.98911 ] pdfxs
509.113 347.04 m
(v) show
514.382 347.04 m
(en)
[4.78904 5.38913 ] pdfxs
93.5972 333.48 m
(a) show
102.226 333.48 m
(coarticulation)
[4.78904 5.38913 4.78904 3.58903 2.98911 2.98911 4.78904 5.38913 2.98911 4.78904 2.98911 
2.98911 5.38913 5.38913 ] pdfxs
165.914 333.48 m
(task.)
[2.98911 4.78904 4.18912 5.38913 2.74908 ] pdfxs
192.739 333.48 m
(W) show
202.208 333.48 m
(e) show
210.717 333.48 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
232.033 333.48 m
(present)
[5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
267.357 333.48 m
(a) show
275.986 333.48 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
291.793 333.48 m
(of)
[5.38913 3.58903 ] pdfxs
304.731 333.48 m
(theoretical)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 2.98911 2.98911 4.78904 4.78904 2.98911 
] pdfxs
354.411 333.48 m
(results)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 4.18912 ] pdfxs
386.615 333.48 m
(analyzing)
[4.78904 5.38913 4.78904 2.98911 5.38913 4.78904 2.98911 5.38913 5.38913 ] pdfxs
432.717 333.48 m
(v) show
437.866 333.48 m
(arious)
[4.78904 3.58903 2.98911 5.38913 5.38913 4.18912 ] pdfxs
468.28 333.48 m
(properties)
[5.38913 3.58903 5.38913 5.38913 4.78904 3.58903 2.98911 2.98911 4.78904 4.18912 ] pdfxs
515.571 333.48 m
(of)
[5.38913 3.58903 ] pdfxs
93.5973 319.92 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
116.474 319.92 m
(controllers,)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
168.663 319.92 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
187.23 319.92 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
207.586 319.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
223.753 319.92 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
281.713 319.92 m
(of)
[5.38913 3.58903 ] pdfxs
293.691 319.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
309.859 319.92 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
331.284 319.92 m
(y) show
339.793 319.92 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
356.44 319.92 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
378.717 319.92 m
(algorithm.)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 2.74908 ] pdfxs
427.568 319.92 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
447.455 319.92 m
(theoretical)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 2.98911 2.98911 4.78904 4.78904 2.98911 
] pdfxs
496.295 319.92 m
(results)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 4.18912 ] pdfxs
93.5967 306.36 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
110.844 306.36 m
(complemented)
[4.78904 5.38913 8.50908 5.38913 2.98911 4.78904 8.50908 4.78904 5.38913 2.98911 4.78904 
5.38913 ] pdfxs
178.873 306.36 m
(by)
[5.38913 5.38913 ] pdfxs
193.611 306.36 m
(an)
[4.78904 5.38913 ] pdfxs
207.749 306.36 m
(e) show
212.418 306.36 m
(xperimental)
[5.38913 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 4.78904 2.98911 
] pdfxs
268.338 306.36 m
(study)
[4.18912 2.98911 5.38913 5.38913 5.38913 ] pdfxs
295.884 306.36 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
316.12 306.36 m
(illustrates)
[2.98911 2.98911 2.98911 5.38913 4.18912 2.98911 3.58903 4.78904 2.98911 4.78904 4.18912 
] pdfxs
362.32 306.36 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
379.567 306.36 m
(trade-of)
[2.98911 3.58903 4.78904 5.38913 4.78904 3.58903 5.38913 3.58903 ] pdfxs
413.44 306.36 m
(fs)
[3.58903 4.18912 ] pdfxs
425.538 306.36 m
(between)
[5.38913 4.78904 2.98911 7.90916 4.78904 4.78904 5.38913 ] pdfxs
465.662 306.36 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
482.909 306.36 m
(de)
[5.38913 4.78904 ] pdfxs
492.967 306.36 m
(gree)
[5.38913 3.58903 4.78904 4.78904 ] pdfxs
515.604 306.36 m
(of)
[5.38913 3.58903 ] pdfxs
93.5965 292.8 m
(\003e)
[6.10906 4.78904 ] pdfxs
104.375 292.8 m
(xibility)
[5.38913 2.98911 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 ] pdfxs
138.487 292.8 m
(of)
[5.38913 3.58903 ] pdfxs
150.226 292.8 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
199.546 292.8 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
217.993 292.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
234.04 292.8 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
291.76 292.8 m
(of)
[5.38913 3.58903 ] pdfxs
303.498 292.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
319.545 292.8 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
340.971 292.8 m
(y) show
349.36 292.8 m
(generated)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 5.38913 ] pdfxs
394.382 292.8 m
(by)
[5.38913 5.38913 ] pdfxs
408.04 292.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
423.967 292.8 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
440.614 292.8 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
462.771 292.8 m
(process.)
[5.38913 3.58903 5.38913 4.78904 4.78904 4.18912 4.18912 2.74908 ] pdfxs
93.5967 257.64 m
/N9 14.3462 Tf
(2) show
115.064 257.64 m
(Redundant)
[10.3148 6.35526 7.91913 7.91913 7.91913 7.91913 7.18754 7.91913 4.79162 ] pdfxs
187.269 257.64 m
(Contr)
[10.3148 7.18754 7.91913 4.79162 6.35526 ] pdfxs
223.598 257.64 m
(ollers)
[7.18754 3.95956 3.95956 6.35526 6.35526 5.63813 ] pdfxs
93.5967 232.8 m
/N22 10.9091 Tf
(In)
[3.58903 5.38913 ] pdfxs
106.655 232.8 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
126.531 232.8 m
(section)
[4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
161.375 232.8 m
(we)
[7.90916 4.78904 ] pdfxs
178.153 232.8 m
(introduce)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 4.78904 ] pdfxs
223.295 232.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
240.662 232.8 m
(frame)
[3.58903 3.58903 4.78904 8.50908 4.78904 ] pdfxs
265.687 232.8 m
(w) show
273.476 232.8 m
(ork)
[5.38913 3.58903 5.38913 ] pdfxs
292.044 232.8 m
(of)
[5.38913 3.58903 ] pdfxs
305.102 232.8 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
352.763 232.8 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
403.283 232.8 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
423.051 232.8 m
(formally)
[3.58903 5.38913 3.58903 8.50908 4.78904 2.98911 2.98911 5.38913 ] pdfxs
464.603 232.8 m
(de\002ne)
[5.38913 4.78904 6.10906 5.38913 4.78904 ] pdfxs
495.269 232.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
512.636 232.8 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
93.5961 219.24 m
(of)
[5.38913 3.58903 ] pdfxs
106.294 219.24 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
156.585 219.24 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
194.058 219.24 m
(in)
[2.98911 5.38913 ] pdfxs
206.156 219.24 m
(them.)
[2.98911 5.38913 4.78904 8.50908 2.74908 ] pdfxs
236.821 219.24 m
(F) show
242.81 219.24 m
(or)
[5.38913 3.58903 ] pdfxs
255.509 219.24 m
(modeling)
[8.50908 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
300.301 219.24 m
(controllers,)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
353.45 219.24 m
(we)
[7.90916 4.78904 ] pdfxs
369.749 219.24 m
(use)
[5.38913 4.18912 4.78904 ] pdfxs
387.956 219.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
404.843 219.24 m
(concept)
[4.78904 5.38913 5.38913 4.78904 4.78904 5.38913 2.98911 ] pdfxs
442.447 219.24 m
(of)
[5.38913 3.58903 ] pdfxs
455.145 219.24 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
492.628 219.24 m
(options)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
93.5965 205.8 m
(\(Precup,)
[3.58903 6.10906 3.58903 4.78904 4.78904 5.38913 5.38913 2.74908 ] pdfxs
133.709 205.8 m
(2000\).)
[5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
167.844 205.8 m
(A) show
179.353 205.8 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
216.836 205.8 m
(option)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
248.211 205.8 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
267.018 205.8 m
(be)
[5.38913 4.78904 ] pdfxs
280.796 205.8 m
(vie)
[5.38913 2.98911 4.78904 ] pdfxs
293.724 205.8 m
(wed)
[7.90916 4.78904 5.38913 ] pdfxs
315.651 205.8 m
(as)
[4.78904 4.18912 ] pdfxs
328.229 205.8 m
(a) show
336.738 205.8 m
(closed)
[4.78904 2.98911 5.38913 4.18912 4.78904 5.38913 ] pdfxs
368.112 205.8 m
(loop)
[2.98911 5.38913 5.38913 5.38913 ] pdfxs
391.109 205.8 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
436.96 205.8 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
456.956 205.8 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
479.461 205.8 m
(v) show
484.73 205.8 m
(es)
[4.78904 4.18912 ] pdfxs
497.549 205.8 m
(a) show
505.938 205.8 m
(sub-)
[4.18912 5.38913 5.38913 3.58903 ] pdfxs
93.5966 192.24 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
115.153 192.24 m
(of)
[5.38913 3.58903 ] pdfxs
127.131 192.24 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
153.007 192.24 m
(kind.)
[5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
178.873 192.24 m
(F) show
184.862 192.24 m
(ormally)
[5.38913 3.58903 8.50908 4.78904 2.98911 2.98911 5.38913 ] pdfxs
217.785 192.24 m
(,) show
223.534 192.24 m
(a) show
231.203 192.24 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
267.847 192.24 m
(option)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
298.621 192.24 m
(of)
[5.38913 3.58903 ] pdfxs
310.479 192.24 m
(an)
[4.78904 5.38913 ] pdfxs
323.658 192.24 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
350.5 199.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
365.599 199.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
365.599 199.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\002\005\004)
[12.2989 0 3.39969 0 ] pdfxs
389.296 199.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
389.296 199.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
402.895 199.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
402.895 199.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\b)
[4.19962 0 ] pdfxs
416.094 199.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
416.094 199.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\t\013\n)
[4.19962 0 9.49913 0 ] pdfxs
436.668 192.24 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
446.846 192.24 m
(de\002ned)
[5.38913 4.78904 6.10906 5.38913 4.78904 5.38913 ] pdfxs
481.701 192.24 m
(by)
[5.38913 5.38913 ] pdfxs
495.479 192.24 m
(a) show
503.148 192.24 m
(tuple)
[2.98911 5.38913 5.38913 2.98911 4.78904 ] pdfxs
93.7 186.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
103.499 186.3 m
(\001) show
103.499 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\002\016\r\020\017)
[11.9989 0 3.49968 0 12.8988 0 ] pdfxs
138.096 186.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
138.096 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\021)
[3.59967 0 ] pdfxs
149.695 186.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
149.695 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\023\024\n)
[4.19962 0 6.99936 0 ] pdfxs
164.64 178.68 m
/N22 10.9091 Tf
(.) show
170.629 178.68 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
189.916 178.68 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
216.1 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\025\017)
[0 12.9988 0 ] pdfxs
237.998 186.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
237.998 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\002\005\004\026\017)
[11.9989 0 3.39969 0 6.4994 0 ] pdfxs
259.896 186.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\024\t)
[6.09944 0 ] pdfxs
265.995 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006\027\017)
[4.19962 0 8.6992 0 ] pdfxs
278.894 186.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\024\t)
[6.09944 0 ] pdfxs
284.994 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\b\030\017)
[4.19962 0 7.39932 0 ] pdfxs
302.792 186.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
302.792 186.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\t\031\017\032\n)
[4.19962 0 9.19916 0 5.79947 0 ] pdfxs
328.08 178.68 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
337.658 178.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
353.225 178.68 m
(option)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
383.4 178.68 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
409.287 178.68 m
(\(Ra)
[3.58903 7.30907 4.78904 ] pdfxs
424.734 178.68 m
(vindran,)
[5.38913 2.98911 5.38913 5.38913 3.58903 4.78904 5.38913 2.74908 ] pdfxs
463.047 178.68 m
(2003\))
[5.38913 5.38913 5.38913 5.38913 3.58903 ] pdfxs
490.712 178.68 m
(induced)
[2.98911 5.38913 5.38913 5.38913 4.78904 4.78904 5.38913 ] pdfxs
93.5995 165.12 m
(by)
[5.38913 5.38913 ] pdfxs
107.258 165.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
123.425 165.12 m
(option)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
154.2 172.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
163.2 165.12 m
/N22 10.9091 Tf
(in)
[2.98911 5.38913 ] pdfxs
174.578 165.12 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
204.1 172.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004\033\017)
[0 6.69939 0 ] pdfxs
220.299 165.101 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
231.298 172.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
238.56 165.12 m
/N22 10.9091 Tf
(,) show
244.3 172.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006\034\017)
[0 8.59921 0 ] pdfxs
262.298 165.101 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
273.197 172.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
281.76 165.12 m
/N22 10.9091 Tf
(,) show
287.5 172.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b\030\017)
[0 7.39932 0 ] pdfxs
303.12 165.12 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
313.178 165.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
329.345 165.12 m
(transition)
[2.98911 3.58903 4.78904 5.38913 4.18912 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
373.276 165.12 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
423.796 165.12 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
462.949 165.12 m
(induced)
[2.98911 5.38913 5.38913 5.38913 4.78904 4.78904 5.38913 ] pdfxs
500.193 165.12 m
(by)
[5.38913 5.38913 ] pdfxs
514.2 172.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
522.371 165.12 m
/N22 10.9091 Tf
(,) show
93.6 151.56 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
112.1 159.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t\031\017)
[0 9.19916 0 ] pdfxs
129.24 151.56 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
139.058 151.56 m
(chosen)
[4.78904 5.38913 5.38913 4.18912 4.78904 5.38913 ] pdfxs
171.873 151.56 m
(to)
[2.98911 5.38913 ] pdfxs
183.011 151.56 m
(re\003ect)
[3.58903 4.78904 6.10906 4.78904 4.78904 2.98911 ] pdfxs
212.705 151.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
228.632 151.56 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
265.156 151.56 m
(of)
[5.38913 3.58903 ] pdfxs
276.774 151.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
292.701 151.56 m
(option.)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
326.585 151.56 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
346.112 151.56 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
367.538 151.56 m
(y) show
375.687 151.56 m
(component)
[4.78904 5.38913 8.50908 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
426.708 151.56 m
(of)
[5.38913 3.58903 ] pdfxs
438.447 151.56 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
460.963 151.56 m
(options)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
495.567 151.56 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
511.494 151.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5997 138 m
(solutions)
[4.18912 5.38913 2.98911 5.38913 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
136.342 138 m
(to)
[2.98911 5.38913 ] pdfxs
148.32 138 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
165.087 138 m
(option)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
196.341 138 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
223.7 145.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\035\017)
[0 13.1988 0 ] pdfxs
245.64 138 m
/N22 10.9091 Tf
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
293.771 138 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
316.647 138 m
(them.)
[2.98911 5.38913 4.78904 8.50908 2.74908 ] pdfxs
346.713 138 m
(F) show
352.702 138 m
(or)
[5.38913 3.58903 ] pdfxs
365.16 138 m
(generality)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
407.531 138 m
(,) show
414.24 138 m
(throughout)
[2.98911 5.38913 3.58903 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 2.98911 ] pdfxs
465.491 138 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
484.647 138 m
(paper)
[5.38913 4.78904 5.38913 4.78904 3.58903 ] pdfxs
512.312 138 m
(we)
[7.90916 4.78904 ] pdfxs
93.6002 124.44 m
(refer)
[3.58903 4.78904 3.58903 4.78904 3.58903 ] pdfxs
116.826 124.44 m
(to)
[2.98911 5.38913 ] pdfxs
128.084 124.44 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
164.607 124.44 m
(options)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
199.451 124.44 m
(simply)
[4.18912 2.98911 8.50908 5.38913 2.98911 5.38913 ] pdfxs
231.785 124.44 m
(as)
[4.78904 4.18912 ] pdfxs
243.524 124.44 m
(controllers.)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
93.6007 110.88 m
(F) show
99.5897 110.88 m
(or)
[5.38913 3.58903 ] pdfxs
112.288 110.88 m
(theoretical)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 2.98911 2.98911 4.78904 4.78904 2.98911 
] pdfxs
161.968 110.88 m
(reasons,)
[3.58903 4.78904 4.78904 4.18912 5.38913 5.38913 4.18912 2.74908 ] pdfxs
201.241 110.88 m
(in)
[2.98911 5.38913 ] pdfxs
213.459 110.88 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
232.975 110.88 m
(paper)
[5.38913 4.78904 5.38913 4.78904 3.58903 ] pdfxs
260.88 110.88 m
(we)
[7.90916 4.78904 ] pdfxs
277.299 110.88 m
(assume)
[4.78904 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
313.113 110.88 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
333.109 110.88 m
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
356.826 110.88 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
402.797 110.88 m
(optimizes)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 4.78904 4.18912 ] pdfxs
448.898 110.88 m
(a) show
457.528 110.88 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
503.531 110.88 m
(cost-)
[4.78904 5.38913 4.18912 2.98911 3.58903 ] pdfxs
306.84 77.28 m
(3) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 4 4
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font B
10 dict begin
T3Defs
/FontType 3 def
/FontName /N68 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-38 
119 
115 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 31 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 41 2 setcachedevice
41 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 50 def
/ImageMatrix [41 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFFF80FFE001FFFF80FF00003FFF80F80FFC07FF80E00FFC01FF80C0FF
FFC0FF80C1FFFFE03F80C3FFFFF03F8083FFFFF81F8080FFFFFE0F80801FFFFE
0F80801FFFFE0780801FFFFF0780801FFFFF0780C00FFFFF0380C00FFFFF0380
C00FFFFF0380E01FFFFF0380F8FFFFFE0380FFFFFFFE0380FFFFFFF80380FFFF
FFE00380FFFFFE000380FFFF80000380FFFE00000780FFFE00000780FFFC0000
0F80FFF800003F80FFE000003F80FFC00000FF80FFC00007FF80FFC000FFFF80
FFC01FFFFF80FFC03FFFFF80FFC03FFF8780FFC07FFF0080FFC07FFF0080FFC0
7FFF0080FFE07FFF0000FFE07FFF0000FFE07FFF0000FFE03FFF8000FFF81FFF
C000FFFC1FFFE000FFFC1FFFE080FFFF03FFC380FFFF00FF0380FFFF80000780
FFFFF0000F80FFFFFE00FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 109 75 setcachedevice
109 0 0 75 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 109 def
/Height 75 def
/ImageMatrix [109 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000FFF83FFE00000003FFFF88000000FFF03FFE00000001FFFF88000000F
FF01FFE00000001FFFF88000000FFF00FFE00000001FFFF8FF000FFFFF00FFFF
FC003FFFFFF8FFC01FFFFF00FFFFFE00FFFFFFF8FFE03FFFFF007FFFFE003FFF
FFF8FFF83FFFFF003FFFFE003FFFFFF8FFF83FFFFF003FFFFE003FFFFFF8FFFC
3FFFFE000FFFFF803FFFFFF8FFFC1FFFFE000FFFFF801FFFFFF8FFFC1FFFFE00
0FFFFF801FFFFFF8FFFE1FFFFE0087FFFF801FFFFFF8FFFE1FFFFE00C3FFFFC0
1FFFFFF8FFFE1FFFFE00C3FFFFC01FFFFFF8FFFE0FFFFE00C1FFFFC00FFFFFF8
FFFE0FFFFE00E0FFFFC00FFFFFF8FFFF0FFFFE00F0FFFFC00FFFFFF8FFFF0FFF
FE00F0FFFFE00FFFFFF8FFFF0FFFFE00F83FFFE00FFFFFF8FFFF03FFFC00F83F
FFE007FFFFF8FFFF03FFFC01F81FFFE007FFFFF8FFFF83FFFC01FE0FFFE007FF
FFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF
81FFFC01FF87FFF003FFFFF8FFFF81FFFC01FF87FFF003FFFFF8FFFFE1FFFC01
FF83FFF003FFFFF8FFFFE1FFFC01FFC0FFF803FFFFF8FFFFE1FFFC01FFE0FFF8
03FFFFF8FFFFE0FFF803FFE0FFF800FFFFF8FFFFF0FFF803FFF87FF800FFFFF8
FFFFF0FFF803FFF83FF800FFFFF8FFFFF0FFF803FFFC3FFE00FFFFF8FFFFF07F
F803FFFC1FFE007FFFF8FFFFF07FF803FFFE1FFE007FFFF8FFFFF87FF803FFFE
1FFE007FFFF8FFFFF87FF803FFFF0FFF007FFFF8FFFFF87FF803FFFF03FF007F
FFF8FFFFF83FE003FFFF83FF003FFFF8FFFFF83FE00FFFFF81FF003FFFF8FFFF
FC3FE00FFFFFE1FF003FFFF8FFFFFC3FE00FFFFFF0FF803FFFF8FFFFFC3FE00F
FFFFF0FF803FFFF8FFFFFC0FE00FFFFFF07F801FFFF8FFFFFC0FE00FFFFFF87F
801FFFF8FFFFFE0FE00FFFFFF83F801FFFF8FFFFFE0FE00FFFFFFC3FC01FFFF8
FFFFFE0FE00FFFFFFE0FC01FFFF8FFFFFE07C01FFFFFFE0FC00FFFF8FFFFFE07
C01FFFFFFE07C00FFFF8FFFFFF87C01FFFFFFF83C00FFFF8FFFFFF87C01FFFFF
FFC3E00FFFF8FFFFFF87C01FFFFFFFC3E00FFFF8FFFFFF83C01FFFFFFFE1E003
FFF8FFFFFFC3C01FFFFFFFE1E003FFF8FFFFFFC3C01FFFFFFFE0E003FFF8FFFF
FFC3C01FFFFFFFF03803FFF8FFFFFFC1C01FFFFFFFF83801FFF8FFFFFFC1C01F
FFFFFFF83801FFF8FFFFFFE1803FFFFFFFFE1801FFF8FFFFFFE1803FFFFFFFFE
1C01FFF8FFFFFFE1803FFFFFFFFE0C01FFF8FFFFFFE0803FFFFFFFFF0400FFF8
FFFFFFE0803FFFFFFFFF8400FFF8FFFFFFF0803FFFFFFFFF8400FFF8FFFFFFF0
803FFFFFFFFFC200FFF8FFFFFFF0803FFFFFFFFFE000FFF8FFFFFFF0003FFFFF
FFFFE0007FF8FFFFFFF0003FFFFFFFFFE0003FF8FFFFE000007FFFFFFFFFF800
0008FFFFE000007FFFFFFFFFF8000008FFFFE000007FFFFFFFFFFC000008FFFF
E000007FFFFFFFFFFE000000FFFFE000007FFFFFFFFFFE000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
109 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF880FFFFF000FFFFF000FFFFE000FFFFE000FFFFE000FFFF8080FFFF8080
FFFF8080FFFF8180FFFF0180FFFF0180FFFE0180FFFE0380FFFE0380FFFE0F80
FFFC0F80FFFC0F80FFFC0F80FFF81F80FFF81F80FFF81F80FFE03F80FFE03F80
FFE03F80FFC07F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80FF80FF80
FF83FF80FF03FF80FF03FF80FE03FF80FE07FF80FE07FF80FE0FFF80F80FFF80
F80FFF80F80FFF80F01FFF80F01FFF80F01FFF80E03FFF80E03FFF80E03FFF80
C0FFFF80C0FFFF80C0FFFF80C1FFFF8081FFFF8081FFFF8081FFFF8081FFFF80
81FFFF80C1FFFF80C0FFFF80C0FFFF80C0FFFF80E03FFF80E03FFF80E03FFF80
F01FFF80F01FFF80F01FFF80F80FFF80F80FFF80F80FFF80FE0FFF80FE07FF80
FE07FF80FE03FF80FF03FF80FF03FF80FF83FF80FF80FF80FF80FF80FF80FF80
FFC0FF80FFC07F80FFC07F80FFC07F80FFE03F80FFE03F80FFE03F80FFF81F80
FFF81F80FFF81F80FFFC0F80FFFC0F80FFFC0F80FFFE0F80FFFE0380FFFE0380
FFFE0180FFFF0180FFFF0180FFFF8180FFFF8080FFFF8080FFFF8080FFFFE000
FFFFE000FFFFE000FFFFF000FFFFF000FFFFF880>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
123 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -1 68 79 setcachedevice
68 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 80 def
/ImageMatrix [68 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF0003FFFFFFFFF0FFF000003FFFFFFFF0FFF000003FFFFFFFF0FFC0000003
FFFFFFF0FE00000000FFFFFFF0FC000000001FFFFFF0F80000000007FFFFF0F0
00007FC003FFFFF0F00007FFFE03FFFFF0E0001FFFFF807FFFF08000FFFFFFE0
3FFFF08000FFFFFFE01FFFF00001FFFFFFF80FFFF00003FFFFFFFC03FFF00007
FFFFFFFE03FFF0000FFFFFFFFE01FFF0000FFFFFFFFF00FFF0000FFFFFFFFF00
FFF0003FFFFFFFFF007FF0003FFFFFFFFF807FF0803FFFFFFFFF807FF0803FFF
FFFFFF803FF0803FFFFFFFFF803FF0803FFFFFFFFF800FF0E00FFFFFFFFF800F
F0E00FFFFFFFFF800FF0F00FFFFFFFFF800FF0F807FFFFFFFF000FF0FC01FFFF
FFFF000FF0FC00FFFFFFFE000FF0FF80FFFFFFFE000FF0FFE0FFFFFFFC000FF0
FFFFFFFFFFFC003FF0FFFFFFFFFFF8003FF0FFFFFFFFFFE0007FF0FFFFFFFFFF
80007FF0FFFFFFFFFF00007FF0FFFFFFFFF80000FFF0FFFFFFFFF80001FFF0FF
FFFFFFE00003FFF0FFFFFFFF80000FFFF0FFFFFFFC00000FFFF0FFFFFFF00000
3FFFF0FFFFFF8000007FFFF0FFFFFF800003FFFFF0FFFFFF00000FFFFFF0FFFF
FE00003FFFFFF0FFFFFC00003FFFFFF0FFFFF80001FFFFFFF0FFFFE00007FFFF
FFF0FFFFE0003FFFFFFFF0FFFFE0007FFFFFFFF0FFFFE000FFFFFFFFF0FFFFC0
00FFFFFFFFF0FFFFC001FFFFFFFFF0FFFFC003FFFFFFFFF0FFFFC003FFFFFFFF
F0FFFFC003FFFFFFFFF0FFFFC00FFFFFFFFFF0FFFFC00FFFFFFF87F0FFFFE00F
FFFFFF81F0FFFFE00FFFFFFF80F0FFFFE00FFFFFFFC0F0FFFFF80FFFFFFFC030
FFFFF803FFFFFFC010FFFFF803FFFFFFC010FFFFFC03FFFFFFC000FFFFFE01FF
FFFF8000FFFFFF01FFFFFF8000FFFFFF80FFFFFF8000FFFFFFE07FFFFE0000FF
FFFFE00FFFF00000FFFFFFF001FF000000FFFFFFFC0000000010FFFFFFFE0000
000010FFFFFFFFC000000030FFFFFFFFF0000000F0FFFFFFFFF0000000F0FFFF
FFFFFF000007F0FFFFFFFFFFE0007FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -3 85 82 setcachedevice
85 0 0 85 0 -3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 85 def
/ImageMatrix [85 0 0 -85 0 85]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFFFFFFFFF8F801FFFFFFFFFFFFFFFFF8F0003FFFFFFFFFFFE01F
F8E0001FFFFFFFFFFFC003F880000FFFFFFFFFFF8000F880000FFFFFFFFFFF80
00F8800007FFFFFFFFFF800078000003FFFFFFFFFF800008000000FFFFFFFFFF
000000000000FFFFFFFFFF000C000000007FFFFFFFFF001F80000F007FFFFFFF
FF001FF8007FC03FFFFFFFFF001FF880FFE01FFFFFFFFE003FF880FFE01FFFFF
FFFE003FF881FFF80FFFFFFFFE003FF8E3FFFC03FFFFFFFE003FF8E3FFFE03FF
FFFFFE003FF8F3FFFE01FFFFFFFE007FF8FFFFFF01FFFFFFFE007FF8FFFFFF00
FFFFFFF8007FF8FFFFFF807FFFFFF8007FF8FFFFFFE07FFFFFF8007FF8FFFFFF
E07FFFFFF8007FF8FFFFFFF000000000007FF8FFFFFFF80000000000FFF8FFFF
FFF80000000000FFF8FFFFFFFC0000000000FFF8FFFFFFFC0000000000FFF8FF
FFFFFE0000000000FFF8FFFFFFFF83FFFFF800FFF8FFFFFFFF81FFFFF800FFF8
FFFFFFFF81FFFFF800FFF8FFFFFFFFC0FFFFF000FFF8FFFFFFFFE03FFFF000FF
F8FFFFFFFFE03FFFF000FFF8FFFFFFFFF03FFFF000FFF8FFFFFFFFF81FFFF000
FFF8FFFFFFFFF81FFFF000FFF8FFFFFFFFF80FFFF003FFF8FFFFFFFFFE07FFF0
03FFF8FFFFFFFFFE07FFF003FFF8FFFFFFFFFF07FFF003FFF8FFFFFFFFFF83FF
F003FFF8FFFFFFFFFF83FFF003FFF8FFFFFFFFFF80FFF003FFF8FFFFFFFFFFC0
FFF003FFF8FFFFFFFFFFC0FFF003FFF8FFFFFFFFFFE07FF003FFF8FFFFFFFFFF
F83FF003FFF8FFFFFFFFFFF83FF003FFF8FFFFFFFFFFF81FF003FFF8FFFFFFFF
FFFC1FF003FFF8FFFFFFFFFFFC1FF003FFF8FFFFFFFFFFFE0FF003FFF8FFFFFF
FFFFFE0FF003FFF8FFFFFFFFFFFE03F003FFF8FFFFFFFFFFFF03F003FFF8FFFF
FFFFFFFF81F003FFF8FFFFFFFFFFFF81F003FFF8FFFFFFFFFFFFE1F003FFF8FF
FFFFFFFFFFE0F003FFF8FFFFFFFFFFFFE0F003FFF8FFFFFFFFFFFFF07003FFF8
FFFFFFFFFFFFF07003FFF8FFFFFFFFFFFFF87003FFF8FFFFFFFFFFFFF83003FF
F8FFFFFFFFFFFFFC3003FFF8FFFFFFFFFFFFFC0003FFF8FFFFFFFFFFFFFC0003
FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFF80
03FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF
C003FFF8FFFFFFFFFFFFFFC003FFF8FFFFFFFFFFFFFFE003FFF8FFFFFFFFFFFF
FFE003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFF
FFFFF803FFF8FFFFFFFFFFFFFFFE03FFF8FFFFFFFFFFFFFFFF03FFF8FFFFFFFF
FFFFFFFFC7FFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 85 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 1 78 82 setcachedevice
78 0 0 81 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 81 def
/ImageMatrix [78 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFFFCFFC1FFFFFFFFFFFFFFFCFFC03FFFFFFFFFFFFFFCFFC0
1FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE00FFF
FFFFFFFFFFFCFFF00FFFFFFFFFFFFFFCFFF007FFFFFFFFFFFFFCFFF007FFFFFF
FFFFFFFCFFF007FFFFFFFFFFFFFCFFF807FFFFFFFFFFFFFCFFF803FFFFFFFFFF
FFFCFFFE03FFFFFFFFFFFFFCFFFE03FFFFFFFFFFFFFCFFFE00FFFFFFFFFFFFFC
FFFE00FFFFFFFFFFFFFCFFFF00FFFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF
007FFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFF803F
FFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFFC03FFFFFFFFFFFFCFFFFC01FFFFF
FFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC00801FFFFFF
FFFCFFFFE00801FFFFFFFFFCFFFFE00C0007FFFFFFFCFFFFE00E00007FFFFFFC
FFFFE00E00001FFFFFFCFFFFF803800001FFFFFCFFFFF803E000007FFFFCFFFF
F803FFE0007FFFFCFFFFF803FFFF803FFFFCFFFFFC01FFFFF807FFFCFFFFFC01
FFFFF803FFFCFFFFFC01FFFFFE00FFFCFFFFFC01FFFFFF803FFCFFFFFC01FFFF
FFE03FFCFFFFFE00FFFFFFF01FFCFFFFFE00FFFFFFF80FFCFFFFFE00FFFFFFF8
07FCFFFFFE00FFFFFFFE03FCFFFFFE007FFFFFFF00FCFFFFFE007FFFFFFF00FC
FFFFFF007FFFFFFF807CFFFFFF007FFFFFFF807CFFFFFF007FFFFFFF803CFFFF
FF007FFFFFFFC03CFFFFFF003FFFFFFFC01CFFFFFF003FFFFFFFC01CFFFFFF80
3FFFFFFFE01CFFFFFF803FFFFFFFE00CFFFFFF803FFFFFFFE00CFFFFFF803FFF
FFFFE00C1FFFFF800FFFFFFFE0001FFFFF800FFFFFFFE00003FFFF800FFFFFFF
E00000FFFFE00FFFFFFFE000007FFFE00FFFFFFFC000007FFFE00FFFFFFFC000
803FFFE00FFFFFFFC000E03FFFE00FFFFFFFC000E03FFFE007FFFFFF8000F00F
FFE007FFFFFF000CF00FFFE007FFFFFE000CF807FFE007FFFFF0000CFC01FFE0
07FFFFC0000CFE01FFF007FFFFC0001CFF803FF007FFFE00003CFFE000F007FF
8000007CFFE0000000000000007CFFF800000000000000FCFFFF000000000000
07FCFFFFC000000000001FFCFFFFFC0000000000FFFCFFFFFFF00000003FFFFC
FFFFFFF00000003FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 1 88 79 setcachedevice
88 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 88 def
/Height 78 def
/ImageMatrix [88 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFFFFFFFE00FFFFFFFC0FFFFFFFFFF8000FFFFFFE0FFFFFFFFFF8000FF
FFFFE01FFFFFFFFE00001FFFFFE00FFFFFFFFC000003FFFFE00FFFFFFFF80000
01FFFFF007FFFFFFF80000007FFFF007FFFFFFF0000F003FFFF807FFFFFFF000
3FF03FFFF807FFFFFFF000FFF80FFFF803FFFFFFE001FFFC07FFF803FFFFFFE0
01FFFC03FFFE00FFFFFF8001FFFC01FFFE00FFFFFF8003FFFE01FFFE00FFFFFF
8003FFFF81FFFF00FFFFFF8007FFFFC0FFFF007FFFFF0007FFFFF8FFFF007FFF
FF0007FFFFF8FFFF007FFFFE000FFFFFFFFFFF803FFFFE000FFFFFFFFFFF803F
FFFE000FFFFFFFFFFF803FFFFE003FFFFFFFFFFFC03FFFFC003FFFFFFFFFFFC0
1FFFFC003FFFFFFFFFFFC01FFFF8007FFFFFFFFFFFC01FFFF8007FFFFFFFFFFF
E01FFFF8007FFFFFFFFFFFE00FFFE000FFFFFFFFFFFFE00FFFE000FFFFFFFFFF
FFE00FFFC000FFFFFFFFFFFFF803FF8001FFFFFFFFFFFFF803FE0001FFFFFFFF
FFFFF803FE0003FFFFFFFFFFFFF803E00003FFFFFFFFFFFFFC01F0000FFFFFFF
FFFFFFFC01F0000FFFFFFFFFFFFFFC01F80000FFFFFFFFFFFFFC01FE00003FFF
FFFFFFFFFC01FF80003FFFFFFFFFFFFE00FFFF000FFFFFFFFFFFFE00FFFFF803
FFFFFFFFFFFE00FFFFF801FFFFFFFFFFFE00FFFFFF803FFFFFFFFFFE007FFFFF
C01FFFFFFFFFFF007FFFFFF01FFFFFFFFFFF007FFFFFF80FFFFFFFFFFF007FFF
FFFE07FFFFFFFFFF007FFFFFFE03FFFFFFFFFF003FFFFFFF00FFFFFFFFFF003F
FFFFFF007FFFFFFFFF803FFFFFFF807FFFFFFFFF803FFFFFFFC07FFFFFFFFF80
3FFFFFFFC03FFFFFFFFF803FFFFFFFC01FFFFFFFFF800FFFFFFFC01FFF1FFFFF
800FFFFFFFE00FFF1FFFFF800FFFFFFFE00FFF03FFFFE00FFFFFFFE00FFF00FF
FFE00FFFFFFFE00FFF007FFFE00FFFFFFFE003FF007FFFE00FFFFFFFE003FF80
3FFFE007FFFFFFE003FFE03FFFE007FFFFFFE003FFE03FFFE007FFFFFFC003FF
F00FFFE007FFFFFFC003FFF00FFFE007FFFFFF8003FFF807FFE007FFFFFF0003
FFFC01FFF007FFFFF80003FFFE01FFF007FFFFF8000FFFFF803FF007FFFFC000
0FFFFFE000F007FFF000001FFFFFE0000000000000001FFFFFF8000000000000
003FFFFFFF000000000000007FFFFFFFC0000000000003FFFFFFFFFC00000000
001FFFFFFFFFFFF000000007FFFFFFFFFFFFF000000007FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
88 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFF8083FFFF8083FFFF8081FFFF8081FFFF8081FFFF80C07FFF80C07FFF80
C07FFF80E07FFF80E03FFF80E03FFF80E01FFF80F01FFF80F01FFF80FC1FFF80
FC0FFF80FC0FFF80FC0FFF80FE07FF80FE07FF80FE07FF80FF01FF80FF01FF80
FF01FF80FF80FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80FFC07F80
FFF07F80FFF03F80FFF03F80FFF01F80FFF81F80FFF81F80FFFC1F80FFFC0780
FFFC0780FFFC0780FFFE0380FFFE0380FFFE0380FFFF0180FFFF0180FFFF0180
FFFFC080FFFFC080FFFFC080FFFFE080FFFFE000FFFFE000FFFFE000FFFFE000
FFFFE000FFFFE080FFFFC080FFFFC080FFFFC080FFFF0180FFFF0180FFFF0180
FFFE0380FFFE0380FFFE0380FFFC0780FFFC0780FFFC0780FFFC1F80FFF81F80
FFF81F80FFF01F80FFF03F80FFF03F80FFF07F80FFC07F80FFC07F80FFC07F80
FFC0FF80FF80FF80FF80FF80FF80FF80FF01FF80FF01FF80FF01FF80FE07FF80
FE07FF80FE07FF80FC0FFF80FC0FFF80FC0FFF80FC1FFF80F01FFF80F01FFF80
E01FFF80E03FFF80E03FFF80E07FFF80C07FFF80C07FFF80C07FFF8081FFFF80
81FFFF8081FFFF8083FFFF8083FFFF80C7FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
95 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 -1 119 82 setcachedevice
119 0 0 83 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 119 def
/Height 83 def
/ImageMatrix [119 0 0 -83 0 83]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FFFFFFFFFFFFFFFFFFFFFFFFFFEF003FFFFFFFFFFFFFFFFFFFFFFFFFEC001
FFFFFFFFFFFFFFFFFFFFF807FE00007FFFFFFFFFFFFFFFFFFFF001FE00003FFF
FFFFFFFFFFFFFFFFF0003E00003FFFFFFFFFFFFFFFFFFFF0003E00003FFFFFFF
FFFFFFFFFFFFE0000E00001FFFFFFFFFFFFFFFFFFFE0000600000FFFFFFFFFFF
FFFFFFFFE0000000000FFFFFFFFF1FFFFFFFFFE00300000007FFFFFFFF0FFFFF
FFFFE003C0C01E07FFFFFFFF0FFFFFFFFFE007FEC0FF07FFFFFFFC07FFFFFFFF
E007FEE3FF81FFFFFFFC03FFFFFFFFE007FEE3FF81FFFFFFF801FFFFFFFFE007
FEFFFF80FFFFFFF8007FFFFFFFE007FEFFFFC0FFFFFFF0003FFFFFFFE007FEFF
FFF0FFFFFFF0003FFFFFFFE007FEFFFFF0FFFFFFF0001FFFFFFFE007FEFFFFF8
7FFFFFE0000FFFFFFFE007FEFFFFF87FFFFFE00007FFFFFFE007FEFFFFF83FFF
FFC00001FFFFFFE007FEFFFFF83FFFFFC00400FFFFFFE007FEFFFFFC3FFFFFC0
0600FFFFFFE007FEFFFFFC3FFFFF000F007FFFFFE007FEFFFFFE1FFFFF000F80
3FFFFFF007FEFFFFFE1FFFFF000F801FFFFFF007FEFFFFFE07FFFE001FC007FF
FFF007FEFFFFFE07FFFE001FF003FFFFF007FEFFFFFF07FFFE007FF803FFFFF0
07FEFFFFFF07FFFE007FFC01FFFFF003FEFFFFFFC3FFFE007FFE00FFFFF003FE
FFFFFFC3FFFC007FFE00FFFFF003FEFFFFFFC1FFFC00FFFF007FFFF003FEFFFF
FFC1FFFC00FFFFC01FFFF003FEFFFFFFE1FFFC00FFFFE01FFFF003FEFFFFFFE1
FFF800FFFFF00FFFF803FEFFFFFFE0FFF801FFFFF807FFF803FEFFFFFFE0FFF8
01FFFFF803FFF803FEFFFFFFF0FFF801FFFFFC01FFF803FEFFFFFFF07FF001FF
FFFF007FF801FEFFFFFFF07FF003FFFFFF007FF801FEFFFFFFF87FF003FFFFFF
807FF801FEFFFFFFF87FF003FFFFFFC03FF801FEFFFFFFF81FF003FFFFFFC01F
F801FEFFFFFFF81FC003FFFFFFE00FFC01FEFFFFFFFC1FC007FFFFFFF007FC01
FEFFFFFFFC1FC007FFFFFFFC07FC01FEFFFFFFFC0FC007FFFFFFFE01FC01FEFF
FFFFFC0FC007FFFFFFFF00FC007EFFFFFFFC0F8007FFFFFFFF00FC007EFFFFFF
FF0F801FFFFFFFFF007C007EFFFFFFFF07801FFFFFFFFF803F007EFFFFFFFF07
801FFFFFFFFFC03F007EFFFFFFFF07801FFFFFFFFFF01F007EFFFFFFFF87003F
FFFFFFFFF807007EFFFFFFFF87003FFFFFFFFFF803003EFFFFFFFF83003FFFFF
FFFFFC01003EFFFFFFFF83003FFFFFFFFFFE01003EFFFFFFFF83003FFFFFFFFF
FE01803EFFFFFFFFC3007FFFFFFFFFFF00803EFFFFFFFFC2007FFFFFFFFFFFC0
003EFFFFFFFFC0007FFFFFFFFFFFC0003EFFFFFFFFC0007FFFFFFFFFFFE0001E
FFFFFFFFC0007FFFFFFFFFFFF0001EFFFFFFFFC0007FFFFFFFFFFFF8001EFFFF
FFFFE000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFC001EFFFFFFFF
E000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFF000EFFFFFFFFE000
FFFFFFFFFFFFFF800EFFFFFFFFE000FFFFFFFFFFFFFFC00EFFFFFFFFE001FFFF
FFFFFFFFFFE00EFFFFFFFFF001FFFFFFFFFFFFFFF00EFFFFFFFFF001FFFFFFFF
FFFFFFF00EFFFFFFFFF001FFFFFFFFFFFFFFF006FFFFFFFFF001FFFFFFFFFFFF
FFFC06FFFFFFFFF001FFFFFFFFFFFFFFFE06FFFFFFFFF007FFFFFFFFFFFFFFFF
06FFFFFFFFFC07FFFFFFFFFFFFFFFF86FFFFFFFFFC07FFFFFFFFFFFFFFFF86FF
FFFFFFFE07FFFFFFFFFFFFFFFFC6FFFFFFFFFF87FFFFFFFFFFFFFFFFF6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
119 83 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 38 43 95 setcachedevice
43 0 0 57 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 57 def
/ImageMatrix [43 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFFFE0FFE007FFFFE0FF00007FFFE0FC00000FFFE0F8000007FFE0F000
0000FFE0C0001F807FE0C000FFF87FE0C003FFFC1FE08007FFFE07E08007FFFE
03E0801FFFFF01E0003FFFFFC0E0003FFFFFE0E0007FFFFFF8E0007FFFFFFFE0
007FFFFFFFE0007FFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FF
FFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE080FFFFFFFFE080FFFFFF
FFE080FFFFFFFFE0807FFFFFFFE0807FFFFFFFE0C07FFFFFFFE0C07FFFFFFFE0
C07FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F81FFFFFFFE0F81F
FFFFFFE0FC1FFFFE1FE0FC07FFFE07E0FC07FFFE03E0FE03FFFF01E0FF01FFFF
01E0FF01FFFFC1E0FFC1FFFFC0E0FFE0FFFFE0E0FFE07FFFE060FFF01FFFE060
FFF80FFFE000FFFC0FFFE000FFFF83FFC000FFFFC07F0000FFFFC0000000FFFF
F0000000FFFFFE000000FFFFFF800060FFFFFFFC00E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 1 73 76 setcachedevice
73 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 75 def
/ImageMatrix [73 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000003FFFFFF808000000000003FFFFF8080000000000003FFFF80E000
0000000001FFFF80F00000000000007FFF80FC0000000000007FFF80FFFFF81F
FFFFE03FFF80FFFFFC0FFFFFF80FFF80FFFFFC03FFFFF807FF80FFFFFE01FFFF
F803FF80FFFFFE00FFFFFC03FF80FFFFFF00FFFFFE03FF80FFFFFF00FFFFFF81
FF80FFFFFF807FFFFFE1FF80FFFFFF807FFFFFE1FF80FFFFFF803FFFFFFFFF80
FFFFFFE03FFFFFFFFF80FFFFFFE03FFFFFFFFF80FFFFFFE00FFFFFFFFF80FFFF
FFF00FFFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF0
07FFFFFFFF80FFFFFFF807FFFFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF803FF
FFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF801FFFFFFFF80FFFFFFFC01FFFFFF
FF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80
FFFFFFFC00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFF
FFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF
803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803F
FFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFF
FF80FFFFFFFFC01FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80
FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE007FFFFFF80FFFF
FFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFF
F807FFFFFF80FFFFFFFFF803FFFFFF80FE3FFFFFF803FFFFFF80FE07FFFFFE03
FFFFFF80FE01FFFFFE00FFFFFF80FE01FFFFFE00FFFFFF80FF80FFFFFF00FFFF
FF80FF80FFFFFF007FFFFF80FF803FFFFF007FFFFF80FFC03FFFFF807FFFFF80
FFE01FFFFFC03FFFFF80FFF01FFFFFC03FFFFF80FFF807FFFFE01FFFFF80FFFE
001FFFF81FFFFF80FFFE0000000000001F80FFFF8000000000000780FFFFE000
000000000080FFFFFC00000000000080FFFFFF80000000000000FFFFFFFE0000
00000000FFFFFFFE000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -1 61 98 setcachedevice
61 0 0 99 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 99 def
/ImageMatrix [61 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8
0FFFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF883FFFFFFFFFFFFF8
83FFFFFFFFFFFFF883FFFFFFFFFFFFF881FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8
E1FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8
F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F07FFFFFFFFFFFF8
F07FF800FFFFFFF8F87FF800FFFFFFF8F87FC0000FFFFFF8F87F03FC01FFFFF8
F83E03FC003FFFF8F8380FFFC01FFFF8FC303FFFF007FFF8FC30FFFFF807FFF8
FC20FFFFFE03FFF8FC01FFFFFF00FFF8FC01FFFFFF007FF8FE01FFFFFF803FF8
FE03FFFFFFC01FF8FE03FFFFFFE01FF8FE03FFFFFFE00FF8FF83FFFFFFF80FF8
FF83FFFFFFF803F8FF83FFFFFFF803F8FF83FFFFFFFC01F8FF83FFFFFFFC01F8
FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC1FFFFFFFE00F8
FFC1FFFFFFFE00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8
FFE0FFFFFFFF00F8FFE0FFFFFFFF00F8FFF0FFFFFFFF00F8FFF0FFFFFFFF00F8
FFF0FFFFFFFF00F8FFF03FFFFFFF00F8FFF03FFFFFFF00F8FFF83FFFFFFF00F8
FFF83FFFFFFF01F8FFF83FFFFFFF01F8FFF81FFFFFFE01F8FFFE1FFFFFFE03F8
FFFE1FFFFFFE03F8FFFE1FFFFFFC0FF8FFFE0FF800380FF8FFFE0FF800381FF8
FFFF0FE000003FF8FFFF0FE1FF00FFF8FFFF0FE000003FF8FFFF07E000001FF8
FFFF07F8001803F8FFFF87FFFFFC03F8FFFF87FFFFFE01F8FFFF83FFFFFF00F8
FFFF83FFFFFF00F8FFFFC3FFFFFF8078FFFFC0FFFFFFE038FFFFC0FFFFFFE038
FFFFE0FFFFFFF038FFFFE0FFFFFFF008FFFFE07FFFFFF008FFFFF87FFFFFF008
FFFFF83FFFFFF808FFFFFC3FFFFFF808FFFFFC1FFFFFF800FFFFFE1FFFFFF800
FFFFFE0FFFFFF800FFFFFE0FFFFFF800FFFFFF03FFFFFC00FFFFFF83FFFFFC00
FFFFFFE1FFFFF808FFFFFFE0FFFFF808FFFFFFE07FFFF808FFFFFFF03FFFF008
FFFFFFF80FFFF038FFFFFFFE0FFFF078FFFFFFFF83FFE0F8FFFFFFFFE0FF01F8
FFFFFFFFE00001F8FFFFFFFFF8000FF8FFFFFFFFFF003FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
65 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
74 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
132 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/B/N68 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.6 672.12 m
/N22 10.9091 Tf
(to-goal)
[2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 2.98911 ] pdfxs
128.084 672.12 m
(problem.)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 2.74908 ] pdfxs
173.236 672.12 m
(An)
[7.90916 5.38913 ] pdfxs
190.254 672.12 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
217.8 679.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
234.262 672.12 m
/N22 10.9091 Tf
(modeling)
[8.50908 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
279.055 672.12 m
(a) show
287.564 672.12 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
333.567 672.12 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
389.236 672.12 m
(problem)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 ] pdfxs
429.12 672.12 m
(includes)
[2.98911 5.38913 4.78904 2.98911 5.38913 5.38913 4.78904 4.18912 ] pdfxs
469.113 672.12 m
(a) show
477.622 672.12 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
493.309 672.12 m
(of)
[5.38913 3.58903 ] pdfxs
506.007 672.12 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
93.6001 658.68 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
121.3 666.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
121.3 666.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001\000\003\002)
[6.79938 0 10.899 0 ] pdfxs
138.998 666.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\004)
[11.9989 0 ] pdfxs
158.28 658.68 m
/N22 10.9091 Tf
(.) show
166.429 658.68 m
(W) show
175.898 658.68 m
(e) show
184.047 658.68 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
205.003 658.68 m
(represent)
[3.58903 4.78904 5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
248.345 658.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
264.992 658.68 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
280.56 658.68 m
(of)
[5.38913 3.58903 ] pdfxs
293.018 658.68 m
(non-goal)
[5.38913 5.38913 5.38913 3.58903 5.38913 5.38913 4.78904 2.98911 ] pdfxs
335.05 658.68 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
362.705 658.68 m
(by)
[5.38913 5.38913 ] pdfxs
380.6 667.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
377.6 666.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
377.6 666.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\000)
[6.69939 0 ] pdfxs
394.699 666.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
407.198 666.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
407.198 666.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[11.099 0 ] pdfxs
428.996 666.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
428.996 666.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\000)
[6.69939 0 ] pdfxs
441.36 658.68 m
/N22 10.9091 Tf
(.) show
449.509 658.68 m
(Ev)
[6.70915 5.38913 ] pdfxs
461.487 658.68 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
478.734 658.68 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
508.789 658.68 m
(in)
[2.98911 5.38913 ] pdfxs
520.647 658.68 m
(a) show
93.6001 645.12 m
(non-goal)
[5.38913 5.38913 5.38913 3.58903 5.38913 5.38913 4.78904 2.98911 ] pdfxs
134.913 645.12 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
157.418 645.12 m
(incurs)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.18912 ] pdfxs
186.513 645.12 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
212.149 645.12 m
(ne)
[5.38913 4.78904 ] pdfxs
222.207 645.12 m
(gati)
[5.38913 4.78904 2.98911 2.98911 ] pdfxs
238.124 645.12 m
(v) show
243.393 645.12 m
(e) show
250.942 645.12 m
(re)
[3.58903 4.78904 ] pdfxs
259.08 645.12 m
(w) show
266.869 645.12 m
(ard)
[4.78904 3.58903 5.38913 ] pdfxs
283.396 645.12 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
301.603 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
317.531 645.12 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
343.636 645.12 m
(recei)
[3.58903 4.78904 4.78904 4.78904 2.98911 ] pdfxs
364.341 645.12 m
(v) show
369.61 645.12 m
(es)
[4.78904 4.18912 ] pdfxs
381.469 645.12 m
(a) show
388.898 645.12 m
(re)
[3.58903 4.78904 ] pdfxs
397.036 645.12 m
(w) show
404.825 645.12 m
(ard)
[4.78904 3.58903 5.38913 ] pdfxs
421.232 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
432.97 645.12 m
(zero)
[4.78904 4.78904 3.58903 5.38913 ] pdfxs
454.287 645.12 m
(in)
[2.98911 5.38913 ] pdfxs
465.305 645.12 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
486.621 645.12 m
(states.)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 2.74908 ] pdfxs
516.785 645.12 m
(A) show
93.5997 631.56 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
139.2 639.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
148.571 631.56 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
158.989 631.56 m
(a) show
167.018 631.56 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
212.542 631.56 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
267.731 631.56 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
309.142 631.56 m
(,) show
315.491 631.56 m
(if)
[2.98911 3.58903 ] pdfxs
325.6 639.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
338.999 639.2 m
(\017) show
347.52 631.56 m
/N22 10.9091 Tf
(optimizes)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 4.78904 4.18912 ] pdfxs
393.022 631.56 m
(a) show
400.931 631.56 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
446.454 631.56 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
501.643 631.56 m
(prob-)
[5.38913 3.58903 5.38913 5.38913 3.58903 ] pdfxs
93.5995 618 m
(lem.)
[2.98911 4.78904 8.50908 2.74908 ] pdfxs
117.556 618 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
137.683 618 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
183.174 618 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
204.01 618 m
(terminates)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 4.78904 4.18912 ] pdfxs
252.501 618 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
275.137 618 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
326.017 618 m
(one)
[5.38913 5.38913 4.78904 ] pdfxs
345.065 618 m
(in)
[2.98911 5.38913 ] pdfxs
356.683 618 m
(e) show
361.232 618 m
(v) show
366.501 618 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
383.628 618 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
405.664 618 m
(state.)
[4.18912 2.98911 4.78904 2.98911 4.78904 2.74908 ] pdfxs
433.199 618 m
(W) show
442.668 618 m
(e) show
450.697 618 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
467.104 618 m
(no)
[5.38913 5.38913 ] pdfxs
477.642 618 m
(w) show
488.911 618 m
(ready)
[3.58903 4.78904 4.78904 5.38913 5.38913 ] pdfxs
516.217 618 m
(to)
[2.98911 5.38913 ] pdfxs
93.5988 604.44 m
(formally)
[3.58903 5.38913 3.58903 8.50908 4.78904 2.98911 2.98911 5.38913 ] pdfxs
133.832 604.44 m
(introduce)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 4.78904 ] pdfxs
177.653 604.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
193.701 604.44 m
(concept)
[4.78904 5.38913 5.38913 4.78904 4.78904 5.38913 2.98911 ] pdfxs
230.224 604.44 m
(of)
[5.38913 3.58903 ] pdfxs
242.082 604.44 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
288.304 604.44 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
324.817 604.44 m
(in)
[2.98911 5.38913 ] pdfxs
336.075 604.44 m
(an)
[4.78904 5.38913 ] pdfxs
349.013 604.44 m
(MDP:)
[9.70908 7.90916 6.10906 2.98911 ] pdfxs
110.519 577.32 m
/N110 10.9091 Tf
(De\002nition)
[7.90916 4.78904 6.10906 6.10906 2.98911 3.58903 2.98911 5.38913 6.10906 ] pdfxs
159.621 577.32 m
(1:)
[5.38913 3.58903 ] pdfxs
172.919 577.32 m
/N22 10.9091 Tf
(Gi)
[7.90916 2.98911 ] pdfxs
183.577 577.32 m
(v) show
188.846 577.32 m
(en)
[4.78904 5.38913 ] pdfxs
202.145 577.32 m
(an)
[4.78904 5.38913 ] pdfxs
215.563 577.32 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
242.6 584.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
259.698 584.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
272.497 584.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\005\004)
[0 3.39969 0 ] pdfxs
283.896 584.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
283.896 584.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
297.495 584.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
297.495 584.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\b)
[4.19962 0 ] pdfxs
310.694 584.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
310.694 584.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\t\013\n)
[4.19962 0 9.49913 0 ] pdfxs
328.091 577.32 m
/N22 10.9091 Tf
(,) show
334.2 577.32 m
(a) show
342.229 577.32 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
381.9 577.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b\n\t)
[0 11.7989 0 ] pdfxs
399.798 584.899 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
399.798 584.899 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\013\016\r)
[11.5989 0 14.2987 0 ] pdfxs
427.796 584.899 m
(\017) show
435.501 577.32 m
/N22 10.9091 Tf
(,) show
441.49 577.32 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
460.297 577.32 m
(a) show
468.206 577.32 m
(deterministic)
[5.38913 4.78904 2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 2.98911 4.18912 2.98911 
2.98911 4.78904 ] pdfxs
93.5992 563.76 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
115.025 563.76 m
(y) show
124.3 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020\021\t)
[0 11.199 0 ] pdfxs
142.098 571.399 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
142.098 571.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n\013)
[11.7989 0 ] pdfxs
168.696 571.399 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
177.294 563.76 m
/N22 10.9091 Tf
(,) show
183.403 563.76 m
(let)
[2.98911 4.78904 2.98911 ] pdfxs
197.9 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\024\023\026\025)
[0 5.69948 0 6.39941 0 ] pdfxs
209.999 563.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
213.599 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
227.197 571.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
227.197 571.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032\031\034\033\036\035 \037\026!\005"$#&%\(')
[12.4989 0 8.09926 0 3.79965 0 2.79974 0 6.39941 0 6.69939 
0 4.99954 0 2.49977 0 3.59967 0 ] pdfxs
266.794 565.9 m
(%) show
282.692 571.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
287.692 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b\)\025)
[0 8.29924 0 ] pdfxs
295.991 563.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
299.591 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(+*,\027)
[4.89955 0 3.09972 0 ] pdfxs
311.99 571.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
311.99 571.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(-\006)
[8.59921 0 ] pdfxs
331.388 563.8 m
(\b.\025)
[0 8.19925 0 ] pdfxs
339.587 563.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
343.187 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
352.2 563.76 m
/N22 10.9091 Tf
(,) show
358.309 563.76 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
388.6 571.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\031.\033/\0350\037\026!\005"+#&%\(')
[0 8.19925 0 3.69966 0 2.89973 0 6.39941 0 6.69939 0 
4.89955 0 2.49977 0 3.59967 0 ] pdfxs
415.698 565.901 m
(%) show
431.596 571.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
437.096 571.4 m
(\017) show
439.995 571.4 m
(\023) show
448.2 563.76 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
458.738 563.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
475.385 563.76 m
(e) show
480.054 563.76 m
(xpectation)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
93.6004 549.12 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
116.597 549.12 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
151.2 549.12 m
(to)
[2.98911 5.38913 ] pdfxs
163.298 549.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
180.306 549.12 m
(distrib)
[5.38913 2.98911 4.18912 2.98911 3.58903 2.98911 5.38913 ] pdfxs
207.589 549.12 m
(ution)
[5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
233.935 549.12 m
(o) show
239.204 549.12 m
(v) show
244.473 549.12 m
(er)
[4.78904 3.58903 ] pdfxs
256.691 549.12 m
(ne)
[5.38913 4.78904 ] pdfxs
266.749 549.12 m
(xt)
[5.38913 2.98911 ] pdfxs
278.967 549.12 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
306.742 549.12 m
(gi)
[5.38913 2.98911 ] pdfxs
314.88 549.12 m
(v) show
320.149 549.12 m
(en)
[4.78904 5.38913 ] pdfxs
334.167 549.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
351.175 549.12 m
(current)
[4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
385.658 549.12 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
409.364 549.12 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
428.771 549.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
445.778 549.12 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
467.204 549.12 m
(y) show
476.7 549.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
483.032 549.12 m
/N22 10.9091 Tf
(.) show
492.021 549.12 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
518.4 549.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
93.6 535.56 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
104.378 535.56 m
/N24 10.9091 Tf
(ascending)
[5.38913 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
152.04 535.56 m
/N22 10.9091 Tf
(on)
[5.38913 5.38913 ] pdfxs
166.8 535.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
174.098 535.56 m
/N22 10.9091 Tf
(,) show
180.567 535.56 m
(if)
[2.98911 3.58903 ] pdfxs
190.745 535.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
206.912 535.56 m
(e) show
211.461 535.56 m
(v) show
216.73 535.56 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
234.218 535.56 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
258.1 535.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
266.323 535.56 m
/N22 10.9091 Tf
(\(e)
[3.58903 4.78904 ] pdfxs
274.581 535.56 m
(xcept)
[5.38913 4.78904 4.78904 5.38913 2.98911 ] pdfxs
301.767 535.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
318.054 535.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
334.821 535.56 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
357.097 535.56 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
384.872 535.56 m
(if)
[2.98911 3.58903 ] pdfxs
395.05 535.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
411.937 535.56 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
439.025 535.56 m
(models)
[8.50908 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
473.999 535.56 m
(a) show
482.388 535.56 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
93.5991 522 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
148.308 522 m
(problem\))
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 3.58903 ] pdfxs
190.941 522 m
(we)
[7.90916 4.78904 ] pdfxs
206.399 522 m
(ha)
[5.38913 4.78904 ] pdfxs
216.337 522 m
(v) show
221.606 522 m
(e) show
229.5 522 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
235.399 522.1 m
(\023) show
241.799 522 m
(\025) show
241.799 522 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
245.399 522 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\0272143)
[5.29951 0 7.6993 0 10.799 0 ] pdfxs
274.32 522 m
/N22 10.9091 Tf
(.) show
110.52 494.88 m
(F) show
116.509 494.88 m
(or)
[5.38913 3.58903 ] pdfxs
128.247 494.88 m
(an)
[4.78904 5.38913 ] pdfxs
141.305 494.88 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
187.647 494.88 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
209.073 494.88 m
(y) show
217.8 494.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
226.942 494.88 m
/N22 10.9091 Tf
(on)
[5.38913 5.38913 ] pdfxs
240.6 494.88 m
(a) show
248.149 494.88 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
287.6 494.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
294.862 494.88 m
/N22 10.9091 Tf
(,) show
300.251 494.88 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
339.6 494.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\0225\t)
[0 9.39914 0 ] pdfxs
354.499 502.499 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
354.499 502.499 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(4\0136\r)
[10.799 0 13.8987 0 ] pdfxs
381.196 502.499 m
(\017-7)
[0 8.59921 0 ] pdfxs
399.24 494.88 m
/N22 10.9091 Tf
(gi)
[5.38913 2.98911 ] pdfxs
407.378 494.88 m
(v) show
412.647 494.88 m
(es)
[4.78904 4.18912 ] pdfxs
424.505 494.88 m
(a) show
432.174 494.88 m
(strictly)
[4.18912 2.98911 3.58903 2.98911 4.78904 2.98911 2.98911 5.38913 ] pdfxs
465.207 494.88 m
(positi)
[5.38913 5.38913 4.18912 2.98911 2.98911 2.98911 ] pdfxs
488.902 494.88 m
(v) show
494.171 494.88 m
(e) show
501.96 494.88 m
(v) show
507.109 494.88 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
93.5998 481.32 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
112.156 481.32 m
(measures)
[8.50908 4.78904 4.78904 4.18912 5.38913 3.58903 4.78904 4.18912 ] pdfxs
154.909 481.32 m
(ho)
[5.38913 5.38913 ] pdfxs
165.447 481.32 m
(w) show
175.636 481.32 m
(much)
[8.50908 5.38913 4.78904 5.38913 ] pdfxs
202.112 481.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
217.68 481.32 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
239.105 481.32 m
(y) show
247.3 481.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
255.894 481.32 m
/N22 10.9091 Tf
(ascends)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 ] pdfxs
291.938 481.32 m
(on)
[5.38913 5.38913 ] pdfxs
305.4 481.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
314.956 481.32 m
/N22 10.9091 Tf
(in)
[2.98911 5.38913 ] pdfxs
325.614 481.32 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
348.3 481.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
353.04 481.32 m
/N22 10.9091 Tf
(.) show
358.909 481.32 m
(A) show
368.978 481.32 m
(deterministic)
[5.38913 4.78904 2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 2.98911 4.18912 2.98911 
2.98911 4.78904 ] pdfxs
428.116 481.32 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
449.542 481.32 m
(y) show
457.8 481.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
466.33 481.32 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
475.788 481.32 m
(descending)
[5.38913 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
93.5991 467.88 m
(on)
[5.38913 5.38913 ] pdfxs
107.6 467.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
114.818 467.88 m
/N22 10.9091 Tf
(,) show
120.327 467.88 m
(if)
[2.98911 3.58903 ] pdfxs
129.785 467.88 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
145.352 467.88 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
171.109 467.88 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
194.3 467.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
199.014 467.88 m
/N22 10.9091 Tf
(,) show
204.7 467.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\0228\023\026\025)
[0 5.89946 0 6.39941 0 ] pdfxs
216.999 467.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
220.599 467.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027:9;3)
[5.29951 0 7.79929 0 10.999 0 ] pdfxs
249.84 467.88 m
/N22 10.9091 Tf
(.) show
256.189 467.88 m
(In)
[3.58903 5.38913 ] pdfxs
268.047 467.88 m
(general)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 ] pdfxs
302.891 467.88 m
(we)
[7.90916 4.78904 ] pdfxs
318.469 467.88 m
(w) show
326.258 467.88 m
(ould)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
348.414 467.88 m
(lik)
[2.98911 2.98911 5.38913 ] pdfxs
359.662 467.88 m
(e) show
367.331 467.88 m
(to)
[2.98911 5.38913 ] pdfxs
378.589 467.88 m
(study)
[4.18912 2.98911 5.38913 5.38913 5.38913 ] pdfxs
405.054 467.88 m
(ho)
[5.38913 5.38913 ] pdfxs
415.592 467.88 m
(w) show
426.381 467.88 m
(a) show
433.93 467.88 m
(gi)
[5.38913 2.98911 ] pdfxs
442.069 467.88 m
(v) show
447.338 467.88 m
(en)
[4.78904 5.38913 ] pdfxs
460.516 467.88 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
481.941 467.88 m
(y) show
490.33 467.88 m
(beha)
[5.38913 4.78904 5.38913 4.78904 ] pdfxs
510.447 467.88 m
(v) show
515.716 467.88 m
(es)
[4.78904 4.18912 ] pdfxs
93.5997 454.32 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
116.236 454.32 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
150.24 454.32 m
(to)
[2.98911 5.38913 ] pdfxs
161.978 454.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
178.505 454.32 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
215.029 454.32 m
(v) show
220.178 454.32 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
241.614 454.32 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
281.127 454.32 m
(in)
[2.98911 5.38913 ] pdfxs
292.865 454.32 m
(a) show
300.894 454.32 m
(problem.)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 2.74908 ] pdfxs
344.847 454.32 m
(Thus)
[6.70915 5.38913 5.38913 4.18912 ] pdfxs
369.883 454.32 m
(we)
[7.90916 4.78904 ] pdfxs
385.821 454.32 m
(choose)
[4.78904 5.38913 5.38913 5.38913 4.18912 4.78904 ] pdfxs
419.356 454.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
435.883 454.32 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
475.7 454.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
486.196 454.32 m
/N22 10.9091 Tf
(to)
[2.98911 5.38913 ] pdfxs
497.934 454.32 m
(be)
[5.38913 4.78904 ] pdfxs
511.472 454.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.6003 440.76 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
130.244 440.76 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
153.469 440.76 m
(v) show
158.618 440.76 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
180.175 440.76 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
219.687 440.76 m
(\(i.e.,)
[3.58903 2.98911 2.74908 4.78904 2.74908 2.74908 ] pdfxs
243.1 440.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<\034=)
[0 8.09926 0 ] pdfxs
255.48 440.76 m
/N22 10.9091 Tf
(\).)
[3.58903 2.74908 ] pdfxs
267.098 440.76 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
287.345 440.76 m
(abo)
[4.78904 5.38913 5.38913 ] pdfxs
302.793 440.76 m
(v) show
308.062 440.76 m
(e) show
316.331 440.76 m
(condition)
[4.78904 5.38913 5.38913 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
360.753 440.76 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
379.2 440.76 m
(be)
[5.38913 4.78904 ] pdfxs
392.858 440.76 m
(interpreted)
[2.98911 5.38913 2.98911 4.78904 3.58903 5.38913 3.58903 4.78904 2.98911 4.78904 5.38913 
] pdfxs
443.378 440.76 m
(as)
[4.78904 4.18912 ] pdfxs
455.716 440.76 m
(follo)
[3.58903 5.38913 2.98911 2.98911 5.38913 ] pdfxs
475.822 440.76 m
(ws:)
[7.90916 4.18912 2.98911 ] pdfxs
495.709 440.76 m
(we)
[7.90916 4.78904 ] pdfxs
511.767 440.76 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
93.5999 427.2 m
(interested)
[2.98911 5.38913 2.98911 4.78904 3.58903 4.78904 4.18912 2.98911 4.78904 5.38913 ] pdfxs
138.851 427.2 m
(in)
[2.98911 5.38913 ] pdfxs
150.229 427.2 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
187.102 427.2 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
206.378 427.2 m
(in)
[2.98911 5.38913 ] pdfxs
217.756 427.2 m
(a) show
222.305 427.2 m
(v) show
227.574 427.2 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
254.159 427.2 m
(lead)
[2.98911 4.78904 4.78904 5.38913 ] pdfxs
275.236 427.2 m
(to)
[2.98911 5.38913 ] pdfxs
286.614 427.2 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
313.788 427.2 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
336.065 427.2 m
(higher)
[5.38913 2.98911 5.38913 5.38913 4.78904 3.58903 ] pdfxs
366.839 427.2 m
(v) show
371.988 427.2 m
(alues,)
[4.78904 2.98911 5.38913 4.78904 4.18912 2.74908 ] pdfxs
400.003 427.2 m
(or)
[5.38913 3.58903 ] pdfxs
411.981 427.2 m
(in)
[2.98911 5.38913 ] pdfxs
423.479 427.2 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
448.744 427.2 m
(w) show
456.533 427.2 m
(ords)
[5.38913 3.58903 5.38913 4.18912 ] pdfxs
478.21 427.2 m
/N24 10.9091 Tf
(ascend)
[5.38913 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
511.384 427.2 m
/N22 10.9091 Tf
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5994 413.64 m
(state-v)
[4.18912 2.98911 4.78904 2.98911 4.78904 3.58903 5.38913 ] pdfxs
122.083 413.64 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
143.759 413.64 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
183.392 413.64 m
(surf)
[4.18912 5.38913 3.58903 3.58903 ] pdfxs
200.028 413.64 m
(ace.)
[4.78904 4.78904 4.78904 2.74908 ] pdfxs
222.545 413.64 m
(Note)
[7.90916 5.38913 2.98911 4.78904 ] pdfxs
246.981 413.64 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
266.617 413.64 m
(De\002nition)
[7.90916 4.78904 6.10906 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
314.039 413.64 m
(1) show
322.788 413.64 m
(e) show
327.457 413.64 m
(xtends)
[5.38913 2.98911 4.78904 5.38913 5.38913 4.18912 ] pdfxs
359.192 413.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
375.839 413.64 m
(L) show
381.948 413.64 m
(yapuno)
[5.38913 4.78904 5.38913 5.38913 5.38913 5.38913 ] pdfxs
413.562 413.64 m
(v) show
422.551 413.64 m
(functions)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
466.373 413.64 m
(introduced)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 4.78904 5.38913 ] pdfxs
516.184 413.64 m
(in)
[2.98911 5.38913 ] pdfxs
93.599 400.08 m
(\(Perkins)
[3.58903 6.10906 4.78904 3.58903 5.38913 2.98911 5.38913 4.18912 ] pdfxs
132.272 400.08 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
150.359 400.08 m
(Barto,)
[7.30907 4.78904 3.58903 2.98911 5.38913 2.74908 ] pdfxs
179.694 400.08 m
(2001\))
[5.38913 5.38913 5.38913 5.38913 3.58903 ] pdfxs
207.479 400.08 m
(to)
[2.98911 5.38913 ] pdfxs
218.377 400.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
234.064 400.08 m
(case)
[4.78904 4.78904 4.18912 4.78904 ] pdfxs
255.141 400.08 m
(of)
[5.38913 3.58903 ] pdfxs
266.639 400.08 m
(non-deterministic)
[5.38913 5.38913 5.38913 3.58903 5.38913 4.78904 2.98911 4.78904 3.58903 8.50908 2.98911 
5.38913 2.98911 4.18912 2.98911 2.98911 4.78904 ] pdfxs
345.773 400.08 m
(MDPs.)
[9.70908 7.90916 6.10906 4.18912 2.74908 ] pdfxs
379.679 400.08 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
398.966 400.08 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
443.77 400.08 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
461.857 400.08 m
(maximum)
[8.50908 4.78904 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
508.46 400.08 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
93.5984 386.52 m
(at)
[4.78904 2.98911 ] pdfxs
104.137 386.52 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
133.482 386.52 m
(an)
[4.78904 5.38913 ] pdfxs
146.54 386.52 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
192.762 386.52 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
214.187 386.52 m
(y) show
222.576 386.52 m
(in)
[2.98911 5.38913 ] pdfxs
233.715 386.52 m
(a) show
238.264 386.52 m
(v) show
243.533 386.52 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
269.878 386.52 m
(ascends)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 ] pdfxs
306.7 386.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
314.899 386.6 m
(=) show
321.96 386.52 m
/N22 10.9091 Tf
(are)
[4.78904 3.58903 4.78904 ] pdfxs
338.007 386.52 m
(gi)
[5.38913 2.98911 ] pdfxs
346.145 386.52 m
(v) show
351.414 386.52 m
(en)
[4.78904 5.38913 ] pdfxs
364.473 386.52 m
(by:)
[5.38913 5.38913 2.98911 ] pdfxs
110.52 359.4 m
/N110 10.9091 Tf
(De\002nition)
[7.90916 4.78904 6.10906 6.10906 2.98911 3.58903 2.98911 5.38913 6.10906 ] pdfxs
160.221 359.4 m
(2:)
[5.38913 3.58903 ] pdfxs
174.84 359.4 m
/N22 10.9091 Tf
(Assume)
[7.90916 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
213.654 359.4 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
233.77 359.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
250.778 359.4 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
272.203 359.4 m
(y) show
281.9 359.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
291.993 359.4 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
303.011 359.4 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
350.193 359.4 m
(on)
[5.38913 5.38913 ] pdfxs
364.931 359.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
381.938 359.4 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
418.942 359.4 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
442.648 359.4 m
(v) show
447.797 359.4 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
469.713 359.4 m
(function)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
510 359.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
518.599 359.5 m
(=) show
522.84 359.4 m
/N22 10.9091 Tf
(.) show
93.6 345.84 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
119.5 345.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
129.196 345.84 m
/N22 10.9091 Tf
(ascends)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 ] pdfxs
166.32 345.84 m
(on)
[5.38913 5.38913 ] pdfxs
180.7 345.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
188.599 345.9 m
(=) show
196.2 345.84 m
/N22 10.9091 Tf
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
218.836 345.84 m
(a) show
226.985 345.84 m
(f) show
230.454 345.84 m
(actor)
[4.78904 4.78904 2.98911 5.38913 3.58903 ] pdfxs
255.48 345.84 m
(at)
[4.78904 2.98911 ] pdfxs
266.618 345.84 m
(least)
[2.98911 4.78904 4.78904 4.18912 2.98911 ] pdfxs
290.2 345.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(>) show
296.803 345.84 m
/N22 10.9091 Tf
(,) show
303.032 345.84 m
(if)
[2.98911 3.58903 ] pdfxs
312.97 345.84 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
329.017 345.84 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
343.144 345.84 m
(non-goal)
[5.38913 5.38913 5.38913 3.58903 5.38913 5.38913 4.78904 2.98911 ] pdfxs
385.057 345.84 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
413 345.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
413 345.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(@?)
[9.59912 0 ] pdfxs
436.798 355.099 m
(\004) show
433.798 353.399 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
440.497 353.499 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
446.16 345.84 m
/N22 10.9091 Tf
(,) show
452.5 345.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
458.099 345.9 m
(\023) show
464.599 345.8 m
(\025) show
464.599 345.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
468.199 345.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027CBD>E1F3)
[5.19952 0 8.6992 0 12.0989 0 11.4989 0 11.9989 0 ] pdfxs
522.84 345.84 m
/N22 10.9091 Tf
(.) show
93.6 332.28 m
(W) show
103.069 332.28 m
(e) show
110.978 332.28 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
131.574 332.28 m
(de\002ne)
[5.38913 4.78904 6.10906 5.38913 4.78904 ] pdfxs
161.28 332.28 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
177.687 332.28 m
(guaranteed)
[5.38913 5.38913 4.78904 3.58903 4.78904 5.38913 2.98911 4.78904 4.78904 5.38913 ] pdfxs
228.578 332.28 m
(e) show
233.247 332.28 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
270.13 332.28 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
302.825 332.28 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
322.221 332.28 m
(of)
[5.38913 3.58903 ] pdfxs
334.7 332.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
344.16 332.28 m
/N22 10.9091 Tf
(as:)
[4.78904 4.18912 2.98911 ] pdfxs
360.7 332.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(GH\023)
[0 6.5994 0 ] pdfxs
377.099 339.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
377.099 339.899 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(JILK,M)
[11.8989 0 9.09917 0 3.09972 0 ] pdfxs
407.296 342.099 m
(\033ONQP)
[0 4.29961 0 7.19934 0 ] pdfxs
416.695 335 m
(R\030S)
[0 5.29951 0 ] pdfxs
429.394 332.3 m
(\022\024\023\026\025)
[0 5.69948 0 6.39941 0 ] pdfxs
441.493 332.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
445.092 332.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
454.08 332.28 m
/N22 10.9091 Tf
(.) show
461.269 332.28 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
481.276 332.28 m
(maximum)
[8.50908 4.78904 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
93.6003 318.84 m
(possible)
[5.38913 5.38913 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
132.033 318.84 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
154.538 318.84 m
(v) show
159.688 318.84 m
(able)
[4.78904 5.38913 2.98911 4.78904 ] pdfxs
180.764 318.84 m
(e) show
185.433 318.84 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
221.956 318.84 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
254.291 318.84 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
273.327 318.84 m
(of)
[5.38913 3.58903 ] pdfxs
285.5 318.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
294.425 318.84 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
304.483 318.84 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
324.719 318.84 m
(gi)
[5.38913 2.98911 ] pdfxs
332.858 318.84 m
(v) show
338.127 318.84 m
(en)
[4.78904 5.38913 ] pdfxs
351.185 318.84 m
(by)
[5.38913 5.38913 ] pdfxs
365 318.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(T) show
371.399 318.9 m
(\023) show
380.299 326.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
380.299 326.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(UILVAW)
[11.299 0 9.09917 0 5.19952 0 ] pdfxs
412.096 328.599 m
(\033ON)
[0 4.29961 0 ] pdfxs
423.595 328.499 m
(P) show
421.495 321.5 m
(R) show
426.794 321.4 m
(S) show
434.094 318.8 m
(\022) show
439.793 318.9 m
(\023) show
446.193 318.8 m
(\025) show
446.193 318.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
449.792 318.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
458.76 318.84 m
/N22 10.9091 Tf
(.) show
110.52 291.72 m
(One)
[7.90916 5.38913 4.78904 ] pdfxs
131.967 291.72 m
(problem)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 ] pdfxs
171.491 291.72 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
194.007 291.72 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
240.829 291.72 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
277.942 291.72 m
(is)
[2.98911 4.18912 ] pdfxs
288.36 291.72 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
307.996 291.72 m
(De\002nition)
[7.90916 4.78904 6.10906 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
355.418 291.72 m
(1) show
364.047 291.72 m
(ignores)
[2.98911 5.38913 5.38913 5.38913 3.58903 4.78904 4.18912 ] pdfxs
399.371 291.72 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
415.898 291.72 m
(immediate)
[2.98911 8.50908 8.50908 4.78904 5.38913 2.98911 4.78904 2.98911 4.78904 ] pdfxs
465.12 291.72 m
(re)
[3.58903 4.78904 ] pdfxs
473.258 291.72 m
(w) show
481.047 291.72 m
(ard)
[4.78904 3.58903 5.38913 ] pdfxs
498.174 291.72 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
93.5999 278.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
109.287 278.16 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
135.273 278.16 m
(recei)
[3.58903 4.78904 4.78904 4.78904 2.98911 ] pdfxs
155.978 278.16 m
(v) show
161.247 278.16 m
(es.)
[4.78904 4.18912 2.74908 ] pdfxs
176.454 278.16 m
(F) show
182.443 278.16 m
(or)
[5.38913 3.58903 ] pdfxs
193.821 278.16 m
(e) show
198.49 278.16 m
(xample)
[5.38913 4.78904 8.50908 5.38913 2.98911 4.78904 ] pdfxs
232.865 278.16 m
(it)
[2.98911 2.98911 ] pdfxs
241.243 278.16 m
(could)
[4.78904 5.38913 5.38913 2.98911 5.38913 ] pdfxs
267.828 278.16 m
(be)
[5.38913 4.78904 ] pdfxs
280.527 278.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
296.214 278.16 m
(case)
[4.78904 4.78904 4.18912 4.78904 ] pdfxs
317.29 278.16 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
335.967 278.16 m
(as)
[4.78904 4.18912 ] pdfxs
347.465 278.16 m
(a) show
354.654 278.16 m
(result)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 ] pdfxs
381.228 278.16 m
(of)
[5.38913 3.58903 ] pdfxs
392.727 278.16 m
(e) show
397.396 278.16 m
(x) show
402.665 278.16 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
437.028 278.16 m
(an)
[4.78904 5.38913 ] pdfxs
449.726 278.16 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
495.588 278.16 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
517.014 278.16 m
(y) show
521.683 278.16 m
(,) show
93.5996 264.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
110.247 264.6 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
137.312 264.6 m
(transitions)
[2.98911 3.58903 4.78904 5.38913 4.18912 2.98911 2.98911 2.98911 5.38913 5.38913 4.18912 
] pdfxs
186.032 264.6 m
(to)
[2.98911 5.38913 ] pdfxs
197.89 264.6 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
224.247 264.6 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
247.592 264.6 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
270.348 264.6 m
(a) show
278.497 264.6 m
(higher)
[5.38913 2.98911 5.38913 5.38913 4.78904 3.58903 ] pdfxs
309.752 264.6 m
(v) show
314.901 264.6 m
(alue,)
[4.78904 2.98911 5.38913 4.78904 2.74908 ] pdfxs
339.326 264.6 m
(b) show
344.475 264.6 m
(ut)
[5.38913 2.98911 ] pdfxs
356.454 264.6 m
(recei)
[3.58903 4.78904 4.78904 4.78904 2.98911 ] pdfxs
377.159 264.6 m
(v) show
382.428 264.6 m
(es)
[4.78904 4.18912 ] pdfxs
395.006 264.6 m
(a) show
403.275 264.6 m
(huge)
[5.38913 5.38913 5.38913 4.78904 ] pdfxs
427.831 264.6 m
(ne)
[5.38913 4.78904 ] pdfxs
437.89 264.6 m
(gati)
[5.38913 4.78904 2.98911 2.98911 ] pdfxs
453.806 264.6 m
(v) show
459.075 264.6 m
(e) show
467.464 264.6 m
(re)
[3.58903 4.78904 ] pdfxs
475.602 264.6 m
(w) show
483.391 264.6 m
(ard.)
[4.78904 3.58903 5.38913 2.74908 ] pdfxs
505.308 264.6 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
93.5985 251.04 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
111.446 251.04 m
(be)
[5.38913 4.78904 ] pdfxs
124.624 251.04 m
(counterbalanced)
[4.78904 5.38913 5.38913 5.38913 2.98911 4.78904 3.58903 5.38913 4.78904 2.98911 4.78904 
5.38913 4.78904 4.78904 5.38913 ] pdfxs
198.74 251.04 m
(by)
[5.38913 5.38913 ] pdfxs
212.398 251.04 m
(adding)
[4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
244.733 251.04 m
(a) show
252.402 251.04 m
(second)
[4.18912 4.78904 4.78904 5.38913 5.38913 5.38913 ] pdfxs
285.456 251.04 m
(condition)
[4.78904 5.38913 5.38913 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
329.398 251.04 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
348.434 251.04 m
(k) show
353.703 251.04 m
(eeps)
[4.78904 4.78904 5.38913 4.18912 ] pdfxs
375.98 251.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
392.027 251.04 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
438.369 251.04 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
475.001 251.04 m
(close)
[4.78904 2.98911 5.38913 4.18912 4.78904 ] pdfxs
500.147 251.04 m
(to)
[2.98911 5.38913 ] pdfxs
511.405 251.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5979 237.48 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
129.641 237.48 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
151.067 237.48 m
(y:)
[5.38913 2.98911 ] pdfxs
110.518 210.36 m
/N110 10.9091 Tf
(De\002nition)
[7.90916 4.78904 6.10906 6.10906 2.98911 3.58903 2.98911 5.38913 6.10906 ] pdfxs
159.02 210.36 m
(3:)
[5.38913 3.58903 ] pdfxs
171.358 210.36 m
/N22 10.9091 Tf
(Gi)
[7.90916 2.98911 ] pdfxs
182.016 210.36 m
(v) show
187.285 210.36 m
(en)
[4.78904 5.38913 ] pdfxs
199.983 210.36 m
(a) show
207.292 210.36 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
252.216 210.36 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
306.685 210.36 m
(problem)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 ] pdfxs
345.489 210.36 m
(modeled)
[8.50908 5.38913 5.38913 4.78904 2.98911 4.78904 5.38913 ] pdfxs
385.492 210.36 m
(by)
[5.38913 5.38913 ] pdfxs
398.79 210.36 m
(an)
[4.78904 5.38913 ] pdfxs
411.609 210.36 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
438 218 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
454.299 218 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
454.299 218 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\002\005\004)
[11.9989 0 3.39969 0 ] pdfxs
477.796 218 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
477.796 218 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
491.295 218 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
491.295 218 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\b)
[4.19962 0 ] pdfxs
504.494 218 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
504.494 218 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\t)
[4.19962 0 ] pdfxs
518.293 218 m
(\n) show
521.978 210.36 m
/N22 10.9091 Tf
(,) show
93.6 196.8 m
(a) show
100.909 196.8 m
(deterministic)
[5.38913 4.78904 2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 2.98911 4.18912 2.98911 
2.98911 4.78904 ] pdfxs
160.167 196.8 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
181.593 196.8 m
(y) show
189.9 196.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
198.742 196.8 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
208.8 196.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
212.88 196.8 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
262.451 196.8 m
(on)
[5.38913 5.38913 ] pdfxs
276 204.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
291.349 196.8 m
/N22 10.9091 Tf
(if:)
[2.98911 3.58903 2.98911 ] pdfxs
304.276 196.8 m
(\(1\))
[3.58903 5.38913 3.58903 ] pdfxs
319.7 196.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
328.483 196.8 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
338.181 196.8 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
384.163 196.8 m
(on)
[5.38913 5.38913 ] pdfxs
397.7 196.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
405.999 196.9 m
(=) show
410.4 196.8 m
/N22 10.9091 Tf
(,) show
415.549 196.8 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
433.756 196.8 m
(\(2\))
[3.58903 5.38913 3.58903 ] pdfxs
449.2 196.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
455.804 196.8 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
465.502 196.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
481.189 196.8 m
(maximum)
[8.50908 4.78904 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
93.6004 183.24 m
(v) show
98.7495 183.24 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
119.586 183.24 m
(in)
[2.98911 5.38913 ] pdfxs
130.844 183.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
146.891 183.24 m
(interv)
[2.98911 5.38913 2.98911 4.78904 3.58903 5.38913 ] pdfxs
171.786 183.24 m
(al)
[4.78904 2.98911 ] pdfxs
183.6 183.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025Y3)
[0 3.49968 0 ] pdfxs
192.999 190.799 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
192.999 190.799 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(+Z\\[)
[4.89955 0 4.59958 0 ] pdfxs
208.243 183.24 m
/N22 10.9091 Tf
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
230.999 183.24 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
250 183.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(]) show
256.599 183.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
256.599 183.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(^?)
[8.49922 0 ] pdfxs
274.698 190.799 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
284.716 183.24 m
/N22 10.9091 Tf
(we)
[7.90916 4.78904 ] pdfxs
300.054 183.24 m
(ha)
[5.38913 4.78904 ] pdfxs
309.992 183.24 m
(v) show
315.261 183.24 m
(e) show
324.4 183.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(_) show
332.699 183.3 m
(=) show
337.999 183.2 m
(\025) show
337.999 183.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
347.098 190.799 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
351.398 183.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020`\025)
[0 7.29933 0 ] pdfxs
358.697 183.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
362.297 183.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027a\027:B)
[5.29951 0 4.19962 0 7.79929 0 ] pdfxs
392.094 196.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
Q
q
43.2 0 0 -4.79999 3914.28 1862.28 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
392.1 183 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
397 183.2 m
(<) show
404.799 183.3 m
(=) show
410.098 183.2 m
(\025) show
410.098 183.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
413.698 183.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
422.64 183.24 m
/N22 10.9091 Tf
(.) show
110.52 156.24 m
(Here,)
[7.90916 4.78904 3.58903 4.78904 2.74908 ] pdfxs
137.1 156.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
143.465 156.24 m
/N22 10.9091 Tf
(measures)
[8.50908 4.78904 4.78904 4.18912 5.38913 3.58903 4.78904 4.18912 ] pdfxs
186.218 156.24 m
(ho)
[5.38913 5.38913 ] pdfxs
196.756 156.24 m
(w) show
206.945 156.24 m
(close)
[4.78904 2.98911 5.38913 4.18912 4.78904 ] pdfxs
231.49 156.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
247.058 156.24 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
292.799 156.24 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
314.225 156.24 m
(y) show
322.4 156.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
331.014 156.24 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
340.472 156.24 m
(to)
[2.98911 5.38913 ] pdfxs
351.13 156.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
366.697 156.24 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
402.261 156.24 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
423.687 156.24 m
(y) show
428.355 156.24 m
(.) show
434.465 156.24 m
(F) show
440.454 156.24 m
(or)
[5.38913 3.58903 ] pdfxs
451.712 156.24 m
(an)
[4.78904 5.38913 ] pdfxs
461.77 156.24 m
(y) show
470 156.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
474 156.24 m
/N22 10.9091 Tf
(,) show
479.029 156.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
494.596 156.24 m
(second)
[4.18912 4.78904 4.78904 5.38913 5.38913 5.38913 ] pdfxs
93.6003 142.68 m
(condition)
[4.78904 5.38913 5.38913 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
138.622 142.68 m
(assures)
[4.78904 4.18912 4.18912 5.38913 3.58903 4.78904 4.18912 ] pdfxs
173.946 142.68 m
(that:)
[2.98911 5.38913 4.78904 2.98911 2.98911 ] pdfxs
199 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(]) show
199 142.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\000)
[6.4994 0 ] pdfxs
205.499 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(c?)
[10.699 0 ] pdfxs
227.997 150.299 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
235.997 150.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
241.296 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(_.=d\025)
[0 8.19925 0 5.39951 0 ] pdfxs
254.895 142.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
264.094 150.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
268.394 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020`\025)
[0 7.29933 0 ] pdfxs
275.693 142.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
279.293 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027a\027e?gf)
[5.19952 0 4.19962 0 9.89909 0 12.5988 0 ] pdfxs
315.089 156.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
Q
q
43.2 0 0 -4.79999 3143.88 1456.68 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
315.1 142.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
320 142.7 m
(<:=d\025)
[0 7.79929 0 5.39951 0 ] pdfxs
333.198 142.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
336.798 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
346.497 150.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
350.697 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<:=d\025)
[0 7.79929 0 5.39951 0 ] pdfxs
363.895 142.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
367.495 142.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
376.494 150.299 m
([) show
383.4 142.68 m
/N22 10.9091 Tf
(\(note)
[3.58903 5.38913 5.38913 2.98911 4.78904 ] pdfxs
409.625 142.68 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
429.862 142.68 m
(because)
[5.38913 4.78904 4.78904 4.78904 5.38913 4.18912 4.78904 ] pdfxs
468.5 150.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
485.225 142.68 m
/N22 10.9091 Tf
(models)
[8.50908 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
520.559 142.68 m
(a) show
93.5995 129.12 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
138.763 129.12 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
193.592 129.12 m
(problem,)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 2.74908 ] pdfxs
235.505 129.12 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
249.272 129.12 m
(v) show
254.421 129.12 m
(alues)
[4.78904 2.98911 5.38913 4.78904 4.18912 ] pdfxs
279.566 129.12 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
295.734 129.12 m
(ne)
[5.38913 4.78904 ] pdfxs
305.792 129.12 m
(gati)
[5.38913 4.78904 2.98911 2.98911 ] pdfxs
321.708 129.12 m
(v) show
326.977 129.12 m
(e\).)
[4.78904 3.58903 2.74908 ] pdfxs
342.065 129.12 m
(Naturally)
[7.90916 4.78904 2.98911 5.38913 3.58903 4.78904 2.98911 2.98911 5.38913 ] pdfxs
386.006 129.12 m
(we)
[7.90916 4.78904 ] pdfxs
401.465 129.12 m
(often)
[5.38913 3.58903 2.98911 4.78904 5.38913 ] pdfxs
426.73 129.12 m
(prefer)
[5.38913 3.58903 4.78904 3.58903 4.78904 3.58903 ] pdfxs
455.464 129.12 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
492.217 129.12 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
511.373 129.12 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
94 115.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
98.04 115.56 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
148.331 115.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
164.7 115.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
171.818 115.56 m
/N22 10.9091 Tf
(v) show
176.967 115.56 m
(alues)
[4.78904 2.98911 5.38913 4.78904 4.18912 ] pdfxs
202.592 115.56 m
(close)
[4.78904 2.98911 5.38913 4.18912 4.78904 ] pdfxs
228.098 115.56 m
(to)
[2.98911 5.38913 ] pdfxs
240.6 123.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
245.116 115.56 m
/N22 10.9091 Tf
(.) show
252.665 115.56 m
(In)
[3.58903 5.38913 ] pdfxs
264.883 115.56 m
(section)
[4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
298.887 115.56 m
(3) show
307.516 115.56 m
(we)
[7.90916 4.78904 ] pdfxs
323.334 115.56 m
(deri)
[5.38913 4.78904 3.58903 2.98911 ] pdfxs
339.85 115.56 m
(v) show
345.119 115.56 m
(e) show
353.268 115.56 m
(a) show
361.298 115.56 m
(lo)
[2.98911 5.38913 ] pdfxs
369.436 115.56 m
(wer)
[7.90916 4.78904 3.58903 ] pdfxs
388.963 115.56 m
(bound)
[5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
419.388 115.56 m
(on)
[5.38913 5.38913 ] pdfxs
433.8 115.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
441.087 115.56 m
/N22 10.9091 Tf
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
464.203 115.56 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
483.72 115.56 m
(no)
[5.38913 5.38913 ] pdfxs
497.738 115.56 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
519.163 115.56 m
(y) show
306.84 77.28 m
(4) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 5 5
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font B
10 dict begin
T3Defs
/FontType 3 def
/FontName /N68 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-38 
119 
115 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 31 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 41 2 setcachedevice
41 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 50 def
/ImageMatrix [41 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFFF80FFE001FFFF80FF00003FFF80F80FFC07FF80E00FFC01FF80C0FF
FFC0FF80C1FFFFE03F80C3FFFFF03F8083FFFFF81F8080FFFFFE0F80801FFFFE
0F80801FFFFE0780801FFFFF0780801FFFFF0780C00FFFFF0380C00FFFFF0380
C00FFFFF0380E01FFFFF0380F8FFFFFE0380FFFFFFFE0380FFFFFFF80380FFFF
FFE00380FFFFFE000380FFFF80000380FFFE00000780FFFE00000780FFFC0000
0F80FFF800003F80FFE000003F80FFC00000FF80FFC00007FF80FFC000FFFF80
FFC01FFFFF80FFC03FFFFF80FFC03FFF8780FFC07FFF0080FFC07FFF0080FFC0
7FFF0080FFE07FFF0000FFE07FFF0000FFE07FFF0000FFE03FFF8000FFF81FFF
C000FFFC1FFFE000FFFC1FFFE080FFFF03FFC380FFFF00FF0380FFFF80000780
FFFFF0000F80FFFFFE00FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 109 75 setcachedevice
109 0 0 75 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 109 def
/Height 75 def
/ImageMatrix [109 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000FFF83FFE00000003FFFF88000000FFF03FFE00000001FFFF88000000F
FF01FFE00000001FFFF88000000FFF00FFE00000001FFFF8FF000FFFFF00FFFF
FC003FFFFFF8FFC01FFFFF00FFFFFE00FFFFFFF8FFE03FFFFF007FFFFE003FFF
FFF8FFF83FFFFF003FFFFE003FFFFFF8FFF83FFFFF003FFFFE003FFFFFF8FFFC
3FFFFE000FFFFF803FFFFFF8FFFC1FFFFE000FFFFF801FFFFFF8FFFC1FFFFE00
0FFFFF801FFFFFF8FFFE1FFFFE0087FFFF801FFFFFF8FFFE1FFFFE00C3FFFFC0
1FFFFFF8FFFE1FFFFE00C3FFFFC01FFFFFF8FFFE0FFFFE00C1FFFFC00FFFFFF8
FFFE0FFFFE00E0FFFFC00FFFFFF8FFFF0FFFFE00F0FFFFC00FFFFFF8FFFF0FFF
FE00F0FFFFE00FFFFFF8FFFF0FFFFE00F83FFFE00FFFFFF8FFFF03FFFC00F83F
FFE007FFFFF8FFFF03FFFC01F81FFFE007FFFFF8FFFF83FFFC01FE0FFFE007FF
FFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF
81FFFC01FF87FFF003FFFFF8FFFF81FFFC01FF87FFF003FFFFF8FFFFE1FFFC01
FF83FFF003FFFFF8FFFFE1FFFC01FFC0FFF803FFFFF8FFFFE1FFFC01FFE0FFF8
03FFFFF8FFFFE0FFF803FFE0FFF800FFFFF8FFFFF0FFF803FFF87FF800FFFFF8
FFFFF0FFF803FFF83FF800FFFFF8FFFFF0FFF803FFFC3FFE00FFFFF8FFFFF07F
F803FFFC1FFE007FFFF8FFFFF07FF803FFFE1FFE007FFFF8FFFFF87FF803FFFE
1FFE007FFFF8FFFFF87FF803FFFF0FFF007FFFF8FFFFF87FF803FFFF03FF007F
FFF8FFFFF83FE003FFFF83FF003FFFF8FFFFF83FE00FFFFF81FF003FFFF8FFFF
FC3FE00FFFFFE1FF003FFFF8FFFFFC3FE00FFFFFF0FF803FFFF8FFFFFC3FE00F
FFFFF0FF803FFFF8FFFFFC0FE00FFFFFF07F801FFFF8FFFFFC0FE00FFFFFF87F
801FFFF8FFFFFE0FE00FFFFFF83F801FFFF8FFFFFE0FE00FFFFFFC3FC01FFFF8
FFFFFE0FE00FFFFFFE0FC01FFFF8FFFFFE07C01FFFFFFE0FC00FFFF8FFFFFE07
C01FFFFFFE07C00FFFF8FFFFFF87C01FFFFFFF83C00FFFF8FFFFFF87C01FFFFF
FFC3E00FFFF8FFFFFF87C01FFFFFFFC3E00FFFF8FFFFFF83C01FFFFFFFE1E003
FFF8FFFFFFC3C01FFFFFFFE1E003FFF8FFFFFFC3C01FFFFFFFE0E003FFF8FFFF
FFC3C01FFFFFFFF03803FFF8FFFFFFC1C01FFFFFFFF83801FFF8FFFFFFC1C01F
FFFFFFF83801FFF8FFFFFFE1803FFFFFFFFE1801FFF8FFFFFFE1803FFFFFFFFE
1C01FFF8FFFFFFE1803FFFFFFFFE0C01FFF8FFFFFFE0803FFFFFFFFF0400FFF8
FFFFFFE0803FFFFFFFFF8400FFF8FFFFFFF0803FFFFFFFFF8400FFF8FFFFFFF0
803FFFFFFFFFC200FFF8FFFFFFF0803FFFFFFFFFE000FFF8FFFFFFF0003FFFFF
FFFFE0007FF8FFFFFFF0003FFFFFFFFFE0003FF8FFFFE000007FFFFFFFFFF800
0008FFFFE000007FFFFFFFFFF8000008FFFFE000007FFFFFFFFFFC000008FFFF
E000007FFFFFFFFFFE000000FFFFE000007FFFFFFFFFFE000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
109 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF880FFFFF000FFFFF000FFFFE000FFFFE000FFFFE000FFFF8080FFFF8080
FFFF8080FFFF8180FFFF0180FFFF0180FFFE0180FFFE0380FFFE0380FFFE0F80
FFFC0F80FFFC0F80FFFC0F80FFF81F80FFF81F80FFF81F80FFE03F80FFE03F80
FFE03F80FFC07F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80FF80FF80
FF83FF80FF03FF80FF03FF80FE03FF80FE07FF80FE07FF80FE0FFF80F80FFF80
F80FFF80F80FFF80F01FFF80F01FFF80F01FFF80E03FFF80E03FFF80E03FFF80
C0FFFF80C0FFFF80C0FFFF80C1FFFF8081FFFF8081FFFF8081FFFF8081FFFF80
81FFFF80C1FFFF80C0FFFF80C0FFFF80C0FFFF80E03FFF80E03FFF80E03FFF80
F01FFF80F01FFF80F01FFF80F80FFF80F80FFF80F80FFF80FE0FFF80FE07FF80
FE07FF80FE03FF80FF03FF80FF03FF80FF83FF80FF80FF80FF80FF80FF80FF80
FFC0FF80FFC07F80FFC07F80FFC07F80FFE03F80FFE03F80FFE03F80FFF81F80
FFF81F80FFF81F80FFFC0F80FFFC0F80FFFC0F80FFFE0F80FFFE0380FFFE0380
FFFE0180FFFF0180FFFF0180FFFF8180FFFF8080FFFF8080FFFF8080FFFFE000
FFFFE000FFFFE000FFFFF000FFFFF000FFFFF880>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
123 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -1 68 79 setcachedevice
68 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 80 def
/ImageMatrix [68 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF0003FFFFFFFFF0FFF000003FFFFFFFF0FFF000003FFFFFFFF0FFC0000003
FFFFFFF0FE00000000FFFFFFF0FC000000001FFFFFF0F80000000007FFFFF0F0
00007FC003FFFFF0F00007FFFE03FFFFF0E0001FFFFF807FFFF08000FFFFFFE0
3FFFF08000FFFFFFE01FFFF00001FFFFFFF80FFFF00003FFFFFFFC03FFF00007
FFFFFFFE03FFF0000FFFFFFFFE01FFF0000FFFFFFFFF00FFF0000FFFFFFFFF00
FFF0003FFFFFFFFF007FF0003FFFFFFFFF807FF0803FFFFFFFFF807FF0803FFF
FFFFFF803FF0803FFFFFFFFF803FF0803FFFFFFFFF800FF0E00FFFFFFFFF800F
F0E00FFFFFFFFF800FF0F00FFFFFFFFF800FF0F807FFFFFFFF000FF0FC01FFFF
FFFF000FF0FC00FFFFFFFE000FF0FF80FFFFFFFE000FF0FFE0FFFFFFFC000FF0
FFFFFFFFFFFC003FF0FFFFFFFFFFF8003FF0FFFFFFFFFFE0007FF0FFFFFFFFFF
80007FF0FFFFFFFFFF00007FF0FFFFFFFFF80000FFF0FFFFFFFFF80001FFF0FF
FFFFFFE00003FFF0FFFFFFFF80000FFFF0FFFFFFFC00000FFFF0FFFFFFF00000
3FFFF0FFFFFF8000007FFFF0FFFFFF800003FFFFF0FFFFFF00000FFFFFF0FFFF
FE00003FFFFFF0FFFFFC00003FFFFFF0FFFFF80001FFFFFFF0FFFFE00007FFFF
FFF0FFFFE0003FFFFFFFF0FFFFE0007FFFFFFFF0FFFFE000FFFFFFFFF0FFFFC0
00FFFFFFFFF0FFFFC001FFFFFFFFF0FFFFC003FFFFFFFFF0FFFFC003FFFFFFFF
F0FFFFC003FFFFFFFFF0FFFFC00FFFFFFFFFF0FFFFC00FFFFFFF87F0FFFFE00F
FFFFFF81F0FFFFE00FFFFFFF80F0FFFFE00FFFFFFFC0F0FFFFF80FFFFFFFC030
FFFFF803FFFFFFC010FFFFF803FFFFFFC010FFFFFC03FFFFFFC000FFFFFE01FF
FFFF8000FFFFFF01FFFFFF8000FFFFFF80FFFFFF8000FFFFFFE07FFFFE0000FF
FFFFE00FFFF00000FFFFFFF001FF000000FFFFFFFC0000000010FFFFFFFE0000
000010FFFFFFFFC000000030FFFFFFFFF0000000F0FFFFFFFFF0000000F0FFFF
FFFFFF000007F0FFFFFFFFFFE0007FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -3 85 82 setcachedevice
85 0 0 85 0 -3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 85 def
/ImageMatrix [85 0 0 -85 0 85]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFFFFFFFFF8F801FFFFFFFFFFFFFFFFF8F0003FFFFFFFFFFFE01F
F8E0001FFFFFFFFFFFC003F880000FFFFFFFFFFF8000F880000FFFFFFFFFFF80
00F8800007FFFFFFFFFF800078000003FFFFFFFFFF800008000000FFFFFFFFFF
000000000000FFFFFFFFFF000C000000007FFFFFFFFF001F80000F007FFFFFFF
FF001FF8007FC03FFFFFFFFF001FF880FFE01FFFFFFFFE003FF880FFE01FFFFF
FFFE003FF881FFF80FFFFFFFFE003FF8E3FFFC03FFFFFFFE003FF8E3FFFE03FF
FFFFFE003FF8F3FFFE01FFFFFFFE007FF8FFFFFF01FFFFFFFE007FF8FFFFFF00
FFFFFFF8007FF8FFFFFF807FFFFFF8007FF8FFFFFFE07FFFFFF8007FF8FFFFFF
E07FFFFFF8007FF8FFFFFFF000000000007FF8FFFFFFF80000000000FFF8FFFF
FFF80000000000FFF8FFFFFFFC0000000000FFF8FFFFFFFC0000000000FFF8FF
FFFFFE0000000000FFF8FFFFFFFF83FFFFF800FFF8FFFFFFFF81FFFFF800FFF8
FFFFFFFF81FFFFF800FFF8FFFFFFFFC0FFFFF000FFF8FFFFFFFFE03FFFF000FF
F8FFFFFFFFE03FFFF000FFF8FFFFFFFFF03FFFF000FFF8FFFFFFFFF81FFFF000
FFF8FFFFFFFFF81FFFF000FFF8FFFFFFFFF80FFFF003FFF8FFFFFFFFFE07FFF0
03FFF8FFFFFFFFFE07FFF003FFF8FFFFFFFFFF07FFF003FFF8FFFFFFFFFF83FF
F003FFF8FFFFFFFFFF83FFF003FFF8FFFFFFFFFF80FFF003FFF8FFFFFFFFFFC0
FFF003FFF8FFFFFFFFFFC0FFF003FFF8FFFFFFFFFFE07FF003FFF8FFFFFFFFFF
F83FF003FFF8FFFFFFFFFFF83FF003FFF8FFFFFFFFFFF81FF003FFF8FFFFFFFF
FFFC1FF003FFF8FFFFFFFFFFFC1FF003FFF8FFFFFFFFFFFE0FF003FFF8FFFFFF
FFFFFE0FF003FFF8FFFFFFFFFFFE03F003FFF8FFFFFFFFFFFF03F003FFF8FFFF
FFFFFFFF81F003FFF8FFFFFFFFFFFF81F003FFF8FFFFFFFFFFFFE1F003FFF8FF
FFFFFFFFFFE0F003FFF8FFFFFFFFFFFFE0F003FFF8FFFFFFFFFFFFF07003FFF8
FFFFFFFFFFFFF07003FFF8FFFFFFFFFFFFF87003FFF8FFFFFFFFFFFFF83003FF
F8FFFFFFFFFFFFFC3003FFF8FFFFFFFFFFFFFC0003FFF8FFFFFFFFFFFFFC0003
FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFF80
03FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF
C003FFF8FFFFFFFFFFFFFFC003FFF8FFFFFFFFFFFFFFE003FFF8FFFFFFFFFFFF
FFE003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFF
FFFFF803FFF8FFFFFFFFFFFFFFFE03FFF8FFFFFFFFFFFFFFFF03FFF8FFFFFFFF
FFFFFFFFC7FFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 85 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 1 78 82 setcachedevice
78 0 0 81 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 81 def
/ImageMatrix [78 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFFFCFFC1FFFFFFFFFFFFFFFCFFC03FFFFFFFFFFFFFFCFFC0
1FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE00FFF
FFFFFFFFFFFCFFF00FFFFFFFFFFFFFFCFFF007FFFFFFFFFFFFFCFFF007FFFFFF
FFFFFFFCFFF007FFFFFFFFFFFFFCFFF807FFFFFFFFFFFFFCFFF803FFFFFFFFFF
FFFCFFFE03FFFFFFFFFFFFFCFFFE03FFFFFFFFFFFFFCFFFE00FFFFFFFFFFFFFC
FFFE00FFFFFFFFFFFFFCFFFF00FFFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF
007FFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFF803F
FFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFFC03FFFFFFFFFFFFCFFFFC01FFFFF
FFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC00801FFFFFF
FFFCFFFFE00801FFFFFFFFFCFFFFE00C0007FFFFFFFCFFFFE00E00007FFFFFFC
FFFFE00E00001FFFFFFCFFFFF803800001FFFFFCFFFFF803E000007FFFFCFFFF
F803FFE0007FFFFCFFFFF803FFFF803FFFFCFFFFFC01FFFFF807FFFCFFFFFC01
FFFFF803FFFCFFFFFC01FFFFFE00FFFCFFFFFC01FFFFFF803FFCFFFFFC01FFFF
FFE03FFCFFFFFE00FFFFFFF01FFCFFFFFE00FFFFFFF80FFCFFFFFE00FFFFFFF8
07FCFFFFFE00FFFFFFFE03FCFFFFFE007FFFFFFF00FCFFFFFE007FFFFFFF00FC
FFFFFF007FFFFFFF807CFFFFFF007FFFFFFF807CFFFFFF007FFFFFFF803CFFFF
FF007FFFFFFFC03CFFFFFF003FFFFFFFC01CFFFFFF003FFFFFFFC01CFFFFFF80
3FFFFFFFE01CFFFFFF803FFFFFFFE00CFFFFFF803FFFFFFFE00CFFFFFF803FFF
FFFFE00C1FFFFF800FFFFFFFE0001FFFFF800FFFFFFFE00003FFFF800FFFFFFF
E00000FFFFE00FFFFFFFE000007FFFE00FFFFFFFC000007FFFE00FFFFFFFC000
803FFFE00FFFFFFFC000E03FFFE00FFFFFFFC000E03FFFE007FFFFFF8000F00F
FFE007FFFFFF000CF00FFFE007FFFFFE000CF807FFE007FFFFF0000CFC01FFE0
07FFFFC0000CFE01FFF007FFFFC0001CFF803FF007FFFE00003CFFE000F007FF
8000007CFFE0000000000000007CFFF800000000000000FCFFFF000000000000
07FCFFFFC000000000001FFCFFFFFC0000000000FFFCFFFFFFF00000003FFFFC
FFFFFFF00000003FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 1 88 79 setcachedevice
88 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 88 def
/Height 78 def
/ImageMatrix [88 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFFFFFFFE00FFFFFFFC0FFFFFFFFFF8000FFFFFFE0FFFFFFFFFF8000FF
FFFFE01FFFFFFFFE00001FFFFFE00FFFFFFFFC000003FFFFE00FFFFFFFF80000
01FFFFF007FFFFFFF80000007FFFF007FFFFFFF0000F003FFFF807FFFFFFF000
3FF03FFFF807FFFFFFF000FFF80FFFF803FFFFFFE001FFFC07FFF803FFFFFFE0
01FFFC03FFFE00FFFFFF8001FFFC01FFFE00FFFFFF8003FFFE01FFFE00FFFFFF
8003FFFF81FFFF00FFFFFF8007FFFFC0FFFF007FFFFF0007FFFFF8FFFF007FFF
FF0007FFFFF8FFFF007FFFFE000FFFFFFFFFFF803FFFFE000FFFFFFFFFFF803F
FFFE000FFFFFFFFFFF803FFFFE003FFFFFFFFFFFC03FFFFC003FFFFFFFFFFFC0
1FFFFC003FFFFFFFFFFFC01FFFF8007FFFFFFFFFFFC01FFFF8007FFFFFFFFFFF
E01FFFF8007FFFFFFFFFFFE00FFFE000FFFFFFFFFFFFE00FFFE000FFFFFFFFFF
FFE00FFFC000FFFFFFFFFFFFF803FF8001FFFFFFFFFFFFF803FE0001FFFFFFFF
FFFFF803FE0003FFFFFFFFFFFFF803E00003FFFFFFFFFFFFFC01F0000FFFFFFF
FFFFFFFC01F0000FFFFFFFFFFFFFFC01F80000FFFFFFFFFFFFFC01FE00003FFF
FFFFFFFFFC01FF80003FFFFFFFFFFFFE00FFFF000FFFFFFFFFFFFE00FFFFF803
FFFFFFFFFFFE00FFFFF801FFFFFFFFFFFE00FFFFFF803FFFFFFFFFFE007FFFFF
C01FFFFFFFFFFF007FFFFFF01FFFFFFFFFFF007FFFFFF80FFFFFFFFFFF007FFF
FFFE07FFFFFFFFFF007FFFFFFE03FFFFFFFFFF003FFFFFFF00FFFFFFFFFF003F
FFFFFF007FFFFFFFFF803FFFFFFF807FFFFFFFFF803FFFFFFFC07FFFFFFFFF80
3FFFFFFFC03FFFFFFFFF803FFFFFFFC01FFFFFFFFF800FFFFFFFC01FFF1FFFFF
800FFFFFFFE00FFF1FFFFF800FFFFFFFE00FFF03FFFFE00FFFFFFFE00FFF00FF
FFE00FFFFFFFE00FFF007FFFE00FFFFFFFE003FF007FFFE00FFFFFFFE003FF80
3FFFE007FFFFFFE003FFE03FFFE007FFFFFFE003FFE03FFFE007FFFFFFC003FF
F00FFFE007FFFFFFC003FFF00FFFE007FFFFFF8003FFF807FFE007FFFFFF0003
FFFC01FFF007FFFFF80003FFFE01FFF007FFFFF8000FFFFF803FF007FFFFC000
0FFFFFE000F007FFF000001FFFFFE0000000000000001FFFFFF8000000000000
003FFFFFFF000000000000007FFFFFFFC0000000000003FFFFFFFFFC00000000
001FFFFFFFFFFFF000000007FFFFFFFFFFFFF000000007FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
88 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFF8083FFFF8083FFFF8081FFFF8081FFFF8081FFFF80C07FFF80C07FFF80
C07FFF80E07FFF80E03FFF80E03FFF80E01FFF80F01FFF80F01FFF80FC1FFF80
FC0FFF80FC0FFF80FC0FFF80FE07FF80FE07FF80FE07FF80FF01FF80FF01FF80
FF01FF80FF80FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80FFC07F80
FFF07F80FFF03F80FFF03F80FFF01F80FFF81F80FFF81F80FFFC1F80FFFC0780
FFFC0780FFFC0780FFFE0380FFFE0380FFFE0380FFFF0180FFFF0180FFFF0180
FFFFC080FFFFC080FFFFC080FFFFE080FFFFE000FFFFE000FFFFE000FFFFE000
FFFFE000FFFFE080FFFFC080FFFFC080FFFFC080FFFF0180FFFF0180FFFF0180
FFFE0380FFFE0380FFFE0380FFFC0780FFFC0780FFFC0780FFFC1F80FFF81F80
FFF81F80FFF01F80FFF03F80FFF03F80FFF07F80FFC07F80FFC07F80FFC07F80
FFC0FF80FF80FF80FF80FF80FF80FF80FF01FF80FF01FF80FF01FF80FE07FF80
FE07FF80FE07FF80FC0FFF80FC0FFF80FC0FFF80FC1FFF80F01FFF80F01FFF80
E01FFF80E03FFF80E03FFF80E07FFF80C07FFF80C07FFF80C07FFF8081FFFF80
81FFFF8081FFFF8083FFFF8083FFFF80C7FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
95 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 -1 119 82 setcachedevice
119 0 0 83 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 119 def
/Height 83 def
/ImageMatrix [119 0 0 -83 0 83]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FFFFFFFFFFFFFFFFFFFFFFFFFFEF003FFFFFFFFFFFFFFFFFFFFFFFFFEC001
FFFFFFFFFFFFFFFFFFFFF807FE00007FFFFFFFFFFFFFFFFFFFF001FE00003FFF
FFFFFFFFFFFFFFFFF0003E00003FFFFFFFFFFFFFFFFFFFF0003E00003FFFFFFF
FFFFFFFFFFFFE0000E00001FFFFFFFFFFFFFFFFFFFE0000600000FFFFFFFFFFF
FFFFFFFFE0000000000FFFFFFFFF1FFFFFFFFFE00300000007FFFFFFFF0FFFFF
FFFFE003C0C01E07FFFFFFFF0FFFFFFFFFE007FEC0FF07FFFFFFFC07FFFFFFFF
E007FEE3FF81FFFFFFFC03FFFFFFFFE007FEE3FF81FFFFFFF801FFFFFFFFE007
FEFFFF80FFFFFFF8007FFFFFFFE007FEFFFFC0FFFFFFF0003FFFFFFFE007FEFF
FFF0FFFFFFF0003FFFFFFFE007FEFFFFF0FFFFFFF0001FFFFFFFE007FEFFFFF8
7FFFFFE0000FFFFFFFE007FEFFFFF87FFFFFE00007FFFFFFE007FEFFFFF83FFF
FFC00001FFFFFFE007FEFFFFF83FFFFFC00400FFFFFFE007FEFFFFFC3FFFFFC0
0600FFFFFFE007FEFFFFFC3FFFFF000F007FFFFFE007FEFFFFFE1FFFFF000F80
3FFFFFF007FEFFFFFE1FFFFF000F801FFFFFF007FEFFFFFE07FFFE001FC007FF
FFF007FEFFFFFE07FFFE001FF003FFFFF007FEFFFFFF07FFFE007FF803FFFFF0
07FEFFFFFF07FFFE007FFC01FFFFF003FEFFFFFFC3FFFE007FFE00FFFFF003FE
FFFFFFC3FFFC007FFE00FFFFF003FEFFFFFFC1FFFC00FFFF007FFFF003FEFFFF
FFC1FFFC00FFFFC01FFFF003FEFFFFFFE1FFFC00FFFFE01FFFF003FEFFFFFFE1
FFF800FFFFF00FFFF803FEFFFFFFE0FFF801FFFFF807FFF803FEFFFFFFE0FFF8
01FFFFF803FFF803FEFFFFFFF0FFF801FFFFFC01FFF803FEFFFFFFF07FF001FF
FFFF007FF801FEFFFFFFF07FF003FFFFFF007FF801FEFFFFFFF87FF003FFFFFF
807FF801FEFFFFFFF87FF003FFFFFFC03FF801FEFFFFFFF81FF003FFFFFFC01F
F801FEFFFFFFF81FC003FFFFFFE00FFC01FEFFFFFFFC1FC007FFFFFFF007FC01
FEFFFFFFFC1FC007FFFFFFFC07FC01FEFFFFFFFC0FC007FFFFFFFE01FC01FEFF
FFFFFC0FC007FFFFFFFF00FC007EFFFFFFFC0F8007FFFFFFFF00FC007EFFFFFF
FF0F801FFFFFFFFF007C007EFFFFFFFF07801FFFFFFFFF803F007EFFFFFFFF07
801FFFFFFFFFC03F007EFFFFFFFF07801FFFFFFFFFF01F007EFFFFFFFF87003F
FFFFFFFFF807007EFFFFFFFF87003FFFFFFFFFF803003EFFFFFFFF83003FFFFF
FFFFFC01003EFFFFFFFF83003FFFFFFFFFFE01003EFFFFFFFF83003FFFFFFFFF
FE01803EFFFFFFFFC3007FFFFFFFFFFF00803EFFFFFFFFC2007FFFFFFFFFFFC0
003EFFFFFFFFC0007FFFFFFFFFFFC0003EFFFFFFFFC0007FFFFFFFFFFFE0001E
FFFFFFFFC0007FFFFFFFFFFFF0001EFFFFFFFFC0007FFFFFFFFFFFF8001EFFFF
FFFFE000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFC001EFFFFFFFF
E000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFF000EFFFFFFFFE000
FFFFFFFFFFFFFF800EFFFFFFFFE000FFFFFFFFFFFFFFC00EFFFFFFFFE001FFFF
FFFFFFFFFFE00EFFFFFFFFF001FFFFFFFFFFFFFFF00EFFFFFFFFF001FFFFFFFF
FFFFFFF00EFFFFFFFFF001FFFFFFFFFFFFFFF006FFFFFFFFF001FFFFFFFFFFFF
FFFC06FFFFFFFFF001FFFFFFFFFFFFFFFE06FFFFFFFFF007FFFFFFFFFFFFFFFF
06FFFFFFFFFC07FFFFFFFFFFFFFFFF86FFFFFFFFFC07FFFFFFFFFFFFFFFF86FF
FFFFFFFE07FFFFFFFFFFFFFFFFC6FFFFFFFFFF87FFFFFFFFFFFFFFFFF6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
119 83 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 38 43 95 setcachedevice
43 0 0 57 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 57 def
/ImageMatrix [43 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFFFE0FFE007FFFFE0FF00007FFFE0FC00000FFFE0F8000007FFE0F000
0000FFE0C0001F807FE0C000FFF87FE0C003FFFC1FE08007FFFE07E08007FFFE
03E0801FFFFF01E0003FFFFFC0E0003FFFFFE0E0007FFFFFF8E0007FFFFFFFE0
007FFFFFFFE0007FFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FF
FFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE080FFFFFFFFE080FFFFFF
FFE080FFFFFFFFE0807FFFFFFFE0807FFFFFFFE0C07FFFFFFFE0C07FFFFFFFE0
C07FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F81FFFFFFFE0F81F
FFFFFFE0FC1FFFFE1FE0FC07FFFE07E0FC07FFFE03E0FE03FFFF01E0FF01FFFF
01E0FF01FFFFC1E0FFC1FFFFC0E0FFE0FFFFE0E0FFE07FFFE060FFF01FFFE060
FFF80FFFE000FFFC0FFFE000FFFF83FFC000FFFFC07F0000FFFFC0000000FFFF
F0000000FFFFFE000000FFFFFF800060FFFFFFFC00E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 1 73 76 setcachedevice
73 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 75 def
/ImageMatrix [73 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000003FFFFFF808000000000003FFFFF8080000000000003FFFF80E000
0000000001FFFF80F00000000000007FFF80FC0000000000007FFF80FFFFF81F
FFFFE03FFF80FFFFFC0FFFFFF80FFF80FFFFFC03FFFFF807FF80FFFFFE01FFFF
F803FF80FFFFFE00FFFFFC03FF80FFFFFF00FFFFFE03FF80FFFFFF00FFFFFF81
FF80FFFFFF807FFFFFE1FF80FFFFFF807FFFFFE1FF80FFFFFF803FFFFFFFFF80
FFFFFFE03FFFFFFFFF80FFFFFFE03FFFFFFFFF80FFFFFFE00FFFFFFFFF80FFFF
FFF00FFFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF0
07FFFFFFFF80FFFFFFF807FFFFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF803FF
FFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF801FFFFFFFF80FFFFFFFC01FFFFFF
FF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80
FFFFFFFC00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFF
FFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF
803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803F
FFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFF
FF80FFFFFFFFC01FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80
FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE007FFFFFF80FFFF
FFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFF
F807FFFFFF80FFFFFFFFF803FFFFFF80FE3FFFFFF803FFFFFF80FE07FFFFFE03
FFFFFF80FE01FFFFFE00FFFFFF80FE01FFFFFE00FFFFFF80FF80FFFFFF00FFFF
FF80FF80FFFFFF007FFFFF80FF803FFFFF007FFFFF80FFC03FFFFF807FFFFF80
FFE01FFFFFC03FFFFF80FFF01FFFFFC03FFFFF80FFF807FFFFE01FFFFF80FFFE
001FFFF81FFFFF80FFFE0000000000001F80FFFF8000000000000780FFFFE000
000000000080FFFFFC00000000000080FFFFFF80000000000000FFFFFFFE0000
00000000FFFFFFFE000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -1 61 98 setcachedevice
61 0 0 99 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 99 def
/ImageMatrix [61 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8
0FFFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF883FFFFFFFFFFFFF8
83FFFFFFFFFFFFF883FFFFFFFFFFFFF881FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8
E1FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8
F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F07FFFFFFFFFFFF8
F07FF800FFFFFFF8F87FF800FFFFFFF8F87FC0000FFFFFF8F87F03FC01FFFFF8
F83E03FC003FFFF8F8380FFFC01FFFF8FC303FFFF007FFF8FC30FFFFF807FFF8
FC20FFFFFE03FFF8FC01FFFFFF00FFF8FC01FFFFFF007FF8FE01FFFFFF803FF8
FE03FFFFFFC01FF8FE03FFFFFFE01FF8FE03FFFFFFE00FF8FF83FFFFFFF80FF8
FF83FFFFFFF803F8FF83FFFFFFF803F8FF83FFFFFFFC01F8FF83FFFFFFFC01F8
FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC1FFFFFFFE00F8
FFC1FFFFFFFE00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8
FFE0FFFFFFFF00F8FFE0FFFFFFFF00F8FFF0FFFFFFFF00F8FFF0FFFFFFFF00F8
FFF0FFFFFFFF00F8FFF03FFFFFFF00F8FFF03FFFFFFF00F8FFF83FFFFFFF00F8
FFF83FFFFFFF01F8FFF83FFFFFFF01F8FFF81FFFFFFE01F8FFFE1FFFFFFE03F8
FFFE1FFFFFFE03F8FFFE1FFFFFFC0FF8FFFE0FF800380FF8FFFE0FF800381FF8
FFFF0FE000003FF8FFFF0FE1FF00FFF8FFFF0FE000003FF8FFFF07E000001FF8
FFFF07F8001803F8FFFF87FFFFFC03F8FFFF87FFFFFE01F8FFFF83FFFFFF00F8
FFFF83FFFFFF00F8FFFFC3FFFFFF8078FFFFC0FFFFFFE038FFFFC0FFFFFFE038
FFFFE0FFFFFFF038FFFFE0FFFFFFF008FFFFE07FFFFFF008FFFFF87FFFFFF008
FFFFF83FFFFFF808FFFFFC3FFFFFF808FFFFFC1FFFFFF800FFFFFE1FFFFFF800
FFFFFE0FFFFFF800FFFFFE0FFFFFF800FFFFFF03FFFFFC00FFFFFF83FFFFFC00
FFFFFFE1FFFFF808FFFFFFE0FFFFF808FFFFFFE07FFFF808FFFFFFF03FFFF008
FFFFFFF80FFFF038FFFFFFFE0FFFF078FFFFFFFF83FFE0F8FFFFFFFFE0FF01F8
FFFFFFFFE00001F8FFFFFFFFF8000FF8FFFFFFFFFF003FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
65 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
74 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
132 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/B/N68 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%BeginResource: font D
10 dict begin
T3Defs
/FontType 3 def
/FontName /N196 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-56 
76 
179 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 60 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 63 23 setcachedevice
63 0 0 71 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 71 def
/ImageMatrix [63 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFC03FE8FFFFFFFFFC000FE03FFFFFFFF00007E01FFFFFFFE00703E
81FFFFFFFE00783EE0FFFFFFF800FC3EF07FFFFFF803FC0EF03FFFFFF003FC0E
F03FFFFFF003FE3EF80FFFFFF007FFFEFC0FFFFFF007FFFEFE07FFFFE00FFFFE
FF83FFFFE00FFFFEFF81FFFFC00FFFFEFFC0FFFFC00FFFFEFFE03FFFC01FFFFE
FFF03FFFC01FFFFEFFF81FFF803FFFFEFFFE0FFF803FFFFEFFFE0FFF803FFFFE
FFFE07FE003FFFFEFFFF03FE00FFFFFEFFFF83FE00FFFFFEFFFFC0FE00FFFFFE
FFFFE07C01FFFFFEFFFFE03C01FFFFFEFFFFF81C01FFFFFEFFFFFC0801FFFFFE
FFFFFE0803FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFE
FFFFFF8007FFFFFEFFFFFFE007FFFFFEFFFFFFF007FFFFFEFFFFFFF007FFFFFE
FFFFFFE00FFFFFFEFFFFFFE007FFFFFEFFFFFFE003FFFFFEFFFFFFE001FFFFFE
FFFFFFE001FFFFFEFFFFFF8020FFFFFEFFFFFF80203FFFFEFFFFFF80203FFFFE
FFFFFF00701FFFFEFFFFFF00780FFFFEFFFFFF007E0FFFFEFFFFFF007F07FFFE
FFFFFE00FF83FFFEFFFFFE00FF80FFFEFFFFFE00FFC07FFEFFFFFC00FFE03FFE
FFFFFC01FFF83FFEFFFFFC01FFFC1FFEFFFFFC01FFFC0FFEFFFFF801FFFC0FFE
FFFFF803FFFE03FEFFFFE003FFFF01FEFFFFE00FFFFF81FEFFFFE00FFFFFE0FE
FFFFC00FFFFFF07EFFFFC00FFFFFF03EF8FF801FFFFFF80EF87F801FFFFFFC06
F87F803FFFFFFE06F87F003FFFFFFF82F83F007FFFFFFF80F80E007FFFFFFF80
FC0000FFFFFFFFC0FE0007FFFFFFFFE0FFC01FFFFFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 46 53 setcachedevice
46 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 53 def
/ImageMatrix [46 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFF80FC1FFFFFFC001C0FFFFFF8000C0FFFFFF0070C8FFFFFF00F8C83FF
FFE00F84E1FFFFE03FCCE0FFFFE03FCCF07FFF803FFCF83FFF807FFCFC3FFF80
7FFCFE0FFF00FFFCFF87FF00FFFCFF83FF00FFFCFFC1FE01FFFCFFE0FE01FFFC
FFF0FE01FFFCFFF83E03FFFCFFFE3C03FFFCFFFE1C03FFFCFFFE0C03FFFCFFFF
000FFFFCFFFF800FFFFCFFFFC00FFFFCFFFFE01FFFFCFFFFE01FFFFCFFFFE01F
FFFCFFFFE01FFFFCFFFFE01FFFFCFFFFC00FFFFCFFFFC003FFFCFFFFC001FFFC
FFFF8060FFFCFFFF8070FFFCFFFF8078FFFCFFFF80F87FFCFFFF00FC3FFCFFFF
00FC0FFCFFFF00FE07FCFFFE03FF83FCFFFE03FFC3FCFFFE03FFE1FCFFF807FF
F0FCFFF807FFF03CFFF007FFF81CEFF00FFFFE0CEFF00FFFFF0C83E00FFFFF84
E3E01FFFFFC4E1C01FFFFFC0E0003FFFFFC0F000FFFFFFE0FC03FFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -16 23 11 setcachedevice
23 0 0 27 0 -16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 23 def
/Height 27 def
/ImageMatrix [23 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF803EFF803EFC000EF01F86E01F86C0FFF6C1FFFEC1FFFE01FFFE03FFFE03FF
FE03FFFE03FFFE03FFFE01FFFE00000E00000E00000EC0FFFEC0FFFEE0FFFEF0
7FFEF01FFEF803FEFC0000FF8000FFF000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
23 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 34 44 setcachedevice
34 0 0 44 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 44 def
/ImageMatrix [34 0 0 -44 0 44]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE001FFFC0FE001FFFC0F80003FFC0F000007FC0E000003FC0E003F80FC0800F
FE03C0803FFF03C0807FFF81C0007FFFE0C0007FFFE04000FFFFF04000FFFFFF
C001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001
FFFFFFC001FFFFFFC081FFFFFFC080FFFFFFC080FFFFFFC080FFFFFFC080FFFF
FFC0E0FFFFFFC0E07FFFFFC0E07FFF1FC0F03FFF03C0F03FFF01C0F83FFF81C0
F80FFF80C0FC0FFFE0C0FC07FFE040FE03FFE040FF81FFF000FFC1FFF000FFF0
3FF000FFF80FE000FFF8000000FFFF000000FFFFC00000FFFFFC0040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 44 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -77 65 3 setcachedevice
65 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 65 def
/Height 80 def
/ImageMatrix [65 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF8007FFFFFFF8087FF00000FFFFFFF8087FF00000FFFFFFF8083FC000001
FFFFFF8081F803FF007FFFFF8081C003FF001FFFFF8080003FFFC007FFFF80C0
00FFFFF803FFFF80C001FFFFFC03FFFF80C007FFFFFE01FFFF80C00FFFFFFF00
FFFF80C00FFFFFFF007FFF80E00FFFFFFFC01FFF80E01FFFFFFFE01FFF80E01F
FFFFFFE01FFF80E03FFFFFFFF00FFF80F03FFFFFFFF00FFF80F03FFFFFFFF007
FF80F03FFFFFFFF807FF80F03FFFFFFFF803FF80F03FFFFFFFF803FF80FC3FFF
FFFFFC03FF80FC3FFFFFFFFC03FF80FC1FFFFFFFFC03FF80FC1FFFFFFFFC01FF
80FC1FFFFFFFFC01FF80FE1FFFFFFFFC01FF80FFFFFFFFFFFC01FF80FFFFFFFF
FFF801FF80FFFFFFFFFFF801FF80FFFFFFFFFFF001FF80FFFFFFFFFFE001FF80
FFFFFFFFFFE001FF80FFFFFFFFFFC003FF80FFFFFFFFFE0003FF80FFFFFFFFC0
0003FF80FFFFFFFC000003FF80FFFFFFC0000007FF80FFFFFFC0000007FF80FF
FFFC0000000FFF80FFFFF00000001FFF80FFFFE00000001FFF80FFFFC0000000
7FFF80FFFF00000000FFFF80FFFF00000003FFFF80FFFF0000003FFFFF80FFFE
000007FFFFFF80FFFE000007FFFFFF80FFFC00007FFFFFFF80FFFC0007FFFFFF
FF80FFFC001FFFFFFFFF80FFFC007FFFFFFFFF80FFFC00FFFFFFFFFF80FFFC00
FFFFFFFE1F80FFFC00FFFFFFFE1F80FFFC01FFFFFFFE1F80FFFC01FFFFFFFE1F
80FFFC01FFFFFFFE1F80FFFE01FFFFFFFE0F80FFFE01FFFFFFFE0F80FFFE01FF
FFFFFE0F80FFFE00FFFFFFFE0F80FFFE00FFFFFFFE0F80FFFF00FFFFFFFE0780
FFFF00FFFFFFFE0780FFFF007FFFFFFE0780FFFFC07FFFFFFC0780FFFFE01FFF
FFFC0180FFFFE01FFFFFFC0180FFFFF00FFFFFF00180FFFFF807FFFFF00180FF
FFF803FFFFE00180FFFFFC01FFFFC00080FFFFFF003FFF800080FFFFFF803FFF
818080FFFFFFE00FF803C080FFFFFFFC00000FF080FFFFFFFC00000FF000FFFF
FFFF00007FF800FFFFFFFFF001FFF800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
65 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
105 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -6 6 104 setcachedevice
6 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 6 def
/Height 110 def
/ImageMatrix [6 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C480808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
80808080808080808080808080C4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
6 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
104 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
98 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 38 35 109 setcachedevice
35 0 0 71 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 71 def
/ImageMatrix [35 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00FFFFFE0C000FFFFE080007FFFE081C01FFFE081F81FFFE080FC0FFFE080FE
03FFE080FE01FFE080FE01FFE0E1FF00FFE0FFFF00FFE0FFFF80FFE0FFFF80FF
E0FFFF807FE0FFFF807FE0FFFF807FE0FFFFE07FE0FFFFE07FE0FFFFE03FE0FF
FFE03FE0FFFFE03FE0FFFFF03FE0FFFFF03FE0FFFFF00FE0FFFFF00FE0FFFFF0
0FE0FFFFF80FE0FFFFF807E0FFFFF807E0FFFFF807E0FFFFFC07E0FFFFFC07E0
FFFFFC03E0FFFFFC03E0FFFFFC03E0FFFFFE03E0FFFFFE03E0FFFFFE01E0FFCF
FE01E0FFC7FE01E0FFC7FF81E0FFC3FF81E0FFE3FF81E0FFE0FF80E0FFE0FF80
E0FFF87FC0E0FFF87FC0E0FFFC3FC1E0FFFE1FC1E0FFFE0381E0FFFF0001E0FF
FF8007E0FFFFF80FE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFF0E0
FFFFFFF0E0FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFF000FFFF
FFF820>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 22 47 75 setcachedevice
47 0 0 53 0 22 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 53 def
/ImageMatrix [47 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC6FFFFFFFFFF00FFFFFFFFFC00FFFFFFFFF000FFFFFFFFF000FFFF
FFFFC000FFFFFFFF0000FFFFFFF80000FFFFFFF00180FFFFFFC00380FFFFFFC0
0F80FFFFFE007F80FFFFFC01FF80FFFFF001FF80FFFF8003FF80FFFF001FFF80
FFFF007FFF80FFFC00FFFF80FFE007FFFF80FF8007FFFF80FF001FFFFF80F800
3FFFFF80F801FFFFFF80E007FFFFFF80C01FFFFFFF80001FFFFFFF80007FFFFF
FF80001FFFFFFF80C01FFFFFFF80E007FFFFFF80F801FFFFFF80F8003FFFFF80
FF001FFFFF80FF8007FFFF80FFE007FFFF80FFFC00FFFF80FFFF007FFF80FFFF
001FFF80FFFF8003FF80FFFFF001FF80FFFFFC01FF80FFFFFE007F80FFFFFFC0
0F80FFFFFFC00380FFFFFFF00180FFFFFFF80000FFFFFFFF0000FFFFFFFFC000
FFFFFFFFF000FFFFFFFFF000FFFFFFFFFC00FFFFFFFFFF00FFFFFFFFFFC6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 3 28 78 setcachedevice
28 0 0 75 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 75 def
/ImageMatrix [28 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE03FF0FFE03FF0FF800FF0FE0383F0FC0380F0FC07C0F0FC07E070FC07F870
FC07F830FC07FC30FC03FC10FC03FC10FC03FE10FC03FE10FC01FE00FE01FF00
FE01FF00FE00FF00FE00FF00FF80FFF0FF803FF0FFC03FF0FFC03FF0FFC01FF0
FFC01FF0FFE01FF0FFE01FF0FFE00FF0FFE00FF0FFF007F0FFF007F0FFF807F0
03F807F003F803F003F803F083FE03F081FE00F081FE00F0E1FF00F0E1FF00F0
E0FF00F0F0FF00F0F07F80F0F87F80F0F83F80F0FC3F83F0FC0703F0FE0003F0
FF8007F0FFE01FF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFF870FFFFC010FFFFC010FFFFC000FFFFC000FFFFC000FFFFC000
FFFFE000FFFFE000FFFFFC10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 -73 44 23 setcachedevice
44 0 0 96 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 96 def
/ImageMatrix [44 0 0 -96 0 96]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F803FFFFFFF0E0007FFFFFF0C0001FFFFFF081F803FFFFF081FC03FFFFF0803E
01FFFFF0801F00FFFFF0801F007FFFF0801F803FFFF0801FE00FFFF0801FE00F
FFF0C01FF00FFFF0F0FFF007FFF0F0FFF007FFF0FFFFF807FFF0FFFFF803FFF0
FFFFF803FFF0FFFFFC03FFF0FFFFFC03FFF0FFFFFC01FFF0FFFFFC01FFF0FFFF
FC01FFF0FFFFFE01FFF0FFFFFE01FFF0FFFFFE00FFF0FFFFFE00FFF0FFFFFE00
FFF0FFFFFF80FFF0FFFFFF80FFF0FFFFFF803FF0FFFFFF803FF0FFFFFF803FF0
FFFFFFC03FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFE01FF0FFFF
FFE01FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFF00FF0FFFFFFF0
0FF0FFFFFFF007F0FFFFFFF007F0FFFFFFF007F0FFFFFFF807F0FFFFFFF807F0
FFFFFFF803F0FFFFFFF803F0FFFFFFF803F0FFFFFFFE03F0FFFFFFFE03F0FFF8
3FFE00F0FFF83FFE00F0FFF83FFE00F0FFFC1FFF00F0FFFC1FFF00F0FFFE1FFF
00F0FFFE0FFF0070FFFF0FFF8070FFFF03FF8070FFFF01FF8070FFFF81FF8070
FFFFE1FF80F0FFFFF0FF80F0FFFFF87F83F0FFFFF80F03F0FFFFFC0003F0FFFF
FF800FF0FFFFFFE03FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFF
FFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0
FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFF870FFFFFFFFC010FFFFFFFFC010FFFFFFFFC000FFFFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFE000FFFFFFFFE000FFFFFFFFFC30
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 96 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -78 68 0 setcachedevice
68 0 0 78 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 78 def
/ImageMatrix [68 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FFFE
00000000F8001FFFFFF80007F0FF007FFFFFFE000FF0FF81FFFFFFFF001FF0FF
C1FFFFFFFF001FF0FFC1FFFFFFFE001FF0FFC1FFFFFFFE001FF0FFE1FFFFFFFE
007FF0FFE1FFFFFFFE007FF0FFE1FFFFFFFC007FF0FFF07FFFFFFC00FFF0FFF0
7FFFFFFC00FFF0FFF07FFFFFF800FFF0FFF03FFFFFF800FFF0FFFC3FFFFFF801
FFF0FFFC3FFFFFF801FFF0FFFC3FFFFFF001FFF0FFFC1FFFFFF001FFF0FFFC1F
FFFFF001FFF0FFFE1FFFFFF003FFF0FFFE1FFFFFF003FFF0FFFE0FFFFFC003FF
F0FFFF0FFFFFC007FFF0FFFF0FFFFFC007FFF0FFFF07FFFF8007FFF0FFFF07FF
FF8007FFF0FFFF87FFFF801FFFF0FFFF87FFFF801FFFF0FFFF87FFFF001FFFF0
FFFF81FFFF001FFFF0FFFFC1FFFF003FFFF0FFFFC1FFFE003FFFF0FFFFC1FFFE
003FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFC007FFFF0FF
FFF07FFC007FFFF0FFFFF87FFC00FFFFF0FFFFF87FFC00FFFFF0FFFFF87FF000
FFFFF0FFFFF83FF000FFFFF0FFFFF83FF000FFFFF0FFFFFC3FF001FFFFF0FFFF
FC1FE001FFFFF0FFFFFC1FE001FFFFF0FFFFFE1FE007FFFFF0FFFFFE1FE007FF
FFF0FFFFFE1FC007FFFFF0FFFFFE07C007FFFFF0FFFFFF07C00FFFFFF0FFFFFF
07C00FFFFFF0FFFFFF07800FFFFFF0FFFFFFC3801FFFFFF0FFFFFFC3801FFFFF
F0FFFFFFC3001FFFFFF0FFFFFFC1001FFFFFF0FFFFFFE1003FFFFFF0FFFFFFE1
003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0
FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF801
FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FF
FFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FF
FFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
0 0 0 39 35 94 setcachedevice
35 0 0 55 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 55 def
/ImageMatrix [35 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFE0FFE001FFE0FF80007FE0FC0FF01FE0F00FF003E0E07FFC01E0C1FF
FE00E0C3FFFE00E0C7FFFF00E001FFFF0060007FFF0060007FFF0000007FFFC0
00007FFFC000007FFFC000C0FFFFC000C0FFFFC000E1FFFFC000FFFFFFC000FF
FFFFC000FFFFFF0060FFFFFF0060FFFFFF0060FFFFFE00E0FFFFFE00E0FFFFFE
01E0FFFFFC03E0FFFFF01FE0FFC0001FE0FFC0007FE0FFC0007FE0FFFF807FE0
FFFFF03FE0FFFFF81FE0FFFFF807E0FFFFFC03E0FFFFFC01E0FFFFFE01E0FFFF
FE01E0FFFFFE00E0F8FFFE00E0E01FFE00E0E01FFF00E0E01FFF00E0E00FFF00
E0E01FFE00E0E01FFE00E0E01FFE00E0F0FFFC01E0F0FFFC03E0F87FF807E0FC
07F01FE0FC00001FE0FF80007FE0FFF001FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 56 69 94 setcachedevice
69 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 38 def
/ImageMatrix [69 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFF87FFFFE03F8F87FFFF87FFFFE03F8F03FFFF03FFFF801F8F00FFFF00F
FFF07038F00FFFF00FFFF07038F00FFFF00FFFE07E18F80FFFF80FFFE07E08F8
0FFFF80FFFE07F08F807FFF807FFE07F88F807FFF807FFE03F80F807FFF807FF
E03F80FC07FFFC07FFF00FC0FC03FFFC03FFF00FC0FC03FFFC03FFF80FC0FC03
FFFC03FFF80FE0FE03FFFE03FFF807F8FE03FFFE03FFF807F8FE01FFFE01FFFC
07F8FE01FFFE01FFFC03F8FE01FFFE01FFFC03F8FF81FFFF81FFFE03F8FF81FF
FF81FFFE03F8FF80FFFF80FFFE03F83F80FFFF80FFFE01F81F80FFFF80FFFE01
F81FC0FFFFC0FFFF81F81FC03FFFC03FFF81F80FC01FFFC03FFF81F80FC01FFF
C01FFF81F88FC00FFFC00FFF81F883E007FFC00FFF81F883E007FFC08FFF81F8
E3E0C3FFC087FF81F8E1E0E0FFC1C0FF83F8E1C0E03F81C03E03F8F001F80001
F80003F8F003FE0007FC000FF8FC0FFF803FFF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 6 19 49 setcachedevice
19 0 0 43 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 43 def
/ImageMatrix [19 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FE0FC0FE0F803E0F061E0F06060F07C60F07C20F07E20F07E20F81F00F81F
00F81F20F80FE0FC0FE0FC0FE0FF07E0FF07E0FF07E01F03E01F83E01F83E01F
83E00781E0C3C1E0E1C3E0E1C3E0F007E0FC0FE0FC0FE0FFFFE0FFFFE0FFFFE0
FFFFE0FFFFE0FFFFE0FFFFE0FFE1E0FFE1E0FFE060FFE020FFE020FFE020FFF0
60>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
0 0 0 6 22 46 setcachedevice
22 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 40 def
/ImageMatrix [22 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000FE01FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03
FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF
03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FC
FF03FC0103FC0003FC0003FCFC03FCFF03FCFF03FCFFC3FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
39 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 3 44 76 setcachedevice
44 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 73 def
/ImageMatrix [44 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000030800000000030800000000030800000000030C00000000010E000
00000010F00000000010F00000000010F00000000010F80FFFFFFC10FE07FFFF
FE10FF07FFFFFE10FF83FFFFFE10FFC0FFFFFE10FFC07FFFFE00FFE03FFFFF00
FFF81FFFFF00FFF81FFFFF00FFFC0FFFFF00FFFE03FFFFF0FFFE01FFFFF0FFFF
00FFFFF0FFFF807FFFF0FFFFE07FFFF0FFFFF03FFFF0FFFFF80FFFF0FFFFF807
FFF0FFFFF803FFF0FFFFFC01FFF0FFFFFE01FFF0FFFFFF80FFF0FFFFFFC03FF0
FFFFFFC01FF0FFFFFFC00FF0FFFFFFE007F0FFFFFFF007F0FFFFFFF003F0FFFF
FFF800F0FFFFFFF80070FFFFFFF80070FFFFFFFE0030FFFFFFFE0030FFFFFFFF
0030FFFFFFFF0010FFFFFFFF0010FFFFFFFF0010F8FFFFFF8000F8FFFFFF8000
E01FFFFF8000C00FFFFF80008007FFFF80008007FFFF80008007FFFF80008007
FFFF80008007FFFF80008007FFFF80008007FFFF8000800FFFFF0000801FFFFF
0010C3FFFFFF0010C1FFFFFF0010C1FFFFFE0030C0FFFFFE0030E0FFFFF80030
F03FFFF80070F03FFFF800F0F81FFFF003F0FE07FFC007F0FE00FE0007F0FF00
00000FF0FFC000003FF0FFF80001FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80001FFF0FFF80001FFF0FFC000003FF0FF007F801FF0FE00
7F8007F0F807FFC003F0F01FFFE000F0F03FFFF000F0E0FFFFF80070C1FFFFF8
0070C1FFFFF80030C01FFFFE0030800FFFFE0010800FFFFE00108007FFFF0010
8007FFFF00108007FFFF00008007FFFF00008007FFFF00008007FFFF0000C00F
FFFF0000E01FFFFF0000E01FFFFF0000F8FFFFFF0000FFFFFFFF0000FFFFFFFF
0000FFFFFFFF0010FFFFFFFF0010FFFFFFFE0010FFFFFFFE0010FFFFFFFE0030
FFFFFFFE0030FFFFFFF80070FFFFFFF800F0FFFFFFF000F0FFFFFFE003F0FFFF
FFC007F0FFFFFFC00FF0FFFFFF803FF0FFFC0001FFF0FFFC0001FFF0FFFC0003
FFF0FFFFFC00FFF0FFFFFF80FFF0FFFFFFC03FF0FFFFFFE00FF0FFFFFFE007F0
FFFFFFE003F0FFFFFFF003F0FFFFFFF003F0FFFFFFF800F0FFFFFFF800F0FFFF
FFF80070FFFFFFF80070F807FFFE0030F807FFFE0030F003FFFE0030E003FFFE
0030E003FFFE0030E000FFFE0030E000FFFE0030E003FFFE0030E003FFFE0030
E007FFFE0030E007FFFE0030F00FFFF80070F03FFFF80070F83FFFF800F0F81F
FFF003F0FE0FFFF007F0FE03FFE007F0FF807F800FF0FFC000003FF0FFF80001
FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 28 60 78 setcachedevice
60 0 0 50 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 50 def
/ImageMatrix [60 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFF807FF0FF87FFFFFF807FF0FC03FFFFFE001FF0FC01FFFFF80E0FF0
FC01FFFFF00E03F0FE01FFFFF01F81F0FE01FFFFF01FE0F0FE01FFFFF01FE0F0
FE00FFFFF01FF0F0FF80FFFFF01FF870FF80FFFFF00FF870FF80FFFFF00FF830
FF803FFFF00FFC30FF803FFFF00FFC30FFC03FFFF007FC00FFC03FFFF807FE00
FFC03FFFF807FE00FFC01FFFF803FE00FFC01FFFF803FE00FFE01FFFFE03FFF0
FFE01FFFFE03FFF0FFE01FFFFE00FFF0FFE00FFFFE00FFF0FFE00FFFFF00FFF0
FFF00FFFFF007FF0FFF00FFFFF007FF0FFF00FFFFF807FF0FFF007FFFF807FF0
FFF007FFFF803FF0FFF807FFFF803FF0FFF807FFFFC03FF0FFF807FFFFC03FF0
03F803FFFFC03FF003FE03FFFFC01FF003FE00FFFFC01FF083FE00FFFFE01FF0
81FE007FFFE01FF081FE007FFFE01FF0E1FE007FFFE01FF0E1FF003FFFE01FF0
E0FF001FFFE01FF0E0FF000FFFE01FF0F0FF0003FFE01FF0F0FF0303FFE03FF0
F87F0381FFE03FF0F83E07E0FFC07FF0F80E07E03F807FF0FC0007F80000FFF0
FE001FFE0003FFF0FFC0FFFFC00FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0081FFFFFFFFFFFE00
81FFFFFFFFFFFE00807FFFFFFFFFFC00C07FFFFFFFFFFC08C07FFFFFFFFFFC08
E07FFFFFFFFFFC18E03FFFFFFFFFF018E03FFFFFFFFFF018E01FFFFFFFFFE018
F01FFFFFFFFFE038F00FFFFFFFFFC038FC0FFFFFFFFFC078FC0FFFFFFFFFC078
FE0FFFFFFFFFC1F8FE07FFFFFFFF81F8FE07FFFFFFFF81F8FE01FFFFFFFF01F8
FF01FFFFFFFF03F8FF01FFFFFFFF03F8FF80FFFFFFFC07F8FF80FFFFFFFC07F8
FF80FFFFFFFC07F8FFC07FFFFFF80FF8FFC07FFFFFF80FF8FFC07FFFFFF80FF8
FFF03FFFFFF01FF8FFF03FFFFFF01FF8FFF01FFFFFE01FF8FFF81FFFFFE07FF8
FFF81FFFFFE07FF8FFFC1FFFFFE0FFF8FFFC07FFFFC0FFF8FFFC07FFFFC0FFF8
FFFC03FFFF00FFF8FFFE03FFFF01FFF8FFFE03FFFF01FFF8FFFF01FFFE03FFF8
FFFF01FFFE03FFF8FFFF00FFFC03FFF8FFFFC0FFFC07FFF8FFFFC0FFFC07FFF8
FFFFE0FFFC1FFFF8FFFFE07FF81FFFF8FFFFE07FF81FFFF8FFFFE01FF01FFFF8
FFFFF01FF03FFFF8FFFFF00FC03FFFF8FFFFF80FC07FFFF8FFFFF80FC07FFFF8
FFFFFC0FC0FFFFF8FFFFFC0780FFFFF8FFFFFC0780FFFFF8FFFFFC0300FFFFF8
FFFFFF0301FFFFF8FFFFFF0301FFFFF8FFFFFF8007FFFFF8FFFFFF8007FFFFF8
FFFFFF8007FFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8
FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFF03FFFFFF8
FFFFFFFC7FFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a36 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 -35 41 39 setcachedevice
41 0 0 74 0 -35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 74 def
/ImageMatrix [41 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFFFFF80C007FFFFFF808003FFFFFF808380FFFFFF8083C0FFFFFF8080C0
FFFFFF8080E07FFFFF8080E07FFFFF8080E03FFFFF8080F83FFFFF80E1F83FFF
FF80FFF81FFFFF80FFF81FFFFF80FFF81FFFFF80FFF80FFFFF80FFFC0FFFFF80
FFFC0FFFFF80FFFC0FFFFF80FFFC0FFFFF80FFFC03FFFF80FFFC03FFFF80FFFE
03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE01FFFF80FFFE01FF
FF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80
FFFF00FFFF80FFFF00FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF807FFF80FFFF807FFF80FFFFE07FFF80FFFFE07FFF80FFFFE07F
FF80FFFFE07FFF80FFFFE03FFF80FFFFE03FFF80FFFFF03FFF80FFFFF03FFF80
FFFFF03FFF80FFF800000F80FFF800000F80FFF800000F80FFFFF00FFF80FFFF
F80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF807FF80FFFFF807
FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07C380FFFFFC038000
FFFFFE038000FFFFFE038000FFFFFE038000FFFFFE038000FFFFFF81C000FFFF
FF80E000FFFFFFC0F800FFFFFFF00080FFFFFFFE0780FFFFFFFE0780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 -38 20 43 setcachedevice
20 0 0 81 0 -38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF80FFFF00FFFF00FFFC10FFF870FFF070FFE0F0FFC1F0FFC1F0FF03F0FF07
F0FE07F0FC07F0FC1FF0FC1FF0F83FF0F83FF0F03FF0F07FF0F07FF0F07FF0C0
FFF0C0FFF0C0FFF0C0FFF080FFF081FFF081FFF081FFF081FFF081FFF001FFF0
01FFF001FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FF
F007FFF007FFF007FFF007FFF001FFF001FFF001FFF081FFF081FFF081FFF081
FFF081FFF080FFF0C0FFF0C0FFF0C0FFF0C0FFF0C07FF0F07FF0F07FF0F07FF0
F83FF0F83FF0F81FF0FC1FF0FC1FF0FE07F0FF07F0FF03F0FF01F0FFC1F0FFE1
F0FFF0F0FFF870FFF810FFFC00FFFF00FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
0 0 0 -43 20 38 setcachedevice
20 0 0 81 0 -43 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF087FFF087FFF0C3FFF0E1FFF0E0FFF0F03FF0F81FF0F81FF0FE0FF0FF0F
F0FF07F0FF03F0FF83F0FF83F0FFC0F0FFC0F0FFC070FFE070FFE070FFE070FF
F830FFF830FFF830FFF830FFF810FFFC10FFFC10FFFC10FFFC10FFFC10FFFC00
FFFC00FFFC00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE
00FFFE00FFFE00FFFE00FFFE00FFFC00FFFC00FFFC00FFFC10FFFC10FFFC10FF
FC10FFFC10FFF810FFF830FFF830FFF830FFF830FFE030FFE070FFE070FFE070
FFC0F0FFC0F0FF80F0FF83F0FF83F0FF07F0FF0FF0FE0FF0F80FF0F81FF0F83F
F0F0FFF0E1FFF0C1FFF083FFF087FFF08FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a42 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -77 54 23 setcachedevice
54 0 0 100 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 100 def
/ImageMatrix [54 0 0 -100 0 100]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFCF000FFFFFFFFFCC0007FFFFFFFFCC1E01FFFFFFFFCC3F81FFF
FFFFFC81FC1FFFFFFFFC803E0FFFFFFFFC801E03FFFFFFFC801E03FFFFFFFC80
1E01FFFFFFFC801F01FFFFFFFCC01F01FFFFFFFCC01F00FFFFFFFCC01F00FFFF
FFFCF03F00FFFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF
807FFFFFFCFFFF803FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFF
FCFFFFE03FFFFFFCFFFFE00FFFFFFCFFFFE00FFFFFFCFFFFF00FFFFFFCFFFFF0
0FFFFFFCFFFFF00FFFFFFCFFFFF00FFFFFFCFFFFF007FFFFFCFFFFF007FFFFFC
FFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF803
FFFFFCFFFFF803FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFF
FFFC03FFFFFCFFFFFC01FFFFFCFFFFFC01FFFFFCFFFFFE01FFFFFCFFFFFE01FF
FFFCFFFFFE01FFFFFCFFFFFE01FFFFFCFFFFFE00FFFFFCFFFFFE00FFFFFCFFFF
FF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFF
FCFFFFFF803FFFFCFFFFFF803FFFFCFFFFFFC03FFFFCFFFFFFC03FFFFCFFFFFF
C03FFFFCFFFFFFC03FFFFCFFFFFFC01FFFFCFFFFFFC01FFFFCFFFFFFE01FFFFC
FFFFFFE01FFFFCFFFFFFE01FFFFCFFFF80000001FCFFFF80000001FCFFFF8000
0001FCFFFF80000001FCFFFFFFF00FFFFCFFFFFFF00FFFFCFFFFFFF00FFFFCFF
FFFFF007FFFCFFFFFFF007FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF807
FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF803FFFCFFFFFFFE03FFFCFFFF
FFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FC3CFFFFFFFE00F0
04FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF80F000FFFFFF
FF807000FFFFFFFF807000FFFFFFFFC07800FFFFFFFFC07E00FFFFFFFFE03F80
FFFFFFFFF81E04FFFFFFFFF80004FFFFFFFFFE000CFFFFFFFFFF80FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 100 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
0 0 0 -78 54 23 setcachedevice
54 0 0 101 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 101 def
/ImageMatrix [54 0 0 -101 0 101]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFC03FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFF
FFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFFFFFCE0
1FFFFFFFFFFCF01FFFFFFFFFFCF01FFFFFFFFFFCF80FFFFFFFFFFCF80FFFFFFF
FFFCF807FFFFFFFFFCFC07FFFFFFFFFCFC07FFFFFFFFFCFF03FFFFFFFFFCFF03
FFFFFFFFFCFF01FFFFFFFFFCFF81FFFFFFFFFCFF807FFFFFFFFCFFC07FFFFFFF
FCFFC07FFFFFFFFCFFE03FFFFFFFFCFFE03FFFFFFFFCFFE01FFFFFFFFCFFF01F
FFFFFFFCFFF01FFFFFFFFCFFFC0FFFFFFFFCFFFC0FFFFFFFFCFFFC07FFFFFFFC
FFFE07FFFFFFFCFFFE01FFFFFFFCFFFF01FFFFFFFCFFFF01FFFFFFFCFFFF80FF
FFFFFCFFFF80FFFFFFFCFFFF807FFFFFFCFFFFC07FFFFFFCFFFFC07FFFFFFCFF
FFF03FFFFFFCFFFFF03FFFFFFCFFFFF01FFFFFFCFFFFF81FFFFFFCFFFFF807FF
FFFCFFFFFC07FFFFFCFFFFFC07FFFFFCFFFFFE03FFFFFCFFFFFE03FFFFFCFFFF
FE01FFFFFCFFFFFF01FFFFFCFFFFFF01FFFFFCFFFFFFC0FFFFFCFFFFFFC0FFFF
FCFFFFFFC07FFFFCFFFFFFE07FFFFCFFFFFFE01FFFFCFFFFFFF01FFFFCFFFFFF
F01FFFFCFFFFFFF80FFFFCFFFFFFF80FFFFCFFFFFFF807FFFCFFFFFFFC07FFFC
FFFFFFFC07FFFCFFFFFFFF03FFFCFFFFFFFF03FFFCFFFFFFFF01FFFCFFFFFFFF
81FFFCFFFFFFFF807FFCFFFFFFFFC07FFCFFFFFFFFC07FFCFFFFFFFFE03FFCFF
FFFFFFE03FFCFFFFFFFFE01FFCFFFFFFFFF01FFCFFFFFFFFF01FFCFFFFFFFFFC
0FFCFFFFFFFFFC0FFCFFFFFFFFFC07FCFFFFFFFFFE07FCFFFFFFFFFE01FCFFFF
FFFFFF01FCFFFFFFFFFF01FCFFFFFFFFFF80FCFFFFFFFFFF80FCFFFFFFFFFF80
7CFFFFFFFFFFC07CFFFFFFFFFFC07CFFFFFFFFFFF03CFFFFFFFFFFF03CFFFFFF
FFFFF01CFFFFFFFFFFF81CFFFFFFFFFFF804FFFFFFFFFFFC04FFFFFFFFFFFC04
FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFF00FFFFFFFF
FFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 101 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a45 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
0 0 0 -8 44 85 setcachedevice
44 0 0 93 0 -8 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 93 def
/ImageMatrix [44 0 0 -93 0 93]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF03FFFFFFF0FF03
FFFFFFF0FF03800FFFF0FF800003FFF0FF800003FFF0FF801FC0FFF0FFC07FF0
3FF0FF807FF00FF0FF807FF80FF0FF007FFE07F0FF007FFF07F0FE007FFF83F0
F8007FFF80F0F8003FFF80F0F8003FFFC0F0F0003FFFC070F0183FFFC070F018
1FFFC070E0381FFFE030E0381FFFE030E03C1FFFE030C03C0FFFE010C03C0FFF
E010C03C0FFFE010C03E0FFFE010C03E0FFFE010C0FE03FFF810C0FE03FFF810
C0FE03FFF81080FF03FFF80080FF01FFF80080FF01FFF80080FF01FFF80080FF
81FFF80080FF81FFF80080FF80FFF80080FF80FFF80080FF80FFF80080FFE0FF
F80080FFE07FF80080FFE07FF80080FFE07FF80080FFF07FF80080FFF03FF800
80FFF03FF80080FFF03FF80080FFF83FF80080FFF83FF80080FFF80FF80080FF
F80FF80080FFF80FF80080FFFC0FF80080FFFC0FF80080FFFC07F80080FFFC07
F80080FFFC07F800C0FFFE03F810C0FFFE03F810C0FFFE03F810C0FFFF83F810
C0FFFF83F810C03FFF81E010C03FFF81E010E03FFF81E030E03FFFC1E030E03F
FFC1E030E03FFFC0E030E03FFFC0E030F01FFFC0C070F01FFFE00070F81FFFE0
00F0F81FFFE000F0FE0FFFF003F0FE0FFFF003F0FE07FFF003F0FF03FFF007F0
FF83FFF00FF0FFC0FFF81FF0FFE07FF01FF0FFE01FC00FF0FFF800000FF0FFFE
00000FF0FFFF800E0FF0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFF
07F0FFFFFFFF07F0FFFFFFFF8FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 93 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a47 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
97 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 6 28 61 setcachedevice
28 0 0 55 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 55 def
/ImageMatrix [28 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFF0F01FFFF0C007FFF0C3C0FFF081C07FF081E07FF081F83FF0C1F83FF0
E1FC1FF0FFFC1FF0FFFC1FF0FFFC0FF0FFFE0FF0FFFE0FF0FFFE0FF0FFFE0FF0
FFFE03F0FFFF03F0FFFF03F0FFFF03F0FFFF03F0FFFF81F0FFFF81F0FFFF81F0
FFFF81F0FFFF81F0FFFFE0F0FFFFE0F0FFFFE0F0FFFFE0F0FF8FE070FF8FF070
FF8FF070FFC7F070FFC7F070FFC3F070FFE07070FFF870F0FFFC00F0FFFF03F0
FFFF03F0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFC30FFFFFC30FFFFF800FFFFF800FFFFF800FFFFFC00FFFFFE30>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
0 0 0 6 66 93 setcachedevice
66 0 0 87 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
FFFFFFFFF040FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF00
00FFFFFFFFFFFFF80000FFFFFFFFFFFFE00040FFFFFFFFFFFF0003C0FFFFFFFF
FFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFFFFF001FFC0FFFFFFFFFF8001FFC0
FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC0
07FFFFC0FFFFFFFF001FFFFFC0FFFFFFF8001FFFFFC0FFFFFFE0007FFFFFC0FF
FFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FFFFFC007FFFFFFFC0FFFFF001FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFFFFFFC0FFF0003FFFFFFFFFC0FFF0
00FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF001FFFFFFFFFFFC0F8001FFFFFFFFF
FFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0007FFF
FFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFFFFFFFFC0C001FFFFFFFFFFFF
C0F0003FFFFFFFFFFFC0FC003FFFFFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FF
FFFFFFFFC0FFE0007FFFFFFFFFC0FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0
FFFFC003FFFFFFFFC0FFFFF800FFFFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007
FFFFFFC0FFFFFFC001FFFFFFC0FFFFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FF
FFFFFF800FFFFFC0FFFFFFFFE001FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC00
1FFFC0FFFFFFFFFF0003FFC0FFFFFFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFF
FFFFFFFE001FC0FFFFFFFFFFFE0007C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF0
0040FFFFFFFFFFFFFC0040FFFFFFFFFFFFFF8000FFFFFFFFFFFFFFE000FFFFFF
FFFFFFFFE000FFFFFFFFFFFFFFFC40>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a53 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -77 76 3 setcachedevice
76 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 76 def
/Height 80 def
/ImageMatrix [76 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8001FFFFFFFFFF0FFFFC00000FFFFFFFFF0FFFFC00000FFFFFFFFF0FFFE
00FF801FFFFFFFF0FFF803FFF803FFFFFFF0FFC003FFF800FFFFFFF0FF801FFF
FE001FFFFFF0FF003FFFFFC00FFFFFF0FF007FFFFFE00FFFFFF0FE00FFFFFFF8
07FFFFF0FC01FFFFFFFC01FFFFF0FC01FFFFFFFC007FFFF0F001FFFFFFFF003F
FFF0F007FFFFFFFF801FFFF0F007FFFFFFFFC01FFFF0E00FFFFFFFFFE00FFFF0
E00FFFFFFFFFF007FFF0C00FFFFFFFFFF001FFF0C00FFFFFFFFFF000FFF0C00F
FFFFFFFFFC007FF0C00FFFFFFFFFFE007FF0801FFFFFFFFFFE007FF0801FFFFF
FFFFFF003FF0801FFFFFFFFFFF001FF0801FFFFFFFFFFF001FF0801FFFFFFFFF
FF8007F0801FFFFFFFFFFFC007F0801FFFFFFFFFFFC003F0801FFFFFFFFFFFC0
03F0801FFFFFFFFFFFC001F0801FFFFFFFFFFFF001F0800FFFFFFFFFFFF000F0
800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800F
FFFFFFFFFFF80070800FFFFFFFFFFFFC0070800FFFFFFFFFFFFC0070800FFFFF
FFFFFFFC0070C007FFFFFFFFFFFE0010C007FFFFFFFFFFFE0010C007FFFFFFFF
FFFE0010C007FFFFFFFFFFFE0010C001FFFFFFFFFFFE0010E001FFFFFFFFFFFF
0010E001FFFFFFFFFFFF0000F001FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000
F000FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000FC00FFFFFFFFFFFF0000FC00
7FFFFFFFFFFF0000FE007FFFFFFFFFFFC000FE003FFFFFFFFFFFC000FF003FFF
FFFFFFFFC000FF001FFFFFFFFFFFC000FF801FFFFFFFFFFFC010FF801FFFFFFF
FFFFC010FFC007FFFFFFFFFF0010FFC007FFFFFFFFFF0010FFF003FFFFFFFFFF
0010FFF801FFFFFFFFFF0010FFFC01FFFFFFFFFF0070FFFC01FFFFFFFFFF0070
FFFE00FFFFFFFFFE00F0FFFE007FFFFFFFFE00F0FFFF001FFFFFFFFE00F0FFFF
C00FFFFFFFFC01F0FFFFF00FFFFFFFFC01F0FFFFF807FFFFFFFC03F0FFFFFC03
FFFFFFF807F0FFFFFC007FFFFFF007F0FFFFFF803FFFFFC01FF0FFFFFFC00FFF
FF803FF0FFFFFFF00FFFFF807FF0FFFFFFFE01FFFE01FFF0FFFFFFFF803FE007
FFF0FFFFFFFF80000007FFF0FFFFFFFFF800001FFFF0FFFFFFFFFFC003FFFFF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
76 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -2 75 76 setcachedevice
75 0 0 78 0 -2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 75 def
/Height 78 def
/ImageMatrix [75 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000007FFFF8000000200000007FFFF8000000000000007FFFF8000000000000
007FFFF800000000FC000FFFFFFFF0001FE0FFC01FFFFFFFFC003FE0FFE03FFF
FFFFFC003FE0FFF03FFFFFFFFC003FE0FFF01FFFFFFFFC003FE0FFFC1FFFFFFF
FC007FE0FFFE0FFFFFFFFC007FE0FFFE0FFFFFFFFC007FE0FFFF0FFFFFFFFC00
7FE0FFFF87FFFFFFFC007FE0FFFF87FFFFFFFC007FE0FFFF81FFFFFFFC007FE0
FFFFC0FFFFFFFC007FE0FFFFC0FFFFFFFC007FE0FFFFF0FFFFFFFC007FE0FFFF
F87FFFFFF8007FE0FFFFF87FFFFFF8007FE0FFFFF83FFFFFF8007FE0FFFFFC1F
FFFFF801FFE0FFFFFC1FFFFFF801FFE0FFFFFE1FFFFFF801FFE0FFFFFF000000
0001FFE0FFFFFF0000000001FFE0FFFFFF0000000001FFE0FFFFFFC000000001
FFE0FFFFFFC3FFFFF801FFE0FFFFFFE1FFFFF801FFE0FFFFFFF0FFFFF801FFE0
FFFFFFF0FFFFF001FFE0FFFFFFF07FFFF001FFE0FFFFFFF87FFFF001FFE0FFFF
FFF87FFFF003FFE0FFFFFFFC1FFFF003FFE0FFFFFFFC0FFFF003FFE0FFFFFFFC
0FFFF003FFE0FFFFFFFF07FFF003FFE0FFFFFFFF87FFF003FFE0FFFFFFFF87FF
F003FFE0FFFFFFFFC3FFF003FFE0FFFFFFFFC1FFF003FFE0FFFFFFFFC1FFF003
FFE0FFFFFFFFE07FF003FFE0FFFFFFFFF07FE003FFE0FFFFFFFFF07FE003FFE0
FFFFFFFFFC3FE003FFE0FFFFFFFFFC3FE007FFE0FFFFFFFFFC1FE007FFE0FFFF
FFFFFE0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFF
FF87E007FFE0FFFFFFFFFF87E007FFE0FFFFFFFFFF81E007FFE0FFFFFFFFFFC0
E007FFE0FFFFFFFFFFC0E007FFE0FFFFFFFFFFF0E007FFE0FFFFFFFFFFF84007
FFE0FFFFFFFFFFF84007FFE0FFFFFFFFFFF80007FFE0FFFFFFFFFFFC000FFFE0
FFFFFFFFFFFC000FFFE0FFFFFFFFFFFE000FFFE0FFFFFFFFFFFF000FFFE0FFFF
FFFFFFFF000FFFE0FFFFFFFFFFFF000FFFE0FFFFFFFFFFFFC00FFFE0FFFFFFFF
FFFFC00FFFE0FFFFFFFFFFFFE00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFF
F00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFFF80FFFE0FFFFFFFFFFFFF81F
FFE0FFFFFFFFFFFFFC1FFFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
75 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
90 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/D/N196 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.6 672.12 m
/N22 10.9091 Tf
(for)
[3.58903 5.38913 3.58903 ] pdfxs
108.927 672.12 m
(v) show
114.076 672.12 m
(alues)
[4.78904 2.98911 5.38913 4.78904 4.18912 ] pdfxs
139.102 672.12 m
(smaller)
[4.18912 8.50908 4.78904 2.98911 2.98911 4.78904 3.58903 ] pdfxs
173.825 672.12 m
(than)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
195.262 672.12 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
213.578 672.12 m
(bound)
[5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
243.403 672.12 m
(is)
[2.98911 4.18912 ] pdfxs
253.341 672.12 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
299.563 672.12 m
(on)
[5.38913 5.38913 ] pdfxs
313.3 672.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
321.499 672.2 m
(=) show
328.56 672.12 m
/N22 10.9091 Tf
(\(in)
[3.58903 2.98911 5.38913 ] pdfxs
343.287 672.12 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
368.313 672.12 m
(w) show
376.102 672.12 m
(ords)
[5.38913 3.58903 5.38913 4.18912 ] pdfxs
397.8 672.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
404.498 672.12 m
/N22 10.9091 Tf
(cannot)
[4.78904 4.78904 5.38913 5.38913 5.38913 2.98911 ] pdfxs
436.112 672.12 m
(be)
[5.38913 4.78904 ] pdfxs
449.051 672.12 m
(arbitrarily)
[4.78904 3.58903 5.38913 2.98911 2.98911 3.58903 4.78904 3.58903 2.98911 2.98911 5.38913 
] pdfxs
495.251 672.12 m
(small\).)
[4.18912 8.50908 4.78904 2.98911 2.98911 3.58903 2.74908 ] pdfxs
93.5996 658.68 m
(Similarly)
[6.10906 2.98911 8.50908 2.98911 2.98911 4.78904 3.58903 2.98911 5.38913 ] pdfxs
133.221 658.68 m
(,) show
138.85 658.68 m
(a) show
146.399 658.68 m
(deterministic)
[5.38913 4.78904 2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 2.98911 4.18912 2.98911 
2.98911 4.78904 ] pdfxs
206.018 658.68 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
227.443 658.68 m
(y) show
236 658.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
245.073 658.68 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
255.011 658.68 m
(called)
[4.78904 4.78904 2.98911 2.98911 4.78904 5.38913 ] pdfxs
284.1 658.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
288.185 658.68 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
338.116 658.68 m
(on)
[5.38913 5.38913 ] pdfxs
351.8 666.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
358.014 658.68 m
/N22 10.9091 Tf
(,) show
363.523 658.68 m
(if)
[2.98911 3.58903 ] pdfxs
373.2 658.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
382.221 658.68 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
392.6 658.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
396.6 658.68 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
446.531 658.68 m
(on)
[5.38913 5.38913 ] pdfxs
460.4 666.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
473.999 666.3 m
(\017) show
479.4 658.68 m
/N22 10.9091 Tf
(.) show
110.52 645.12 m
(Note)
[7.90916 5.38913 2.98911 4.78904 ] pdfxs
135.436 645.12 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
155.433 645.12 m
(in)
[2.98911 5.38913 ] pdfxs
167.531 645.12 m
(general)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 ] pdfxs
203.334 645.12 m
(by)
[5.38913 5.38913 ] pdfxs
217.953 645.12 m
(allo)
[4.78904 2.98911 2.98911 5.38913 ] pdfxs
233.869 645.12 m
(wing)
[7.90916 2.98911 5.38913 5.38913 ] pdfxs
259.385 645.12 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
309.676 645.12 m
(policies,)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 2.74908 ] pdfxs
350.138 645.12 m
(we)
[7.90916 4.78904 ] pdfxs
366.556 645.12 m
(ha)
[5.38913 4.78904 ] pdfxs
376.494 645.12 m
(v) show
381.763 645.12 m
(e) show
390.392 645.12 m
(e) show
395.061 645.12 m
(xtended)
[5.38913 2.98911 4.78904 5.38913 5.38913 4.78904 5.38913 ] pdfxs
433.265 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
450.272 645.12 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
466.079 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
478.778 645.12 m
(acceptable)
[4.78904 4.78904 4.78904 4.78904 5.38913 2.98911 4.78904 5.38913 2.98911 4.78904 ] pdfxs
93.5995 631.56 m
(solutions)
[4.18912 5.38913 2.98911 5.38913 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
136.341 631.56 m
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
160.898 631.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
177.665 631.56 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
193.112 631.56 m
(of)
[5.38913 3.58903 ] pdfxs
205.69 631.56 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
242.334 631.56 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
279.566 631.56 m
(to)
[2.98911 5.38913 ] pdfxs
291.544 631.56 m
(a) show
299.814 631.56 m
(possibly)
[5.38913 5.38913 4.18912 4.18912 2.98911 5.38913 2.98911 5.38913 ] pdfxs
339.446 631.56 m
(lar)
[2.98911 4.78904 3.58903 ] pdfxs
350.574 631.56 m
(ger)
[5.38913 4.78904 3.58903 ] pdfxs
368.061 631.56 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
383.628 631.56 m
(of)
[5.38913 3.58903 ] pdfxs
396.086 631.56 m
(solutions)
[4.18912 5.38913 2.98911 5.38913 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
438.828 631.56 m
(including)
[2.98911 5.38913 4.78904 2.98911 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
483.37 631.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
500.137 631.56 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
515.584 631.56 m
(of)
[5.38913 3.58903 ] pdfxs
93.5992 618 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
142.93 618 m
(policies.)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 2.74908 ] pdfxs
182.792 618 m
(Ne)
[7.90916 4.78904 ] pdfxs
195.37 618 m
(xt,)
[5.38913 2.98911 2.74908 ] pdfxs
209.257 618 m
(we)
[7.90916 4.78904 ] pdfxs
224.716 618 m
(introduce)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 4.78904 ] pdfxs
268.537 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
284.585 618 m
(frame)
[3.58903 3.58903 4.78904 8.50908 4.78904 ] pdfxs
309.61 618 m
(w) show
317.399 618 m
(ork)
[5.38913 3.58903 5.38913 ] pdfxs
334.646 618 m
(of)
[5.38913 3.58903 ] pdfxs
346.504 618 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
392.726 618 m
(controllers:)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.98911 ] pdfxs
110.519 590.88 m
/N110 10.9091 Tf
(De\002nition)
[7.90916 4.78904 6.10906 6.10906 2.98911 3.58903 2.98911 5.38913 6.10906 ] pdfxs
159.981 590.88 m
(4:)
[5.38913 3.58903 ] pdfxs
174.119 590.88 m
/N22 10.9091 Tf
(A) show
185.508 590.88 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
231.392 590.88 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
286.821 590.88 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
332.8 598.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
342.633 590.88 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
353.411 590.88 m
(an)
[4.78904 5.38913 ] pdfxs
367.6 590.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
371.629 590.88 m
/N22 10.9091 Tf
(-) show
375.218 590.88 m
/N24 10.9091 Tf
(r) show
379.047 590.88 m
(edundant)
[4.78904 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 2.98911 ] pdfxs
423.12 590.88 m
/N22 10.9091 Tf
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
468.971 590.88 m
(if)
[2.98911 3.58903 ] pdfxs
479.149 590.88 m
(there)
[2.98911 5.38913 4.78904 3.58903 4.78904 ] pdfxs
504.414 590.88 m
(e) show
509.083 590.88 m
(xist)
[5.38913 2.98911 4.18912 2.98911 ] pdfxs
93.6002 577.32 m
(multiple)
[8.50908 5.38913 2.98911 2.98911 2.98911 5.38913 2.98911 4.78904 ] pdfxs
132.753 577.32 m
(deterministic)
[5.38913 4.78904 2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 2.98911 4.18912 2.98911 
2.98911 4.78904 ] pdfxs
192.491 577.32 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
229.244 577.32 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
248.52 577.32 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
264.687 577.32 m
(either)
[4.78904 2.98911 2.98911 5.38913 4.78904 3.58903 ] pdfxs
292.342 577.32 m
(optimal,)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 2.74908 ] pdfxs
331.254 577.32 m
(or)
[5.38913 3.58903 ] pdfxs
343.6 577.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
347.673 577.32 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
397.724 577.32 m
(on)
[5.38913 5.38913 ] pdfxs
411.6 584.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
417.862 577.32 m
/N22 10.9091 Tf
(.) show
424.451 577.32 m
(W) show
433.92 577.32 m
(e) show
441.589 577.32 m
(represent)
[3.58903 4.78904 5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
484.451 577.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
500.618 577.32 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
515.585 577.32 m
(of)
[5.38913 3.58903 ] pdfxs
93.6002 563.76 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
115.877 563.76 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
164.727 563.76 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
200.88 563.76 m
(by)
[5.38913 5.38913 ] pdfxs
214.3 563.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
221.499 571.199 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
221.299 569.799 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
226.56 563.76 m
/N22 10.9091 Tf
(.) show
232.549 563.76 m
(Also,)
[7.90916 2.98911 4.18912 5.38913 2.74908 ] pdfxs
258.174 563.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
273.862 563.76 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
318.545 563.76 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
350.4 563.76 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
369.076 563.76 m
(of)
[5.38913 3.58903 ] pdfxs
380.6 571.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
389.094 563.76 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
398.672 563.76 m
(de\002ned)
[5.38913 4.78904 6.10906 5.38913 4.78904 5.38913 ] pdfxs
433.047 563.76 m
(as:)
[4.78904 4.18912 2.98911 ] pdfxs
449.4 570.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
448.7 563.801 m
(G) show
458.099 571.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
458.099 571.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(UI)
[11.299 0 ] pdfxs
478.597 571.4 m
(K,M)
[0 3.09972 0 ] pdfxs
487.996 558.201 m
(\023) show
493.696 574.7 m
(N) show
498.796 565.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001\003\002)
[0 5.39951 0 ] pdfxs
504.095 563.501 m
(\004) show
511.394 563.801 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
517.394 563.801 m
(\023) show
522.84 563.76 m
/N22 10.9091 Tf
(,) show
93.6 550.2 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
123.3 550.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
129.399 550.3 m
(\023) show
137.64 550.2 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
147.578 550.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
163.625 550.2 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
195.96 550.2 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
214.996 550.2 m
(of)
[5.38913 3.58903 ] pdfxs
226.854 550.2 m
(a) show
234.403 550.2 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
255.829 550.2 m
(y) show
264.4 550.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
274.699 550.2 m
(?) show
274.699 550.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\000)
[9.59912 0 ] pdfxs
291.497 557.699 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
291.298 556.299 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
299.28 550.2 m
/N22 10.9091 Tf
(\(see)
[3.58903 4.18912 4.78904 4.78904 ] pdfxs
319.516 550.2 m
(De\002nition)
[7.90916 4.78904 6.10906 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
366.458 550.2 m
(2\).)
[5.38913 3.58903 2.74908 ] pdfxs
93.6001 536.64 m
(W) show
103.069 536.64 m
(e) show
111.698 536.64 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
130.745 536.64 m
(compute)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 4.78904 ] pdfxs
172.069 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
189.6 536.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
193.636 536.64 m
/N22 10.9091 Tf
(-redundant)
[3.58903 3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
244.647 536.64 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
260.694 536.64 m
(of)
[5.38913 3.58903 ] pdfxs
273.632 536.64 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
311.345 536.64 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
327.872 536.64 m
(a) show
336.621 536.64 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
382.8 544.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
393.032 536.64 m
/N22 10.9091 Tf
(as)
[4.78904 4.18912 ] pdfxs
405.97 536.64 m
(follo)
[3.58903 5.38913 2.98911 2.98911 5.38913 ] pdfxs
426.076 536.64 m
(ws.)
[7.90916 4.18912 2.74908 ] pdfxs
447.883 536.64 m
(Using)
[7.90916 4.18912 2.98911 5.38913 5.38913 ] pdfxs
477.708 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
494.955 536.64 m
(re)
[3.58903 4.78904 ] pdfxs
503.094 536.64 m
(w) show
510.883 536.64 m
(ard)
[4.78904 3.58903 5.38913 ] pdfxs
93.5997 523.08 m
(model,)
[8.50908 5.38913 5.38913 4.78904 2.98911 2.74908 ] pdfxs
126.654 523.08 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
149.64 523.08 m
(transition)
[2.98911 3.58903 4.78904 5.38913 4.18912 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
193.81 523.08 m
(model,)
[8.50908 5.38913 5.38913 4.78904 2.98911 2.74908 ] pdfxs
227.1 523.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
235.099 523.1 m
(=) show
242.52 523.08 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
262.6 523.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(_) show
270.599 523.1 m
(=) show
275.04 523.08 m
/N22 10.9091 Tf
(,) show
280.909 523.08 m
(in)
[2.98911 5.38913 ] pdfxs
292.407 523.08 m
(e) show
296.956 523.08 m
(v) show
302.225 523.08 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
319.233 523.08 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
342.6 523.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
351.899 523.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(?) show
351.899 523.1 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[10.499 0 ] pdfxs
369.218 523.08 m
/N22 10.9091 Tf
(,) show
374.967 523.08 m
(we)
[7.90916 4.78904 ] pdfxs
390.785 523.08 m
(compute)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 4.78904 ] pdfxs
431.269 523.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
447.676 523.08 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
462.763 523.08 m
(of)
[5.38913 3.58903 ] pdfxs
474.981 523.08 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
508.865 523.08 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
93.6 509.64 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
110.2 509.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
114.207 509.64 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
164.138 509.64 m
(on)
[5.38913 5.38913 ] pdfxs
178 517.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
187.156 509.64 m
/N22 10.9091 Tf
(represented)
[3.58903 4.78904 5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 4.78904 5.38913 
] pdfxs
240.196 509.64 m
(by)
[5.38913 5.38913 ] pdfxs
254.2 517.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
263.299 517.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
263.099 515.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
269.399 509.601 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
269.399 509.601 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
272.998 509.601 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
285.697 517.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
297.696 517.2 m
(\003) show
302.696 509.601 m
(\036) show
312.395 509.601 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(?) show
322.294 517.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
322.294 517.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t\b)
[10.399 0 ] pdfxs
335.593 509.601 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
344.792 517.2 m
(\001) show
356.291 509.601 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020`\025)
[0 7.29933 0 ] pdfxs
363.59 509.601 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
367.19 509.601 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
376.989 517.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
381.288 509.601 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020c?)
[0 10.699 0 ] pdfxs
391.987 509.601 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n\000)
[9.7991 0 ] pdfxs
408.786 517.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
408.586 515.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
414.485 517.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
419.16 509.64 m
/N22 10.9091 Tf
(,) show
424.909 509.64 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
444.065 509.64 m
(satisfy)
[4.18912 4.78904 2.98911 2.98911 4.18912 3.58903 5.38913 ] pdfxs
475.309 509.64 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
497.585 509.64 m
(condi-)
[4.78904 5.38913 5.38913 5.38913 2.98911 3.58903 ] pdfxs
93.6002 496.08 m
(tions)
[2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
117.546 496.08 m
(of)
[5.38913 3.58903 ] pdfxs
129.284 496.08 m
(De\002nition)
[7.90916 4.78904 6.10906 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
176.106 496.08 m
(2.)
[5.38913 2.74908 ] pdfxs
110.52 468.96 m
(Ne)
[7.90916 4.78904 ] pdfxs
123.098 468.96 m
(xt,)
[5.38913 2.98911 2.74908 ] pdfxs
136.626 468.96 m
(we)
[7.90916 4.78904 ] pdfxs
151.604 468.96 m
(present)
[5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
185.367 468.96 m
(an)
[4.78904 5.38913 ] pdfxs
197.945 468.96 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
242.487 468.96 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
257.454 468.96 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
274.102 468.96 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
295.898 468.96 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
332.051 468.96 m
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
379.101 468.96 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
400.658 468.96 m
(a) show
407.847 468.96 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
422.214 468.96 m
(of)
[5.38913 3.58903 ] pdfxs
433.592 468.96 m
(prioritized)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 
] pdfxs
481.112 468.96 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
93.6001 455.4 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
143.52 455.4 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
163.156 455.4 m
(run)
[3.58903 5.38913 5.38913 ] pdfxs
181.004 455.4 m
(in)
[2.98911 5.38913 ] pdfxs
192.862 455.4 m
(parallel.)
[5.38913 4.78904 3.58903 4.78904 2.98911 2.98911 4.78904 2.98911 2.74908 ] pdfxs
233.444 455.4 m
(F) show
239.433 455.4 m
(or)
[5.38913 3.58903 ] pdfxs
251.771 455.4 m
(specifying)
[4.18912 5.38913 4.78904 4.78904 2.98911 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
300.502 455.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
317.149 455.4 m
(order)
[5.38913 3.58903 5.38913 4.78904 3.58903 ] pdfxs
343.494 455.4 m
(of)
[5.38913 3.58903 ] pdfxs
355.832 455.4 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
391.865 455.4 m
(relation)
[3.58903 4.78904 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
428.498 455.4 m
(among)
[4.78904 8.50908 5.38913 5.38913 5.38913 ] pdfxs
461.443 455.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
478.09 455.4 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
93.5995 441.84 m
(we)
[7.90916 4.78904 ] pdfxs
108.938 441.84 m
(use)
[5.38913 4.18912 4.78904 ] pdfxs
126.185 441.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
142.112 441.84 m
(e) show
146.781 441.84 m
(xpression)
[5.38913 5.38913 3.58903 4.78904 4.18912 4.18912 2.98911 5.38913 5.38913 ] pdfxs
191.3 449.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
191.3 449.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\013\016\r)
[5.69948 0 10.799 0 ] pdfxs
218.897 449.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
224.697 441.901 m
(\026) show
227.88 441.84 m
/N22 10.9091 Tf
(,) show
233.269 441.84 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
262.614 441.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
278.542 441.84 m
(relation)
[3.58903 4.78904 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
314.454 441.84 m
(\223) show
319.5 449.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
324.643 441.84 m
/N22 10.9091 Tf
(\224) show
332.312 441.84 m
(e) show
336.981 441.84 m
(xpresses)
[5.38913 5.38913 3.58903 4.78904 4.18912 4.18912 4.78904 4.18912 ] pdfxs
376.494 441.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
392.541 441.84 m
/N24 10.9091 Tf
(subject-to)
[4.18912 5.38913 5.38913 2.98911 4.78904 4.78904 2.98911 3.58903 2.98911 5.38913 ] pdfxs
438.152 441.84 m
/N22 10.9091 Tf
(relation)
[3.58903 4.78904 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
474.064 441.84 m
(\(tak)
[3.58903 2.98911 4.78904 5.38913 ] pdfxs
490.701 441.84 m
(en)
[4.78904 5.38913 ] pdfxs
503.759 441.84 m
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
93.5991 428.28 m
(\(Huber)
[3.58903 7.90916 5.38913 5.38913 4.78904 3.58903 ] pdfxs
123.774 428.28 m
(,) show
129.283 428.28 m
(2000\)\).)
[5.38913 5.38913 5.38913 5.38913 3.58903 3.58903 2.74908 ] pdfxs
164.366 428.28 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
186.163 428.28 m
(equation)
[4.78904 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
226.275 428.28 m
(should)
[4.18912 5.38913 5.38913 5.38913 2.98911 5.38913 ] pdfxs
257.77 428.28 m
(read:)
[3.58903 4.78904 4.78904 5.38913 2.98911 ] pdfxs
282.795 428.28 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
327.8 435.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
333.799 435.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
340.92 428.28 m
/N22 10.9091 Tf
(subject-to)
[4.18912 5.38913 5.38913 2.98911 4.78904 4.78904 2.98911 3.58903 2.98911 5.38913 ] pdfxs
386.291 428.28 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
431.3 435.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
437.399 428.301 m
(\026) show
440.52 428.28 m
/N22 10.9091 Tf
(.) show
446.629 428.28 m
(A) show
456.938 428.28 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
492.131 428.28 m
(ranking)
[3.58903 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
93.5998 414.72 m
(system)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 ] pdfxs
126.654 414.72 m
(is)
[2.98911 4.18912 ] pdfxs
136.712 414.72 m
(then)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
158.269 414.72 m
(speci\002ed)
[4.18912 5.38913 4.78904 4.78904 2.98911 6.10906 4.78904 5.38913 ] pdfxs
199.701 414.72 m
(by)
[5.38913 5.38913 ] pdfxs
213.48 414.72 m
(a) show
221.029 414.72 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
235.996 414.72 m
(of)
[5.38913 3.58903 ] pdfxs
247.854 414.72 m
(relations)
[3.58903 4.78904 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
288.8 422.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\006\005)
[0 4.79956 0 ] pdfxs
299.399 422.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
310.498 422.3 m
(\r) show
321.797 422.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
327.696 414.701 m
(\026) show
331.496 422.3 m
(\023) show
336.24 414.72 m
/N22 10.9091 Tf
(.) show
342.589 414.72 m
(W) show
352.418 414.72 m
(ithout)
[2.98911 2.98911 5.38913 5.38913 5.38913 2.98911 ] pdfxs
380.673 414.72 m
(loss)
[2.98911 5.38913 4.18912 4.18912 ] pdfxs
400.309 414.72 m
(of)
[5.38913 3.58903 ] pdfxs
412.167 414.72 m
(generality)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
458.498 414.72 m
(we)
[7.90916 4.78904 ] pdfxs
474.076 414.72 m
(assume)
[4.78904 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
508.931 414.72 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
93.5995 401.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
109.887 401.16 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
159.327 401.16 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
175.614 401.16 m
(prioritized)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 
] pdfxs
223.974 401.16 m
(based)
[5.38913 4.78904 4.18912 4.78904 5.38913 ] pdfxs
251.639 401.16 m
(on)
[5.38913 5.38913 ] pdfxs
265.538 401.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
281.825 401.16 m
(follo)
[3.58903 5.38913 2.98911 2.98911 5.38913 ] pdfxs
301.93 401.16 m
(wing)
[7.90916 2.98911 5.38913 5.38913 ] pdfxs
326.847 401.16 m
(ranking)
[3.58903 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
363.01 401.16 m
(system:)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 2.98911 ] pdfxs
400.8 408.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\006\005)
[0 4.79956 0 ] pdfxs
411.799 408.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
420.798 408.8 m
(\r) show
430.097 408.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
435.897 401.201 m
(\026) show
440.896 408.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b\020\017)
[0 2.79974 0 ] pdfxs
451.595 401.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(9) show
451.595 401.201 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\021)
[10.899 0 ] pdfxs
468.494 408.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
473.16 401.16 m
/N22 10.9091 Tf
(.) show
480.109 401.16 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
93.5999 387.6 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
111.327 387.6 m
(g) show
116.596 387.6 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
146.171 387.6 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
170.596 387.6 m
/N22 10.9091 Tf
(summarizes)
[4.18912 5.38913 8.50908 8.50908 4.78904 3.58903 2.98911 4.78904 4.78904 4.18912 ] pdfxs
226.167 387.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
243.054 387.6 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
264.48 387.6 m
(y) show
273.709 387.6 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
290.356 387.6 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
313.352 387.6 m
(process.)
[5.38913 3.58903 5.38913 4.78904 4.78904 4.18912 4.18912 2.74908 ] pdfxs
354.785 387.6 m
(In)
[3.58903 5.38913 ] pdfxs
367.363 387.6 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
386.76 387.6 m
(algorithm,)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 2.74908 ] pdfxs
435.9 387.6 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
444.099 387.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
448.199 387.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
448.199 387.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
451.799 387.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
464.4 387.6 m
/N22 10.9091 Tf
(represents)
[3.58903 4.78904 5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 4.18912 ] pdfxs
512.171 387.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
Q
q
4320 0 0 -8.39999 935.88 3729.48 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
93.6 362.64 m
/N110 10.9091 Tf
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 4.78904 2.98911 3.58903 6.10906 9.10916 ] pdfxs
144.742 362.64 m
(1) show
152.891 362.64 m
/N22 10.9091 Tf
(Function)
[6.10906 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
194.324 362.64 m
(Mer)
[9.70908 4.78904 3.58903 ] pdfxs
212.171 362.64 m
(geController\(s,)
[5.38913 4.78904 7.30907 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 
3.58903 3.58903 4.18912 2.74908 ] pdfxs
280.6 370.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
287.399 370.3 m
(\007) show
292.299 370.2 m
(\t\013\005)
[0 4.09962 0 ] pdfxs
296.398 370.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025\024)
[5.89946 0 ] pdfxs
302.298 370.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\031\t\006\017\006\017\006\017\032\t\013\005)
[5.19952 0 4.79956 0 4.79956 0 4.79956 0 5.09953 0 4.09962 
0 ] pdfxs
331.095 370.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027\026)
[5.79947 0 ] pdfxs
344.76 362.64 m
/N22 10.9091 Tf
(\)) show
Q
q
4320 0 0 -4.79999 935.88 3584.28 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
99.72 347.52 m
/N214 8.96628 Tf
(1:)
[4.43826 2.51958 ] pdfxs
112.198 347.52 m
/N22 10.9091 Tf
(Input:)
[3.58903 5.38913 5.38913 5.38913 2.98911 2.98911 ] pdfxs
142.732 347.52 m
(current)
[4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
176.856 347.52 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
200.6 347.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
205.361 347.52 m
/N22 10.9091 Tf
(;) show
211.95 347.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
228.597 347.52 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
244.044 347.52 m
(of)
[5.38913 3.58903 ] pdfxs
256.503 347.52 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
306.4 355.1 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
312.699 347.501 m
(\026) show
315.84 347.52 m
/N22 10.9091 Tf
(;) show
322.549 347.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
339.196 347.52 m
(redundant-sets)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 3.58903 4.18912 
4.78904 2.98911 4.18912 ] pdfxs
406.2 355.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
415.299 355.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
415.299 355.9 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\031\030)
[3.39969 0 ] pdfxs
415.099 353.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
419.699 347.501 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
419.699 347.501 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(O\025)
[4.29961 0 ] pdfxs
423.998 347.501 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
427.598 347.501 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
440.04 347.52 m
/N22 10.9091 Tf
(for)
[3.58903 5.38913 3.58903 ] pdfxs
455.967 347.52 m
(e) show
460.516 347.52 m
(v) show
465.785 347.52 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
483.152 347.52 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
112.3 341.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
118.199 334.001 m
(\026) show
121.32 333.96 m
/N22 10.9091 Tf
(.) show
99.72 320.4 m
/N214 8.96628 Tf
(2:)
[4.43826 2.51958 ] pdfxs
112.198 320.4 m
/N22 10.9091 Tf
(Initialize:)
[3.58903 5.38913 2.98911 2.98911 2.98911 4.78904 2.98911 2.98911 4.78904 4.78904 2.98911 
] pdfxs
157.5 320.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
165.599 327.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
170.699 320.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
170.699 320.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
174.298 320.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
186.697 327.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
197.996 327.999 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
206.795 328.799 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
206.795 328.799 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033\032)
[3.89964 0 ] pdfxs
206.596 326.199 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
211.695 320.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
211.695 320.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(+\025)
[4.89955 0 ] pdfxs
216.595 320.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
220.194 320.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
229.2 320.4 m
/N22 10.9091 Tf
(.) show
99.72 306.84 m
/N214 8.96628 Tf
(3:)
[4.43826 2.51958 ] pdfxs
112.198 306.84 m
/N22 10.9091 Tf
(F) show
118.187 306.84 m
(or)
[5.38913 3.58903 ] pdfxs
130 314.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
137.099 314.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
137.099 314.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\035\034)
[11.4989 0 ] pdfxs
154.398 314.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
154.398 314.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\037\036)
[4.3996 0 ] pdfxs
164.597 314.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t\006\017\006\017\006\017\032\t)
[0 4.79956 0 4.79956 0 4.79956 0 5.09953 0 ] pdfxs
184.095 314.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(! )
[4.19962 0 ] pdfxs
197.365 306.84 m
/N22 10.9091 Tf
(perform:)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 2.98911 ] pdfxs
113.2 293.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
120.699 293.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
124.799 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
124.799 293.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
128.399 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
142.497 300.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
155.696 300.899 m
(\003) show
160.696 293.3 m
(\036) show
168.695 300.899 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
172.395 293.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
172.395 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(;?)
[10.999 0 ] pdfxs
194.593 300.899 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
203.492 301.799 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
203.492 301.799 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\031\030)
[3.39969 0 ] pdfxs
203.292 299.199 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
207.891 293.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
212.191 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
212.191 293.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
215.791 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
221.09 293.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(#")
[8.6992 0 ] pdfxs
241.388 293.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
241.388 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003?)
[10.899 0 ] pdfxs
252.287 293.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
($\023&%\(')
[11.199 0 7.5993 0 5.19952 0 ] pdfxs
279.085 292.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
279.085 292.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(*\))
[3.09972 0 ] pdfxs
286.684 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
286.684 293.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
290.284 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
299.983 300.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
311.88 293.28 m
/N22 10.9091 Tf
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
342.5 293.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(+) show
342.5 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Q\025)
[7.19934 0 ] pdfxs
353.099 300.899 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
357.099 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
365.798 300.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
378.697 300.899 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(ILVAW)
[0 9.09917 0 5.19952 0 ] pdfxs
400.295 293.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
400.295 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(49)
[10.799 0 ] pdfxs
423.493 300.899 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
434.225 293.28 m
/N22 10.9091 Tf
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
456.861 293.28 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
477.2 293.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
484.399 300.799 m
(\013) show
489.899 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
489.899 293.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
493.499 293.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
498.698 293.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(-,)
[9.89909 0 ] pdfxs
507.597 300.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
507.597 300.899 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(/.)
[12.9988 0 ] pdfxs
112.2 279.72 m
/N22 10.9091 Tf
(\(initially)
[3.58903 2.98911 5.38913 2.98911 2.98911 2.98911 4.78904 2.98911 2.98911 5.38913 ] pdfxs
152.7 279.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(+) show
152.7 279.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Q\025)
[7.19934 0 ] pdfxs
163.999 287.299 m
(Z) show
168.999 279.7 m
(\027) show
176.298 287.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
176.298 287.299 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(JZ)
[11.8989 0 ] pdfxs
192.731 279.72 m
/N22 10.9091 Tf
(\).)
[3.58903 2.74908 ] pdfxs
99.7203 266.16 m
/N214 8.96628 Tf
(4:)
[4.43826 2.51958 ] pdfxs
112.198 266.16 m
/N22 10.9091 Tf
(Return)
[7.30907 4.78904 2.98911 5.38913 3.58903 5.38913 ] pdfxs
144.533 266.16 m
(an)
[4.78904 5.38913 ] pdfxs
157.471 266.16 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
187.1 266.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
187.1 266.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(5?)
[9.39914 0 ] pdfxs
196.499 266.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(0\0231%\(')
[9.69911 0 7.79929 0 5.19952 0 ] pdfxs
221.997 273.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
227.296 267.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(7) show
234.196 273.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
238.095 265.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
242.695 266.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
242.695 266.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
246.295 266.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
255.24 266.16 m
/N22 10.9091 Tf
(.) show
Q
q
4320 0 0 -4.79999 935.88 2578.68 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
93.6 234.6 m
/N22 10.9091 Tf
(ordered)
[5.38913 3.58903 5.38913 4.78904 3.58903 4.78904 5.38913 ] pdfxs
129.884 234.6 m
(intersection)
[2.98911 5.38913 2.98911 4.78904 3.58903 4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 
5.38913 ] pdfxs
183.753 234.6 m
(of)
[5.38913 3.58903 ] pdfxs
195.971 234.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
212.258 234.6 m
(redundant-sets)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 3.58903 4.18912 
4.78904 2.98911 4.18912 ] pdfxs
279 242.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
288.299 244.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
288.299 244.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(32)
[2.99973 0 ] pdfxs
288.099 240.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
292.199 234.701 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(2) show
300 234.6 m
/N22 10.9091 Tf
(up)
[5.38913 5.38913 ] pdfxs
313.898 234.6 m
(to)
[2.98911 5.38913 ] pdfxs
325.516 234.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
341.924 234.6 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
387.4 242.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
393.399 234.601 m
(\026) show
399.6 234.6 m
/N22 10.9091 Tf
(\(i.e.,)
[3.58903 2.98911 2.74908 4.78904 2.74908 2.74908 ] pdfxs
423.4 242.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
423.4 242.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(54)
[9.09917 0 ] pdfxs
443.598 234.601 m
(\021) show
453.497 242.2 m
(4\035\017)
[0 11.4989 0 ] pdfxs
468.534 234.6 m
/N22 10.9091 Tf
(\)) show
475.243 234.6 m
(constrained)
[4.78904 5.38913 5.38913 4.18912 2.98911 3.58903 4.78904 2.98911 5.38913 4.78904 5.38913 
] pdfxs
93.599 219.72 m
(by)
[5.38913 5.38913 ] pdfxs
107.137 219.72 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
123.064 219.72 m
(order)
[5.38913 3.58903 5.38913 4.78904 3.58903 ] pdfxs
148.69 219.72 m
(of)
[5.38913 3.58903 ] pdfxs
160.308 219.72 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
191.901 219.72 m
(.) show
198.37 219.72 m
(In)
[3.58903 5.38913 ] pdfxs
209.988 219.72 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
235.013 219.72 m
(w) show
242.802 219.72 m
(ords,)
[5.38913 3.58903 5.38913 4.18912 2.74908 ] pdfxs
266.868 219.72 m
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
289.504 219.72 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
304.4 219.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
312.299 219.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
312.299 219.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(O\025)
[4.29961 0 ] pdfxs
316.599 219.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
320.199 219.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
331.8 219.72 m
/N22 10.9091 Tf
(contains)
[4.78904 5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 4.18912 ] pdfxs
370.713 219.72 m
(a) show
378.142 219.72 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
392.869 219.72 m
(of)
[5.38913 3.58903 ] pdfxs
404.607 219.72 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
438.011 219.72 m
(in)
[2.98911 5.38913 ] pdfxs
449.149 219.72 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
472.1 219.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
479.454 219.72 m
/N22 10.9091 Tf
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
498.37 219.72 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
514.298 219.72 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
94 206.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
98.1996 206.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
101.4 206.16 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
151.331 206.16 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
173.367 206.16 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
206.891 206.16 m
(to)
[2.98911 5.38913 ] pdfxs
218.149 206.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
234.076 206.16 m
(superior)
[4.18912 5.38913 5.38913 4.78904 3.58903 2.98911 5.38913 3.58903 ] pdfxs
272.509 206.16 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
321.9 213.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
328.799 213.8 m
(\007\006\t\013\005\022\f\016\t\006\017\006\017\006\017\n\t\013\005)
[0 4.79956 0 4.09962 0 5.89946 0 5.29951 0 4.79956 0 
4.79956 0 4.79956 0 4.89955 0 4.09962 0 ] pdfxs
378.195 206.201 m
(\026) show
381.48 206.16 m
/N22 10.9091 Tf
(.) show
93.6 192.6 m
(Due)
[7.90916 5.38913 4.78904 ] pdfxs
115.167 192.6 m
(to)
[2.98911 5.38913 ] pdfxs
127.025 192.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
143.793 192.6 m
(limited)
[2.98911 2.98911 8.50908 2.98911 2.98911 4.78904 5.38913 ] pdfxs
178.036 192.6 m
(amount)
[4.78904 8.50908 5.38913 5.38913 5.38913 2.98911 ] pdfxs
214.091 192.6 m
(of)
[5.38913 3.58903 ] pdfxs
226.549 192.6 m
(redundanc)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 4.78904 ] pdfxs
271.331 192.6 m
(y) show
280.56 192.6 m
(in)
[2.98911 5.38913 ] pdfxs
292.418 192.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
309.185 192.6 m
(system,)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 2.74908 ] pdfxs
345.709 192.6 m
(it)
[2.98911 2.98911 ] pdfxs
355.167 192.6 m
(is)
[2.98911 4.18912 ] pdfxs
365.825 192.6 m
(possible)
[5.38913 5.38913 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
404.858 192.6 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
424.614 192.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
441.381 192.6 m
(system)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 ] pdfxs
475.036 192.6 m
(may)
[8.50908 4.78904 5.38913 ] pdfxs
497.203 192.6 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
514.45 192.6 m
(be)
[5.38913 4.78904 ] pdfxs
93.6002 179.04 m
(able)
[4.78904 5.38913 2.98911 4.78904 ] pdfxs
115.756 179.04 m
(to)
[2.98911 5.38913 ] pdfxs
128.335 179.04 m
(commit)
[4.78904 5.38913 8.50908 8.50908 2.98911 2.98911 ] pdfxs
165.709 179.04 m
(to)
[2.98911 5.38913 ] pdfxs
178.287 179.04 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
205.243 179.04 m
(of)
[5.38913 3.58903 ] pdfxs
218.422 179.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
235.789 179.04 m
(subordinate)
[4.18912 5.38913 5.38913 5.38913 3.58903 5.38913 2.98911 5.38913 4.78904 2.98911 4.78904 
] pdfxs
290.629 179.04 m
(controllers.)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
347.378 179.04 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
370.734 179.04 m
(happens)
[5.38913 4.78904 5.38913 5.38913 4.78904 5.38913 4.18912 ] pdfxs
410.498 179.04 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
438.174 179.04 m
(none)
[5.38913 5.38913 5.38913 4.78904 ] pdfxs
463.45 179.04 m
(of)
[5.38913 3.58903 ] pdfxs
476.509 179.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
493.876 179.04 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
93.5997 165.48 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
117.076 165.48 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
152.04 165.48 m
(to)
[2.98911 5.38913 ] pdfxs
164.618 165.48 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
191.694 165.48 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
238.2 173.1 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
243.999 173 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
252.72 165.48 m
/N22 10.9091 Tf
(\(i.e.,)
[3.58903 2.98911 2.74908 4.78904 2.74908 2.74908 ] pdfxs
277.1 165.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\036) show
277.1 165.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(F?)
[11.9989 0 ] pdfxs
301.298 173.099 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
310.297 175.099 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
310.297 175.099 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(62)
[2.89973 0 ] pdfxs
310.097 171.299 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
314.197 165.5 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(2) show
319.696 165.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
319.696 165.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
323.296 165.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
332.28 165.48 m
/N22 10.9091 Tf
(\)) show
340.069 165.48 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
358 165.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
361.996 165.48 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
413.247 165.48 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
436.723 165.48 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
471.687 165.48 m
(to)
[2.98911 5.38913 ] pdfxs
484.265 165.48 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
501.632 165.48 m
(supe-)
[4.18912 5.38913 5.38913 4.78904 3.58903 ] pdfxs
93.6003 151.92 m
(rior)
[3.58903 2.98911 5.38913 3.58903 ] pdfxs
112.637 151.92 m
(controllers.)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
167.226 151.92 m
(In)
[3.58903 5.38913 ] pdfxs
179.684 151.92 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
198.72 151.92 m
(case)
[4.78904 4.78904 4.18912 4.78904 ] pdfxs
220.756 151.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
237.524 151.92 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
283.145 151.92 m
(skips)
[4.18912 5.38913 2.98911 5.38913 4.18912 ] pdfxs
308.891 151.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
325.538 151.92 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
371.4 159.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
377.399 159.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
381.96 151.92 m
/N22 10.9091 Tf
(,) show
388.189 151.92 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
407.236 151.92 m
(continues)
[4.78904 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 4.78904 4.18912 ] pdfxs
452.378 151.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
469.025 151.92 m
(search)
[4.18912 4.78904 4.78904 3.58903 4.78904 5.38913 ] pdfxs
500.16 151.92 m
(in)
[2.98911 5.38913 ] pdfxs
512.018 151.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5999 138.36 m
(redundant-sets)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 3.58903 4.18912 
4.78904 2.98911 4.18912 ] pdfxs
159.807 138.36 m
(of)
[5.38913 3.58903 ] pdfxs
171.545 138.36 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
187.593 138.36 m
(remaining)
[3.58903 4.78904 8.50908 4.78904 2.98911 5.38913 2.98911 5.38913 5.38913 ] pdfxs
234.534 138.36 m
(subordinate)
[4.18912 5.38913 5.38913 5.38913 3.58903 5.38913 2.98911 5.38913 4.78904 2.98911 4.78904 
] pdfxs
287.934 138.36 m
(controllers.)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
93.6004 124.8 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
113.968 124.8 m
(comple)
[4.78904 5.38913 8.50908 5.38913 2.98911 4.78904 ] pdfxs
145.702 124.8 m
(xity)
[5.38913 2.98911 2.98911 5.38913 ] pdfxs
166.178 124.8 m
(of)
[5.38913 3.58903 ] pdfxs
178.637 124.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
195.284 124.8 m
(abo)
[4.78904 5.38913 5.38913 ] pdfxs
210.731 124.8 m
(v) show
216 124.8 m
(e) show
224.389 124.8 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
270.011 124.8 m
(consists)
[4.78904 5.38913 5.38913 4.18912 2.98911 4.18912 2.98911 4.18912 ] pdfxs
307.964 124.8 m
(of)
[5.38913 3.58903 ] pdfxs
320.422 124.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
337.069 124.8 m
(follo)
[3.58903 5.38913 2.98911 2.98911 5.38913 ] pdfxs
357.174 124.8 m
(wing)
[7.90916 2.98911 5.38913 5.38913 ] pdfxs
382.451 124.8 m
(costs:)
[4.78904 5.38913 4.18912 2.98911 4.18912 2.98911 ] pdfxs
412.025 124.8 m
(\(1\))
[3.58903 5.38913 3.58903 ] pdfxs
428.072 124.8 m
(cost)
[4.78904 5.38913 4.18912 2.98911 ] pdfxs
449.029 124.8 m
(of)
[5.38913 3.58903 ] pdfxs
461.487 124.8 m
(computing)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
511.429 124.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5997 111.24 m
(redundant-sets)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 3.58903 4.18912 
4.78904 2.98911 4.18912 ] pdfxs
160.2 118.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
169.299 119.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
169.299 119.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\031\030)
[3.39969 0 ] pdfxs
169.099 117.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
173.699 111.401 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
180 111.24 m
/N22 10.9091 Tf
(for)
[3.58903 5.38913 3.58903 ] pdfxs
195.567 111.24 m
(a) show
203.356 111.24 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
248.607 111.24 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
278.192 111.24 m
(is)
[2.98911 4.18912 ] pdfxs
288.371 111.24 m
(linear)
[2.98911 2.98911 5.38913 4.78904 4.78904 3.58903 ] pdfxs
316.025 111.24 m
(in)
[2.98911 5.38913 ] pdfxs
327.523 111.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
343.69 111.24 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
379.865 111.24 m
(of)
[5.38913 3.58903 ] pdfxs
391.963 111.24 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
419.018 111.24 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
437.705 111.24 m
(actions:)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 2.98911 ] pdfxs
475.9 111.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(7) show
485.099 111.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
489.399 118.799 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
491.799 111.2 m
(\006) show
499.698 118.799 m
(\b8\b)
[0 5.09953 0 ] pdfxs
506.997 118.799 m
(9:\b)
[0 8.99918 0 ] pdfxs
518.396 111.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
522.098 111.24 m
/N22 10.9091 Tf
(,) show
306.84 77.28 m
(5) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 6 6
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font B
10 dict begin
T3Defs
/FontType 3 def
/FontName /N68 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-38 
119 
115 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 31 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 41 2 setcachedevice
41 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 50 def
/ImageMatrix [41 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFFF80FFE001FFFF80FF00003FFF80F80FFC07FF80E00FFC01FF80C0FF
FFC0FF80C1FFFFE03F80C3FFFFF03F8083FFFFF81F8080FFFFFE0F80801FFFFE
0F80801FFFFE0780801FFFFF0780801FFFFF0780C00FFFFF0380C00FFFFF0380
C00FFFFF0380E01FFFFF0380F8FFFFFE0380FFFFFFFE0380FFFFFFF80380FFFF
FFE00380FFFFFE000380FFFF80000380FFFE00000780FFFE00000780FFFC0000
0F80FFF800003F80FFE000003F80FFC00000FF80FFC00007FF80FFC000FFFF80
FFC01FFFFF80FFC03FFFFF80FFC03FFF8780FFC07FFF0080FFC07FFF0080FFC0
7FFF0080FFE07FFF0000FFE07FFF0000FFE07FFF0000FFE03FFF8000FFF81FFF
C000FFFC1FFFE000FFFC1FFFE080FFFF03FFC380FFFF00FF0380FFFF80000780
FFFFF0000F80FFFFFE00FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 109 75 setcachedevice
109 0 0 75 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 109 def
/Height 75 def
/ImageMatrix [109 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000FFF83FFE00000003FFFF88000000FFF03FFE00000001FFFF88000000F
FF01FFE00000001FFFF88000000FFF00FFE00000001FFFF8FF000FFFFF00FFFF
FC003FFFFFF8FFC01FFFFF00FFFFFE00FFFFFFF8FFE03FFFFF007FFFFE003FFF
FFF8FFF83FFFFF003FFFFE003FFFFFF8FFF83FFFFF003FFFFE003FFFFFF8FFFC
3FFFFE000FFFFF803FFFFFF8FFFC1FFFFE000FFFFF801FFFFFF8FFFC1FFFFE00
0FFFFF801FFFFFF8FFFE1FFFFE0087FFFF801FFFFFF8FFFE1FFFFE00C3FFFFC0
1FFFFFF8FFFE1FFFFE00C3FFFFC01FFFFFF8FFFE0FFFFE00C1FFFFC00FFFFFF8
FFFE0FFFFE00E0FFFFC00FFFFFF8FFFF0FFFFE00F0FFFFC00FFFFFF8FFFF0FFF
FE00F0FFFFE00FFFFFF8FFFF0FFFFE00F83FFFE00FFFFFF8FFFF03FFFC00F83F
FFE007FFFFF8FFFF03FFFC01F81FFFE007FFFFF8FFFF83FFFC01FE0FFFE007FF
FFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF
81FFFC01FF87FFF003FFFFF8FFFF81FFFC01FF87FFF003FFFFF8FFFFE1FFFC01
FF83FFF003FFFFF8FFFFE1FFFC01FFC0FFF803FFFFF8FFFFE1FFFC01FFE0FFF8
03FFFFF8FFFFE0FFF803FFE0FFF800FFFFF8FFFFF0FFF803FFF87FF800FFFFF8
FFFFF0FFF803FFF83FF800FFFFF8FFFFF0FFF803FFFC3FFE00FFFFF8FFFFF07F
F803FFFC1FFE007FFFF8FFFFF07FF803FFFE1FFE007FFFF8FFFFF87FF803FFFE
1FFE007FFFF8FFFFF87FF803FFFF0FFF007FFFF8FFFFF87FF803FFFF03FF007F
FFF8FFFFF83FE003FFFF83FF003FFFF8FFFFF83FE00FFFFF81FF003FFFF8FFFF
FC3FE00FFFFFE1FF003FFFF8FFFFFC3FE00FFFFFF0FF803FFFF8FFFFFC3FE00F
FFFFF0FF803FFFF8FFFFFC0FE00FFFFFF07F801FFFF8FFFFFC0FE00FFFFFF87F
801FFFF8FFFFFE0FE00FFFFFF83F801FFFF8FFFFFE0FE00FFFFFFC3FC01FFFF8
FFFFFE0FE00FFFFFFE0FC01FFFF8FFFFFE07C01FFFFFFE0FC00FFFF8FFFFFE07
C01FFFFFFE07C00FFFF8FFFFFF87C01FFFFFFF83C00FFFF8FFFFFF87C01FFFFF
FFC3E00FFFF8FFFFFF87C01FFFFFFFC3E00FFFF8FFFFFF83C01FFFFFFFE1E003
FFF8FFFFFFC3C01FFFFFFFE1E003FFF8FFFFFFC3C01FFFFFFFE0E003FFF8FFFF
FFC3C01FFFFFFFF03803FFF8FFFFFFC1C01FFFFFFFF83801FFF8FFFFFFC1C01F
FFFFFFF83801FFF8FFFFFFE1803FFFFFFFFE1801FFF8FFFFFFE1803FFFFFFFFE
1C01FFF8FFFFFFE1803FFFFFFFFE0C01FFF8FFFFFFE0803FFFFFFFFF0400FFF8
FFFFFFE0803FFFFFFFFF8400FFF8FFFFFFF0803FFFFFFFFF8400FFF8FFFFFFF0
803FFFFFFFFFC200FFF8FFFFFFF0803FFFFFFFFFE000FFF8FFFFFFF0003FFFFF
FFFFE0007FF8FFFFFFF0003FFFFFFFFFE0003FF8FFFFE000007FFFFFFFFFF800
0008FFFFE000007FFFFFFFFFF8000008FFFFE000007FFFFFFFFFFC000008FFFF
E000007FFFFFFFFFFE000000FFFFE000007FFFFFFFFFFE000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
109 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF880FFFFF000FFFFF000FFFFE000FFFFE000FFFFE000FFFF8080FFFF8080
FFFF8080FFFF8180FFFF0180FFFF0180FFFE0180FFFE0380FFFE0380FFFE0F80
FFFC0F80FFFC0F80FFFC0F80FFF81F80FFF81F80FFF81F80FFE03F80FFE03F80
FFE03F80FFC07F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80FF80FF80
FF83FF80FF03FF80FF03FF80FE03FF80FE07FF80FE07FF80FE0FFF80F80FFF80
F80FFF80F80FFF80F01FFF80F01FFF80F01FFF80E03FFF80E03FFF80E03FFF80
C0FFFF80C0FFFF80C0FFFF80C1FFFF8081FFFF8081FFFF8081FFFF8081FFFF80
81FFFF80C1FFFF80C0FFFF80C0FFFF80C0FFFF80E03FFF80E03FFF80E03FFF80
F01FFF80F01FFF80F01FFF80F80FFF80F80FFF80F80FFF80FE0FFF80FE07FF80
FE07FF80FE03FF80FF03FF80FF03FF80FF83FF80FF80FF80FF80FF80FF80FF80
FFC0FF80FFC07F80FFC07F80FFC07F80FFE03F80FFE03F80FFE03F80FFF81F80
FFF81F80FFF81F80FFFC0F80FFFC0F80FFFC0F80FFFE0F80FFFE0380FFFE0380
FFFE0180FFFF0180FFFF0180FFFF8180FFFF8080FFFF8080FFFF8080FFFFE000
FFFFE000FFFFE000FFFFF000FFFFF000FFFFF880>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
123 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -1 68 79 setcachedevice
68 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 80 def
/ImageMatrix [68 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF0003FFFFFFFFF0FFF000003FFFFFFFF0FFF000003FFFFFFFF0FFC0000003
FFFFFFF0FE00000000FFFFFFF0FC000000001FFFFFF0F80000000007FFFFF0F0
00007FC003FFFFF0F00007FFFE03FFFFF0E0001FFFFF807FFFF08000FFFFFFE0
3FFFF08000FFFFFFE01FFFF00001FFFFFFF80FFFF00003FFFFFFFC03FFF00007
FFFFFFFE03FFF0000FFFFFFFFE01FFF0000FFFFFFFFF00FFF0000FFFFFFFFF00
FFF0003FFFFFFFFF007FF0003FFFFFFFFF807FF0803FFFFFFFFF807FF0803FFF
FFFFFF803FF0803FFFFFFFFF803FF0803FFFFFFFFF800FF0E00FFFFFFFFF800F
F0E00FFFFFFFFF800FF0F00FFFFFFFFF800FF0F807FFFFFFFF000FF0FC01FFFF
FFFF000FF0FC00FFFFFFFE000FF0FF80FFFFFFFE000FF0FFE0FFFFFFFC000FF0
FFFFFFFFFFFC003FF0FFFFFFFFFFF8003FF0FFFFFFFFFFE0007FF0FFFFFFFFFF
80007FF0FFFFFFFFFF00007FF0FFFFFFFFF80000FFF0FFFFFFFFF80001FFF0FF
FFFFFFE00003FFF0FFFFFFFF80000FFFF0FFFFFFFC00000FFFF0FFFFFFF00000
3FFFF0FFFFFF8000007FFFF0FFFFFF800003FFFFF0FFFFFF00000FFFFFF0FFFF
FE00003FFFFFF0FFFFFC00003FFFFFF0FFFFF80001FFFFFFF0FFFFE00007FFFF
FFF0FFFFE0003FFFFFFFF0FFFFE0007FFFFFFFF0FFFFE000FFFFFFFFF0FFFFC0
00FFFFFFFFF0FFFFC001FFFFFFFFF0FFFFC003FFFFFFFFF0FFFFC003FFFFFFFF
F0FFFFC003FFFFFFFFF0FFFFC00FFFFFFFFFF0FFFFC00FFFFFFF87F0FFFFE00F
FFFFFF81F0FFFFE00FFFFFFF80F0FFFFE00FFFFFFFC0F0FFFFF80FFFFFFFC030
FFFFF803FFFFFFC010FFFFF803FFFFFFC010FFFFFC03FFFFFFC000FFFFFE01FF
FFFF8000FFFFFF01FFFFFF8000FFFFFF80FFFFFF8000FFFFFFE07FFFFE0000FF
FFFFE00FFFF00000FFFFFFF001FF000000FFFFFFFC0000000010FFFFFFFE0000
000010FFFFFFFFC000000030FFFFFFFFF0000000F0FFFFFFFFF0000000F0FFFF
FFFFFF000007F0FFFFFFFFFFE0007FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -3 85 82 setcachedevice
85 0 0 85 0 -3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 85 def
/ImageMatrix [85 0 0 -85 0 85]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFFFFFFFFF8F801FFFFFFFFFFFFFFFFF8F0003FFFFFFFFFFFE01F
F8E0001FFFFFFFFFFFC003F880000FFFFFFFFFFF8000F880000FFFFFFFFFFF80
00F8800007FFFFFFFFFF800078000003FFFFFFFFFF800008000000FFFFFFFFFF
000000000000FFFFFFFFFF000C000000007FFFFFFFFF001F80000F007FFFFFFF
FF001FF8007FC03FFFFFFFFF001FF880FFE01FFFFFFFFE003FF880FFE01FFFFF
FFFE003FF881FFF80FFFFFFFFE003FF8E3FFFC03FFFFFFFE003FF8E3FFFE03FF
FFFFFE003FF8F3FFFE01FFFFFFFE007FF8FFFFFF01FFFFFFFE007FF8FFFFFF00
FFFFFFF8007FF8FFFFFF807FFFFFF8007FF8FFFFFFE07FFFFFF8007FF8FFFFFF
E07FFFFFF8007FF8FFFFFFF000000000007FF8FFFFFFF80000000000FFF8FFFF
FFF80000000000FFF8FFFFFFFC0000000000FFF8FFFFFFFC0000000000FFF8FF
FFFFFE0000000000FFF8FFFFFFFF83FFFFF800FFF8FFFFFFFF81FFFFF800FFF8
FFFFFFFF81FFFFF800FFF8FFFFFFFFC0FFFFF000FFF8FFFFFFFFE03FFFF000FF
F8FFFFFFFFE03FFFF000FFF8FFFFFFFFF03FFFF000FFF8FFFFFFFFF81FFFF000
FFF8FFFFFFFFF81FFFF000FFF8FFFFFFFFF80FFFF003FFF8FFFFFFFFFE07FFF0
03FFF8FFFFFFFFFE07FFF003FFF8FFFFFFFFFF07FFF003FFF8FFFFFFFFFF83FF
F003FFF8FFFFFFFFFF83FFF003FFF8FFFFFFFFFF80FFF003FFF8FFFFFFFFFFC0
FFF003FFF8FFFFFFFFFFC0FFF003FFF8FFFFFFFFFFE07FF003FFF8FFFFFFFFFF
F83FF003FFF8FFFFFFFFFFF83FF003FFF8FFFFFFFFFFF81FF003FFF8FFFFFFFF
FFFC1FF003FFF8FFFFFFFFFFFC1FF003FFF8FFFFFFFFFFFE0FF003FFF8FFFFFF
FFFFFE0FF003FFF8FFFFFFFFFFFE03F003FFF8FFFFFFFFFFFF03F003FFF8FFFF
FFFFFFFF81F003FFF8FFFFFFFFFFFF81F003FFF8FFFFFFFFFFFFE1F003FFF8FF
FFFFFFFFFFE0F003FFF8FFFFFFFFFFFFE0F003FFF8FFFFFFFFFFFFF07003FFF8
FFFFFFFFFFFFF07003FFF8FFFFFFFFFFFFF87003FFF8FFFFFFFFFFFFF83003FF
F8FFFFFFFFFFFFFC3003FFF8FFFFFFFFFFFFFC0003FFF8FFFFFFFFFFFFFC0003
FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFF80
03FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF
C003FFF8FFFFFFFFFFFFFFC003FFF8FFFFFFFFFFFFFFE003FFF8FFFFFFFFFFFF
FFE003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFF
FFFFF803FFF8FFFFFFFFFFFFFFFE03FFF8FFFFFFFFFFFFFFFF03FFF8FFFFFFFF
FFFFFFFFC7FFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 85 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 1 78 82 setcachedevice
78 0 0 81 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 81 def
/ImageMatrix [78 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFFFCFFC1FFFFFFFFFFFFFFFCFFC03FFFFFFFFFFFFFFCFFC0
1FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE00FFF
FFFFFFFFFFFCFFF00FFFFFFFFFFFFFFCFFF007FFFFFFFFFFFFFCFFF007FFFFFF
FFFFFFFCFFF007FFFFFFFFFFFFFCFFF807FFFFFFFFFFFFFCFFF803FFFFFFFFFF
FFFCFFFE03FFFFFFFFFFFFFCFFFE03FFFFFFFFFFFFFCFFFE00FFFFFFFFFFFFFC
FFFE00FFFFFFFFFFFFFCFFFF00FFFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF
007FFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFF803F
FFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFFC03FFFFFFFFFFFFCFFFFC01FFFFF
FFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC00801FFFFFF
FFFCFFFFE00801FFFFFFFFFCFFFFE00C0007FFFFFFFCFFFFE00E00007FFFFFFC
FFFFE00E00001FFFFFFCFFFFF803800001FFFFFCFFFFF803E000007FFFFCFFFF
F803FFE0007FFFFCFFFFF803FFFF803FFFFCFFFFFC01FFFFF807FFFCFFFFFC01
FFFFF803FFFCFFFFFC01FFFFFE00FFFCFFFFFC01FFFFFF803FFCFFFFFC01FFFF
FFE03FFCFFFFFE00FFFFFFF01FFCFFFFFE00FFFFFFF80FFCFFFFFE00FFFFFFF8
07FCFFFFFE00FFFFFFFE03FCFFFFFE007FFFFFFF00FCFFFFFE007FFFFFFF00FC
FFFFFF007FFFFFFF807CFFFFFF007FFFFFFF807CFFFFFF007FFFFFFF803CFFFF
FF007FFFFFFFC03CFFFFFF003FFFFFFFC01CFFFFFF003FFFFFFFC01CFFFFFF80
3FFFFFFFE01CFFFFFF803FFFFFFFE00CFFFFFF803FFFFFFFE00CFFFFFF803FFF
FFFFE00C1FFFFF800FFFFFFFE0001FFFFF800FFFFFFFE00003FFFF800FFFFFFF
E00000FFFFE00FFFFFFFE000007FFFE00FFFFFFFC000007FFFE00FFFFFFFC000
803FFFE00FFFFFFFC000E03FFFE00FFFFFFFC000E03FFFE007FFFFFF8000F00F
FFE007FFFFFF000CF00FFFE007FFFFFE000CF807FFE007FFFFF0000CFC01FFE0
07FFFFC0000CFE01FFF007FFFFC0001CFF803FF007FFFE00003CFFE000F007FF
8000007CFFE0000000000000007CFFF800000000000000FCFFFF000000000000
07FCFFFFC000000000001FFCFFFFFC0000000000FFFCFFFFFFF00000003FFFFC
FFFFFFF00000003FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 1 88 79 setcachedevice
88 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 88 def
/Height 78 def
/ImageMatrix [88 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFFFFFFFE00FFFFFFFC0FFFFFFFFFF8000FFFFFFE0FFFFFFFFFF8000FF
FFFFE01FFFFFFFFE00001FFFFFE00FFFFFFFFC000003FFFFE00FFFFFFFF80000
01FFFFF007FFFFFFF80000007FFFF007FFFFFFF0000F003FFFF807FFFFFFF000
3FF03FFFF807FFFFFFF000FFF80FFFF803FFFFFFE001FFFC07FFF803FFFFFFE0
01FFFC03FFFE00FFFFFF8001FFFC01FFFE00FFFFFF8003FFFE01FFFE00FFFFFF
8003FFFF81FFFF00FFFFFF8007FFFFC0FFFF007FFFFF0007FFFFF8FFFF007FFF
FF0007FFFFF8FFFF007FFFFE000FFFFFFFFFFF803FFFFE000FFFFFFFFFFF803F
FFFE000FFFFFFFFFFF803FFFFE003FFFFFFFFFFFC03FFFFC003FFFFFFFFFFFC0
1FFFFC003FFFFFFFFFFFC01FFFF8007FFFFFFFFFFFC01FFFF8007FFFFFFFFFFF
E01FFFF8007FFFFFFFFFFFE00FFFE000FFFFFFFFFFFFE00FFFE000FFFFFFFFFF
FFE00FFFC000FFFFFFFFFFFFF803FF8001FFFFFFFFFFFFF803FE0001FFFFFFFF
FFFFF803FE0003FFFFFFFFFFFFF803E00003FFFFFFFFFFFFFC01F0000FFFFFFF
FFFFFFFC01F0000FFFFFFFFFFFFFFC01F80000FFFFFFFFFFFFFC01FE00003FFF
FFFFFFFFFC01FF80003FFFFFFFFFFFFE00FFFF000FFFFFFFFFFFFE00FFFFF803
FFFFFFFFFFFE00FFFFF801FFFFFFFFFFFE00FFFFFF803FFFFFFFFFFE007FFFFF
C01FFFFFFFFFFF007FFFFFF01FFFFFFFFFFF007FFFFFF80FFFFFFFFFFF007FFF
FFFE07FFFFFFFFFF007FFFFFFE03FFFFFFFFFF003FFFFFFF00FFFFFFFFFF003F
FFFFFF007FFFFFFFFF803FFFFFFF807FFFFFFFFF803FFFFFFFC07FFFFFFFFF80
3FFFFFFFC03FFFFFFFFF803FFFFFFFC01FFFFFFFFF800FFFFFFFC01FFF1FFFFF
800FFFFFFFE00FFF1FFFFF800FFFFFFFE00FFF03FFFFE00FFFFFFFE00FFF00FF
FFE00FFFFFFFE00FFF007FFFE00FFFFFFFE003FF007FFFE00FFFFFFFE003FF80
3FFFE007FFFFFFE003FFE03FFFE007FFFFFFE003FFE03FFFE007FFFFFFC003FF
F00FFFE007FFFFFFC003FFF00FFFE007FFFFFF8003FFF807FFE007FFFFFF0003
FFFC01FFF007FFFFF80003FFFE01FFF007FFFFF8000FFFFF803FF007FFFFC000
0FFFFFE000F007FFF000001FFFFFE0000000000000001FFFFFF8000000000000
003FFFFFFF000000000000007FFFFFFFC0000000000003FFFFFFFFFC00000000
001FFFFFFFFFFFF000000007FFFFFFFFFFFFF000000007FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
88 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFF8083FFFF8083FFFF8081FFFF8081FFFF8081FFFF80C07FFF80C07FFF80
C07FFF80E07FFF80E03FFF80E03FFF80E01FFF80F01FFF80F01FFF80FC1FFF80
FC0FFF80FC0FFF80FC0FFF80FE07FF80FE07FF80FE07FF80FF01FF80FF01FF80
FF01FF80FF80FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80FFC07F80
FFF07F80FFF03F80FFF03F80FFF01F80FFF81F80FFF81F80FFFC1F80FFFC0780
FFFC0780FFFC0780FFFE0380FFFE0380FFFE0380FFFF0180FFFF0180FFFF0180
FFFFC080FFFFC080FFFFC080FFFFE080FFFFE000FFFFE000FFFFE000FFFFE000
FFFFE000FFFFE080FFFFC080FFFFC080FFFFC080FFFF0180FFFF0180FFFF0180
FFFE0380FFFE0380FFFE0380FFFC0780FFFC0780FFFC0780FFFC1F80FFF81F80
FFF81F80FFF01F80FFF03F80FFF03F80FFF07F80FFC07F80FFC07F80FFC07F80
FFC0FF80FF80FF80FF80FF80FF80FF80FF01FF80FF01FF80FF01FF80FE07FF80
FE07FF80FE07FF80FC0FFF80FC0FFF80FC0FFF80FC1FFF80F01FFF80F01FFF80
E01FFF80E03FFF80E03FFF80E07FFF80C07FFF80C07FFF80C07FFF8081FFFF80
81FFFF8081FFFF8083FFFF8083FFFF80C7FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
95 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 -1 119 82 setcachedevice
119 0 0 83 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 119 def
/Height 83 def
/ImageMatrix [119 0 0 -83 0 83]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FFFFFFFFFFFFFFFFFFFFFFFFFFEF003FFFFFFFFFFFFFFFFFFFFFFFFFEC001
FFFFFFFFFFFFFFFFFFFFF807FE00007FFFFFFFFFFFFFFFFFFFF001FE00003FFF
FFFFFFFFFFFFFFFFF0003E00003FFFFFFFFFFFFFFFFFFFF0003E00003FFFFFFF
FFFFFFFFFFFFE0000E00001FFFFFFFFFFFFFFFFFFFE0000600000FFFFFFFFFFF
FFFFFFFFE0000000000FFFFFFFFF1FFFFFFFFFE00300000007FFFFFFFF0FFFFF
FFFFE003C0C01E07FFFFFFFF0FFFFFFFFFE007FEC0FF07FFFFFFFC07FFFFFFFF
E007FEE3FF81FFFFFFFC03FFFFFFFFE007FEE3FF81FFFFFFF801FFFFFFFFE007
FEFFFF80FFFFFFF8007FFFFFFFE007FEFFFFC0FFFFFFF0003FFFFFFFE007FEFF
FFF0FFFFFFF0003FFFFFFFE007FEFFFFF0FFFFFFF0001FFFFFFFE007FEFFFFF8
7FFFFFE0000FFFFFFFE007FEFFFFF87FFFFFE00007FFFFFFE007FEFFFFF83FFF
FFC00001FFFFFFE007FEFFFFF83FFFFFC00400FFFFFFE007FEFFFFFC3FFFFFC0
0600FFFFFFE007FEFFFFFC3FFFFF000F007FFFFFE007FEFFFFFE1FFFFF000F80
3FFFFFF007FEFFFFFE1FFFFF000F801FFFFFF007FEFFFFFE07FFFE001FC007FF
FFF007FEFFFFFE07FFFE001FF003FFFFF007FEFFFFFF07FFFE007FF803FFFFF0
07FEFFFFFF07FFFE007FFC01FFFFF003FEFFFFFFC3FFFE007FFE00FFFFF003FE
FFFFFFC3FFFC007FFE00FFFFF003FEFFFFFFC1FFFC00FFFF007FFFF003FEFFFF
FFC1FFFC00FFFFC01FFFF003FEFFFFFFE1FFFC00FFFFE01FFFF003FEFFFFFFE1
FFF800FFFFF00FFFF803FEFFFFFFE0FFF801FFFFF807FFF803FEFFFFFFE0FFF8
01FFFFF803FFF803FEFFFFFFF0FFF801FFFFFC01FFF803FEFFFFFFF07FF001FF
FFFF007FF801FEFFFFFFF07FF003FFFFFF007FF801FEFFFFFFF87FF003FFFFFF
807FF801FEFFFFFFF87FF003FFFFFFC03FF801FEFFFFFFF81FF003FFFFFFC01F
F801FEFFFFFFF81FC003FFFFFFE00FFC01FEFFFFFFFC1FC007FFFFFFF007FC01
FEFFFFFFFC1FC007FFFFFFFC07FC01FEFFFFFFFC0FC007FFFFFFFE01FC01FEFF
FFFFFC0FC007FFFFFFFF00FC007EFFFFFFFC0F8007FFFFFFFF00FC007EFFFFFF
FF0F801FFFFFFFFF007C007EFFFFFFFF07801FFFFFFFFF803F007EFFFFFFFF07
801FFFFFFFFFC03F007EFFFFFFFF07801FFFFFFFFFF01F007EFFFFFFFF87003F
FFFFFFFFF807007EFFFFFFFF87003FFFFFFFFFF803003EFFFFFFFF83003FFFFF
FFFFFC01003EFFFFFFFF83003FFFFFFFFFFE01003EFFFFFFFF83003FFFFFFFFF
FE01803EFFFFFFFFC3007FFFFFFFFFFF00803EFFFFFFFFC2007FFFFFFFFFFFC0
003EFFFFFFFFC0007FFFFFFFFFFFC0003EFFFFFFFFC0007FFFFFFFFFFFE0001E
FFFFFFFFC0007FFFFFFFFFFFF0001EFFFFFFFFC0007FFFFFFFFFFFF8001EFFFF
FFFFE000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFC001EFFFFFFFF
E000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFF000EFFFFFFFFE000
FFFFFFFFFFFFFF800EFFFFFFFFE000FFFFFFFFFFFFFFC00EFFFFFFFFE001FFFF
FFFFFFFFFFE00EFFFFFFFFF001FFFFFFFFFFFFFFF00EFFFFFFFFF001FFFFFFFF
FFFFFFF00EFFFFFFFFF001FFFFFFFFFFFFFFF006FFFFFFFFF001FFFFFFFFFFFF
FFFC06FFFFFFFFF001FFFFFFFFFFFFFFFE06FFFFFFFFF007FFFFFFFFFFFFFFFF
06FFFFFFFFFC07FFFFFFFFFFFFFFFF86FFFFFFFFFC07FFFFFFFFFFFFFFFF86FF
FFFFFFFE07FFFFFFFFFFFFFFFFC6FFFFFFFFFF87FFFFFFFFFFFFFFFFF6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
119 83 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 38 43 95 setcachedevice
43 0 0 57 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 57 def
/ImageMatrix [43 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFFFE0FFE007FFFFE0FF00007FFFE0FC00000FFFE0F8000007FFE0F000
0000FFE0C0001F807FE0C000FFF87FE0C003FFFC1FE08007FFFE07E08007FFFE
03E0801FFFFF01E0003FFFFFC0E0003FFFFFE0E0007FFFFFF8E0007FFFFFFFE0
007FFFFFFFE0007FFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FF
FFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE080FFFFFFFFE080FFFFFF
FFE080FFFFFFFFE0807FFFFFFFE0807FFFFFFFE0C07FFFFFFFE0C07FFFFFFFE0
C07FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F81FFFFFFFE0F81F
FFFFFFE0FC1FFFFE1FE0FC07FFFE07E0FC07FFFE03E0FE03FFFF01E0FF01FFFF
01E0FF01FFFFC1E0FFC1FFFFC0E0FFE0FFFFE0E0FFE07FFFE060FFF01FFFE060
FFF80FFFE000FFFC0FFFE000FFFF83FFC000FFFFC07F0000FFFFC0000000FFFF
F0000000FFFFFE000000FFFFFF800060FFFFFFFC00E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 1 73 76 setcachedevice
73 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 75 def
/ImageMatrix [73 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000003FFFFFF808000000000003FFFFF8080000000000003FFFF80E000
0000000001FFFF80F00000000000007FFF80FC0000000000007FFF80FFFFF81F
FFFFE03FFF80FFFFFC0FFFFFF80FFF80FFFFFC03FFFFF807FF80FFFFFE01FFFF
F803FF80FFFFFE00FFFFFC03FF80FFFFFF00FFFFFE03FF80FFFFFF00FFFFFF81
FF80FFFFFF807FFFFFE1FF80FFFFFF807FFFFFE1FF80FFFFFF803FFFFFFFFF80
FFFFFFE03FFFFFFFFF80FFFFFFE03FFFFFFFFF80FFFFFFE00FFFFFFFFF80FFFF
FFF00FFFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF0
07FFFFFFFF80FFFFFFF807FFFFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF803FF
FFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF801FFFFFFFF80FFFFFFFC01FFFFFF
FF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80
FFFFFFFC00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFF
FFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF
803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803F
FFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFF
FF80FFFFFFFFC01FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80
FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE007FFFFFF80FFFF
FFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFF
F807FFFFFF80FFFFFFFFF803FFFFFF80FE3FFFFFF803FFFFFF80FE07FFFFFE03
FFFFFF80FE01FFFFFE00FFFFFF80FE01FFFFFE00FFFFFF80FF80FFFFFF00FFFF
FF80FF80FFFFFF007FFFFF80FF803FFFFF007FFFFF80FFC03FFFFF807FFFFF80
FFE01FFFFFC03FFFFF80FFF01FFFFFC03FFFFF80FFF807FFFFE01FFFFF80FFFE
001FFFF81FFFFF80FFFE0000000000001F80FFFF8000000000000780FFFFE000
000000000080FFFFFC00000000000080FFFFFF80000000000000FFFFFFFE0000
00000000FFFFFFFE000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -1 61 98 setcachedevice
61 0 0 99 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 99 def
/ImageMatrix [61 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8
0FFFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF883FFFFFFFFFFFFF8
83FFFFFFFFFFFFF883FFFFFFFFFFFFF881FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8
E1FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8
F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F07FFFFFFFFFFFF8
F07FF800FFFFFFF8F87FF800FFFFFFF8F87FC0000FFFFFF8F87F03FC01FFFFF8
F83E03FC003FFFF8F8380FFFC01FFFF8FC303FFFF007FFF8FC30FFFFF807FFF8
FC20FFFFFE03FFF8FC01FFFFFF00FFF8FC01FFFFFF007FF8FE01FFFFFF803FF8
FE03FFFFFFC01FF8FE03FFFFFFE01FF8FE03FFFFFFE00FF8FF83FFFFFFF80FF8
FF83FFFFFFF803F8FF83FFFFFFF803F8FF83FFFFFFFC01F8FF83FFFFFFFC01F8
FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC1FFFFFFFE00F8
FFC1FFFFFFFE00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8
FFE0FFFFFFFF00F8FFE0FFFFFFFF00F8FFF0FFFFFFFF00F8FFF0FFFFFFFF00F8
FFF0FFFFFFFF00F8FFF03FFFFFFF00F8FFF03FFFFFFF00F8FFF83FFFFFFF00F8
FFF83FFFFFFF01F8FFF83FFFFFFF01F8FFF81FFFFFFE01F8FFFE1FFFFFFE03F8
FFFE1FFFFFFE03F8FFFE1FFFFFFC0FF8FFFE0FF800380FF8FFFE0FF800381FF8
FFFF0FE000003FF8FFFF0FE1FF00FFF8FFFF0FE000003FF8FFFF07E000001FF8
FFFF07F8001803F8FFFF87FFFFFC03F8FFFF87FFFFFE01F8FFFF83FFFFFF00F8
FFFF83FFFFFF00F8FFFFC3FFFFFF8078FFFFC0FFFFFFE038FFFFC0FFFFFFE038
FFFFE0FFFFFFF038FFFFE0FFFFFFF008FFFFE07FFFFFF008FFFFF87FFFFFF008
FFFFF83FFFFFF808FFFFFC3FFFFFF808FFFFFC1FFFFFF800FFFFFE1FFFFFF800
FFFFFE0FFFFFF800FFFFFE0FFFFFF800FFFFFF03FFFFFC00FFFFFF83FFFFFC00
FFFFFFE1FFFFF808FFFFFFE0FFFFF808FFFFFFE07FFFF808FFFFFFF03FFFF008
FFFFFFF80FFFF038FFFFFFFE0FFFF078FFFFFFFF83FFE0F8FFFFFFFFE0FF01F8
FFFFFFFFE00001F8FFFFFFFFF8000FF8FFFFFFFFFF003FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
65 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
74 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
132 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/B/N68 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%BeginResource: font D
10 dict begin
T3Defs
/FontType 3 def
/FontName /N196 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-56 
76 
179 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 60 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 63 23 setcachedevice
63 0 0 71 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 71 def
/ImageMatrix [63 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFC03FE8FFFFFFFFFC000FE03FFFFFFFF00007E01FFFFFFFE00703E
81FFFFFFFE00783EE0FFFFFFF800FC3EF07FFFFFF803FC0EF03FFFFFF003FC0E
F03FFFFFF003FE3EF80FFFFFF007FFFEFC0FFFFFF007FFFEFE07FFFFE00FFFFE
FF83FFFFE00FFFFEFF81FFFFC00FFFFEFFC0FFFFC00FFFFEFFE03FFFC01FFFFE
FFF03FFFC01FFFFEFFF81FFF803FFFFEFFFE0FFF803FFFFEFFFE0FFF803FFFFE
FFFE07FE003FFFFEFFFF03FE00FFFFFEFFFF83FE00FFFFFEFFFFC0FE00FFFFFE
FFFFE07C01FFFFFEFFFFE03C01FFFFFEFFFFF81C01FFFFFEFFFFFC0801FFFFFE
FFFFFE0803FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFE
FFFFFF8007FFFFFEFFFFFFE007FFFFFEFFFFFFF007FFFFFEFFFFFFF007FFFFFE
FFFFFFE00FFFFFFEFFFFFFE007FFFFFEFFFFFFE003FFFFFEFFFFFFE001FFFFFE
FFFFFFE001FFFFFEFFFFFF8020FFFFFEFFFFFF80203FFFFEFFFFFF80203FFFFE
FFFFFF00701FFFFEFFFFFF00780FFFFEFFFFFF007E0FFFFEFFFFFF007F07FFFE
FFFFFE00FF83FFFEFFFFFE00FF80FFFEFFFFFE00FFC07FFEFFFFFC00FFE03FFE
FFFFFC01FFF83FFEFFFFFC01FFFC1FFEFFFFFC01FFFC0FFEFFFFF801FFFC0FFE
FFFFF803FFFE03FEFFFFE003FFFF01FEFFFFE00FFFFF81FEFFFFE00FFFFFE0FE
FFFFC00FFFFFF07EFFFFC00FFFFFF03EF8FF801FFFFFF80EF87F801FFFFFFC06
F87F803FFFFFFE06F87F003FFFFFFF82F83F007FFFFFFF80F80E007FFFFFFF80
FC0000FFFFFFFFC0FE0007FFFFFFFFE0FFC01FFFFFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 46 53 setcachedevice
46 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 53 def
/ImageMatrix [46 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFF80FC1FFFFFFC001C0FFFFFF8000C0FFFFFF0070C8FFFFFF00F8C83FF
FFE00F84E1FFFFE03FCCE0FFFFE03FCCF07FFF803FFCF83FFF807FFCFC3FFF80
7FFCFE0FFF00FFFCFF87FF00FFFCFF83FF00FFFCFFC1FE01FFFCFFE0FE01FFFC
FFF0FE01FFFCFFF83E03FFFCFFFE3C03FFFCFFFE1C03FFFCFFFE0C03FFFCFFFF
000FFFFCFFFF800FFFFCFFFFC00FFFFCFFFFE01FFFFCFFFFE01FFFFCFFFFE01F
FFFCFFFFE01FFFFCFFFFE01FFFFCFFFFC00FFFFCFFFFC003FFFCFFFFC001FFFC
FFFF8060FFFCFFFF8070FFFCFFFF8078FFFCFFFF80F87FFCFFFF00FC3FFCFFFF
00FC0FFCFFFF00FE07FCFFFE03FF83FCFFFE03FFC3FCFFFE03FFE1FCFFF807FF
F0FCFFF807FFF03CFFF007FFF81CEFF00FFFFE0CEFF00FFFFF0C83E00FFFFF84
E3E01FFFFFC4E1C01FFFFFC0E0003FFFFFC0F000FFFFFFE0FC03FFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -16 23 11 setcachedevice
23 0 0 27 0 -16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 23 def
/Height 27 def
/ImageMatrix [23 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF803EFF803EFC000EF01F86E01F86C0FFF6C1FFFEC1FFFE01FFFE03FFFE03FF
FE03FFFE03FFFE03FFFE01FFFE00000E00000E00000EC0FFFEC0FFFEE0FFFEF0
7FFEF01FFEF803FEFC0000FF8000FFF000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
23 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 34 44 setcachedevice
34 0 0 44 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 44 def
/ImageMatrix [34 0 0 -44 0 44]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE001FFFC0FE001FFFC0F80003FFC0F000007FC0E000003FC0E003F80FC0800F
FE03C0803FFF03C0807FFF81C0007FFFE0C0007FFFE04000FFFFF04000FFFFFF
C001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001
FFFFFFC001FFFFFFC081FFFFFFC080FFFFFFC080FFFFFFC080FFFFFFC080FFFF
FFC0E0FFFFFFC0E07FFFFFC0E07FFF1FC0F03FFF03C0F03FFF01C0F83FFF81C0
F80FFF80C0FC0FFFE0C0FC07FFE040FE03FFE040FF81FFF000FFC1FFF000FFF0
3FF000FFF80FE000FFF8000000FFFF000000FFFFC00000FFFFFC0040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 44 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -77 65 3 setcachedevice
65 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 65 def
/Height 80 def
/ImageMatrix [65 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF8007FFFFFFF8087FF00000FFFFFFF8087FF00000FFFFFFF8083FC000001
FFFFFF8081F803FF007FFFFF8081C003FF001FFFFF8080003FFFC007FFFF80C0
00FFFFF803FFFF80C001FFFFFC03FFFF80C007FFFFFE01FFFF80C00FFFFFFF00
FFFF80C00FFFFFFF007FFF80E00FFFFFFFC01FFF80E01FFFFFFFE01FFF80E01F
FFFFFFE01FFF80E03FFFFFFFF00FFF80F03FFFFFFFF00FFF80F03FFFFFFFF007
FF80F03FFFFFFFF807FF80F03FFFFFFFF803FF80F03FFFFFFFF803FF80FC3FFF
FFFFFC03FF80FC3FFFFFFFFC03FF80FC1FFFFFFFFC03FF80FC1FFFFFFFFC01FF
80FC1FFFFFFFFC01FF80FE1FFFFFFFFC01FF80FFFFFFFFFFFC01FF80FFFFFFFF
FFF801FF80FFFFFFFFFFF801FF80FFFFFFFFFFF001FF80FFFFFFFFFFE001FF80
FFFFFFFFFFE001FF80FFFFFFFFFFC003FF80FFFFFFFFFE0003FF80FFFFFFFFC0
0003FF80FFFFFFFC000003FF80FFFFFFC0000007FF80FFFFFFC0000007FF80FF
FFFC0000000FFF80FFFFF00000001FFF80FFFFE00000001FFF80FFFFC0000000
7FFF80FFFF00000000FFFF80FFFF00000003FFFF80FFFF0000003FFFFF80FFFE
000007FFFFFF80FFFE000007FFFFFF80FFFC00007FFFFFFF80FFFC0007FFFFFF
FF80FFFC001FFFFFFFFF80FFFC007FFFFFFFFF80FFFC00FFFFFFFFFF80FFFC00
FFFFFFFE1F80FFFC00FFFFFFFE1F80FFFC01FFFFFFFE1F80FFFC01FFFFFFFE1F
80FFFC01FFFFFFFE1F80FFFE01FFFFFFFE0F80FFFE01FFFFFFFE0F80FFFE01FF
FFFFFE0F80FFFE00FFFFFFFE0F80FFFE00FFFFFFFE0F80FFFF00FFFFFFFE0780
FFFF00FFFFFFFE0780FFFF007FFFFFFE0780FFFFC07FFFFFFC0780FFFFE01FFF
FFFC0180FFFFE01FFFFFFC0180FFFFF00FFFFFF00180FFFFF807FFFFF00180FF
FFF803FFFFE00180FFFFFC01FFFFC00080FFFFFF003FFF800080FFFFFF803FFF
818080FFFFFFE00FF803C080FFFFFFFC00000FF080FFFFFFFC00000FF000FFFF
FFFF00007FF800FFFFFFFFF001FFF800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
65 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
105 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -6 6 104 setcachedevice
6 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 6 def
/Height 110 def
/ImageMatrix [6 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C480808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
80808080808080808080808080C4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
6 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
104 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
98 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 38 35 109 setcachedevice
35 0 0 71 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 71 def
/ImageMatrix [35 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00FFFFFE0C000FFFFE080007FFFE081C01FFFE081F81FFFE080FC0FFFE080FE
03FFE080FE01FFE080FE01FFE0E1FF00FFE0FFFF00FFE0FFFF80FFE0FFFF80FF
E0FFFF807FE0FFFF807FE0FFFF807FE0FFFFE07FE0FFFFE07FE0FFFFE03FE0FF
FFE03FE0FFFFE03FE0FFFFF03FE0FFFFF03FE0FFFFF00FE0FFFFF00FE0FFFFF0
0FE0FFFFF80FE0FFFFF807E0FFFFF807E0FFFFF807E0FFFFFC07E0FFFFFC07E0
FFFFFC03E0FFFFFC03E0FFFFFC03E0FFFFFE03E0FFFFFE03E0FFFFFE01E0FFCF
FE01E0FFC7FE01E0FFC7FF81E0FFC3FF81E0FFE3FF81E0FFE0FF80E0FFE0FF80
E0FFF87FC0E0FFF87FC0E0FFFC3FC1E0FFFE1FC1E0FFFE0381E0FFFF0001E0FF
FF8007E0FFFFF80FE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFF0E0
FFFFFFF0E0FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFF000FFFF
FFF820>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 22 47 75 setcachedevice
47 0 0 53 0 22 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 53 def
/ImageMatrix [47 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC6FFFFFFFFFF00FFFFFFFFFC00FFFFFFFFF000FFFFFFFFF000FFFF
FFFFC000FFFFFFFF0000FFFFFFF80000FFFFFFF00180FFFFFFC00380FFFFFFC0
0F80FFFFFE007F80FFFFFC01FF80FFFFF001FF80FFFF8003FF80FFFF001FFF80
FFFF007FFF80FFFC00FFFF80FFE007FFFF80FF8007FFFF80FF001FFFFF80F800
3FFFFF80F801FFFFFF80E007FFFFFF80C01FFFFFFF80001FFFFFFF80007FFFFF
FF80001FFFFFFF80C01FFFFFFF80E007FFFFFF80F801FFFFFF80F8003FFFFF80
FF001FFFFF80FF8007FFFF80FFE007FFFF80FFFC00FFFF80FFFF007FFF80FFFF
001FFF80FFFF8003FF80FFFFF001FF80FFFFFC01FF80FFFFFE007F80FFFFFFC0
0F80FFFFFFC00380FFFFFFF00180FFFFFFF80000FFFFFFFF0000FFFFFFFFC000
FFFFFFFFF000FFFFFFFFF000FFFFFFFFFC00FFFFFFFFFF00FFFFFFFFFFC6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 3 28 78 setcachedevice
28 0 0 75 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 75 def
/ImageMatrix [28 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE03FF0FFE03FF0FF800FF0FE0383F0FC0380F0FC07C0F0FC07E070FC07F870
FC07F830FC07FC30FC03FC10FC03FC10FC03FE10FC03FE10FC01FE00FE01FF00
FE01FF00FE00FF00FE00FF00FF80FFF0FF803FF0FFC03FF0FFC03FF0FFC01FF0
FFC01FF0FFE01FF0FFE01FF0FFE00FF0FFE00FF0FFF007F0FFF007F0FFF807F0
03F807F003F803F003F803F083FE03F081FE00F081FE00F0E1FF00F0E1FF00F0
E0FF00F0F0FF00F0F07F80F0F87F80F0F83F80F0FC3F83F0FC0703F0FE0003F0
FF8007F0FFE01FF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFF870FFFFC010FFFFC010FFFFC000FFFFC000FFFFC000FFFFC000
FFFFE000FFFFE000FFFFFC10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 -73 44 23 setcachedevice
44 0 0 96 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 96 def
/ImageMatrix [44 0 0 -96 0 96]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F803FFFFFFF0E0007FFFFFF0C0001FFFFFF081F803FFFFF081FC03FFFFF0803E
01FFFFF0801F00FFFFF0801F007FFFF0801F803FFFF0801FE00FFFF0801FE00F
FFF0C01FF00FFFF0F0FFF007FFF0F0FFF007FFF0FFFFF807FFF0FFFFF803FFF0
FFFFF803FFF0FFFFFC03FFF0FFFFFC03FFF0FFFFFC01FFF0FFFFFC01FFF0FFFF
FC01FFF0FFFFFE01FFF0FFFFFE01FFF0FFFFFE00FFF0FFFFFE00FFF0FFFFFE00
FFF0FFFFFF80FFF0FFFFFF80FFF0FFFFFF803FF0FFFFFF803FF0FFFFFF803FF0
FFFFFFC03FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFE01FF0FFFF
FFE01FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFF00FF0FFFFFFF0
0FF0FFFFFFF007F0FFFFFFF007F0FFFFFFF007F0FFFFFFF807F0FFFFFFF807F0
FFFFFFF803F0FFFFFFF803F0FFFFFFF803F0FFFFFFFE03F0FFFFFFFE03F0FFF8
3FFE00F0FFF83FFE00F0FFF83FFE00F0FFFC1FFF00F0FFFC1FFF00F0FFFE1FFF
00F0FFFE0FFF0070FFFF0FFF8070FFFF03FF8070FFFF01FF8070FFFF81FF8070
FFFFE1FF80F0FFFFF0FF80F0FFFFF87F83F0FFFFF80F03F0FFFFFC0003F0FFFF
FF800FF0FFFFFFE03FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFF
FFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0
FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFF870FFFFFFFFC010FFFFFFFFC010FFFFFFFFC000FFFFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFE000FFFFFFFFE000FFFFFFFFFC30
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 96 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -78 68 0 setcachedevice
68 0 0 78 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 78 def
/ImageMatrix [68 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FFFE
00000000F8001FFFFFF80007F0FF007FFFFFFE000FF0FF81FFFFFFFF001FF0FF
C1FFFFFFFF001FF0FFC1FFFFFFFE001FF0FFC1FFFFFFFE001FF0FFE1FFFFFFFE
007FF0FFE1FFFFFFFE007FF0FFE1FFFFFFFC007FF0FFF07FFFFFFC00FFF0FFF0
7FFFFFFC00FFF0FFF07FFFFFF800FFF0FFF03FFFFFF800FFF0FFFC3FFFFFF801
FFF0FFFC3FFFFFF801FFF0FFFC3FFFFFF001FFF0FFFC1FFFFFF001FFF0FFFC1F
FFFFF001FFF0FFFE1FFFFFF003FFF0FFFE1FFFFFF003FFF0FFFE0FFFFFC003FF
F0FFFF0FFFFFC007FFF0FFFF0FFFFFC007FFF0FFFF07FFFF8007FFF0FFFF07FF
FF8007FFF0FFFF87FFFF801FFFF0FFFF87FFFF801FFFF0FFFF87FFFF001FFFF0
FFFF81FFFF001FFFF0FFFFC1FFFF003FFFF0FFFFC1FFFE003FFFF0FFFFC1FFFE
003FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFC007FFFF0FF
FFF07FFC007FFFF0FFFFF87FFC00FFFFF0FFFFF87FFC00FFFFF0FFFFF87FF000
FFFFF0FFFFF83FF000FFFFF0FFFFF83FF000FFFFF0FFFFFC3FF001FFFFF0FFFF
FC1FE001FFFFF0FFFFFC1FE001FFFFF0FFFFFE1FE007FFFFF0FFFFFE1FE007FF
FFF0FFFFFE1FC007FFFFF0FFFFFE07C007FFFFF0FFFFFF07C00FFFFFF0FFFFFF
07C00FFFFFF0FFFFFF07800FFFFFF0FFFFFFC3801FFFFFF0FFFFFFC3801FFFFF
F0FFFFFFC3001FFFFFF0FFFFFFC1001FFFFFF0FFFFFFE1003FFFFFF0FFFFFFE1
003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0
FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF801
FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FF
FFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FF
FFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
0 0 0 39 35 94 setcachedevice
35 0 0 55 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 55 def
/ImageMatrix [35 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFE0FFE001FFE0FF80007FE0FC0FF01FE0F00FF003E0E07FFC01E0C1FF
FE00E0C3FFFE00E0C7FFFF00E001FFFF0060007FFF0060007FFF0000007FFFC0
00007FFFC000007FFFC000C0FFFFC000C0FFFFC000E1FFFFC000FFFFFFC000FF
FFFFC000FFFFFF0060FFFFFF0060FFFFFF0060FFFFFE00E0FFFFFE00E0FFFFFE
01E0FFFFFC03E0FFFFF01FE0FFC0001FE0FFC0007FE0FFC0007FE0FFFF807FE0
FFFFF03FE0FFFFF81FE0FFFFF807E0FFFFFC03E0FFFFFC01E0FFFFFE01E0FFFF
FE01E0FFFFFE00E0F8FFFE00E0E01FFE00E0E01FFF00E0E01FFF00E0E00FFF00
E0E01FFE00E0E01FFE00E0E01FFE00E0F0FFFC01E0F0FFFC03E0F87FF807E0FC
07F01FE0FC00001FE0FF80007FE0FFF001FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 56 69 94 setcachedevice
69 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 38 def
/ImageMatrix [69 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFF87FFFFE03F8F87FFFF87FFFFE03F8F03FFFF03FFFF801F8F00FFFF00F
FFF07038F00FFFF00FFFF07038F00FFFF00FFFE07E18F80FFFF80FFFE07E08F8
0FFFF80FFFE07F08F807FFF807FFE07F88F807FFF807FFE03F80F807FFF807FF
E03F80FC07FFFC07FFF00FC0FC03FFFC03FFF00FC0FC03FFFC03FFF80FC0FC03
FFFC03FFF80FE0FE03FFFE03FFF807F8FE03FFFE03FFF807F8FE01FFFE01FFFC
07F8FE01FFFE01FFFC03F8FE01FFFE01FFFC03F8FF81FFFF81FFFE03F8FF81FF
FF81FFFE03F8FF80FFFF80FFFE03F83F80FFFF80FFFE01F81F80FFFF80FFFE01
F81FC0FFFFC0FFFF81F81FC03FFFC03FFF81F80FC01FFFC03FFF81F80FC01FFF
C01FFF81F88FC00FFFC00FFF81F883E007FFC00FFF81F883E007FFC08FFF81F8
E3E0C3FFC087FF81F8E1E0E0FFC1C0FF83F8E1C0E03F81C03E03F8F001F80001
F80003F8F003FE0007FC000FF8FC0FFF803FFF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 6 19 49 setcachedevice
19 0 0 43 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 43 def
/ImageMatrix [19 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FE0FC0FE0F803E0F061E0F06060F07C60F07C20F07E20F07E20F81F00F81F
00F81F20F80FE0FC0FE0FC0FE0FF07E0FF07E0FF07E01F03E01F83E01F83E01F
83E00781E0C3C1E0E1C3E0E1C3E0F007E0FC0FE0FC0FE0FFFFE0FFFFE0FFFFE0
FFFFE0FFFFE0FFFFE0FFFFE0FFE1E0FFE1E0FFE060FFE020FFE020FFE020FFF0
60>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
0 0 0 6 22 46 setcachedevice
22 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 40 def
/ImageMatrix [22 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000FE01FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03
FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF
03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FC
FF03FC0103FC0003FC0003FCFC03FCFF03FCFF03FCFFC3FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
39 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 3 44 76 setcachedevice
44 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 73 def
/ImageMatrix [44 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000030800000000030800000000030800000000030C00000000010E000
00000010F00000000010F00000000010F00000000010F80FFFFFFC10FE07FFFF
FE10FF07FFFFFE10FF83FFFFFE10FFC0FFFFFE10FFC07FFFFE00FFE03FFFFF00
FFF81FFFFF00FFF81FFFFF00FFFC0FFFFF00FFFE03FFFFF0FFFE01FFFFF0FFFF
00FFFFF0FFFF807FFFF0FFFFE07FFFF0FFFFF03FFFF0FFFFF80FFFF0FFFFF807
FFF0FFFFF803FFF0FFFFFC01FFF0FFFFFE01FFF0FFFFFF80FFF0FFFFFFC03FF0
FFFFFFC01FF0FFFFFFC00FF0FFFFFFE007F0FFFFFFF007F0FFFFFFF003F0FFFF
FFF800F0FFFFFFF80070FFFFFFF80070FFFFFFFE0030FFFFFFFE0030FFFFFFFF
0030FFFFFFFF0010FFFFFFFF0010FFFFFFFF0010F8FFFFFF8000F8FFFFFF8000
E01FFFFF8000C00FFFFF80008007FFFF80008007FFFF80008007FFFF80008007
FFFF80008007FFFF80008007FFFF80008007FFFF8000800FFFFF0000801FFFFF
0010C3FFFFFF0010C1FFFFFF0010C1FFFFFE0030C0FFFFFE0030E0FFFFF80030
F03FFFF80070F03FFFF800F0F81FFFF003F0FE07FFC007F0FE00FE0007F0FF00
00000FF0FFC000003FF0FFF80001FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80001FFF0FFF80001FFF0FFC000003FF0FF007F801FF0FE00
7F8007F0F807FFC003F0F01FFFE000F0F03FFFF000F0E0FFFFF80070C1FFFFF8
0070C1FFFFF80030C01FFFFE0030800FFFFE0010800FFFFE00108007FFFF0010
8007FFFF00108007FFFF00008007FFFF00008007FFFF00008007FFFF0000C00F
FFFF0000E01FFFFF0000E01FFFFF0000F8FFFFFF0000FFFFFFFF0000FFFFFFFF
0000FFFFFFFF0010FFFFFFFF0010FFFFFFFE0010FFFFFFFE0010FFFFFFFE0030
FFFFFFFE0030FFFFFFF80070FFFFFFF800F0FFFFFFF000F0FFFFFFE003F0FFFF
FFC007F0FFFFFFC00FF0FFFFFF803FF0FFFC0001FFF0FFFC0001FFF0FFFC0003
FFF0FFFFFC00FFF0FFFFFF80FFF0FFFFFFC03FF0FFFFFFE00FF0FFFFFFE007F0
FFFFFFE003F0FFFFFFF003F0FFFFFFF003F0FFFFFFF800F0FFFFFFF800F0FFFF
FFF80070FFFFFFF80070F807FFFE0030F807FFFE0030F003FFFE0030E003FFFE
0030E003FFFE0030E000FFFE0030E000FFFE0030E003FFFE0030E003FFFE0030
E007FFFE0030E007FFFE0030F00FFFF80070F03FFFF80070F83FFFF800F0F81F
FFF003F0FE0FFFF007F0FE03FFE007F0FF807F800FF0FFC000003FF0FFF80001
FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 28 60 78 setcachedevice
60 0 0 50 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 50 def
/ImageMatrix [60 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFF807FF0FF87FFFFFF807FF0FC03FFFFFE001FF0FC01FFFFF80E0FF0
FC01FFFFF00E03F0FE01FFFFF01F81F0FE01FFFFF01FE0F0FE01FFFFF01FE0F0
FE00FFFFF01FF0F0FF80FFFFF01FF870FF80FFFFF00FF870FF80FFFFF00FF830
FF803FFFF00FFC30FF803FFFF00FFC30FFC03FFFF007FC00FFC03FFFF807FE00
FFC03FFFF807FE00FFC01FFFF803FE00FFC01FFFF803FE00FFE01FFFFE03FFF0
FFE01FFFFE03FFF0FFE01FFFFE00FFF0FFE00FFFFE00FFF0FFE00FFFFF00FFF0
FFF00FFFFF007FF0FFF00FFFFF007FF0FFF00FFFFF807FF0FFF007FFFF807FF0
FFF007FFFF803FF0FFF807FFFF803FF0FFF807FFFFC03FF0FFF807FFFFC03FF0
03F803FFFFC03FF003FE03FFFFC01FF003FE00FFFFC01FF083FE00FFFFE01FF0
81FE007FFFE01FF081FE007FFFE01FF0E1FE007FFFE01FF0E1FF003FFFE01FF0
E0FF001FFFE01FF0E0FF000FFFE01FF0F0FF0003FFE01FF0F0FF0303FFE03FF0
F87F0381FFE03FF0F83E07E0FFC07FF0F80E07E03F807FF0FC0007F80000FFF0
FE001FFE0003FFF0FFC0FFFFC00FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0081FFFFFFFFFFFE00
81FFFFFFFFFFFE00807FFFFFFFFFFC00C07FFFFFFFFFFC08C07FFFFFFFFFFC08
E07FFFFFFFFFFC18E03FFFFFFFFFF018E03FFFFFFFFFF018E01FFFFFFFFFE018
F01FFFFFFFFFE038F00FFFFFFFFFC038FC0FFFFFFFFFC078FC0FFFFFFFFFC078
FE0FFFFFFFFFC1F8FE07FFFFFFFF81F8FE07FFFFFFFF81F8FE01FFFFFFFF01F8
FF01FFFFFFFF03F8FF01FFFFFFFF03F8FF80FFFFFFFC07F8FF80FFFFFFFC07F8
FF80FFFFFFFC07F8FFC07FFFFFF80FF8FFC07FFFFFF80FF8FFC07FFFFFF80FF8
FFF03FFFFFF01FF8FFF03FFFFFF01FF8FFF01FFFFFE01FF8FFF81FFFFFE07FF8
FFF81FFFFFE07FF8FFFC1FFFFFE0FFF8FFFC07FFFFC0FFF8FFFC07FFFFC0FFF8
FFFC03FFFF00FFF8FFFE03FFFF01FFF8FFFE03FFFF01FFF8FFFF01FFFE03FFF8
FFFF01FFFE03FFF8FFFF00FFFC03FFF8FFFFC0FFFC07FFF8FFFFC0FFFC07FFF8
FFFFE0FFFC1FFFF8FFFFE07FF81FFFF8FFFFE07FF81FFFF8FFFFE01FF01FFFF8
FFFFF01FF03FFFF8FFFFF00FC03FFFF8FFFFF80FC07FFFF8FFFFF80FC07FFFF8
FFFFFC0FC0FFFFF8FFFFFC0780FFFFF8FFFFFC0780FFFFF8FFFFFC0300FFFFF8
FFFFFF0301FFFFF8FFFFFF0301FFFFF8FFFFFF8007FFFFF8FFFFFF8007FFFFF8
FFFFFF8007FFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8
FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFF03FFFFFF8
FFFFFFFC7FFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a36 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 -35 41 39 setcachedevice
41 0 0 74 0 -35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 74 def
/ImageMatrix [41 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFFFFF80C007FFFFFF808003FFFFFF808380FFFFFF8083C0FFFFFF8080C0
FFFFFF8080E07FFFFF8080E07FFFFF8080E03FFFFF8080F83FFFFF80E1F83FFF
FF80FFF81FFFFF80FFF81FFFFF80FFF81FFFFF80FFF80FFFFF80FFFC0FFFFF80
FFFC0FFFFF80FFFC0FFFFF80FFFC0FFFFF80FFFC03FFFF80FFFC03FFFF80FFFE
03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE01FFFF80FFFE01FF
FF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80
FFFF00FFFF80FFFF00FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF807FFF80FFFF807FFF80FFFFE07FFF80FFFFE07FFF80FFFFE07F
FF80FFFFE07FFF80FFFFE03FFF80FFFFE03FFF80FFFFF03FFF80FFFFF03FFF80
FFFFF03FFF80FFF800000F80FFF800000F80FFF800000F80FFFFF00FFF80FFFF
F80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF807FF80FFFFF807
FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07C380FFFFFC038000
FFFFFE038000FFFFFE038000FFFFFE038000FFFFFE038000FFFFFF81C000FFFF
FF80E000FFFFFFC0F800FFFFFFF00080FFFFFFFE0780FFFFFFFE0780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 -38 20 43 setcachedevice
20 0 0 81 0 -38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF80FFFF00FFFF00FFFC10FFF870FFF070FFE0F0FFC1F0FFC1F0FF03F0FF07
F0FE07F0FC07F0FC1FF0FC1FF0F83FF0F83FF0F03FF0F07FF0F07FF0F07FF0C0
FFF0C0FFF0C0FFF0C0FFF080FFF081FFF081FFF081FFF081FFF081FFF001FFF0
01FFF001FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FF
F007FFF007FFF007FFF007FFF001FFF001FFF001FFF081FFF081FFF081FFF081
FFF081FFF080FFF0C0FFF0C0FFF0C0FFF0C0FFF0C07FF0F07FF0F07FF0F07FF0
F83FF0F83FF0F81FF0FC1FF0FC1FF0FE07F0FF07F0FF03F0FF01F0FFC1F0FFE1
F0FFF0F0FFF870FFF810FFFC00FFFF00FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
0 0 0 -43 20 38 setcachedevice
20 0 0 81 0 -43 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF087FFF087FFF0C3FFF0E1FFF0E0FFF0F03FF0F81FF0F81FF0FE0FF0FF0F
F0FF07F0FF03F0FF83F0FF83F0FFC0F0FFC0F0FFC070FFE070FFE070FFE070FF
F830FFF830FFF830FFF830FFF810FFFC10FFFC10FFFC10FFFC10FFFC10FFFC00
FFFC00FFFC00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE
00FFFE00FFFE00FFFE00FFFE00FFFC00FFFC00FFFC00FFFC10FFFC10FFFC10FF
FC10FFFC10FFF810FFF830FFF830FFF830FFF830FFE030FFE070FFE070FFE070
FFC0F0FFC0F0FF80F0FF83F0FF83F0FF07F0FF0FF0FE0FF0F80FF0F81FF0F83F
F0F0FFF0E1FFF0C1FFF083FFF087FFF08FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a42 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -77 54 23 setcachedevice
54 0 0 100 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 100 def
/ImageMatrix [54 0 0 -100 0 100]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFCF000FFFFFFFFFCC0007FFFFFFFFCC1E01FFFFFFFFCC3F81FFF
FFFFFC81FC1FFFFFFFFC803E0FFFFFFFFC801E03FFFFFFFC801E03FFFFFFFC80
1E01FFFFFFFC801F01FFFFFFFCC01F01FFFFFFFCC01F00FFFFFFFCC01F00FFFF
FFFCF03F00FFFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF
807FFFFFFCFFFF803FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFF
FCFFFFE03FFFFFFCFFFFE00FFFFFFCFFFFE00FFFFFFCFFFFF00FFFFFFCFFFFF0
0FFFFFFCFFFFF00FFFFFFCFFFFF00FFFFFFCFFFFF007FFFFFCFFFFF007FFFFFC
FFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF803
FFFFFCFFFFF803FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFF
FFFC03FFFFFCFFFFFC01FFFFFCFFFFFC01FFFFFCFFFFFE01FFFFFCFFFFFE01FF
FFFCFFFFFE01FFFFFCFFFFFE01FFFFFCFFFFFE00FFFFFCFFFFFE00FFFFFCFFFF
FF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFF
FCFFFFFF803FFFFCFFFFFF803FFFFCFFFFFFC03FFFFCFFFFFFC03FFFFCFFFFFF
C03FFFFCFFFFFFC03FFFFCFFFFFFC01FFFFCFFFFFFC01FFFFCFFFFFFE01FFFFC
FFFFFFE01FFFFCFFFFFFE01FFFFCFFFF80000001FCFFFF80000001FCFFFF8000
0001FCFFFF80000001FCFFFFFFF00FFFFCFFFFFFF00FFFFCFFFFFFF00FFFFCFF
FFFFF007FFFCFFFFFFF007FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF807
FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF803FFFCFFFFFFFE03FFFCFFFF
FFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FC3CFFFFFFFE00F0
04FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF80F000FFFFFF
FF807000FFFFFFFF807000FFFFFFFFC07800FFFFFFFFC07E00FFFFFFFFE03F80
FFFFFFFFF81E04FFFFFFFFF80004FFFFFFFFFE000CFFFFFFFFFF80FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 100 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
0 0 0 -78 54 23 setcachedevice
54 0 0 101 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 101 def
/ImageMatrix [54 0 0 -101 0 101]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFC03FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFF
FFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFFFFFCE0
1FFFFFFFFFFCF01FFFFFFFFFFCF01FFFFFFFFFFCF80FFFFFFFFFFCF80FFFFFFF
FFFCF807FFFFFFFFFCFC07FFFFFFFFFCFC07FFFFFFFFFCFF03FFFFFFFFFCFF03
FFFFFFFFFCFF01FFFFFFFFFCFF81FFFFFFFFFCFF807FFFFFFFFCFFC07FFFFFFF
FCFFC07FFFFFFFFCFFE03FFFFFFFFCFFE03FFFFFFFFCFFE01FFFFFFFFCFFF01F
FFFFFFFCFFF01FFFFFFFFCFFFC0FFFFFFFFCFFFC0FFFFFFFFCFFFC07FFFFFFFC
FFFE07FFFFFFFCFFFE01FFFFFFFCFFFF01FFFFFFFCFFFF01FFFFFFFCFFFF80FF
FFFFFCFFFF80FFFFFFFCFFFF807FFFFFFCFFFFC07FFFFFFCFFFFC07FFFFFFCFF
FFF03FFFFFFCFFFFF03FFFFFFCFFFFF01FFFFFFCFFFFF81FFFFFFCFFFFF807FF
FFFCFFFFFC07FFFFFCFFFFFC07FFFFFCFFFFFE03FFFFFCFFFFFE03FFFFFCFFFF
FE01FFFFFCFFFFFF01FFFFFCFFFFFF01FFFFFCFFFFFFC0FFFFFCFFFFFFC0FFFF
FCFFFFFFC07FFFFCFFFFFFE07FFFFCFFFFFFE01FFFFCFFFFFFF01FFFFCFFFFFF
F01FFFFCFFFFFFF80FFFFCFFFFFFF80FFFFCFFFFFFF807FFFCFFFFFFFC07FFFC
FFFFFFFC07FFFCFFFFFFFF03FFFCFFFFFFFF03FFFCFFFFFFFF01FFFCFFFFFFFF
81FFFCFFFFFFFF807FFCFFFFFFFFC07FFCFFFFFFFFC07FFCFFFFFFFFE03FFCFF
FFFFFFE03FFCFFFFFFFFE01FFCFFFFFFFFF01FFCFFFFFFFFF01FFCFFFFFFFFFC
0FFCFFFFFFFFFC0FFCFFFFFFFFFC07FCFFFFFFFFFE07FCFFFFFFFFFE01FCFFFF
FFFFFF01FCFFFFFFFFFF01FCFFFFFFFFFF80FCFFFFFFFFFF80FCFFFFFFFFFF80
7CFFFFFFFFFFC07CFFFFFFFFFFC07CFFFFFFFFFFF03CFFFFFFFFFFF03CFFFFFF
FFFFF01CFFFFFFFFFFF81CFFFFFFFFFFF804FFFFFFFFFFFC04FFFFFFFFFFFC04
FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFF00FFFFFFFF
FFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 101 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a45 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
0 0 0 -8 44 85 setcachedevice
44 0 0 93 0 -8 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 93 def
/ImageMatrix [44 0 0 -93 0 93]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF03FFFFFFF0FF03
FFFFFFF0FF03800FFFF0FF800003FFF0FF800003FFF0FF801FC0FFF0FFC07FF0
3FF0FF807FF00FF0FF807FF80FF0FF007FFE07F0FF007FFF07F0FE007FFF83F0
F8007FFF80F0F8003FFF80F0F8003FFFC0F0F0003FFFC070F0183FFFC070F018
1FFFC070E0381FFFE030E0381FFFE030E03C1FFFE030C03C0FFFE010C03C0FFF
E010C03C0FFFE010C03E0FFFE010C03E0FFFE010C0FE03FFF810C0FE03FFF810
C0FE03FFF81080FF03FFF80080FF01FFF80080FF01FFF80080FF01FFF80080FF
81FFF80080FF81FFF80080FF80FFF80080FF80FFF80080FF80FFF80080FFE0FF
F80080FFE07FF80080FFE07FF80080FFE07FF80080FFF07FF80080FFF03FF800
80FFF03FF80080FFF03FF80080FFF83FF80080FFF83FF80080FFF80FF80080FF
F80FF80080FFF80FF80080FFFC0FF80080FFFC0FF80080FFFC07F80080FFFC07
F80080FFFC07F800C0FFFE03F810C0FFFE03F810C0FFFE03F810C0FFFF83F810
C0FFFF83F810C03FFF81E010C03FFF81E010E03FFF81E030E03FFFC1E030E03F
FFC1E030E03FFFC0E030E03FFFC0E030F01FFFC0C070F01FFFE00070F81FFFE0
00F0F81FFFE000F0FE0FFFF003F0FE0FFFF003F0FE07FFF003F0FF03FFF007F0
FF83FFF00FF0FFC0FFF81FF0FFE07FF01FF0FFE01FC00FF0FFF800000FF0FFFE
00000FF0FFFF800E0FF0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFF
07F0FFFFFFFF07F0FFFFFFFF8FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 93 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a47 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
97 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 6 28 61 setcachedevice
28 0 0 55 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 55 def
/ImageMatrix [28 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFF0F01FFFF0C007FFF0C3C0FFF081C07FF081E07FF081F83FF0C1F83FF0
E1FC1FF0FFFC1FF0FFFC1FF0FFFC0FF0FFFE0FF0FFFE0FF0FFFE0FF0FFFE0FF0
FFFE03F0FFFF03F0FFFF03F0FFFF03F0FFFF03F0FFFF81F0FFFF81F0FFFF81F0
FFFF81F0FFFF81F0FFFFE0F0FFFFE0F0FFFFE0F0FFFFE0F0FF8FE070FF8FF070
FF8FF070FFC7F070FFC7F070FFC3F070FFE07070FFF870F0FFFC00F0FFFF03F0
FFFF03F0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFC30FFFFFC30FFFFF800FFFFF800FFFFF800FFFFFC00FFFFFE30>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
0 0 0 6 66 93 setcachedevice
66 0 0 87 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
FFFFFFFFF040FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF00
00FFFFFFFFFFFFF80000FFFFFFFFFFFFE00040FFFFFFFFFFFF0003C0FFFFFFFF
FFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFFFFF001FFC0FFFFFFFFFF8001FFC0
FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC0
07FFFFC0FFFFFFFF001FFFFFC0FFFFFFF8001FFFFFC0FFFFFFE0007FFFFFC0FF
FFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FFFFFC007FFFFFFFC0FFFFF001FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFFFFFFC0FFF0003FFFFFFFFFC0FFF0
00FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF001FFFFFFFFFFFC0F8001FFFFFFFFF
FFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0007FFF
FFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFFFFFFFFC0C001FFFFFFFFFFFF
C0F0003FFFFFFFFFFFC0FC003FFFFFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FF
FFFFFFFFC0FFE0007FFFFFFFFFC0FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0
FFFFC003FFFFFFFFC0FFFFF800FFFFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007
FFFFFFC0FFFFFFC001FFFFFFC0FFFFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FF
FFFFFF800FFFFFC0FFFFFFFFE001FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC00
1FFFC0FFFFFFFFFF0003FFC0FFFFFFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFF
FFFFFFFE001FC0FFFFFFFFFFFE0007C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF0
0040FFFFFFFFFFFFFC0040FFFFFFFFFFFFFF8000FFFFFFFFFFFFFFE000FFFFFF
FFFFFFFFE000FFFFFFFFFFFFFFFC40>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a53 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -77 76 3 setcachedevice
76 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 76 def
/Height 80 def
/ImageMatrix [76 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8001FFFFFFFFFF0FFFFC00000FFFFFFFFF0FFFFC00000FFFFFFFFF0FFFE
00FF801FFFFFFFF0FFF803FFF803FFFFFFF0FFC003FFF800FFFFFFF0FF801FFF
FE001FFFFFF0FF003FFFFFC00FFFFFF0FF007FFFFFE00FFFFFF0FE00FFFFFFF8
07FFFFF0FC01FFFFFFFC01FFFFF0FC01FFFFFFFC007FFFF0F001FFFFFFFF003F
FFF0F007FFFFFFFF801FFFF0F007FFFFFFFFC01FFFF0E00FFFFFFFFFE00FFFF0
E00FFFFFFFFFF007FFF0C00FFFFFFFFFF001FFF0C00FFFFFFFFFF000FFF0C00F
FFFFFFFFFC007FF0C00FFFFFFFFFFE007FF0801FFFFFFFFFFE007FF0801FFFFF
FFFFFF003FF0801FFFFFFFFFFF001FF0801FFFFFFFFFFF001FF0801FFFFFFFFF
FF8007F0801FFFFFFFFFFFC007F0801FFFFFFFFFFFC003F0801FFFFFFFFFFFC0
03F0801FFFFFFFFFFFC001F0801FFFFFFFFFFFF001F0800FFFFFFFFFFFF000F0
800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800F
FFFFFFFFFFF80070800FFFFFFFFFFFFC0070800FFFFFFFFFFFFC0070800FFFFF
FFFFFFFC0070C007FFFFFFFFFFFE0010C007FFFFFFFFFFFE0010C007FFFFFFFF
FFFE0010C007FFFFFFFFFFFE0010C001FFFFFFFFFFFE0010E001FFFFFFFFFFFF
0010E001FFFFFFFFFFFF0000F001FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000
F000FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000FC00FFFFFFFFFFFF0000FC00
7FFFFFFFFFFF0000FE007FFFFFFFFFFFC000FE003FFFFFFFFFFFC000FF003FFF
FFFFFFFFC000FF001FFFFFFFFFFFC000FF801FFFFFFFFFFFC010FF801FFFFFFF
FFFFC010FFC007FFFFFFFFFF0010FFC007FFFFFFFFFF0010FFF003FFFFFFFFFF
0010FFF801FFFFFFFFFF0010FFFC01FFFFFFFFFF0070FFFC01FFFFFFFFFF0070
FFFE00FFFFFFFFFE00F0FFFE007FFFFFFFFE00F0FFFF001FFFFFFFFE00F0FFFF
C00FFFFFFFFC01F0FFFFF00FFFFFFFFC01F0FFFFF807FFFFFFFC03F0FFFFFC03
FFFFFFF807F0FFFFFC007FFFFFF007F0FFFFFF803FFFFFC01FF0FFFFFFC00FFF
FF803FF0FFFFFFF00FFFFF807FF0FFFFFFFE01FFFE01FFF0FFFFFFFF803FE007
FFF0FFFFFFFF80000007FFF0FFFFFFFFF800001FFFF0FFFFFFFFFFC003FFFFF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
76 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -2 75 76 setcachedevice
75 0 0 78 0 -2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 75 def
/Height 78 def
/ImageMatrix [75 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000007FFFF8000000200000007FFFF8000000000000007FFFF8000000000000
007FFFF800000000FC000FFFFFFFF0001FE0FFC01FFFFFFFFC003FE0FFE03FFF
FFFFFC003FE0FFF03FFFFFFFFC003FE0FFF01FFFFFFFFC003FE0FFFC1FFFFFFF
FC007FE0FFFE0FFFFFFFFC007FE0FFFE0FFFFFFFFC007FE0FFFF0FFFFFFFFC00
7FE0FFFF87FFFFFFFC007FE0FFFF87FFFFFFFC007FE0FFFF81FFFFFFFC007FE0
FFFFC0FFFFFFFC007FE0FFFFC0FFFFFFFC007FE0FFFFF0FFFFFFFC007FE0FFFF
F87FFFFFF8007FE0FFFFF87FFFFFF8007FE0FFFFF83FFFFFF8007FE0FFFFFC1F
FFFFF801FFE0FFFFFC1FFFFFF801FFE0FFFFFE1FFFFFF801FFE0FFFFFF000000
0001FFE0FFFFFF0000000001FFE0FFFFFF0000000001FFE0FFFFFFC000000001
FFE0FFFFFFC3FFFFF801FFE0FFFFFFE1FFFFF801FFE0FFFFFFF0FFFFF801FFE0
FFFFFFF0FFFFF001FFE0FFFFFFF07FFFF001FFE0FFFFFFF87FFFF001FFE0FFFF
FFF87FFFF003FFE0FFFFFFFC1FFFF003FFE0FFFFFFFC0FFFF003FFE0FFFFFFFC
0FFFF003FFE0FFFFFFFF07FFF003FFE0FFFFFFFF87FFF003FFE0FFFFFFFF87FF
F003FFE0FFFFFFFFC3FFF003FFE0FFFFFFFFC1FFF003FFE0FFFFFFFFC1FFF003
FFE0FFFFFFFFE07FF003FFE0FFFFFFFFF07FE003FFE0FFFFFFFFF07FE003FFE0
FFFFFFFFFC3FE003FFE0FFFFFFFFFC3FE007FFE0FFFFFFFFFC1FE007FFE0FFFF
FFFFFE0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFF
FF87E007FFE0FFFFFFFFFF87E007FFE0FFFFFFFFFF81E007FFE0FFFFFFFFFFC0
E007FFE0FFFFFFFFFFC0E007FFE0FFFFFFFFFFF0E007FFE0FFFFFFFFFFF84007
FFE0FFFFFFFFFFF84007FFE0FFFFFFFFFFF80007FFE0FFFFFFFFFFFC000FFFE0
FFFFFFFFFFFC000FFFE0FFFFFFFFFFFE000FFFE0FFFFFFFFFFFF000FFFE0FFFF
FFFFFFFF000FFFE0FFFFFFFFFFFF000FFFE0FFFFFFFFFFFFC00FFFE0FFFFFFFF
FFFFC00FFFE0FFFFFFFFFFFFE00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFF
F00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFFF80FFFE0FFFFFFFFFFFFF81F
FFE0FFFFFFFFFFFFFC1FFFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
75 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
90 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/D/N196 -1 TZ
%%BeginResource: font E
10 dict begin
T3Defs
/FontType 3 def
/FontName /N241 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-72 
103 
195 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 25 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 90 2 setcachedevice
90 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 90 def
/Height 50 def
/ImageMatrix [90 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFE1FFFFFFE01FFC0FF87FFFFFE1FFFFFFE01FFC0FC03FFFFF00FFFFF
F8007FC0FC01FFFFF007FFFFE0383FC0FC01FFFFF007FFFFC0380FC0FE01FFFF
F007FFFFC07E07C0FE01FFFFF807FFFFC07F83C0FE01FFFFF807FFFFC07F83C0
FE00FFFFF803FFFFC07FC3C0FF80FFFFF803FFFFC07FE1C0FF80FFFFF803FFFF
C03FE1C0FF80FFFFFE03FFFFC03FE0C0FF803FFFFE00FFFFC03FF0C0FF803FFF
FE00FFFFC03FF0C0FFC03FFFFE00FFFFC01FF000FFC03FFFFF00FFFFE01FF800
FFC03FFFFF00FFFFE01FF800FFC01FFFFF007FFFE00FF800FFC01FFFFF007FFF
E00FF800FFE01FFFFF007FFFF80FFFC0FFE01FFFFF807FFFF80FFFC0FFE01FFF
FF807FFFF803FFC0FFE00FFFFF803FFFF803FFC0FFE00FFFFF803FFFFC03FFC0
FFF00FFFFF803FFFFC01FFC0FFF00FFFFFC03FFFFC01FFC0FFF00FFFFFC03FFF
FE01FFC0FFF007FFFFC01FFFFE01FFC0FFF007FFFFC01FFFFE00FFC0FFF807FF
FFC01FFFFE00FFC0FFF807FFFFE01FFFFF00FFC0FFF807FFFFE01FFFFF00FFC0
03F803FFFFE00FFFFF00FFC003FE03FFFFE00FFFFF007FC003FE00FFFFE003FF
FF007FC083FE00FFFFF803FFFF807FC081FE007FFFF801FFFF807FC081FE007F
FFF801FFFF807FC0E1FE007FFFF801FFFF807FC0E1FF003FFFF800FFFF807FC0
E0FF001FFFF8007FFF807FC0E0FF000FFFF8003FFF807FC0F0FF0003FFF8080F
FF807FC0F0FF0303FFF81C0FFF80FFC0F87F0381FFF81E07FF80FFC0F83E07F0
FFE03F83FF01FFC0F80E07F00FC03F80FE01FFC0FC0007F800007FE00003FFC0
FE001FFE0000FFF8000FFFC0FFC0FFFFE00FFFFF003FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
90 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 0 4 81 setcachedevice
4 0 0 81 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 4 def
/Height 81 def
/ImageMatrix [4 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
4 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
0 0 0 6 52 64 setcachedevice
52 0 0 58 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 52 def
/Height 58 def
/ImageMatrix [52 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF8FFFFFFFFF0FFF83FFFFFFFF0FFF80FFFFFFFF0FFF80FFFFFFFF0FFF807FF
FFFFF0FFF803FFFFFFF0FFF800FFFFFFF0FFFE003FFFFFF0FFFE001FFFFFF0FF
FE001FFFFFF0FFFE000FFFFFF0FFFE0403FFFFF0FFFE0401FFFFF0FFFE0600FF
FFF0FFFE07007FFFF0FFFF07807FFFF0FFFF03F03FFFF0FFFF03F80FFFF0FFFF
03F807FFF0FFFF03FC03FFF0FFFF03FE01FFF0FFFF03FF81FFF0FFFF03FFC0FF
F0FFFF03FFE0FFF0FFFF03FFE03FF0FFFF03FFF01FF0FFFF03FFF80FF0FFFF03
FFFE0FF0FFFF03FFFF0FF0FFFF03FFFF87F0FFFF03FFFF83F0FFFF03FFFF83F0
FFFF03FFFFC0F0FFFF03FFFFE0F0FFFF03FFFFF8F0FFFE03FFFFF870FFFE03FF
FFF870FFFE03FFFFFC30FFFE03FFFFFC30FFFE07FFFFFE30FFFE07FFFFFE10FF
F807FFFFFF10FFF807FFFFFF10FFF807FFFFFF00FFF007FFFFFE00FFF00FFFFF
FE00FFF00FFFFFFE00FFE00FFFFFFC00FFE00FFFFFE000FFC01FFFFF8000FF80
1FFFFF8000FF803FFFFF8000FE003FFFFF8010F800FFFFFF80100000FFFFFF80
100001FFFFFFC0308003FFFFFFC070E00FFFFFFFE3F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
52 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
0 0 0 5 25 31 setcachedevice
25 0 0 26 0 5 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 26 def
/ImageMatrix [25 0 0 -26 0 26]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF1FF80FFF0FF80FFF0FF80FFF1FF80FFF1FF80CFF1FC8087F1F80081F1E000
80310000C0310080F0000380FE001F80FE001F80FE001F80F0000380F0000380
C031008081F1E00081F1E00087F1F800CFF1FC80FFF1FF80FFF1FF80FFF0FF80
FFF0FF80FFF1FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 26 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 0 57 29 setcachedevice
57 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 29 def
/ImageMatrix [57 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFF1FFFF83F80F8FFFF1FFFF83F80F07FFE07FFC00780F07FFE07FFC1C380
F01FFE03FF81C180F81FFF03FF81F180F81FFF03FF81F080F81FFF03FF81F880
F81FFF03FFC0F880FC0FFFC1FFC0FC00FC0FFFC1FFC0FC00FC0FFFC1FFC07C80
FC0FFFC1FFF07F80FC0FFFC1FFF07F80FF07FFE0FFF07F80FF07FFE0FFF83F80
FF07FFE0FFF83F80FF03FFE0FFF83F801F03FFE07FF81F801F83FFF07FFC1F80
1F81FFF01FFC1F801F807FF01FFC1F8007803FF00FFC1F80C7821FE007FC1F80
C38207E0C1F83F80E38787E0E1F83F80F00FC001F0007F80F81FF807FE01FF80
F81FF807FE01FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
0 0 0 0 33 29 setcachedevice
33 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 33 def
/Height 29 def
/ImageMatrix [33 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC03FC1F80FC03FC1F80F800F80380F0F8206380E0F800618081FF00F08081FF
80F88081FFC0F88001FFC0F88001FFE07C0001FFE07C0001FFE07C8001FFE07F
8001FFE07F8080FFF83F8080FFF83F8080FFF83F8080FFF83F80E07FF81F80E0
7FFC1F80F07FFC1F80F83FFC1F80F83FF81F80FC0FF80F80FE03E00F80FF83E2
0F80FFC0071F80FFF80FFF80FFF80FFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
33 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
0 0 0 0 32 29 setcachedevice
32 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 29 def
/ImageMatrix [32 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F07F80FFF07F80FFC01E003F078C3E1F03803E0701C03FC301E07FE101E07FF1
C1E07FF1E3F03FF8E3F03FF8FFF03FF9FFF03FFFFFF03FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFC7FC0FE1C7FE0FE1C7FE0FC0C3FE0FC0C3FE07C0E1FE07E0
F07C00F0F87C30F0FC003801FF81FE07FF81FE07>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
0 0 0 20 38 49 setcachedevice
38 0 0 29 0 20 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 29 def
/ImageMatrix [38 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFFC1FCF8FFFFC1FCF07FFE007CF07FFE1C1CF01FFC1C0CF81FFC1F0CF81F
FC1F84F81FFC1FC4F81FFE07C4FC0FFE07E0FC0FFE07E0FC0FFE03E4FC0FFF03
FCFC0FFF03FCFF07FF03FCFF07FFC1FCFF07FFC1FCFF07FFC1FC1F03FFC0FC1F
83FFE0FC1F81FFE0FC1F81FFE0FC07807FE0FCC7803FE0FCC3820FC1FCE3870F
C1FCF0078003FCF81FF01FFCF81FF01FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 56 38 94 setcachedevice
38 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 38 def
/ImageMatrix [38 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF01FFE0FCFF01FFE0FCF8003F001CF01E1E070CE01E04070CC07F000784C0FF
C01F84C0FFF01FC4C0FFF007C401FFF807C001FFF807C000FFFC07E000FFFC07
E000FFFC07E000FFFC03F000FFFE03FC00FFFE03FC007FFE03FC007FFE01FCC0
7FFE01FCC07FFF01FCC07FFF01FCC01FFF01FCC01FFF00FCE01FFF00FCE01FFF
C0FCF00FFFC0FCF00FFFC0FCF007FFC07CF807FFC07CFC03FFC07CFF03FFC07C
FF81FF007CFFC07F107CFFC03E107CFFE000187CFFFC003FFCFFFF00FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 56 42 94 setcachedevice
42 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 38 def
/ImageMatrix [42 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F80FFC03FFC0F80FFC03FFC0E003E000FFC083E1C0F83FC003E080F80FC000F0
80FE07C000F803FF87C000F803FFC7C000FE03FFC3C080FE03FFE3C080FE03FF
E1C0E1FF03FFE1C0FFFF00FFF1C0FFFF00FFF1C0FFFF00FFF9C0FFFF80FFFFC0
FFFF80FFFFC0FFFF80FFFFC0FFFF807FFFC0FFFF807FFFC0FFFFC07FFFC0FFFF
C07FFFC0FFFFC07FFFC0EFFFC03FFFC0E3FFC03FFFC0E3FFE03FFFC0E3FFE03F
FFC0E1FFE01FE1C0E1FFE01FC000F0FFE01FC000F07FE00FC000F87FE00FC000
FC3FE00FC000FE0FE003F000FE07C001F000FF8000E000C0FFC003F001C0FFF0
0FFC07C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -85 103 25 setcachedevice
103 0 0 110 0 -85 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 103 def
/Height 110 def
/ImageMatrix [103 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000003FE800000000000000000000003FE800000000000
000000000001FEC00000000000000000000001FEC00000000000000000000001
FEE00000000000000000000000FEE00000000000000000000000FEF00FFFFFFF
FFFFFFE0000000FEFC0FFFFFFFFFFFFFFFE00000FEFE07FFFFFFFFFFFFFFFE00
007EFE01FFFFFFFFFFFFFFFE00007EFF00FFFFFFFFFFFFFFFFC0007EFF007FFF
FFFFFFFFFFFFF8001EFF807FFFFFFFFFFFFFFFFE001EFFC07FFFFFFFFFFFFFFF
FF001EFFF03FFFFFFFFFFFFFFFFFE01EFFF01FFFFFFFFFFFFFFFFFE00EFFF807
FFFFFFFFFFFFFFFFF00EFFF803FFFFFFFFFFFFFFFFF80EFFFC03FFFFFFFFFFFF
FFFFFC0EFFFE03FFFFFFFFFFFFFFFFFC06FFFF01FFFFFFFFFFFFFFFFFF06FFFF
00FFFFFFFFFFFFFFFFFF06FFFFC07FFFFFFFFFFFFFFFFF82FFFFC01FFFFFFFFF
FFFFFFFF82FFFFE01FFFFFFFFFFFFFFFFFC2FFFFF01FFFFFFFFFFFFFFFFFC2FF
FFF80FFFFFFFFFFFFFFFFFE0FFFFF807FFFFFFFFFFFFFFFFE0FFFFFC03FFFFFF
FFFFFFFFFFFEFFFFFC01FFFFFFFFFFFFFFFFFEFFFFFF01FFFFFFFFFFFFFFFFFE
FFFFFF81FFFFFFFFFFFFFFFFFEFFFFFFC07FFFFFFFFFFFFFFFFEFFFFFFC03FFF
FFFFFFFFFFFFFEFFFFFFE01FFFFFFFFFFFFFFFFEFFFFFFF00FFFFFFFFFFFFFFF
FEFFFFFFF00FFFFFFFFFFFFFFFFEFFFFFFFC0FFFFFFFFFFFFFFFFEFFFFFFFE07
FFFFFFFFFFFFFFFEFFFFFFFE01FFFFFFFFFFFFFFFEFFFFFFFF00FFFFFFFFFFFF
FFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF
C07FFFFFFFFFFFFFFEFFFFFFFFF03FFFFFFFFFFFFFFEFFFFFFFFF01FFFFFFFFF
FFFFFEFFFFFFFFF807FFFFFFFFFFFFFEFFFFFFFFFC03FFFFFFFFFFFFFEFFFFFF
FFFC03FFFFFFFFFFFFFEFFFFFFFFFE01FFFFFFFFFFFFFEFFFFFFFFFF01FFFFFF
FFFFFFFEFFFFFFFFFE00FFFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFF
FFFFFC007FFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFFFFFFF8007FFF
FFFFFFFFFEFFFFFFFFF000FFFFFFFFFFFFFEFFFFFFFFC000FFFFFFFFFFFFFEFF
FFFFFFC000FFFFFFFFFFFFFEFFFFFFFF8001FFFFFFFFFFFFFEFFFFFFFF8003FF
FFFFFFFFFFFEFFFFFFFF0007FFFFFFFFFFFFFEFFFFFFFE0007FFFFFFFFFFFFFE
FFFFFFFE0007FFFFFFFFFFFFFEFFFFFFFC001FFFFFFFFFFFFFFEFFFFFFF0003F
FFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFF
FEFFFFFFE000FFFFFFFFFFFFFFFEFFFFFFC000FFFFFFFFFFFFFFFEFFFFFF8001
FFFFFFFFFFFFFFFEFFFFFF8001FFFFFFFFFFFFFFFEFFFFFF8007FFFFFFFFFFFF
FFFEFFFFFF000FFFFFFFFFFFFFFFFEFFFFFC001FFFFFFFFFFFFFFFFEFFFFF800
1FFFFFFFFFFFFFFFFEFFFFF8001FFFFFFFFFFFFFFFFEFFFFF0003FFFFFFFFFFF
FFFFFEFFFFF0007FFFFFFFFFFFFFFFFEFFFFE001FFFFFFFFFFFFFFFFFEFFFFE0
01FFFFFFFFFFFFFFFFFEFFFFC001FFFFFFFFFFFFFFFFFEFFFF0003FFFFFFFFFF
FFFFFFE0FFFE0007FFFFFFFFFFFFFFFFC0FFFE0007FFFFFFFFFFFFFFFFC2FFFE
000FFFFFFFFFFFFFFFFFC2FFFC001FFFFFFFFFFFFFFFFF82FFF8001FFFFFFFFF
FFFFFFFF82FFF0007FFFFFFFFFFFFFFFFF06FFF0007FFFFFFFFFFFFFFFFC06FF
F000FFFFFFFFFFFFFFFFFC06FFC001FFFFFFFFFFFFFFFFFC0EFF8003FFFFFFFF
FFFFFFFFF80EFF8003FFFFFFFFFFFFFFFFF00EFF0003FFFFFFFFFFFFFFFFC00E
FE0007FFFFFFFFFFFFFFFF001EFE001FFFFFFFFFFFFFFFFF001EFC001FFFFFFF
FFFFFFFFFE007EFC003FFFFFFFFFFFFFFFF8007EF0003FFFFFFFFFFFFFFFC000
7EE0007FFFFFFFFFFFFFFE00007EC000FFFFFFFFFFFFFFC00000FEC000FFFFFF
FFFFFFFFC00000FEC001FFFFFFFFFFFFE0000000FE8000000000000000000000
01FE800000000000000000000001FE800000000000000000000001FE80000000
0000000000000001FE800000000000000000000003FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
103 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
75 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -75 85 5 setcachedevice
85 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 80 def
/ImageMatrix [85 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF0FFFFFFFFFFC007FFF8FFF01FFFFFFFFF80007FF8FFF00FFFFFFFFE00000F
F8FFF807FFFFFFFE000003F8FFF807FFFFFFFE000003F8FFFE03FFFFFFFE0000
00F8FFFE03FFFFFFFE001F8078FFFE00FFFFFFFE001F8038FFFE00FFFFFFFE00
3FE008FFFF007FFFFFFE003FF008FFFF007FFFFFFE003FF808FFFF007FFFFFFE
003FFC00FFFF807FFFFFFF803FFFC0FFFF803FFFFFFF803FFFC0FFFF803FFFFF
FF803FFFF8FFFF803FFFFFFF803FFFF8FFFFC03FFFFFFF803FFFF8FFFFC01FFF
FFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFE00F
FFFFFF801FFFF8FFFFE00FFFFFFFC01FFFF8FFFFE00FFFFFFFC01FFFF8FFFFF8
0FFFFFFFC01FFFF8FFFFF803FFFFFFC01FFFF8FFFFF803FFFFFFC00FFFF8FFFF
F803FFFFFFC00FFFF8FFFFFC01FFFFFFE00FFFF8FFFFFC01FFFFFFE00FFFF8FF
FFFC01FFFFFFE00FFFF8FFFFFE01FFFFFFE00FFFF8FFFFFE00FFFFFFE007FFF8
FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FF
F8FFF800000000000007FFF8FFF800000000000003FFF8FFF800000000000003
FFF8FFFE00000000000003FFF8FFFF80000000000003FFF8FFFFE00000000000
03FFF8FFFFFF803FFFFFFE00FFF8FFFFFF803FFFFFFE00FFF8FFFFFF800FFFFF
FE00FFF8FFFFFFE00FFFFFFE00FFF8FFFFFFE00FFFFFFF007FF8FFFFFFE00FFF
FFFF007FF8FFFFFFE00FFFFFFF007FF8FFFFFFF007FFFFFF807FF8FFFFFFF007
FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF0
07FFFFFF803FF8FFFFFFF003FFFFFFC01FF8FFFFFFF803FFFFFFC01FF8FFFFFF
F803FFFFFFC01FF8FFFFFFF803FFFFFFC01FF81FFFFFF803FFFFFFE00FF81FFF
FFF803FFFFFFE00FF803FFFFF801FFFFFFE00FF800FFFFF801FFFFFFF80FF800
7FFFF801FFFFFFF803F8807FFFF801FFFFFFF803F8E03FFFFC01FFFFFFF803F8
E03FFFFC01FFFFFFFC03F8F00FFFFC01FFFFFFFC01F8F80FFFFC01FFFFFFFC01
F8F807FFFC00FFFFFFFC01F8FC03FFFC00FFFFFFFE00F8FE01FFFC00FFFFFFFE
00F8FF81FFFC00FFFFFFFF00F8FFC03FF800FFFFFFFF00F8FFF007F000FFFFFF
FF0078FFF0000000FFFFFFFF0078FFF8000000FFFFFFFF8038FFFF000000FFFF
FFFF8038FFFFC00001FFFFFFFFE038FFFFFC0003FFFFFFFFF038FFFFFF8007FF
FFFFFFFC08FFFFFF8007FFFFFFFFFC08>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
0 0 0 72 67 130 setcachedevice
67 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 67 def
/Height 58 def
/ImageMatrix [67 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE7FFFFFFF801FFE0FFE1FFFFFFE0003FE0FFE03FFFFFE00007E0FFE03FFFFF
E00007E0FFF01FFFFFE00001E0FFF01FFFFFE00FE0E0FFF01FFFFFE00FE020FF
F80FFFFFE01FE020FFF80FFFFFE01FF000FFF80FFFFFE01FFE00FFFE07FFFFE0
1FFF80FFFE07FFFFF81FFFE0FFFE07FFFFF81FFFE0FFFF03FFFFF81FFFE0FFFF
03FFFFF80FFFE0FFFF03FFFFF80FFFE0FFFF80FFFFF80FFFE0FFFF80FFFFF80F
FFE0FFFF80FFFFF80FFFE0FFFF807FFFFC0FFFE0FFFFC07FFFFC0FFFE0FFFFC0
7FFFFC0FFFE0FFFFC07FFFFC03FFE0FFFFE03FFFFE03FFE0FFFFE03FFFFE03FF
E0FFE00000000003FFE0FFE00000000001FFE0FFE00000000001FFE0FFF80000
000001FFE0FFFE0000000001FFE0FFFE0000000001FFE0FFFFF80FFFFF00FFE0
FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC03FF
FFE07FE0FFFFFC03FFFFE07FE0FFFFFC03FFFFE07FE0FFFFFE03FFFFE03FE0FF
FFFE03FFFFF03FE0FFFFFE03FFFFF03FE0FFFFFE01FFFFF03FE00FFFFE01FFFF
F00FE003FFFE01FFFFF80FE001FFFF01FFFFF80FE081FFFF01FFFFF80FE080FF
FF01FFFFFC07E0E0FFFF00FFFFFC07E0E07FFF00FFFFFC07E0F03FFF00FFFFFC
03E0F80FFE00FFFFFE03E0FC0FFE00FFFFFE03E0FF81FC00FFFFFF83E0FFC000
00FFFFFF81E0FFC00000FFFFFF81E0FFF00000FFFFFFC0E0FFFF0001FFFFFFE0
E0FFFFF803FFFFFFF8E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
67 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/E/N241 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.6 672.12 m
/N22 10.9091 Tf
(\(2\))
[3.58903 5.38913 3.58903 ] pdfxs
108.447 672.12 m
(cost)
[4.78904 5.38913 4.18912 2.98911 ] pdfxs
128.083 672.12 m
(of)
[5.38913 3.58903 ] pdfxs
139.222 672.12 m
(performing)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 2.98911 5.38913 5.38913 ] pdfxs
190.353 672.12 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
237.774 672.12 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
255.502 672.12 m
(g) show
260.771 672.12 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
290.345 672.12 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
313.331 672.12 m
/N22 10.9091 Tf
(in)
[2.98911 5.38913 ] pdfxs
323.869 672.12 m
(e) show
328.418 672.12 m
(v) show
333.687 672.12 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
349.734 672.12 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
372.3 672.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
377.04 672.12 m
/N22 10.9091 Tf
(,) show
381.949 672.12 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
410.574 672.12 m
(is)
[2.98911 4.18912 ] pdfxs
420.5 672.1 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(7) show
429.699 672.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025a\025)
[0 4.19962 0 ] pdfxs
433.899 672.1 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001\000)
[3.39969 0 ] pdfxs
447.698 679.699 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006-Z)
[0 8.59921 0 ] pdfxs
461.296 672.1 m
(\027) show
470.695 679.699 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
472.795 679.699 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
472.795 679.699 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(0\b)
[9.69911 0 ] pdfxs
485.294 685.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f) show
490.194 672.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
493.92 672.12 m
/N22 10.9091 Tf
(,) show
498.949 672.12 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
93.8 658.7 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
105.6 658.68 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
115.298 658.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
130.985 658.68 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
166.68 658.68 m
(of)
[5.38913 3.58903 ] pdfxs
178.178 658.68 m
(subgoals.)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
222.24 658.68 m
(In)
[3.58903 5.38913 ] pdfxs
233.738 658.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
249.425 658.68 m
(ne)
[5.38913 4.78904 ] pdfxs
259.484 658.68 m
(xt)
[5.38913 2.98911 ] pdfxs
270.502 658.68 m
(section,)
[4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
306.414 658.68 m
(we)
[7.90916 4.78904 ] pdfxs
321.633 658.68 m
(theoretically)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 2.98911 2.98911 4.78904 4.78904 2.98911 
2.98911 5.38913 ] pdfxs
378.371 658.68 m
(analyze)
[4.78904 5.38913 4.78904 2.98911 5.38913 4.78904 4.78904 ] pdfxs
414.054 658.68 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
460.036 658.68 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
508.996 658.68 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
93.6001 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
109.647 645.12 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
167.367 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
179.105 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
195.153 645.12 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
216.578 645.12 m
(y) show
224.967 645.12 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
241.614 645.12 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
263.771 645.12 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
308.792 645.12 m
(in)
[2.98911 5.38913 ] pdfxs
320.051 645.12 m
(v) show
325.2 645.12 m
(arious)
[4.78904 3.58903 2.98911 5.38913 5.38913 4.18912 ] pdfxs
354.534 645.12 m
(situations.)
[4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 2.74908 
] pdfxs
93.6003 609.96 m
/N9 14.3462 Tf
(3) show
115.068 609.96 m
(Theor)
[9.59769 7.91913 6.35526 7.18754 6.35526 ] pdfxs
152.243 609.96 m
(etical)
[6.35526 4.79162 3.95956 6.35526 7.18754 3.95956 ] pdfxs
188.452 609.96 m
(Results)
[10.3148 6.35526 5.63813 7.91913 3.95956 4.79162 5.63813 ] pdfxs
93.6002 585.12 m
/N22 10.9091 Tf
(In)
[3.58903 5.38913 ] pdfxs
105.698 585.12 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
124.495 585.12 m
(section)
[4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
158.258 585.12 m
(we)
[7.90916 4.78904 ] pdfxs
174.077 585.12 m
(present)
[5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
208.44 585.12 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
234.556 585.12 m
(of)
[5.38913 3.58903 ] pdfxs
246.655 585.12 m
(our)
[5.38913 5.38913 3.58903 ] pdfxs
264.142 585.12 m
(theoretical)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 2.98911 2.98911 4.78904 4.78904 2.98911 
] pdfxs
313.102 585.12 m
(results)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 4.18912 ] pdfxs
344.585 585.12 m
(characterizing)
[4.78904 5.38913 4.78904 3.58903 4.78904 4.78904 2.98911 4.78904 3.58903 2.98911 4.78904 
2.98911 5.38913 5.38913 ] pdfxs
409.6 585.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
413.672 585.12 m
/N22 10.9091 Tf
(-redundant)
[3.58903 3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
463.843 585.12 m
(controllers,)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
516.152 585.12 m
(in)
[2.98911 5.38913 ] pdfxs
93.6 571.56 m
(terms)
[2.98911 4.78904 3.58903 8.50908 4.18912 ] pdfxs
120.305 571.56 m
(of)
[5.38913 3.58903 ] pdfxs
131.804 571.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
147.611 571.56 m
(bounds)
[5.38913 5.38913 5.38913 5.38913 5.38913 4.18912 ] pdfxs
181.505 571.56 m
(on)
[5.38913 5.38913 ] pdfxs
194.804 571.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
210.611 571.56 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
246.305 571.56 m
(of)
[5.38913 3.58903 ] pdfxs
257.924 571.56 m
(time)
[2.98911 2.98911 8.50908 4.78904 ] pdfxs
279.72 571.56 m
(steps)
[4.18912 2.98911 4.78904 5.38913 4.18912 ] pdfxs
303.905 571.56 m
(it)
[2.98911 2.98911 ] pdfxs
312.403 571.56 m
(tak)
[2.98911 4.78904 5.38913 ] pdfxs
325.451 571.56 m
(es)
[4.78904 4.18912 ] pdfxs
337.189 571.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
352.276 571.56 m
(a) show
359.585 571.56 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
404.356 571.56 m
(to)
[2.98911 5.38913 ] pdfxs
415.374 571.56 m
(complete)
[4.78904 5.38913 8.50908 5.38913 2.98911 4.78904 2.98911 4.78904 ] pdfxs
457.647 571.56 m
(its)
[2.98911 2.98911 4.18912 ] pdfxs
470.454 571.56 m
(task,)
[2.98911 4.78904 4.18912 5.38913 2.74908 ] pdfxs
493.2 571.56 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
511.407 571.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5999 558 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
151.32 558 m
(of)
[5.38913 3.58903 ] pdfxs
163.178 558 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
179.105 558 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
200.531 558 m
(y) show
208.92 558 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
225.567 558 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
247.723 558 m
(algorithm.)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 2.74908 ] pdfxs
296.214 558 m
(F) show
302.203 558 m
(or)
[5.38913 3.58903 ] pdfxs
313.821 558 m
(lack)
[2.98911 4.78904 4.78904 5.38913 ] pdfxs
334.658 558 m
(of)
[5.38913 3.58903 ] pdfxs
346.516 558 m
(space,)
[4.18912 5.38913 4.78904 4.78904 4.78904 2.74908 ] pdfxs
376.09 558 m
(we)
[7.90916 4.78904 ] pdfxs
391.548 558 m
(ha)
[5.38913 4.78904 ] pdfxs
401.487 558 m
(v) show
406.756 558 m
(e) show
414.425 558 m
(abbre)
[4.78904 5.38913 5.38913 3.58903 4.78904 ] pdfxs
438.13 558 m
(viated)
[5.38913 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
467.705 558 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
483.632 558 m
(proofs.)
[5.38913 3.58903 5.38913 5.38913 3.58903 4.18912 2.74908 ] pdfxs
93.5998 544.44 m
(In)
[3.58903 5.38913 ] pdfxs
105.218 544.44 m
(section)
[4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
138.502 544.44 m
(2) show
146.411 544.44 m
(we)
[7.90916 4.78904 ] pdfxs
161.629 544.44 m
(stated)
[4.18912 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
189.523 544.44 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
208.32 544.44 m
(there)
[2.98911 5.38913 4.78904 3.58903 4.78904 ] pdfxs
232.505 544.44 m
(is)
[2.98911 4.18912 ] pdfxs
242.323 544.44 m
(a) show
249.632 544.44 m
(lo)
[2.98911 5.38913 ] pdfxs
257.77 544.44 m
(wer)
[7.90916 4.78904 3.58903 ] pdfxs
276.578 544.44 m
(bound)
[5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
306.403 544.44 m
(on)
[5.38913 5.38913 ] pdfxs
320.1 544.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
326.662 544.44 m
/N22 10.9091 Tf
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
349.058 544.44 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
367.855 544.44 m
(there)
[2.98911 5.38913 4.78904 3.58903 4.78904 ] pdfxs
392.16 544.44 m
(e) show
396.829 544.44 m
(xist)
[5.38913 2.98911 4.18912 2.98911 ] pdfxs
415.025 544.44 m
(no)
[5.38913 5.38913 ] pdfxs
428.8 544.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
432.883 544.44 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
482.454 544.44 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
503.879 544.44 m
(y) show
512.028 544.44 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
93.5993 530.88 m
(v) show
98.7484 530.88 m
(alues)
[4.78904 2.98911 5.38913 4.78904 4.18912 ] pdfxs
123.894 530.88 m
(smaller)
[4.18912 8.50908 4.78904 2.98911 2.98911 4.78904 3.58903 ] pdfxs
158.617 530.88 m
(than)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
180.054 530.88 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
198.49 530.88 m
(bound.)
[5.38913 5.38913 5.38913 5.38913 5.38913 2.74908 ] pdfxs
231.904 530.88 m
(In)
[3.58903 5.38913 ] pdfxs
243.643 530.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
259.69 530.88 m
(\002rst)
[6.10906 3.58903 4.18912 2.98911 ] pdfxs
279.326 530.88 m
(theorem)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 8.50908 ] pdfxs
317.77 530.88 m
(we)
[7.90916 4.78904 ] pdfxs
333.108 530.88 m
(compute)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 4.78904 ] pdfxs
373.352 530.88 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
391.788 530.88 m
(lo)
[2.98911 5.38913 ] pdfxs
399.926 530.88 m
(wer)
[7.90916 4.78904 3.58903 ] pdfxs
419.093 530.88 m
(bound:)
[5.38913 5.38913 5.38913 5.38913 5.38913 2.98911 ] pdfxs
110.519 503.88 m
/N110 10.9091 Tf
(Theor)
[7.30907 6.10906 4.78904 5.38913 4.78904 ] pdfxs
138.665 503.88 m
(em)
[4.78904 9.10916 ] pdfxs
154.723 503.88 m
(1) show
162.272 503.88 m
/N22 10.9091 Tf
(Let)
[6.70915 4.78904 2.98911 ] pdfxs
179.2 511.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
195.598 511.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
195.598 511.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\002\005\004)
[11.9989 0 3.39969 0 ] pdfxs
219.096 511.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
219.096 511.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
232.595 511.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
232.595 511.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\b)
[4.19962 0 ] pdfxs
245.794 511.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
245.794 511.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\t)
[4.19962 0 ] pdfxs
259.593 511.5 m
(\n) show
265.56 503.88 m
/N22 10.9091 Tf
(be)
[5.38913 4.78904 ] pdfxs
277.898 503.88 m
(a) show
284.847 503.88 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
329.411 503.88 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
383.4 503.88 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
409.167 503.88 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
427.014 503.88 m
(let)
[2.98911 4.78904 2.98911 ] pdfxs
440.2 503.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
448.701 503.88 m
/N22 10.9091 Tf
(be)
[5.38913 4.78904 ] pdfxs
461.039 503.88 m
(an)
[4.78904 5.38913 ] pdfxs
473.8 503.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
477.818 503.88 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
93.6 488.76 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
115.025 488.76 m
(y) show
124.974 488.76 m
(de\002ned)
[5.38913 4.78904 6.10906 5.38913 4.78904 5.38913 ] pdfxs
161.389 488.76 m
(on)
[5.38913 5.38913 ] pdfxs
176.9 496.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
189.687 488.76 m
/N22 10.9091 Tf
(.) show
200.596 488.76 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
227.7 488.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
236.073 488.76 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
247.691 488.76 m
(bounded)
[5.38913 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 ] pdfxs
289.495 488.76 m
(by)
[5.38913 5.38913 ] pdfxs
305.1 488.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X;1)
[0 10.999 0 ] pdfxs
331.997 500.199 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002) show
333.697 500.199 m
(\003\005\004)
[0 6.29942 0 ] pdfxs
339.097 494.799 m
(\006\005\007\t\b)
[0 6.29942 0 4.19962 0 ] pdfxs
354.895 500.199 m
(\002) show
Q
q
252 0 0 -4.79999 3310.68 4917.48 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
332.5 490.8 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002) show
334.2 490.8 m
(\003) show
340.499 490.9 m
(\004) show
339.499 484.901 m
(\006) show
345.999 486.9 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
345.999 486.9 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013\n)
[2.69975 0 ] pdfxs
354.398 490.8 m
(\002) show
357.48 488.76 m
/N22 10.9091 Tf
(,) show
364.909 488.76 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
396.1 488.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
403.999 488.8 m
(=) show
402.899 494.999 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
410.399 487.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
413.198 495.099 m
(\021) show
425.197 496.399 m
(\001) show
439.396 496.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(ILK,M)
[0 9.09917 0 3.09972 0 ] pdfxs
457.694 498.499 m
(\033ON)
[0 4.29961 0 ] pdfxs
469.293 498.399 m
(P) show
467.093 491.4 m
(R\030S)
[0 5.29951 0 ] pdfxs
479.792 488.8 m
(<:=\030\025)
[0 7.79929 0 5.29951 0 ] pdfxs
492.891 488.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
496.491 488.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
509.88 488.76 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
93.8 473 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
101.599 473.1 m
(=) show
100.499 479.499 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
100.499 479.499 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\f\017\016)
[7.5993 0 4.29961 0 ] pdfxs
121.097 480.599 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
121.097 480.599 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(UILVAW)
[11.299 0 9.09917 0 5.19952 0 ] pdfxs
152.795 482.799 m
(\033ON)
[0 4.29961 0 ] pdfxs
164.394 482.699 m
(P) show
162.194 475.7 m
(R) show
167.493 475.6 m
(S) show
174.893 473 m
(<) show
182.692 473.1 m
(=) show
187.991 473 m
(\025) show
187.991 473 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
191.591 473 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
200.52 473.04 m
/N22 10.9091 Tf
(.) show
110.52 445.92 m
/N110 10.9091 Tf
(Pr)
[6.70915 4.78904 ] pdfxs
121.778 445.92 m
(oof:)
[5.38913 5.38913 3.58903 3.58903 ] pdfxs
145.014 445.92 m
/N22 10.9091 Tf
(Since)
[6.10906 2.98911 5.38913 4.78904 4.78904 ] pdfxs
173 445.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
182.88 445.92 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
193.658 445.92 m
(an)
[4.78904 5.38913 ] pdfxs
208 445.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
211.996 445.92 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
262.647 445.92 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
284.072 445.92 m
(y) show
288.741 445.92 m
(,) show
295.45 445.92 m
(we)
[7.90916 4.78904 ] pdfxs
311.748 445.92 m
(ha)
[5.38913 4.78904 ] pdfxs
321.686 445.92 m
(v) show
326.956 445.92 m
(e) show
335.5 445.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(]) show
335.5 445.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\000)
[6.4994 0 ] pdfxs
352.098 445.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(?) show
363.097 453.499 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
371.197 453.499 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
376.996 453.499 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\031) show
385.595 453.599 m
(\033\036\035 \037\026!\005"$#)
[0 3.79965 0 2.79974 0 6.39941 0 6.69939 0 4.99954 0 
] pdfxs
412.693 453.599 m
(%\(')
[0 3.59967 0 ] pdfxs
404.594 448.1 m
(%) show
420.492 453.499 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
425.392 445.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
433.091 446 m
(=) show
438.491 445.9 m
(\025) show
438.491 445.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
447.09 446 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
450.09 445.9 m
(\027) show
454.489 453.499 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
463.288 453.499 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
474.087 445.9 m
(<) show
481.787 446 m
(=) show
487.186 445.9 m
(\025) show
487.186 445.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
490.786 445.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
505.284 445.9 m
(1) show
517.683 445.9 m
(3) show
522.84 445.92 m
/N22 10.9091 Tf
(,) show
93.6 429.24 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
113.2 429.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(_) show
121.199 429.3 m
(=) show
126.599 429.2 m
(\025) show
126.599 429.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
135.798 436.799 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
140.098 429.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020`\025)
[0 7.29933 0 ] pdfxs
147.397 429.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
150.997 429.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027a\0272B)
[5.29951 0 4.19962 0 7.6993 0 ] pdfxs
180.694 442.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
Q
q
43.2 0 0 -4.79999 1799.88 4322.28 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
180.7 429 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
185.6 429.2 m
(<) show
193.399 429.3 m
(=) show
198.798 429.2 m
(\025) show
198.798 429.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
202.398 429.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
211.32 429.24 m
/N22 10.9091 Tf
(.) show
217.429 429.24 m
(By)
[7.30907 5.38913 ] pdfxs
232.647 429.24 m
(rearranging)
[3.58903 4.78904 4.78904 3.58903 3.58903 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 
] pdfxs
285.447 429.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
301.374 429.24 m
(terms)
[2.98911 4.78904 3.58903 8.50908 4.18912 ] pdfxs
328.08 429.24 m
(in)
[2.98911 5.38913 ] pdfxs
339.218 429.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
355.025 429.24 m
(latter)
[2.98911 4.78904 2.98911 2.98911 4.78904 3.58903 ] pdfxs
376.68 429.24 m
(,) show
382.309 429.24 m
(\002rst)
[6.10906 3.58903 4.18912 2.98911 ] pdfxs
401.825 429.24 m
(we)
[7.90916 4.78904 ] pdfxs
417.163 429.24 m
(obtain)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 ] pdfxs
447.9 436.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
455.899 429.201 m
(X\001_)
[0 6.79938 0 ] pdfxs
471.198 429.301 m
(=) show
476.397 429.201 m
(\025) show
476.397 429.201 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
485.597 436.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
489.896 429.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020`\025)
[0 7.29933 0 ] pdfxs
497.195 429.201 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
500.795 429.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027a\027)
[5.29951 0 4.19962 0 ] pdfxs
517.994 436.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(4) show
94.5324 423.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
102.332 415.702 m
(<:=\030\025)
[0 7.79929 0 5.29951 0 ] pdfxs
115.43 415.702 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
119.03 415.702 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
127.92 415.68 m
/N22 10.9091 Tf
(.) show
134.149 415.68 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
159.185 415.68 m
(we)
[7.90916 4.78904 ] pdfxs
174.644 415.68 m
(substitute)
[4.18912 5.38913 5.38913 4.18912 2.98911 2.98911 2.98911 5.38913 2.98911 4.78904 ] pdfxs
219.054 415.68 m
(it)
[2.98911 2.98911 ] pdfxs
227.792 415.68 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
243.4 415.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
251.399 415.7 m
(=d\025)
[0 5.39951 0 ] pdfxs
256.799 415.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
260.398 415.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
272.16 415.68 m
/N22 10.9091 Tf
(to)
[2.98911 5.38913 ] pdfxs
283.298 415.68 m
(obtain)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 ] pdfxs
313.5 423.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\031) show
321.799 423.4 m
(\033) show
325.499 423.3 m
(\035) show
328.399 423.4 m
(\037\026!\005"+#&%\(')
[0 6.39941 0 6.69939 0 4.89955 0 2.49977 0 3.59967 0 
] pdfxs
340.698 417.8 m
(%) show
356.596 423.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
361.496 415.701 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<:=)
[0 7.79929 0 ] pdfxs
374.794 415.701 m
(\025) show
374.794 415.701 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
378.394 415.701 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
($*)
[4.99954 0 ] pdfxs
386.393 415.701 m
(\027) show
390.793 423.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
390.793 423.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\034\006)
[8.09926 0 ] pdfxs
409.391 415.701 m
(X\005_)
[0 6.69939 0 ] pdfxs
424.09 415.701 m
(=\030\025)
[0 5.29951 0 ] pdfxs
429.389 415.701 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
438.589 423.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
442.888 415.701 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020`\025)
[0 7.29933 0 ] pdfxs
450.187 415.701 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
453.787 415.701 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027a\027)
[5.19952 0 4.19962 0 ] pdfxs
471.086 415.701 m
(1\0033)
[0 10.899 0 ] pdfxs
487.08 415.68 m
/N22 10.9091 Tf
(.) show
493.189 415.68 m
(Thus:)
[6.70915 5.38913 5.38913 4.18912 2.98911 ] pdfxs
190 377.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
197.899 377.9 m
(1) show
206.698 385.499 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
206.698 385.499 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021\020)
[6.5994 0 ] pdfxs
224.697 395.198 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
228.396 395.098 m
(\035) show
231.596 395.198 m
(N) show
236.696 388.099 m
(R) show
244.795 393.399 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
253.194 387.699 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
258.794 393.799 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
261.793 404.198 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
265.693 393.299 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
252.494 394.798 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
256.494 394.798 m
(\033/\035)
[0 3.69966 0 ] pdfxs
269.393 385.799 m
(<) show
277.092 385.899 m
(=) show
282.491 385.799 m
(\025) show
282.491 385.799 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
291.091 385.899 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
294.09 385.799 m
(\027) show
Q
q
852 0 0 -4.79999 2127.48 3807.48 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
230.5 370.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(_) show
238.499 369.5 m
(=) show
243.799 370.3 m
(\025) show
243.799 370.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
252.898 377.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
257.198 370.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020`\025)
[0 7.29933 0 ] pdfxs
264.497 370.3 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
268.097 370.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027a\027)
[5.29951 0 4.19962 0 ] pdfxs
303.293 385.499 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
306.093 377.899 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(B) show
318.992 393.398 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
324.391 385.499 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
335.79 395.198 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
339.59 395.098 m
(\035) show
342.69 395.198 m
(N) show
347.789 388.098 m
(R) show
355.888 393.398 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
364.288 387.698 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
369.887 393.798 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
372.887 404.197 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
376.787 393.298 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
363.588 394.798 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
367.587 394.798 m
(\033\036\035)
[0 3.79965 0 ] pdfxs
380.586 385.799 m
(<) show
388.385 385.899 m
(=) show
387.286 392.398 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
387.286 392.398 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\f\017\016)
[7.5993 0 4.29961 0 ] pdfxs
408.384 393.398 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
Q
q
925.2 0 0 -4.79999 3178.68 3807.48 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
347.8 377.9 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
353 370.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
360.799 370.101 m
(=) show
359.699 376.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
367.198 368.801 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
369.998 376.4 m
(\021) show
379.597 377.9 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
197.514 351.003 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
210.913 359.002 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
216.012 351.402 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<2=)
[0 7.6993 0 ] pdfxs
222.711 357.902 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
222.711 357.902 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\f\023\016)
[7.49931 0 4.3996 0 ] pdfxs
243.91 359.002 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
249.309 351.003 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
260.708 360.702 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033/\035)
[0 3.69966 0 ] pdfxs
267.607 360.702 m
(N) show
272.707 353.602 m
(R) show
280.806 359.002 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
289.205 353.202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
294.805 359.302 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
297.805 369.701 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
301.704 358.802 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
288.505 360.402 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
292.505 360.402 m
(\033) show
296.205 360.302 m
(\035) show
Q
q
955.2 0 0 -4.79999 2097.48 3463.08 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
241.2 343.5 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
246.3 335.901 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
254.099 335.801 m
(=) show
252.999 341.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
260.498 334.301 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
263.398 341.9 m
(\021) show
272.997 343.5 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
309.994 350.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
323.292 358.399 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
328.392 350.799 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<:=)
[0 7.79929 0 ] pdfxs
335.091 357.299 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
335.091 357.299 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\f\017\016)
[7.5993 0 4.29961 0 ] pdfxs
356.289 358.399 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
Q
q
361.2 0 0 -4.79999 3221.88 3463.08 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
323.9 343.5 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
329 335.901 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
336.799 335.801 m
(=) show
335.699 341.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
343.198 334.301 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
345.998 341.9 m
(\021) show
355.697 343.5 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
512.88 362.4 m
/N22 10.9091 Tf
(\(1\))
[3.58903 5.38913 3.58903 ] pdfxs
93.6 313.08 m
(note)
[5.38913 5.38913 2.98911 4.78904 ] pdfxs
116.356 313.08 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
136.713 313.08 m
(since)
[4.18912 2.98911 5.38913 4.78904 4.78904 ] pdfxs
163.5 320.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
180.218 313.08 m
/N22 10.9091 Tf
(models)
[8.50908 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
215.792 313.08 m
(a) show
224.661 313.08 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
271.025 313.08 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
327.054 313.08 m
(problem,)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 2.74908 ] pdfxs
370.407 313.08 m
(we)
[7.90916 4.78904 ] pdfxs
387.065 313.08 m
(ha)
[5.38913 4.78904 ] pdfxs
397.003 313.08 m
(v) show
402.272 313.08 m
(e) show
411.5 313.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<\)=)
[0 8.29924 0 ] pdfxs
418.799 319.199 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
426.199 311.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
429.098 319.299 m
(\021) show
440.897 320.699 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(4) show
454.196 313.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<2=)
[0 7.6993 0 ] pdfxs
460.896 319.499 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
460.896 319.499 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\f\023\016)
[7.49931 0 4.3996 0 ] pdfxs
484.293 313.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(9) show
497.592 313.1 m
(3) show
502.68 313.08 m
/N22 10.9091 Tf
(,) show
509.869 313.08 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
94.7 307.1 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
101.499 299.501 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
109.199 299.601 m
(=) show
108.199 305.6 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
115.598 298.101 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
118.498 305.7 m
(\021) show
129.697 307.1 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
132.497 299.501 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(B) show
141.296 307.1 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
147.895 299.501 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
155.694 299.601 m
(=) show
154.595 306 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
154.595 306 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\f\017\016)
[7.5993 0 4.29961 0 ] pdfxs
177.392 307.1 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
179.28 299.52 m
/N22 10.9091 Tf
(.) show
188.029 299.52 m
(Such)
[6.10906 5.38913 4.78904 5.38913 ] pdfxs
213.425 299.52 m
(a) show
221.814 299.52 m
(lo)
[2.98911 5.38913 ] pdfxs
229.952 299.52 m
(wer)
[7.90916 4.78904 3.58903 ] pdfxs
249.96 299.52 m
(bound)
[5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
280.745 299.52 m
(characterizes)
[4.78904 5.38913 4.78904 3.58903 4.78904 4.78904 2.98911 4.78904 3.58903 2.98911 4.78904 
4.78904 4.18912 ] pdfxs
341.203 299.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
358.091 299.52 m
(maximum)
[8.50908 4.78904 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
405.774 299.52 m
(\003e)
[6.10906 4.78904 ] pdfxs
416.552 299.52 m
(xibility)
[5.38913 2.98911 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 ] pdfxs
451.505 299.52 m
(we)
[7.90916 4.78904 ] pdfxs
467.803 299.52 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
486.61 299.52 m
(af)
[4.78904 3.58903 ] pdfxs
494.749 299.52 m
(ford)
[3.58903 5.38913 3.58903 5.38913 ] pdfxs
516.425 299.52 m
(in)
[2.98911 5.38913 ] pdfxs
93.5999 285.96 m
(a) show
101.989 285.96 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
149.051 285.96 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
194.902 285.96 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
214.189 285.96 m
(gi)
[5.38913 2.98911 ] pdfxs
222.327 285.96 m
(v) show
227.596 285.96 m
(es)
[4.78904 4.18912 ] pdfxs
240.294 285.96 m
(us)
[5.38913 4.18912 ] pdfxs
253.472 285.96 m
(an)
[4.78904 5.38913 ] pdfxs
267.371 285.96 m
(insight)
[2.98911 5.38913 4.18912 2.98911 5.38913 5.38913 2.98911 ] pdfxs
300.534 285.96 m
(on)
[5.38913 5.38913 ] pdfxs
314.912 285.96 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
331.8 285.96 m
(range)
[3.58903 4.78904 5.38913 5.38913 4.78904 ] pdfxs
359.465 285.96 m
(of)
[5.38913 3.58903 ] pdfxs
372.6 286 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
380.083 285.96 m
/N22 10.9091 Tf
(v) show
385.232 285.96 m
(alues)
[4.78904 2.98911 5.38913 4.78904 4.18912 ] pdfxs
411.218 285.96 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
431.094 285.96 m
(we)
[7.90916 4.78904 ] pdfxs
447.272 285.96 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
465.959 285.96 m
(choose)
[4.78904 5.38913 5.38913 5.38913 4.18912 4.78904 ] pdfxs
499.734 285.96 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
516.021 285.96 m
(it.)
[2.98911 2.98911 2.74908 ] pdfxs
93.6001 272.4 m
(In)
[3.58903 5.38913 ] pdfxs
105.698 272.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
121.986 272.4 m
(second)
[4.18912 4.78904 4.78904 5.38913 5.38913 5.38913 ] pdfxs
155.16 272.4 m
(theorem)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 8.50908 ] pdfxs
193.844 272.4 m
(we)
[7.90916 4.78904 ] pdfxs
209.542 272.4 m
(deri)
[5.38913 4.78904 3.58903 2.98911 ] pdfxs
226.058 272.4 m
(v) show
231.327 272.4 m
(e) show
239.236 272.4 m
(an)
[4.78904 5.38913 ] pdfxs
252.534 272.4 m
(upper)
[5.38913 5.38913 5.38913 4.78904 3.58903 ] pdfxs
280.32 272.4 m
(bound)
[5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
310.505 272.4 m
(on)
[5.38913 5.38913 ] pdfxs
324.403 272.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
340.691 272.4 m
(e) show
345.36 272.4 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
382.243 272.4 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
418.418 272.4 m
(of)
[5.38913 3.58903 ] pdfxs
430.516 272.4 m
(steps)
[4.18912 2.98911 4.78904 5.38913 4.18912 ] pdfxs
455.301 272.4 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
474.578 272.4 m
(a) show
482.367 272.4 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
93.5998 258.84 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
148.069 258.84 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
192.96 258.84 m
(tak)
[2.98911 4.78904 5.38913 ] pdfxs
206.007 258.84 m
(es)
[4.78904 4.18912 ] pdfxs
217.745 258.84 m
(to)
[2.98911 5.38913 ] pdfxs
228.763 258.84 m
(complete)
[4.78904 5.38913 8.50908 5.38913 2.98911 4.78904 2.98911 4.78904 ] pdfxs
271.156 258.84 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
297.272 258.84 m
(e) show
301.941 258.84 m
(x) show
307.21 258.84 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
341.814 258.84 m
(an)
[4.78904 5.38913 ] pdfxs
355 258.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
359.072 258.84 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
408.763 258.84 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
430.188 258.84 m
(y) show
434.857 258.84 m
(.) show
441.206 258.84 m
(W) show
450.675 258.84 m
(e) show
457.984 258.84 m
(\002rst)
[6.10906 3.58903 4.18912 2.98911 ] pdfxs
477.381 258.84 m
(present)
[5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
511.384 258.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5994 245.28 m
(follo)
[3.58903 5.38913 2.98911 2.98911 5.38913 ] pdfxs
113.705 245.28 m
(wing)
[7.90916 2.98911 5.38913 5.38913 ] pdfxs
138.381 245.28 m
(lemma:)
[2.98911 4.78904 8.50908 8.50908 4.78904 2.98911 ] pdfxs
110.519 218.16 m
/N110 10.9091 Tf
(Lemma)
[7.30907 4.78904 9.10916 9.10916 5.38913 ] pdfxs
148.865 218.16 m
(1:)
[5.38913 3.58903 ] pdfxs
161.203 218.16 m
/N22 10.9091 Tf
(Let)
[6.70915 4.78904 2.98911 ] pdfxs
178.3 225.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
187.211 218.16 m
/N22 10.9091 Tf
(be)
[5.38913 4.78904 ] pdfxs
200.029 218.16 m
(a) show
207.458 218.16 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
252.382 218.16 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
306.971 218.16 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
351.862 218.16 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
370.189 218.16 m
(let)
[2.98911 4.78904 2.98911 ] pdfxs
383.9 218.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
392.836 218.16 m
/N22 10.9091 Tf
(be)
[5.38913 4.78904 ] pdfxs
405.654 218.16 m
(an)
[4.78904 5.38913 ] pdfxs
418.9 218.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
422.912 218.16 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
472.603 218.16 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
494.028 218.16 m
(y) show
502.297 218.16 m
(on)
[5.38913 5.38913 ] pdfxs
515.8 225.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
522.076 218.16 m
/N22 10.9091 Tf
(.) show
93.6 204.6 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
118.756 204.6 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
134.083 204.6 m
(an)
[4.78904 5.38913 ] pdfxs
144.142 204.6 m
(y) show
152.411 204.6 m
(non-goal)
[5.38913 5.38913 5.38913 3.58903 5.38913 5.38913 4.78904 2.98911 ] pdfxs
193.843 204.6 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
216.9 204.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
221.629 204.6 m
/N22 10.9091 Tf
(,) show
227.018 204.6 m
(there)
[2.98911 5.38913 4.78904 3.58903 4.78904 ] pdfxs
251.563 204.6 m
(e) show
256.232 204.6 m
(xists)
[5.38913 2.98911 4.18912 2.98911 4.18912 ] pdfxs
278.858 204.6 m
(a) show
286.407 204.6 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
309.6 204.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
314.999 204.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
317.52 204.6 m
/N22 10.9091 Tf
(,) show
322.909 204.6 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
345.545 204.6 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
364.8 212.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
373.299 204.701 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
372.599 213.8 m
(\033) show
376.599 213.8 m
(\033\036\035)
[0 3.79965 0 ] pdfxs
387.298 204.601 m
(1\0033)
[0 10.899 0 ] pdfxs
406.08 204.6 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
424.7 204.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
432.499 204.7 m
(=) show
437.799 204.6 m
(\025) show
437.799 204.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
446.398 204.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
449.498 204.6 m
(\027) show
457.097 204.6 m
(1\003<)
[0 10.899 0 ] pdfxs
475.695 204.7 m
(=) show
481.095 204.6 m
(\025) show
481.095 204.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
484.695 204.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
493.68 204.6 m
/N22 10.9091 Tf
(.) show
110.52 177.48 m
/N110 10.9091 Tf
(Pr)
[6.70915 4.78904 ] pdfxs
121.778 177.48 m
(oof:)
[5.38913 5.38913 3.58903 3.58903 ] pdfxs
145.975 177.48 m
/N22 10.9091 Tf
(W) show
155.444 177.48 m
(e) show
164.193 177.48 m
(pro)
[5.38913 3.58903 5.38913 ] pdfxs
178.44 177.48 m
(v) show
183.709 177.48 m
(e) show
192.698 177.48 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
210.065 177.48 m
(lemma)
[2.98911 4.78904 8.50908 8.50908 4.78904 ] pdfxs
243.73 177.48 m
(by)
[5.38913 5.38913 ] pdfxs
258.709 177.48 m
(contradiction.)
[4.78904 5.38913 5.38913 2.98911 3.58903 4.78904 5.38913 2.98911 4.78904 2.98911 2.98911 
5.38913 5.38913 2.74908 ] pdfxs
326.116 177.48 m
(Let)
[6.70915 4.78904 2.98911 ] pdfxs
344.9 177.5 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\024) show
358.003 177.48 m
/N22 10.9091 Tf
(be)
[5.38913 4.78904 ] pdfxs
372.261 177.48 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
389.628 177.48 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
405.796 177.48 m
(of)
[5.38913 3.58903 ] pdfxs
418.854 177.48 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
447.5 177.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
453.099 177.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
461.899 177.5 m
(?) show
473.998 185.099 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
485.16 177.48 m
/N22 10.9091 Tf
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
509.236 177.48 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
93.8 170.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
102.199 162.501 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
101.599 171.7 m
(\033) show
105.499 171.7 m
(\033\036\035)
[0 3.79965 0 ] pdfxs
118.298 162.501 m
(1) show
131.297 162.501 m
(3) show
140.4 162.48 m
/N22 10.9091 Tf
(\(note)
[3.58903 5.38913 5.38913 2.98911 4.78904 ] pdfxs
166.745 162.48 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
187.6 162.1 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
198.899 171.799 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033/\035)
[0 3.69966 0 ] pdfxs
205.798 171.799 m
(N) show
205.798 171.799 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\025)
[5.09953 0 ] pdfxs
220.497 170.099 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
228.896 164.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
234.596 170.399 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
237.495 180.798 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
241.495 169.899 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
228.296 171.499 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
232.196 171.499 m
(\033\036\035)
[0 3.79965 0 ] pdfxs
250.694 170.099 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
264.793 170.099 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
269.28 162.48 m
/N22 10.9091 Tf
(\)) show
276.829 162.48 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
296.476 162.48 m
(assume)
[4.78904 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
332.411 162.48 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
352.6 162.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(]) show
359.199 162.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
364.299 162.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*^?)
[0 8.49922 0 ] pdfxs
372.798 162.5 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027\024)
[11.7989 0 ] pdfxs
394.496 170.099 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
398.696 162.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<:=d\025)
[0 7.79929 0 5.39951 0 ] pdfxs
411.895 162.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
415.494 162.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(+*,\027e9)
[4.89955 0 3.09972 0 9.89909 0 ] pdfxs
441.492 170.099 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
454.891 162.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<2=\030\025)
[0 7.6993 0 5.29951 0 ] pdfxs
467.889 162.5 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
471.489 162.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
480.48 162.48 m
/N22 10.9091 Tf
(.) show
490.189 162.48 m
(Also)
[7.90916 2.98911 4.18912 5.38913 ] pdfxs
514.625 162.48 m
(let)
[2.98911 4.78904 2.98911 ] pdfxs
306.84 77.28 m
(6) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 7 7
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font B
10 dict begin
T3Defs
/FontType 3 def
/FontName /N68 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-38 
119 
115 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 31 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 41 2 setcachedevice
41 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 50 def
/ImageMatrix [41 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFFF80FFE001FFFF80FF00003FFF80F80FFC07FF80E00FFC01FF80C0FF
FFC0FF80C1FFFFE03F80C3FFFFF03F8083FFFFF81F8080FFFFFE0F80801FFFFE
0F80801FFFFE0780801FFFFF0780801FFFFF0780C00FFFFF0380C00FFFFF0380
C00FFFFF0380E01FFFFF0380F8FFFFFE0380FFFFFFFE0380FFFFFFF80380FFFF
FFE00380FFFFFE000380FFFF80000380FFFE00000780FFFE00000780FFFC0000
0F80FFF800003F80FFE000003F80FFC00000FF80FFC00007FF80FFC000FFFF80
FFC01FFFFF80FFC03FFFFF80FFC03FFF8780FFC07FFF0080FFC07FFF0080FFC0
7FFF0080FFE07FFF0000FFE07FFF0000FFE07FFF0000FFE03FFF8000FFF81FFF
C000FFFC1FFFE000FFFC1FFFE080FFFF03FFC380FFFF00FF0380FFFF80000780
FFFFF0000F80FFFFFE00FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 109 75 setcachedevice
109 0 0 75 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 109 def
/Height 75 def
/ImageMatrix [109 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000FFF83FFE00000003FFFF88000000FFF03FFE00000001FFFF88000000F
FF01FFE00000001FFFF88000000FFF00FFE00000001FFFF8FF000FFFFF00FFFF
FC003FFFFFF8FFC01FFFFF00FFFFFE00FFFFFFF8FFE03FFFFF007FFFFE003FFF
FFF8FFF83FFFFF003FFFFE003FFFFFF8FFF83FFFFF003FFFFE003FFFFFF8FFFC
3FFFFE000FFFFF803FFFFFF8FFFC1FFFFE000FFFFF801FFFFFF8FFFC1FFFFE00
0FFFFF801FFFFFF8FFFE1FFFFE0087FFFF801FFFFFF8FFFE1FFFFE00C3FFFFC0
1FFFFFF8FFFE1FFFFE00C3FFFFC01FFFFFF8FFFE0FFFFE00C1FFFFC00FFFFFF8
FFFE0FFFFE00E0FFFFC00FFFFFF8FFFF0FFFFE00F0FFFFC00FFFFFF8FFFF0FFF
FE00F0FFFFE00FFFFFF8FFFF0FFFFE00F83FFFE00FFFFFF8FFFF03FFFC00F83F
FFE007FFFFF8FFFF03FFFC01F81FFFE007FFFFF8FFFF83FFFC01FE0FFFE007FF
FFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF
81FFFC01FF87FFF003FFFFF8FFFF81FFFC01FF87FFF003FFFFF8FFFFE1FFFC01
FF83FFF003FFFFF8FFFFE1FFFC01FFC0FFF803FFFFF8FFFFE1FFFC01FFE0FFF8
03FFFFF8FFFFE0FFF803FFE0FFF800FFFFF8FFFFF0FFF803FFF87FF800FFFFF8
FFFFF0FFF803FFF83FF800FFFFF8FFFFF0FFF803FFFC3FFE00FFFFF8FFFFF07F
F803FFFC1FFE007FFFF8FFFFF07FF803FFFE1FFE007FFFF8FFFFF87FF803FFFE
1FFE007FFFF8FFFFF87FF803FFFF0FFF007FFFF8FFFFF87FF803FFFF03FF007F
FFF8FFFFF83FE003FFFF83FF003FFFF8FFFFF83FE00FFFFF81FF003FFFF8FFFF
FC3FE00FFFFFE1FF003FFFF8FFFFFC3FE00FFFFFF0FF803FFFF8FFFFFC3FE00F
FFFFF0FF803FFFF8FFFFFC0FE00FFFFFF07F801FFFF8FFFFFC0FE00FFFFFF87F
801FFFF8FFFFFE0FE00FFFFFF83F801FFFF8FFFFFE0FE00FFFFFFC3FC01FFFF8
FFFFFE0FE00FFFFFFE0FC01FFFF8FFFFFE07C01FFFFFFE0FC00FFFF8FFFFFE07
C01FFFFFFE07C00FFFF8FFFFFF87C01FFFFFFF83C00FFFF8FFFFFF87C01FFFFF
FFC3E00FFFF8FFFFFF87C01FFFFFFFC3E00FFFF8FFFFFF83C01FFFFFFFE1E003
FFF8FFFFFFC3C01FFFFFFFE1E003FFF8FFFFFFC3C01FFFFFFFE0E003FFF8FFFF
FFC3C01FFFFFFFF03803FFF8FFFFFFC1C01FFFFFFFF83801FFF8FFFFFFC1C01F
FFFFFFF83801FFF8FFFFFFE1803FFFFFFFFE1801FFF8FFFFFFE1803FFFFFFFFE
1C01FFF8FFFFFFE1803FFFFFFFFE0C01FFF8FFFFFFE0803FFFFFFFFF0400FFF8
FFFFFFE0803FFFFFFFFF8400FFF8FFFFFFF0803FFFFFFFFF8400FFF8FFFFFFF0
803FFFFFFFFFC200FFF8FFFFFFF0803FFFFFFFFFE000FFF8FFFFFFF0003FFFFF
FFFFE0007FF8FFFFFFF0003FFFFFFFFFE0003FF8FFFFE000007FFFFFFFFFF800
0008FFFFE000007FFFFFFFFFF8000008FFFFE000007FFFFFFFFFFC000008FFFF
E000007FFFFFFFFFFE000000FFFFE000007FFFFFFFFFFE000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
109 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF880FFFFF000FFFFF000FFFFE000FFFFE000FFFFE000FFFF8080FFFF8080
FFFF8080FFFF8180FFFF0180FFFF0180FFFE0180FFFE0380FFFE0380FFFE0F80
FFFC0F80FFFC0F80FFFC0F80FFF81F80FFF81F80FFF81F80FFE03F80FFE03F80
FFE03F80FFC07F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80FF80FF80
FF83FF80FF03FF80FF03FF80FE03FF80FE07FF80FE07FF80FE0FFF80F80FFF80
F80FFF80F80FFF80F01FFF80F01FFF80F01FFF80E03FFF80E03FFF80E03FFF80
C0FFFF80C0FFFF80C0FFFF80C1FFFF8081FFFF8081FFFF8081FFFF8081FFFF80
81FFFF80C1FFFF80C0FFFF80C0FFFF80C0FFFF80E03FFF80E03FFF80E03FFF80
F01FFF80F01FFF80F01FFF80F80FFF80F80FFF80F80FFF80FE0FFF80FE07FF80
FE07FF80FE03FF80FF03FF80FF03FF80FF83FF80FF80FF80FF80FF80FF80FF80
FFC0FF80FFC07F80FFC07F80FFC07F80FFE03F80FFE03F80FFE03F80FFF81F80
FFF81F80FFF81F80FFFC0F80FFFC0F80FFFC0F80FFFE0F80FFFE0380FFFE0380
FFFE0180FFFF0180FFFF0180FFFF8180FFFF8080FFFF8080FFFF8080FFFFE000
FFFFE000FFFFE000FFFFF000FFFFF000FFFFF880>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
123 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -1 68 79 setcachedevice
68 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 80 def
/ImageMatrix [68 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF0003FFFFFFFFF0FFF000003FFFFFFFF0FFF000003FFFFFFFF0FFC0000003
FFFFFFF0FE00000000FFFFFFF0FC000000001FFFFFF0F80000000007FFFFF0F0
00007FC003FFFFF0F00007FFFE03FFFFF0E0001FFFFF807FFFF08000FFFFFFE0
3FFFF08000FFFFFFE01FFFF00001FFFFFFF80FFFF00003FFFFFFFC03FFF00007
FFFFFFFE03FFF0000FFFFFFFFE01FFF0000FFFFFFFFF00FFF0000FFFFFFFFF00
FFF0003FFFFFFFFF007FF0003FFFFFFFFF807FF0803FFFFFFFFF807FF0803FFF
FFFFFF803FF0803FFFFFFFFF803FF0803FFFFFFFFF800FF0E00FFFFFFFFF800F
F0E00FFFFFFFFF800FF0F00FFFFFFFFF800FF0F807FFFFFFFF000FF0FC01FFFF
FFFF000FF0FC00FFFFFFFE000FF0FF80FFFFFFFE000FF0FFE0FFFFFFFC000FF0
FFFFFFFFFFFC003FF0FFFFFFFFFFF8003FF0FFFFFFFFFFE0007FF0FFFFFFFFFF
80007FF0FFFFFFFFFF00007FF0FFFFFFFFF80000FFF0FFFFFFFFF80001FFF0FF
FFFFFFE00003FFF0FFFFFFFF80000FFFF0FFFFFFFC00000FFFF0FFFFFFF00000
3FFFF0FFFFFF8000007FFFF0FFFFFF800003FFFFF0FFFFFF00000FFFFFF0FFFF
FE00003FFFFFF0FFFFFC00003FFFFFF0FFFFF80001FFFFFFF0FFFFE00007FFFF
FFF0FFFFE0003FFFFFFFF0FFFFE0007FFFFFFFF0FFFFE000FFFFFFFFF0FFFFC0
00FFFFFFFFF0FFFFC001FFFFFFFFF0FFFFC003FFFFFFFFF0FFFFC003FFFFFFFF
F0FFFFC003FFFFFFFFF0FFFFC00FFFFFFFFFF0FFFFC00FFFFFFF87F0FFFFE00F
FFFFFF81F0FFFFE00FFFFFFF80F0FFFFE00FFFFFFFC0F0FFFFF80FFFFFFFC030
FFFFF803FFFFFFC010FFFFF803FFFFFFC010FFFFFC03FFFFFFC000FFFFFE01FF
FFFF8000FFFFFF01FFFFFF8000FFFFFF80FFFFFF8000FFFFFFE07FFFFE0000FF
FFFFE00FFFF00000FFFFFFF001FF000000FFFFFFFC0000000010FFFFFFFE0000
000010FFFFFFFFC000000030FFFFFFFFF0000000F0FFFFFFFFF0000000F0FFFF
FFFFFF000007F0FFFFFFFFFFE0007FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -3 85 82 setcachedevice
85 0 0 85 0 -3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 85 def
/ImageMatrix [85 0 0 -85 0 85]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFFFFFFFFF8F801FFFFFFFFFFFFFFFFF8F0003FFFFFFFFFFFE01F
F8E0001FFFFFFFFFFFC003F880000FFFFFFFFFFF8000F880000FFFFFFFFFFF80
00F8800007FFFFFFFFFF800078000003FFFFFFFFFF800008000000FFFFFFFFFF
000000000000FFFFFFFFFF000C000000007FFFFFFFFF001F80000F007FFFFFFF
FF001FF8007FC03FFFFFFFFF001FF880FFE01FFFFFFFFE003FF880FFE01FFFFF
FFFE003FF881FFF80FFFFFFFFE003FF8E3FFFC03FFFFFFFE003FF8E3FFFE03FF
FFFFFE003FF8F3FFFE01FFFFFFFE007FF8FFFFFF01FFFFFFFE007FF8FFFFFF00
FFFFFFF8007FF8FFFFFF807FFFFFF8007FF8FFFFFFE07FFFFFF8007FF8FFFFFF
E07FFFFFF8007FF8FFFFFFF000000000007FF8FFFFFFF80000000000FFF8FFFF
FFF80000000000FFF8FFFFFFFC0000000000FFF8FFFFFFFC0000000000FFF8FF
FFFFFE0000000000FFF8FFFFFFFF83FFFFF800FFF8FFFFFFFF81FFFFF800FFF8
FFFFFFFF81FFFFF800FFF8FFFFFFFFC0FFFFF000FFF8FFFFFFFFE03FFFF000FF
F8FFFFFFFFE03FFFF000FFF8FFFFFFFFF03FFFF000FFF8FFFFFFFFF81FFFF000
FFF8FFFFFFFFF81FFFF000FFF8FFFFFFFFF80FFFF003FFF8FFFFFFFFFE07FFF0
03FFF8FFFFFFFFFE07FFF003FFF8FFFFFFFFFF07FFF003FFF8FFFFFFFFFF83FF
F003FFF8FFFFFFFFFF83FFF003FFF8FFFFFFFFFF80FFF003FFF8FFFFFFFFFFC0
FFF003FFF8FFFFFFFFFFC0FFF003FFF8FFFFFFFFFFE07FF003FFF8FFFFFFFFFF
F83FF003FFF8FFFFFFFFFFF83FF003FFF8FFFFFFFFFFF81FF003FFF8FFFFFFFF
FFFC1FF003FFF8FFFFFFFFFFFC1FF003FFF8FFFFFFFFFFFE0FF003FFF8FFFFFF
FFFFFE0FF003FFF8FFFFFFFFFFFE03F003FFF8FFFFFFFFFFFF03F003FFF8FFFF
FFFFFFFF81F003FFF8FFFFFFFFFFFF81F003FFF8FFFFFFFFFFFFE1F003FFF8FF
FFFFFFFFFFE0F003FFF8FFFFFFFFFFFFE0F003FFF8FFFFFFFFFFFFF07003FFF8
FFFFFFFFFFFFF07003FFF8FFFFFFFFFFFFF87003FFF8FFFFFFFFFFFFF83003FF
F8FFFFFFFFFFFFFC3003FFF8FFFFFFFFFFFFFC0003FFF8FFFFFFFFFFFFFC0003
FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFF80
03FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF
C003FFF8FFFFFFFFFFFFFFC003FFF8FFFFFFFFFFFFFFE003FFF8FFFFFFFFFFFF
FFE003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFF
FFFFF803FFF8FFFFFFFFFFFFFFFE03FFF8FFFFFFFFFFFFFFFF03FFF8FFFFFFFF
FFFFFFFFC7FFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 85 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 1 78 82 setcachedevice
78 0 0 81 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 81 def
/ImageMatrix [78 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFFFCFFC1FFFFFFFFFFFFFFFCFFC03FFFFFFFFFFFFFFCFFC0
1FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE00FFF
FFFFFFFFFFFCFFF00FFFFFFFFFFFFFFCFFF007FFFFFFFFFFFFFCFFF007FFFFFF
FFFFFFFCFFF007FFFFFFFFFFFFFCFFF807FFFFFFFFFFFFFCFFF803FFFFFFFFFF
FFFCFFFE03FFFFFFFFFFFFFCFFFE03FFFFFFFFFFFFFCFFFE00FFFFFFFFFFFFFC
FFFE00FFFFFFFFFFFFFCFFFF00FFFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF
007FFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFF803F
FFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFFC03FFFFFFFFFFFFCFFFFC01FFFFF
FFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC00801FFFFFF
FFFCFFFFE00801FFFFFFFFFCFFFFE00C0007FFFFFFFCFFFFE00E00007FFFFFFC
FFFFE00E00001FFFFFFCFFFFF803800001FFFFFCFFFFF803E000007FFFFCFFFF
F803FFE0007FFFFCFFFFF803FFFF803FFFFCFFFFFC01FFFFF807FFFCFFFFFC01
FFFFF803FFFCFFFFFC01FFFFFE00FFFCFFFFFC01FFFFFF803FFCFFFFFC01FFFF
FFE03FFCFFFFFE00FFFFFFF01FFCFFFFFE00FFFFFFF80FFCFFFFFE00FFFFFFF8
07FCFFFFFE00FFFFFFFE03FCFFFFFE007FFFFFFF00FCFFFFFE007FFFFFFF00FC
FFFFFF007FFFFFFF807CFFFFFF007FFFFFFF807CFFFFFF007FFFFFFF803CFFFF
FF007FFFFFFFC03CFFFFFF003FFFFFFFC01CFFFFFF003FFFFFFFC01CFFFFFF80
3FFFFFFFE01CFFFFFF803FFFFFFFE00CFFFFFF803FFFFFFFE00CFFFFFF803FFF
FFFFE00C1FFFFF800FFFFFFFE0001FFFFF800FFFFFFFE00003FFFF800FFFFFFF
E00000FFFFE00FFFFFFFE000007FFFE00FFFFFFFC000007FFFE00FFFFFFFC000
803FFFE00FFFFFFFC000E03FFFE00FFFFFFFC000E03FFFE007FFFFFF8000F00F
FFE007FFFFFF000CF00FFFE007FFFFFE000CF807FFE007FFFFF0000CFC01FFE0
07FFFFC0000CFE01FFF007FFFFC0001CFF803FF007FFFE00003CFFE000F007FF
8000007CFFE0000000000000007CFFF800000000000000FCFFFF000000000000
07FCFFFFC000000000001FFCFFFFFC0000000000FFFCFFFFFFF00000003FFFFC
FFFFFFF00000003FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 1 88 79 setcachedevice
88 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 88 def
/Height 78 def
/ImageMatrix [88 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFFFFFFFE00FFFFFFFC0FFFFFFFFFF8000FFFFFFE0FFFFFFFFFF8000FF
FFFFE01FFFFFFFFE00001FFFFFE00FFFFFFFFC000003FFFFE00FFFFFFFF80000
01FFFFF007FFFFFFF80000007FFFF007FFFFFFF0000F003FFFF807FFFFFFF000
3FF03FFFF807FFFFFFF000FFF80FFFF803FFFFFFE001FFFC07FFF803FFFFFFE0
01FFFC03FFFE00FFFFFF8001FFFC01FFFE00FFFFFF8003FFFE01FFFE00FFFFFF
8003FFFF81FFFF00FFFFFF8007FFFFC0FFFF007FFFFF0007FFFFF8FFFF007FFF
FF0007FFFFF8FFFF007FFFFE000FFFFFFFFFFF803FFFFE000FFFFFFFFFFF803F
FFFE000FFFFFFFFFFF803FFFFE003FFFFFFFFFFFC03FFFFC003FFFFFFFFFFFC0
1FFFFC003FFFFFFFFFFFC01FFFF8007FFFFFFFFFFFC01FFFF8007FFFFFFFFFFF
E01FFFF8007FFFFFFFFFFFE00FFFE000FFFFFFFFFFFFE00FFFE000FFFFFFFFFF
FFE00FFFC000FFFFFFFFFFFFF803FF8001FFFFFFFFFFFFF803FE0001FFFFFFFF
FFFFF803FE0003FFFFFFFFFFFFF803E00003FFFFFFFFFFFFFC01F0000FFFFFFF
FFFFFFFC01F0000FFFFFFFFFFFFFFC01F80000FFFFFFFFFFFFFC01FE00003FFF
FFFFFFFFFC01FF80003FFFFFFFFFFFFE00FFFF000FFFFFFFFFFFFE00FFFFF803
FFFFFFFFFFFE00FFFFF801FFFFFFFFFFFE00FFFFFF803FFFFFFFFFFE007FFFFF
C01FFFFFFFFFFF007FFFFFF01FFFFFFFFFFF007FFFFFF80FFFFFFFFFFF007FFF
FFFE07FFFFFFFFFF007FFFFFFE03FFFFFFFFFF003FFFFFFF00FFFFFFFFFF003F
FFFFFF007FFFFFFFFF803FFFFFFF807FFFFFFFFF803FFFFFFFC07FFFFFFFFF80
3FFFFFFFC03FFFFFFFFF803FFFFFFFC01FFFFFFFFF800FFFFFFFC01FFF1FFFFF
800FFFFFFFE00FFF1FFFFF800FFFFFFFE00FFF03FFFFE00FFFFFFFE00FFF00FF
FFE00FFFFFFFE00FFF007FFFE00FFFFFFFE003FF007FFFE00FFFFFFFE003FF80
3FFFE007FFFFFFE003FFE03FFFE007FFFFFFE003FFE03FFFE007FFFFFFC003FF
F00FFFE007FFFFFFC003FFF00FFFE007FFFFFF8003FFF807FFE007FFFFFF0003
FFFC01FFF007FFFFF80003FFFE01FFF007FFFFF8000FFFFF803FF007FFFFC000
0FFFFFE000F007FFF000001FFFFFE0000000000000001FFFFFF8000000000000
003FFFFFFF000000000000007FFFFFFFC0000000000003FFFFFFFFFC00000000
001FFFFFFFFFFFF000000007FFFFFFFFFFFFF000000007FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
88 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFF8083FFFF8083FFFF8081FFFF8081FFFF8081FFFF80C07FFF80C07FFF80
C07FFF80E07FFF80E03FFF80E03FFF80E01FFF80F01FFF80F01FFF80FC1FFF80
FC0FFF80FC0FFF80FC0FFF80FE07FF80FE07FF80FE07FF80FF01FF80FF01FF80
FF01FF80FF80FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80FFC07F80
FFF07F80FFF03F80FFF03F80FFF01F80FFF81F80FFF81F80FFFC1F80FFFC0780
FFFC0780FFFC0780FFFE0380FFFE0380FFFE0380FFFF0180FFFF0180FFFF0180
FFFFC080FFFFC080FFFFC080FFFFE080FFFFE000FFFFE000FFFFE000FFFFE000
FFFFE000FFFFE080FFFFC080FFFFC080FFFFC080FFFF0180FFFF0180FFFF0180
FFFE0380FFFE0380FFFE0380FFFC0780FFFC0780FFFC0780FFFC1F80FFF81F80
FFF81F80FFF01F80FFF03F80FFF03F80FFF07F80FFC07F80FFC07F80FFC07F80
FFC0FF80FF80FF80FF80FF80FF80FF80FF01FF80FF01FF80FF01FF80FE07FF80
FE07FF80FE07FF80FC0FFF80FC0FFF80FC0FFF80FC1FFF80F01FFF80F01FFF80
E01FFF80E03FFF80E03FFF80E07FFF80C07FFF80C07FFF80C07FFF8081FFFF80
81FFFF8081FFFF8083FFFF8083FFFF80C7FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
95 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 -1 119 82 setcachedevice
119 0 0 83 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 119 def
/Height 83 def
/ImageMatrix [119 0 0 -83 0 83]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FFFFFFFFFFFFFFFFFFFFFFFFFFEF003FFFFFFFFFFFFFFFFFFFFFFFFFEC001
FFFFFFFFFFFFFFFFFFFFF807FE00007FFFFFFFFFFFFFFFFFFFF001FE00003FFF
FFFFFFFFFFFFFFFFF0003E00003FFFFFFFFFFFFFFFFFFFF0003E00003FFFFFFF
FFFFFFFFFFFFE0000E00001FFFFFFFFFFFFFFFFFFFE0000600000FFFFFFFFFFF
FFFFFFFFE0000000000FFFFFFFFF1FFFFFFFFFE00300000007FFFFFFFF0FFFFF
FFFFE003C0C01E07FFFFFFFF0FFFFFFFFFE007FEC0FF07FFFFFFFC07FFFFFFFF
E007FEE3FF81FFFFFFFC03FFFFFFFFE007FEE3FF81FFFFFFF801FFFFFFFFE007
FEFFFF80FFFFFFF8007FFFFFFFE007FEFFFFC0FFFFFFF0003FFFFFFFE007FEFF
FFF0FFFFFFF0003FFFFFFFE007FEFFFFF0FFFFFFF0001FFFFFFFE007FEFFFFF8
7FFFFFE0000FFFFFFFE007FEFFFFF87FFFFFE00007FFFFFFE007FEFFFFF83FFF
FFC00001FFFFFFE007FEFFFFF83FFFFFC00400FFFFFFE007FEFFFFFC3FFFFFC0
0600FFFFFFE007FEFFFFFC3FFFFF000F007FFFFFE007FEFFFFFE1FFFFF000F80
3FFFFFF007FEFFFFFE1FFFFF000F801FFFFFF007FEFFFFFE07FFFE001FC007FF
FFF007FEFFFFFE07FFFE001FF003FFFFF007FEFFFFFF07FFFE007FF803FFFFF0
07FEFFFFFF07FFFE007FFC01FFFFF003FEFFFFFFC3FFFE007FFE00FFFFF003FE
FFFFFFC3FFFC007FFE00FFFFF003FEFFFFFFC1FFFC00FFFF007FFFF003FEFFFF
FFC1FFFC00FFFFC01FFFF003FEFFFFFFE1FFFC00FFFFE01FFFF003FEFFFFFFE1
FFF800FFFFF00FFFF803FEFFFFFFE0FFF801FFFFF807FFF803FEFFFFFFE0FFF8
01FFFFF803FFF803FEFFFFFFF0FFF801FFFFFC01FFF803FEFFFFFFF07FF001FF
FFFF007FF801FEFFFFFFF07FF003FFFFFF007FF801FEFFFFFFF87FF003FFFFFF
807FF801FEFFFFFFF87FF003FFFFFFC03FF801FEFFFFFFF81FF003FFFFFFC01F
F801FEFFFFFFF81FC003FFFFFFE00FFC01FEFFFFFFFC1FC007FFFFFFF007FC01
FEFFFFFFFC1FC007FFFFFFFC07FC01FEFFFFFFFC0FC007FFFFFFFE01FC01FEFF
FFFFFC0FC007FFFFFFFF00FC007EFFFFFFFC0F8007FFFFFFFF00FC007EFFFFFF
FF0F801FFFFFFFFF007C007EFFFFFFFF07801FFFFFFFFF803F007EFFFFFFFF07
801FFFFFFFFFC03F007EFFFFFFFF07801FFFFFFFFFF01F007EFFFFFFFF87003F
FFFFFFFFF807007EFFFFFFFF87003FFFFFFFFFF803003EFFFFFFFF83003FFFFF
FFFFFC01003EFFFFFFFF83003FFFFFFFFFFE01003EFFFFFFFF83003FFFFFFFFF
FE01803EFFFFFFFFC3007FFFFFFFFFFF00803EFFFFFFFFC2007FFFFFFFFFFFC0
003EFFFFFFFFC0007FFFFFFFFFFFC0003EFFFFFFFFC0007FFFFFFFFFFFE0001E
FFFFFFFFC0007FFFFFFFFFFFF0001EFFFFFFFFC0007FFFFFFFFFFFF8001EFFFF
FFFFE000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFC001EFFFFFFFF
E000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFF000EFFFFFFFFE000
FFFFFFFFFFFFFF800EFFFFFFFFE000FFFFFFFFFFFFFFC00EFFFFFFFFE001FFFF
FFFFFFFFFFE00EFFFFFFFFF001FFFFFFFFFFFFFFF00EFFFFFFFFF001FFFFFFFF
FFFFFFF00EFFFFFFFFF001FFFFFFFFFFFFFFF006FFFFFFFFF001FFFFFFFFFFFF
FFFC06FFFFFFFFF001FFFFFFFFFFFFFFFE06FFFFFFFFF007FFFFFFFFFFFFFFFF
06FFFFFFFFFC07FFFFFFFFFFFFFFFF86FFFFFFFFFC07FFFFFFFFFFFFFFFF86FF
FFFFFFFE07FFFFFFFFFFFFFFFFC6FFFFFFFFFF87FFFFFFFFFFFFFFFFF6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
119 83 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 38 43 95 setcachedevice
43 0 0 57 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 57 def
/ImageMatrix [43 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFFFE0FFE007FFFFE0FF00007FFFE0FC00000FFFE0F8000007FFE0F000
0000FFE0C0001F807FE0C000FFF87FE0C003FFFC1FE08007FFFE07E08007FFFE
03E0801FFFFF01E0003FFFFFC0E0003FFFFFE0E0007FFFFFF8E0007FFFFFFFE0
007FFFFFFFE0007FFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FF
FFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE080FFFFFFFFE080FFFFFF
FFE080FFFFFFFFE0807FFFFFFFE0807FFFFFFFE0C07FFFFFFFE0C07FFFFFFFE0
C07FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F81FFFFFFFE0F81F
FFFFFFE0FC1FFFFE1FE0FC07FFFE07E0FC07FFFE03E0FE03FFFF01E0FF01FFFF
01E0FF01FFFFC1E0FFC1FFFFC0E0FFE0FFFFE0E0FFE07FFFE060FFF01FFFE060
FFF80FFFE000FFFC0FFFE000FFFF83FFC000FFFFC07F0000FFFFC0000000FFFF
F0000000FFFFFE000000FFFFFF800060FFFFFFFC00E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 1 73 76 setcachedevice
73 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 75 def
/ImageMatrix [73 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000003FFFFFF808000000000003FFFFF8080000000000003FFFF80E000
0000000001FFFF80F00000000000007FFF80FC0000000000007FFF80FFFFF81F
FFFFE03FFF80FFFFFC0FFFFFF80FFF80FFFFFC03FFFFF807FF80FFFFFE01FFFF
F803FF80FFFFFE00FFFFFC03FF80FFFFFF00FFFFFE03FF80FFFFFF00FFFFFF81
FF80FFFFFF807FFFFFE1FF80FFFFFF807FFFFFE1FF80FFFFFF803FFFFFFFFF80
FFFFFFE03FFFFFFFFF80FFFFFFE03FFFFFFFFF80FFFFFFE00FFFFFFFFF80FFFF
FFF00FFFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF0
07FFFFFFFF80FFFFFFF807FFFFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF803FF
FFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF801FFFFFFFF80FFFFFFFC01FFFFFF
FF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80
FFFFFFFC00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFF
FFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF
803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803F
FFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFF
FF80FFFFFFFFC01FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80
FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE007FFFFFF80FFFF
FFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFF
F807FFFFFF80FFFFFFFFF803FFFFFF80FE3FFFFFF803FFFFFF80FE07FFFFFE03
FFFFFF80FE01FFFFFE00FFFFFF80FE01FFFFFE00FFFFFF80FF80FFFFFF00FFFF
FF80FF80FFFFFF007FFFFF80FF803FFFFF007FFFFF80FFC03FFFFF807FFFFF80
FFE01FFFFFC03FFFFF80FFF01FFFFFC03FFFFF80FFF807FFFFE01FFFFF80FFFE
001FFFF81FFFFF80FFFE0000000000001F80FFFF8000000000000780FFFFE000
000000000080FFFFFC00000000000080FFFFFF80000000000000FFFFFFFE0000
00000000FFFFFFFE000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -1 61 98 setcachedevice
61 0 0 99 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 99 def
/ImageMatrix [61 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8
0FFFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF883FFFFFFFFFFFFF8
83FFFFFFFFFFFFF883FFFFFFFFFFFFF881FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8
E1FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8
F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F07FFFFFFFFFFFF8
F07FF800FFFFFFF8F87FF800FFFFFFF8F87FC0000FFFFFF8F87F03FC01FFFFF8
F83E03FC003FFFF8F8380FFFC01FFFF8FC303FFFF007FFF8FC30FFFFF807FFF8
FC20FFFFFE03FFF8FC01FFFFFF00FFF8FC01FFFFFF007FF8FE01FFFFFF803FF8
FE03FFFFFFC01FF8FE03FFFFFFE01FF8FE03FFFFFFE00FF8FF83FFFFFFF80FF8
FF83FFFFFFF803F8FF83FFFFFFF803F8FF83FFFFFFFC01F8FF83FFFFFFFC01F8
FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC1FFFFFFFE00F8
FFC1FFFFFFFE00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8
FFE0FFFFFFFF00F8FFE0FFFFFFFF00F8FFF0FFFFFFFF00F8FFF0FFFFFFFF00F8
FFF0FFFFFFFF00F8FFF03FFFFFFF00F8FFF03FFFFFFF00F8FFF83FFFFFFF00F8
FFF83FFFFFFF01F8FFF83FFFFFFF01F8FFF81FFFFFFE01F8FFFE1FFFFFFE03F8
FFFE1FFFFFFE03F8FFFE1FFFFFFC0FF8FFFE0FF800380FF8FFFE0FF800381FF8
FFFF0FE000003FF8FFFF0FE1FF00FFF8FFFF0FE000003FF8FFFF07E000001FF8
FFFF07F8001803F8FFFF87FFFFFC03F8FFFF87FFFFFE01F8FFFF83FFFFFF00F8
FFFF83FFFFFF00F8FFFFC3FFFFFF8078FFFFC0FFFFFFE038FFFFC0FFFFFFE038
FFFFE0FFFFFFF038FFFFE0FFFFFFF008FFFFE07FFFFFF008FFFFF87FFFFFF008
FFFFF83FFFFFF808FFFFFC3FFFFFF808FFFFFC1FFFFFF800FFFFFE1FFFFFF800
FFFFFE0FFFFFF800FFFFFE0FFFFFF800FFFFFF03FFFFFC00FFFFFF83FFFFFC00
FFFFFFE1FFFFF808FFFFFFE0FFFFF808FFFFFFE07FFFF808FFFFFFF03FFFF008
FFFFFFF80FFFF038FFFFFFFE0FFFF078FFFFFFFF83FFE0F8FFFFFFFFE0FF01F8
FFFFFFFFE00001F8FFFFFFFFF8000FF8FFFFFFFFFF003FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
65 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
74 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
132 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/B/N68 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%BeginResource: font D
10 dict begin
T3Defs
/FontType 3 def
/FontName /N196 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-56 
76 
179 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 60 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 63 23 setcachedevice
63 0 0 71 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 71 def
/ImageMatrix [63 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFC03FE8FFFFFFFFFC000FE03FFFFFFFF00007E01FFFFFFFE00703E
81FFFFFFFE00783EE0FFFFFFF800FC3EF07FFFFFF803FC0EF03FFFFFF003FC0E
F03FFFFFF003FE3EF80FFFFFF007FFFEFC0FFFFFF007FFFEFE07FFFFE00FFFFE
FF83FFFFE00FFFFEFF81FFFFC00FFFFEFFC0FFFFC00FFFFEFFE03FFFC01FFFFE
FFF03FFFC01FFFFEFFF81FFF803FFFFEFFFE0FFF803FFFFEFFFE0FFF803FFFFE
FFFE07FE003FFFFEFFFF03FE00FFFFFEFFFF83FE00FFFFFEFFFFC0FE00FFFFFE
FFFFE07C01FFFFFEFFFFE03C01FFFFFEFFFFF81C01FFFFFEFFFFFC0801FFFFFE
FFFFFE0803FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFE
FFFFFF8007FFFFFEFFFFFFE007FFFFFEFFFFFFF007FFFFFEFFFFFFF007FFFFFE
FFFFFFE00FFFFFFEFFFFFFE007FFFFFEFFFFFFE003FFFFFEFFFFFFE001FFFFFE
FFFFFFE001FFFFFEFFFFFF8020FFFFFEFFFFFF80203FFFFEFFFFFF80203FFFFE
FFFFFF00701FFFFEFFFFFF00780FFFFEFFFFFF007E0FFFFEFFFFFF007F07FFFE
FFFFFE00FF83FFFEFFFFFE00FF80FFFEFFFFFE00FFC07FFEFFFFFC00FFE03FFE
FFFFFC01FFF83FFEFFFFFC01FFFC1FFEFFFFFC01FFFC0FFEFFFFF801FFFC0FFE
FFFFF803FFFE03FEFFFFE003FFFF01FEFFFFE00FFFFF81FEFFFFE00FFFFFE0FE
FFFFC00FFFFFF07EFFFFC00FFFFFF03EF8FF801FFFFFF80EF87F801FFFFFFC06
F87F803FFFFFFE06F87F003FFFFFFF82F83F007FFFFFFF80F80E007FFFFFFF80
FC0000FFFFFFFFC0FE0007FFFFFFFFE0FFC01FFFFFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 46 53 setcachedevice
46 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 53 def
/ImageMatrix [46 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFF80FC1FFFFFFC001C0FFFFFF8000C0FFFFFF0070C8FFFFFF00F8C83FF
FFE00F84E1FFFFE03FCCE0FFFFE03FCCF07FFF803FFCF83FFF807FFCFC3FFF80
7FFCFE0FFF00FFFCFF87FF00FFFCFF83FF00FFFCFFC1FE01FFFCFFE0FE01FFFC
FFF0FE01FFFCFFF83E03FFFCFFFE3C03FFFCFFFE1C03FFFCFFFE0C03FFFCFFFF
000FFFFCFFFF800FFFFCFFFFC00FFFFCFFFFE01FFFFCFFFFE01FFFFCFFFFE01F
FFFCFFFFE01FFFFCFFFFE01FFFFCFFFFC00FFFFCFFFFC003FFFCFFFFC001FFFC
FFFF8060FFFCFFFF8070FFFCFFFF8078FFFCFFFF80F87FFCFFFF00FC3FFCFFFF
00FC0FFCFFFF00FE07FCFFFE03FF83FCFFFE03FFC3FCFFFE03FFE1FCFFF807FF
F0FCFFF807FFF03CFFF007FFF81CEFF00FFFFE0CEFF00FFFFF0C83E00FFFFF84
E3E01FFFFFC4E1C01FFFFFC0E0003FFFFFC0F000FFFFFFE0FC03FFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -16 23 11 setcachedevice
23 0 0 27 0 -16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 23 def
/Height 27 def
/ImageMatrix [23 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF803EFF803EFC000EF01F86E01F86C0FFF6C1FFFEC1FFFE01FFFE03FFFE03FF
FE03FFFE03FFFE03FFFE01FFFE00000E00000E00000EC0FFFEC0FFFEE0FFFEF0
7FFEF01FFEF803FEFC0000FF8000FFF000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
23 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 34 44 setcachedevice
34 0 0 44 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 44 def
/ImageMatrix [34 0 0 -44 0 44]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE001FFFC0FE001FFFC0F80003FFC0F000007FC0E000003FC0E003F80FC0800F
FE03C0803FFF03C0807FFF81C0007FFFE0C0007FFFE04000FFFFF04000FFFFFF
C001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001
FFFFFFC001FFFFFFC081FFFFFFC080FFFFFFC080FFFFFFC080FFFFFFC080FFFF
FFC0E0FFFFFFC0E07FFFFFC0E07FFF1FC0F03FFF03C0F03FFF01C0F83FFF81C0
F80FFF80C0FC0FFFE0C0FC07FFE040FE03FFE040FF81FFF000FFC1FFF000FFF0
3FF000FFF80FE000FFF8000000FFFF000000FFFFC00000FFFFFC0040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 44 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -77 65 3 setcachedevice
65 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 65 def
/Height 80 def
/ImageMatrix [65 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF8007FFFFFFF8087FF00000FFFFFFF8087FF00000FFFFFFF8083FC000001
FFFFFF8081F803FF007FFFFF8081C003FF001FFFFF8080003FFFC007FFFF80C0
00FFFFF803FFFF80C001FFFFFC03FFFF80C007FFFFFE01FFFF80C00FFFFFFF00
FFFF80C00FFFFFFF007FFF80E00FFFFFFFC01FFF80E01FFFFFFFE01FFF80E01F
FFFFFFE01FFF80E03FFFFFFFF00FFF80F03FFFFFFFF00FFF80F03FFFFFFFF007
FF80F03FFFFFFFF807FF80F03FFFFFFFF803FF80F03FFFFFFFF803FF80FC3FFF
FFFFFC03FF80FC3FFFFFFFFC03FF80FC1FFFFFFFFC03FF80FC1FFFFFFFFC01FF
80FC1FFFFFFFFC01FF80FE1FFFFFFFFC01FF80FFFFFFFFFFFC01FF80FFFFFFFF
FFF801FF80FFFFFFFFFFF801FF80FFFFFFFFFFF001FF80FFFFFFFFFFE001FF80
FFFFFFFFFFE001FF80FFFFFFFFFFC003FF80FFFFFFFFFE0003FF80FFFFFFFFC0
0003FF80FFFFFFFC000003FF80FFFFFFC0000007FF80FFFFFFC0000007FF80FF
FFFC0000000FFF80FFFFF00000001FFF80FFFFE00000001FFF80FFFFC0000000
7FFF80FFFF00000000FFFF80FFFF00000003FFFF80FFFF0000003FFFFF80FFFE
000007FFFFFF80FFFE000007FFFFFF80FFFC00007FFFFFFF80FFFC0007FFFFFF
FF80FFFC001FFFFFFFFF80FFFC007FFFFFFFFF80FFFC00FFFFFFFFFF80FFFC00
FFFFFFFE1F80FFFC00FFFFFFFE1F80FFFC01FFFFFFFE1F80FFFC01FFFFFFFE1F
80FFFC01FFFFFFFE1F80FFFE01FFFFFFFE0F80FFFE01FFFFFFFE0F80FFFE01FF
FFFFFE0F80FFFE00FFFFFFFE0F80FFFE00FFFFFFFE0F80FFFF00FFFFFFFE0780
FFFF00FFFFFFFE0780FFFF007FFFFFFE0780FFFFC07FFFFFFC0780FFFFE01FFF
FFFC0180FFFFE01FFFFFFC0180FFFFF00FFFFFF00180FFFFF807FFFFF00180FF
FFF803FFFFE00180FFFFFC01FFFFC00080FFFFFF003FFF800080FFFFFF803FFF
818080FFFFFFE00FF803C080FFFFFFFC00000FF080FFFFFFFC00000FF000FFFF
FFFF00007FF800FFFFFFFFF001FFF800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
65 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
105 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -6 6 104 setcachedevice
6 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 6 def
/Height 110 def
/ImageMatrix [6 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C480808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
80808080808080808080808080C4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
6 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
104 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
98 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 38 35 109 setcachedevice
35 0 0 71 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 71 def
/ImageMatrix [35 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00FFFFFE0C000FFFFE080007FFFE081C01FFFE081F81FFFE080FC0FFFE080FE
03FFE080FE01FFE080FE01FFE0E1FF00FFE0FFFF00FFE0FFFF80FFE0FFFF80FF
E0FFFF807FE0FFFF807FE0FFFF807FE0FFFFE07FE0FFFFE07FE0FFFFE03FE0FF
FFE03FE0FFFFE03FE0FFFFF03FE0FFFFF03FE0FFFFF00FE0FFFFF00FE0FFFFF0
0FE0FFFFF80FE0FFFFF807E0FFFFF807E0FFFFF807E0FFFFFC07E0FFFFFC07E0
FFFFFC03E0FFFFFC03E0FFFFFC03E0FFFFFE03E0FFFFFE03E0FFFFFE01E0FFCF
FE01E0FFC7FE01E0FFC7FF81E0FFC3FF81E0FFE3FF81E0FFE0FF80E0FFE0FF80
E0FFF87FC0E0FFF87FC0E0FFFC3FC1E0FFFE1FC1E0FFFE0381E0FFFF0001E0FF
FF8007E0FFFFF80FE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFF0E0
FFFFFFF0E0FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFF000FFFF
FFF820>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 22 47 75 setcachedevice
47 0 0 53 0 22 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 53 def
/ImageMatrix [47 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC6FFFFFFFFFF00FFFFFFFFFC00FFFFFFFFF000FFFFFFFFF000FFFF
FFFFC000FFFFFFFF0000FFFFFFF80000FFFFFFF00180FFFFFFC00380FFFFFFC0
0F80FFFFFE007F80FFFFFC01FF80FFFFF001FF80FFFF8003FF80FFFF001FFF80
FFFF007FFF80FFFC00FFFF80FFE007FFFF80FF8007FFFF80FF001FFFFF80F800
3FFFFF80F801FFFFFF80E007FFFFFF80C01FFFFFFF80001FFFFFFF80007FFFFF
FF80001FFFFFFF80C01FFFFFFF80E007FFFFFF80F801FFFFFF80F8003FFFFF80
FF001FFFFF80FF8007FFFF80FFE007FFFF80FFFC00FFFF80FFFF007FFF80FFFF
001FFF80FFFF8003FF80FFFFF001FF80FFFFFC01FF80FFFFFE007F80FFFFFFC0
0F80FFFFFFC00380FFFFFFF00180FFFFFFF80000FFFFFFFF0000FFFFFFFFC000
FFFFFFFFF000FFFFFFFFF000FFFFFFFFFC00FFFFFFFFFF00FFFFFFFFFFC6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 3 28 78 setcachedevice
28 0 0 75 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 75 def
/ImageMatrix [28 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE03FF0FFE03FF0FF800FF0FE0383F0FC0380F0FC07C0F0FC07E070FC07F870
FC07F830FC07FC30FC03FC10FC03FC10FC03FE10FC03FE10FC01FE00FE01FF00
FE01FF00FE00FF00FE00FF00FF80FFF0FF803FF0FFC03FF0FFC03FF0FFC01FF0
FFC01FF0FFE01FF0FFE01FF0FFE00FF0FFE00FF0FFF007F0FFF007F0FFF807F0
03F807F003F803F003F803F083FE03F081FE00F081FE00F0E1FF00F0E1FF00F0
E0FF00F0F0FF00F0F07F80F0F87F80F0F83F80F0FC3F83F0FC0703F0FE0003F0
FF8007F0FFE01FF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFF870FFFFC010FFFFC010FFFFC000FFFFC000FFFFC000FFFFC000
FFFFE000FFFFE000FFFFFC10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 -73 44 23 setcachedevice
44 0 0 96 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 96 def
/ImageMatrix [44 0 0 -96 0 96]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F803FFFFFFF0E0007FFFFFF0C0001FFFFFF081F803FFFFF081FC03FFFFF0803E
01FFFFF0801F00FFFFF0801F007FFFF0801F803FFFF0801FE00FFFF0801FE00F
FFF0C01FF00FFFF0F0FFF007FFF0F0FFF007FFF0FFFFF807FFF0FFFFF803FFF0
FFFFF803FFF0FFFFFC03FFF0FFFFFC03FFF0FFFFFC01FFF0FFFFFC01FFF0FFFF
FC01FFF0FFFFFE01FFF0FFFFFE01FFF0FFFFFE00FFF0FFFFFE00FFF0FFFFFE00
FFF0FFFFFF80FFF0FFFFFF80FFF0FFFFFF803FF0FFFFFF803FF0FFFFFF803FF0
FFFFFFC03FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFE01FF0FFFF
FFE01FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFF00FF0FFFFFFF0
0FF0FFFFFFF007F0FFFFFFF007F0FFFFFFF007F0FFFFFFF807F0FFFFFFF807F0
FFFFFFF803F0FFFFFFF803F0FFFFFFF803F0FFFFFFFE03F0FFFFFFFE03F0FFF8
3FFE00F0FFF83FFE00F0FFF83FFE00F0FFFC1FFF00F0FFFC1FFF00F0FFFE1FFF
00F0FFFE0FFF0070FFFF0FFF8070FFFF03FF8070FFFF01FF8070FFFF81FF8070
FFFFE1FF80F0FFFFF0FF80F0FFFFF87F83F0FFFFF80F03F0FFFFFC0003F0FFFF
FF800FF0FFFFFFE03FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFF
FFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0
FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFF870FFFFFFFFC010FFFFFFFFC010FFFFFFFFC000FFFFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFE000FFFFFFFFE000FFFFFFFFFC30
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 96 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -78 68 0 setcachedevice
68 0 0 78 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 78 def
/ImageMatrix [68 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FFFE
00000000F8001FFFFFF80007F0FF007FFFFFFE000FF0FF81FFFFFFFF001FF0FF
C1FFFFFFFF001FF0FFC1FFFFFFFE001FF0FFC1FFFFFFFE001FF0FFE1FFFFFFFE
007FF0FFE1FFFFFFFE007FF0FFE1FFFFFFFC007FF0FFF07FFFFFFC00FFF0FFF0
7FFFFFFC00FFF0FFF07FFFFFF800FFF0FFF03FFFFFF800FFF0FFFC3FFFFFF801
FFF0FFFC3FFFFFF801FFF0FFFC3FFFFFF001FFF0FFFC1FFFFFF001FFF0FFFC1F
FFFFF001FFF0FFFE1FFFFFF003FFF0FFFE1FFFFFF003FFF0FFFE0FFFFFC003FF
F0FFFF0FFFFFC007FFF0FFFF0FFFFFC007FFF0FFFF07FFFF8007FFF0FFFF07FF
FF8007FFF0FFFF87FFFF801FFFF0FFFF87FFFF801FFFF0FFFF87FFFF001FFFF0
FFFF81FFFF001FFFF0FFFFC1FFFF003FFFF0FFFFC1FFFE003FFFF0FFFFC1FFFE
003FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFC007FFFF0FF
FFF07FFC007FFFF0FFFFF87FFC00FFFFF0FFFFF87FFC00FFFFF0FFFFF87FF000
FFFFF0FFFFF83FF000FFFFF0FFFFF83FF000FFFFF0FFFFFC3FF001FFFFF0FFFF
FC1FE001FFFFF0FFFFFC1FE001FFFFF0FFFFFE1FE007FFFFF0FFFFFE1FE007FF
FFF0FFFFFE1FC007FFFFF0FFFFFE07C007FFFFF0FFFFFF07C00FFFFFF0FFFFFF
07C00FFFFFF0FFFFFF07800FFFFFF0FFFFFFC3801FFFFFF0FFFFFFC3801FFFFF
F0FFFFFFC3001FFFFFF0FFFFFFC1001FFFFFF0FFFFFFE1003FFFFFF0FFFFFFE1
003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0
FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF801
FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FF
FFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FF
FFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
0 0 0 39 35 94 setcachedevice
35 0 0 55 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 55 def
/ImageMatrix [35 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFE0FFE001FFE0FF80007FE0FC0FF01FE0F00FF003E0E07FFC01E0C1FF
FE00E0C3FFFE00E0C7FFFF00E001FFFF0060007FFF0060007FFF0000007FFFC0
00007FFFC000007FFFC000C0FFFFC000C0FFFFC000E1FFFFC000FFFFFFC000FF
FFFFC000FFFFFF0060FFFFFF0060FFFFFF0060FFFFFE00E0FFFFFE00E0FFFFFE
01E0FFFFFC03E0FFFFF01FE0FFC0001FE0FFC0007FE0FFC0007FE0FFFF807FE0
FFFFF03FE0FFFFF81FE0FFFFF807E0FFFFFC03E0FFFFFC01E0FFFFFE01E0FFFF
FE01E0FFFFFE00E0F8FFFE00E0E01FFE00E0E01FFF00E0E01FFF00E0E00FFF00
E0E01FFE00E0E01FFE00E0E01FFE00E0F0FFFC01E0F0FFFC03E0F87FF807E0FC
07F01FE0FC00001FE0FF80007FE0FFF001FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 56 69 94 setcachedevice
69 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 38 def
/ImageMatrix [69 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFF87FFFFE03F8F87FFFF87FFFFE03F8F03FFFF03FFFF801F8F00FFFF00F
FFF07038F00FFFF00FFFF07038F00FFFF00FFFE07E18F80FFFF80FFFE07E08F8
0FFFF80FFFE07F08F807FFF807FFE07F88F807FFF807FFE03F80F807FFF807FF
E03F80FC07FFFC07FFF00FC0FC03FFFC03FFF00FC0FC03FFFC03FFF80FC0FC03
FFFC03FFF80FE0FE03FFFE03FFF807F8FE03FFFE03FFF807F8FE01FFFE01FFFC
07F8FE01FFFE01FFFC03F8FE01FFFE01FFFC03F8FF81FFFF81FFFE03F8FF81FF
FF81FFFE03F8FF80FFFF80FFFE03F83F80FFFF80FFFE01F81F80FFFF80FFFE01
F81FC0FFFFC0FFFF81F81FC03FFFC03FFF81F80FC01FFFC03FFF81F80FC01FFF
C01FFF81F88FC00FFFC00FFF81F883E007FFC00FFF81F883E007FFC08FFF81F8
E3E0C3FFC087FF81F8E1E0E0FFC1C0FF83F8E1C0E03F81C03E03F8F001F80001
F80003F8F003FE0007FC000FF8FC0FFF803FFF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 6 19 49 setcachedevice
19 0 0 43 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 43 def
/ImageMatrix [19 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FE0FC0FE0F803E0F061E0F06060F07C60F07C20F07E20F07E20F81F00F81F
00F81F20F80FE0FC0FE0FC0FE0FF07E0FF07E0FF07E01F03E01F83E01F83E01F
83E00781E0C3C1E0E1C3E0E1C3E0F007E0FC0FE0FC0FE0FFFFE0FFFFE0FFFFE0
FFFFE0FFFFE0FFFFE0FFFFE0FFE1E0FFE1E0FFE060FFE020FFE020FFE020FFF0
60>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
0 0 0 6 22 46 setcachedevice
22 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 40 def
/ImageMatrix [22 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000FE01FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03
FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF
03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FC
FF03FC0103FC0003FC0003FCFC03FCFF03FCFF03FCFFC3FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
39 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 3 44 76 setcachedevice
44 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 73 def
/ImageMatrix [44 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000030800000000030800000000030800000000030C00000000010E000
00000010F00000000010F00000000010F00000000010F80FFFFFFC10FE07FFFF
FE10FF07FFFFFE10FF83FFFFFE10FFC0FFFFFE10FFC07FFFFE00FFE03FFFFF00
FFF81FFFFF00FFF81FFFFF00FFFC0FFFFF00FFFE03FFFFF0FFFE01FFFFF0FFFF
00FFFFF0FFFF807FFFF0FFFFE07FFFF0FFFFF03FFFF0FFFFF80FFFF0FFFFF807
FFF0FFFFF803FFF0FFFFFC01FFF0FFFFFE01FFF0FFFFFF80FFF0FFFFFFC03FF0
FFFFFFC01FF0FFFFFFC00FF0FFFFFFE007F0FFFFFFF007F0FFFFFFF003F0FFFF
FFF800F0FFFFFFF80070FFFFFFF80070FFFFFFFE0030FFFFFFFE0030FFFFFFFF
0030FFFFFFFF0010FFFFFFFF0010FFFFFFFF0010F8FFFFFF8000F8FFFFFF8000
E01FFFFF8000C00FFFFF80008007FFFF80008007FFFF80008007FFFF80008007
FFFF80008007FFFF80008007FFFF80008007FFFF8000800FFFFF0000801FFFFF
0010C3FFFFFF0010C1FFFFFF0010C1FFFFFE0030C0FFFFFE0030E0FFFFF80030
F03FFFF80070F03FFFF800F0F81FFFF003F0FE07FFC007F0FE00FE0007F0FF00
00000FF0FFC000003FF0FFF80001FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80001FFF0FFF80001FFF0FFC000003FF0FF007F801FF0FE00
7F8007F0F807FFC003F0F01FFFE000F0F03FFFF000F0E0FFFFF80070C1FFFFF8
0070C1FFFFF80030C01FFFFE0030800FFFFE0010800FFFFE00108007FFFF0010
8007FFFF00108007FFFF00008007FFFF00008007FFFF00008007FFFF0000C00F
FFFF0000E01FFFFF0000E01FFFFF0000F8FFFFFF0000FFFFFFFF0000FFFFFFFF
0000FFFFFFFF0010FFFFFFFF0010FFFFFFFE0010FFFFFFFE0010FFFFFFFE0030
FFFFFFFE0030FFFFFFF80070FFFFFFF800F0FFFFFFF000F0FFFFFFE003F0FFFF
FFC007F0FFFFFFC00FF0FFFFFF803FF0FFFC0001FFF0FFFC0001FFF0FFFC0003
FFF0FFFFFC00FFF0FFFFFF80FFF0FFFFFFC03FF0FFFFFFE00FF0FFFFFFE007F0
FFFFFFE003F0FFFFFFF003F0FFFFFFF003F0FFFFFFF800F0FFFFFFF800F0FFFF
FFF80070FFFFFFF80070F807FFFE0030F807FFFE0030F003FFFE0030E003FFFE
0030E003FFFE0030E000FFFE0030E000FFFE0030E003FFFE0030E003FFFE0030
E007FFFE0030E007FFFE0030F00FFFF80070F03FFFF80070F83FFFF800F0F81F
FFF003F0FE0FFFF007F0FE03FFE007F0FF807F800FF0FFC000003FF0FFF80001
FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 28 60 78 setcachedevice
60 0 0 50 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 50 def
/ImageMatrix [60 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFF807FF0FF87FFFFFF807FF0FC03FFFFFE001FF0FC01FFFFF80E0FF0
FC01FFFFF00E03F0FE01FFFFF01F81F0FE01FFFFF01FE0F0FE01FFFFF01FE0F0
FE00FFFFF01FF0F0FF80FFFFF01FF870FF80FFFFF00FF870FF80FFFFF00FF830
FF803FFFF00FFC30FF803FFFF00FFC30FFC03FFFF007FC00FFC03FFFF807FE00
FFC03FFFF807FE00FFC01FFFF803FE00FFC01FFFF803FE00FFE01FFFFE03FFF0
FFE01FFFFE03FFF0FFE01FFFFE00FFF0FFE00FFFFE00FFF0FFE00FFFFF00FFF0
FFF00FFFFF007FF0FFF00FFFFF007FF0FFF00FFFFF807FF0FFF007FFFF807FF0
FFF007FFFF803FF0FFF807FFFF803FF0FFF807FFFFC03FF0FFF807FFFFC03FF0
03F803FFFFC03FF003FE03FFFFC01FF003FE00FFFFC01FF083FE00FFFFE01FF0
81FE007FFFE01FF081FE007FFFE01FF0E1FE007FFFE01FF0E1FF003FFFE01FF0
E0FF001FFFE01FF0E0FF000FFFE01FF0F0FF0003FFE01FF0F0FF0303FFE03FF0
F87F0381FFE03FF0F83E07E0FFC07FF0F80E07E03F807FF0FC0007F80000FFF0
FE001FFE0003FFF0FFC0FFFFC00FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0081FFFFFFFFFFFE00
81FFFFFFFFFFFE00807FFFFFFFFFFC00C07FFFFFFFFFFC08C07FFFFFFFFFFC08
E07FFFFFFFFFFC18E03FFFFFFFFFF018E03FFFFFFFFFF018E01FFFFFFFFFE018
F01FFFFFFFFFE038F00FFFFFFFFFC038FC0FFFFFFFFFC078FC0FFFFFFFFFC078
FE0FFFFFFFFFC1F8FE07FFFFFFFF81F8FE07FFFFFFFF81F8FE01FFFFFFFF01F8
FF01FFFFFFFF03F8FF01FFFFFFFF03F8FF80FFFFFFFC07F8FF80FFFFFFFC07F8
FF80FFFFFFFC07F8FFC07FFFFFF80FF8FFC07FFFFFF80FF8FFC07FFFFFF80FF8
FFF03FFFFFF01FF8FFF03FFFFFF01FF8FFF01FFFFFE01FF8FFF81FFFFFE07FF8
FFF81FFFFFE07FF8FFFC1FFFFFE0FFF8FFFC07FFFFC0FFF8FFFC07FFFFC0FFF8
FFFC03FFFF00FFF8FFFE03FFFF01FFF8FFFE03FFFF01FFF8FFFF01FFFE03FFF8
FFFF01FFFE03FFF8FFFF00FFFC03FFF8FFFFC0FFFC07FFF8FFFFC0FFFC07FFF8
FFFFE0FFFC1FFFF8FFFFE07FF81FFFF8FFFFE07FF81FFFF8FFFFE01FF01FFFF8
FFFFF01FF03FFFF8FFFFF00FC03FFFF8FFFFF80FC07FFFF8FFFFF80FC07FFFF8
FFFFFC0FC0FFFFF8FFFFFC0780FFFFF8FFFFFC0780FFFFF8FFFFFC0300FFFFF8
FFFFFF0301FFFFF8FFFFFF0301FFFFF8FFFFFF8007FFFFF8FFFFFF8007FFFFF8
FFFFFF8007FFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8
FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFF03FFFFFF8
FFFFFFFC7FFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a36 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 -35 41 39 setcachedevice
41 0 0 74 0 -35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 74 def
/ImageMatrix [41 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFFFFF80C007FFFFFF808003FFFFFF808380FFFFFF8083C0FFFFFF8080C0
FFFFFF8080E07FFFFF8080E07FFFFF8080E03FFFFF8080F83FFFFF80E1F83FFF
FF80FFF81FFFFF80FFF81FFFFF80FFF81FFFFF80FFF80FFFFF80FFFC0FFFFF80
FFFC0FFFFF80FFFC0FFFFF80FFFC0FFFFF80FFFC03FFFF80FFFC03FFFF80FFFE
03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE01FFFF80FFFE01FF
FF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80
FFFF00FFFF80FFFF00FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF807FFF80FFFF807FFF80FFFFE07FFF80FFFFE07FFF80FFFFE07F
FF80FFFFE07FFF80FFFFE03FFF80FFFFE03FFF80FFFFF03FFF80FFFFF03FFF80
FFFFF03FFF80FFF800000F80FFF800000F80FFF800000F80FFFFF00FFF80FFFF
F80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF807FF80FFFFF807
FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07C380FFFFFC038000
FFFFFE038000FFFFFE038000FFFFFE038000FFFFFE038000FFFFFF81C000FFFF
FF80E000FFFFFFC0F800FFFFFFF00080FFFFFFFE0780FFFFFFFE0780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 -38 20 43 setcachedevice
20 0 0 81 0 -38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF80FFFF00FFFF00FFFC10FFF870FFF070FFE0F0FFC1F0FFC1F0FF03F0FF07
F0FE07F0FC07F0FC1FF0FC1FF0F83FF0F83FF0F03FF0F07FF0F07FF0F07FF0C0
FFF0C0FFF0C0FFF0C0FFF080FFF081FFF081FFF081FFF081FFF081FFF001FFF0
01FFF001FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FF
F007FFF007FFF007FFF007FFF001FFF001FFF001FFF081FFF081FFF081FFF081
FFF081FFF080FFF0C0FFF0C0FFF0C0FFF0C0FFF0C07FF0F07FF0F07FF0F07FF0
F83FF0F83FF0F81FF0FC1FF0FC1FF0FE07F0FF07F0FF03F0FF01F0FFC1F0FFE1
F0FFF0F0FFF870FFF810FFFC00FFFF00FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
0 0 0 -43 20 38 setcachedevice
20 0 0 81 0 -43 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF087FFF087FFF0C3FFF0E1FFF0E0FFF0F03FF0F81FF0F81FF0FE0FF0FF0F
F0FF07F0FF03F0FF83F0FF83F0FFC0F0FFC0F0FFC070FFE070FFE070FFE070FF
F830FFF830FFF830FFF830FFF810FFFC10FFFC10FFFC10FFFC10FFFC10FFFC00
FFFC00FFFC00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE
00FFFE00FFFE00FFFE00FFFE00FFFC00FFFC00FFFC00FFFC10FFFC10FFFC10FF
FC10FFFC10FFF810FFF830FFF830FFF830FFF830FFE030FFE070FFE070FFE070
FFC0F0FFC0F0FF80F0FF83F0FF83F0FF07F0FF0FF0FE0FF0F80FF0F81FF0F83F
F0F0FFF0E1FFF0C1FFF083FFF087FFF08FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a42 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -77 54 23 setcachedevice
54 0 0 100 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 100 def
/ImageMatrix [54 0 0 -100 0 100]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFCF000FFFFFFFFFCC0007FFFFFFFFCC1E01FFFFFFFFCC3F81FFF
FFFFFC81FC1FFFFFFFFC803E0FFFFFFFFC801E03FFFFFFFC801E03FFFFFFFC80
1E01FFFFFFFC801F01FFFFFFFCC01F01FFFFFFFCC01F00FFFFFFFCC01F00FFFF
FFFCF03F00FFFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF
807FFFFFFCFFFF803FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFF
FCFFFFE03FFFFFFCFFFFE00FFFFFFCFFFFE00FFFFFFCFFFFF00FFFFFFCFFFFF0
0FFFFFFCFFFFF00FFFFFFCFFFFF00FFFFFFCFFFFF007FFFFFCFFFFF007FFFFFC
FFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF803
FFFFFCFFFFF803FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFF
FFFC03FFFFFCFFFFFC01FFFFFCFFFFFC01FFFFFCFFFFFE01FFFFFCFFFFFE01FF
FFFCFFFFFE01FFFFFCFFFFFE01FFFFFCFFFFFE00FFFFFCFFFFFE00FFFFFCFFFF
FF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFF
FCFFFFFF803FFFFCFFFFFF803FFFFCFFFFFFC03FFFFCFFFFFFC03FFFFCFFFFFF
C03FFFFCFFFFFFC03FFFFCFFFFFFC01FFFFCFFFFFFC01FFFFCFFFFFFE01FFFFC
FFFFFFE01FFFFCFFFFFFE01FFFFCFFFF80000001FCFFFF80000001FCFFFF8000
0001FCFFFF80000001FCFFFFFFF00FFFFCFFFFFFF00FFFFCFFFFFFF00FFFFCFF
FFFFF007FFFCFFFFFFF007FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF807
FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF803FFFCFFFFFFFE03FFFCFFFF
FFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FC3CFFFFFFFE00F0
04FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF80F000FFFFFF
FF807000FFFFFFFF807000FFFFFFFFC07800FFFFFFFFC07E00FFFFFFFFE03F80
FFFFFFFFF81E04FFFFFFFFF80004FFFFFFFFFE000CFFFFFFFFFF80FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 100 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
0 0 0 -78 54 23 setcachedevice
54 0 0 101 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 101 def
/ImageMatrix [54 0 0 -101 0 101]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFC03FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFF
FFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFFFFFCE0
1FFFFFFFFFFCF01FFFFFFFFFFCF01FFFFFFFFFFCF80FFFFFFFFFFCF80FFFFFFF
FFFCF807FFFFFFFFFCFC07FFFFFFFFFCFC07FFFFFFFFFCFF03FFFFFFFFFCFF03
FFFFFFFFFCFF01FFFFFFFFFCFF81FFFFFFFFFCFF807FFFFFFFFCFFC07FFFFFFF
FCFFC07FFFFFFFFCFFE03FFFFFFFFCFFE03FFFFFFFFCFFE01FFFFFFFFCFFF01F
FFFFFFFCFFF01FFFFFFFFCFFFC0FFFFFFFFCFFFC0FFFFFFFFCFFFC07FFFFFFFC
FFFE07FFFFFFFCFFFE01FFFFFFFCFFFF01FFFFFFFCFFFF01FFFFFFFCFFFF80FF
FFFFFCFFFF80FFFFFFFCFFFF807FFFFFFCFFFFC07FFFFFFCFFFFC07FFFFFFCFF
FFF03FFFFFFCFFFFF03FFFFFFCFFFFF01FFFFFFCFFFFF81FFFFFFCFFFFF807FF
FFFCFFFFFC07FFFFFCFFFFFC07FFFFFCFFFFFE03FFFFFCFFFFFE03FFFFFCFFFF
FE01FFFFFCFFFFFF01FFFFFCFFFFFF01FFFFFCFFFFFFC0FFFFFCFFFFFFC0FFFF
FCFFFFFFC07FFFFCFFFFFFE07FFFFCFFFFFFE01FFFFCFFFFFFF01FFFFCFFFFFF
F01FFFFCFFFFFFF80FFFFCFFFFFFF80FFFFCFFFFFFF807FFFCFFFFFFFC07FFFC
FFFFFFFC07FFFCFFFFFFFF03FFFCFFFFFFFF03FFFCFFFFFFFF01FFFCFFFFFFFF
81FFFCFFFFFFFF807FFCFFFFFFFFC07FFCFFFFFFFFC07FFCFFFFFFFFE03FFCFF
FFFFFFE03FFCFFFFFFFFE01FFCFFFFFFFFF01FFCFFFFFFFFF01FFCFFFFFFFFFC
0FFCFFFFFFFFFC0FFCFFFFFFFFFC07FCFFFFFFFFFE07FCFFFFFFFFFE01FCFFFF
FFFFFF01FCFFFFFFFFFF01FCFFFFFFFFFF80FCFFFFFFFFFF80FCFFFFFFFFFF80
7CFFFFFFFFFFC07CFFFFFFFFFFC07CFFFFFFFFFFF03CFFFFFFFFFFF03CFFFFFF
FFFFF01CFFFFFFFFFFF81CFFFFFFFFFFF804FFFFFFFFFFFC04FFFFFFFFFFFC04
FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFF00FFFFFFFF
FFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 101 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a45 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
0 0 0 -8 44 85 setcachedevice
44 0 0 93 0 -8 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 93 def
/ImageMatrix [44 0 0 -93 0 93]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF03FFFFFFF0FF03
FFFFFFF0FF03800FFFF0FF800003FFF0FF800003FFF0FF801FC0FFF0FFC07FF0
3FF0FF807FF00FF0FF807FF80FF0FF007FFE07F0FF007FFF07F0FE007FFF83F0
F8007FFF80F0F8003FFF80F0F8003FFFC0F0F0003FFFC070F0183FFFC070F018
1FFFC070E0381FFFE030E0381FFFE030E03C1FFFE030C03C0FFFE010C03C0FFF
E010C03C0FFFE010C03E0FFFE010C03E0FFFE010C0FE03FFF810C0FE03FFF810
C0FE03FFF81080FF03FFF80080FF01FFF80080FF01FFF80080FF01FFF80080FF
81FFF80080FF81FFF80080FF80FFF80080FF80FFF80080FF80FFF80080FFE0FF
F80080FFE07FF80080FFE07FF80080FFE07FF80080FFF07FF80080FFF03FF800
80FFF03FF80080FFF03FF80080FFF83FF80080FFF83FF80080FFF80FF80080FF
F80FF80080FFF80FF80080FFFC0FF80080FFFC0FF80080FFFC07F80080FFFC07
F80080FFFC07F800C0FFFE03F810C0FFFE03F810C0FFFE03F810C0FFFF83F810
C0FFFF83F810C03FFF81E010C03FFF81E010E03FFF81E030E03FFFC1E030E03F
FFC1E030E03FFFC0E030E03FFFC0E030F01FFFC0C070F01FFFE00070F81FFFE0
00F0F81FFFE000F0FE0FFFF003F0FE0FFFF003F0FE07FFF003F0FF03FFF007F0
FF83FFF00FF0FFC0FFF81FF0FFE07FF01FF0FFE01FC00FF0FFF800000FF0FFFE
00000FF0FFFF800E0FF0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFF
07F0FFFFFFFF07F0FFFFFFFF8FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 93 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a47 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
97 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 6 28 61 setcachedevice
28 0 0 55 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 55 def
/ImageMatrix [28 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFF0F01FFFF0C007FFF0C3C0FFF081C07FF081E07FF081F83FF0C1F83FF0
E1FC1FF0FFFC1FF0FFFC1FF0FFFC0FF0FFFE0FF0FFFE0FF0FFFE0FF0FFFE0FF0
FFFE03F0FFFF03F0FFFF03F0FFFF03F0FFFF03F0FFFF81F0FFFF81F0FFFF81F0
FFFF81F0FFFF81F0FFFFE0F0FFFFE0F0FFFFE0F0FFFFE0F0FF8FE070FF8FF070
FF8FF070FFC7F070FFC7F070FFC3F070FFE07070FFF870F0FFFC00F0FFFF03F0
FFFF03F0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFC30FFFFFC30FFFFF800FFFFF800FFFFF800FFFFFC00FFFFFE30>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
0 0 0 6 66 93 setcachedevice
66 0 0 87 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
FFFFFFFFF040FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF00
00FFFFFFFFFFFFF80000FFFFFFFFFFFFE00040FFFFFFFFFFFF0003C0FFFFFFFF
FFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFFFFF001FFC0FFFFFFFFFF8001FFC0
FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC0
07FFFFC0FFFFFFFF001FFFFFC0FFFFFFF8001FFFFFC0FFFFFFE0007FFFFFC0FF
FFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FFFFFC007FFFFFFFC0FFFFF001FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFFFFFFC0FFF0003FFFFFFFFFC0FFF0
00FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF001FFFFFFFFFFFC0F8001FFFFFFFFF
FFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0007FFF
FFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFFFFFFFFC0C001FFFFFFFFFFFF
C0F0003FFFFFFFFFFFC0FC003FFFFFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FF
FFFFFFFFC0FFE0007FFFFFFFFFC0FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0
FFFFC003FFFFFFFFC0FFFFF800FFFFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007
FFFFFFC0FFFFFFC001FFFFFFC0FFFFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FF
FFFFFF800FFFFFC0FFFFFFFFE001FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC00
1FFFC0FFFFFFFFFF0003FFC0FFFFFFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFF
FFFFFFFE001FC0FFFFFFFFFFFE0007C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF0
0040FFFFFFFFFFFFFC0040FFFFFFFFFFFFFF8000FFFFFFFFFFFFFFE000FFFFFF
FFFFFFFFE000FFFFFFFFFFFFFFFC40>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a53 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -77 76 3 setcachedevice
76 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 76 def
/Height 80 def
/ImageMatrix [76 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8001FFFFFFFFFF0FFFFC00000FFFFFFFFF0FFFFC00000FFFFFFFFF0FFFE
00FF801FFFFFFFF0FFF803FFF803FFFFFFF0FFC003FFF800FFFFFFF0FF801FFF
FE001FFFFFF0FF003FFFFFC00FFFFFF0FF007FFFFFE00FFFFFF0FE00FFFFFFF8
07FFFFF0FC01FFFFFFFC01FFFFF0FC01FFFFFFFC007FFFF0F001FFFFFFFF003F
FFF0F007FFFFFFFF801FFFF0F007FFFFFFFFC01FFFF0E00FFFFFFFFFE00FFFF0
E00FFFFFFFFFF007FFF0C00FFFFFFFFFF001FFF0C00FFFFFFFFFF000FFF0C00F
FFFFFFFFFC007FF0C00FFFFFFFFFFE007FF0801FFFFFFFFFFE007FF0801FFFFF
FFFFFF003FF0801FFFFFFFFFFF001FF0801FFFFFFFFFFF001FF0801FFFFFFFFF
FF8007F0801FFFFFFFFFFFC007F0801FFFFFFFFFFFC003F0801FFFFFFFFFFFC0
03F0801FFFFFFFFFFFC001F0801FFFFFFFFFFFF001F0800FFFFFFFFFFFF000F0
800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800F
FFFFFFFFFFF80070800FFFFFFFFFFFFC0070800FFFFFFFFFFFFC0070800FFFFF
FFFFFFFC0070C007FFFFFFFFFFFE0010C007FFFFFFFFFFFE0010C007FFFFFFFF
FFFE0010C007FFFFFFFFFFFE0010C001FFFFFFFFFFFE0010E001FFFFFFFFFFFF
0010E001FFFFFFFFFFFF0000F001FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000
F000FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000FC00FFFFFFFFFFFF0000FC00
7FFFFFFFFFFF0000FE007FFFFFFFFFFFC000FE003FFFFFFFFFFFC000FF003FFF
FFFFFFFFC000FF001FFFFFFFFFFFC000FF801FFFFFFFFFFFC010FF801FFFFFFF
FFFFC010FFC007FFFFFFFFFF0010FFC007FFFFFFFFFF0010FFF003FFFFFFFFFF
0010FFF801FFFFFFFFFF0010FFFC01FFFFFFFFFF0070FFFC01FFFFFFFFFF0070
FFFE00FFFFFFFFFE00F0FFFE007FFFFFFFFE00F0FFFF001FFFFFFFFE00F0FFFF
C00FFFFFFFFC01F0FFFFF00FFFFFFFFC01F0FFFFF807FFFFFFFC03F0FFFFFC03
FFFFFFF807F0FFFFFC007FFFFFF007F0FFFFFF803FFFFFC01FF0FFFFFFC00FFF
FF803FF0FFFFFFF00FFFFF807FF0FFFFFFFE01FFFE01FFF0FFFFFFFF803FE007
FFF0FFFFFFFF80000007FFF0FFFFFFFFF800001FFFF0FFFFFFFFFFC003FFFFF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
76 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -2 75 76 setcachedevice
75 0 0 78 0 -2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 75 def
/Height 78 def
/ImageMatrix [75 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000007FFFF8000000200000007FFFF8000000000000007FFFF8000000000000
007FFFF800000000FC000FFFFFFFF0001FE0FFC01FFFFFFFFC003FE0FFE03FFF
FFFFFC003FE0FFF03FFFFFFFFC003FE0FFF01FFFFFFFFC003FE0FFFC1FFFFFFF
FC007FE0FFFE0FFFFFFFFC007FE0FFFE0FFFFFFFFC007FE0FFFF0FFFFFFFFC00
7FE0FFFF87FFFFFFFC007FE0FFFF87FFFFFFFC007FE0FFFF81FFFFFFFC007FE0
FFFFC0FFFFFFFC007FE0FFFFC0FFFFFFFC007FE0FFFFF0FFFFFFFC007FE0FFFF
F87FFFFFF8007FE0FFFFF87FFFFFF8007FE0FFFFF83FFFFFF8007FE0FFFFFC1F
FFFFF801FFE0FFFFFC1FFFFFF801FFE0FFFFFE1FFFFFF801FFE0FFFFFF000000
0001FFE0FFFFFF0000000001FFE0FFFFFF0000000001FFE0FFFFFFC000000001
FFE0FFFFFFC3FFFFF801FFE0FFFFFFE1FFFFF801FFE0FFFFFFF0FFFFF801FFE0
FFFFFFF0FFFFF001FFE0FFFFFFF07FFFF001FFE0FFFFFFF87FFFF001FFE0FFFF
FFF87FFFF003FFE0FFFFFFFC1FFFF003FFE0FFFFFFFC0FFFF003FFE0FFFFFFFC
0FFFF003FFE0FFFFFFFF07FFF003FFE0FFFFFFFF87FFF003FFE0FFFFFFFF87FF
F003FFE0FFFFFFFFC3FFF003FFE0FFFFFFFFC1FFF003FFE0FFFFFFFFC1FFF003
FFE0FFFFFFFFE07FF003FFE0FFFFFFFFF07FE003FFE0FFFFFFFFF07FE003FFE0
FFFFFFFFFC3FE003FFE0FFFFFFFFFC3FE007FFE0FFFFFFFFFC1FE007FFE0FFFF
FFFFFE0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFF
FF87E007FFE0FFFFFFFFFF87E007FFE0FFFFFFFFFF81E007FFE0FFFFFFFFFFC0
E007FFE0FFFFFFFFFFC0E007FFE0FFFFFFFFFFF0E007FFE0FFFFFFFFFFF84007
FFE0FFFFFFFFFFF84007FFE0FFFFFFFFFFF80007FFE0FFFFFFFFFFFC000FFFE0
FFFFFFFFFFFC000FFFE0FFFFFFFFFFFE000FFFE0FFFFFFFFFFFF000FFFE0FFFF
FFFFFFFF000FFFE0FFFFFFFFFFFF000FFFE0FFFFFFFFFFFFC00FFFE0FFFFFFFF
FFFFC00FFFE0FFFFFFFFFFFFE00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFF
F00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFFF80FFFE0FFFFFFFFFFFFF81F
FFE0FFFFFFFFFFFFFC1FFFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
75 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
90 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/D/N196 -1 TZ
%%BeginResource: font E
10 dict begin
T3Defs
/FontType 3 def
/FontName /N241 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-72 
103 
195 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 25 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 90 2 setcachedevice
90 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 90 def
/Height 50 def
/ImageMatrix [90 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFE1FFFFFFE01FFC0FF87FFFFFE1FFFFFFE01FFC0FC03FFFFF00FFFFF
F8007FC0FC01FFFFF007FFFFE0383FC0FC01FFFFF007FFFFC0380FC0FE01FFFF
F007FFFFC07E07C0FE01FFFFF807FFFFC07F83C0FE01FFFFF807FFFFC07F83C0
FE00FFFFF803FFFFC07FC3C0FF80FFFFF803FFFFC07FE1C0FF80FFFFF803FFFF
C03FE1C0FF80FFFFFE03FFFFC03FE0C0FF803FFFFE00FFFFC03FF0C0FF803FFF
FE00FFFFC03FF0C0FFC03FFFFE00FFFFC01FF000FFC03FFFFF00FFFFE01FF800
FFC03FFFFF00FFFFE01FF800FFC01FFFFF007FFFE00FF800FFC01FFFFF007FFF
E00FF800FFE01FFFFF007FFFF80FFFC0FFE01FFFFF807FFFF80FFFC0FFE01FFF
FF807FFFF803FFC0FFE00FFFFF803FFFF803FFC0FFE00FFFFF803FFFFC03FFC0
FFF00FFFFF803FFFFC01FFC0FFF00FFFFFC03FFFFC01FFC0FFF00FFFFFC03FFF
FE01FFC0FFF007FFFFC01FFFFE01FFC0FFF007FFFFC01FFFFE00FFC0FFF807FF
FFC01FFFFE00FFC0FFF807FFFFE01FFFFF00FFC0FFF807FFFFE01FFFFF00FFC0
03F803FFFFE00FFFFF00FFC003FE03FFFFE00FFFFF007FC003FE00FFFFE003FF
FF007FC083FE00FFFFF803FFFF807FC081FE007FFFF801FFFF807FC081FE007F
FFF801FFFF807FC0E1FE007FFFF801FFFF807FC0E1FF003FFFF800FFFF807FC0
E0FF001FFFF8007FFF807FC0E0FF000FFFF8003FFF807FC0F0FF0003FFF8080F
FF807FC0F0FF0303FFF81C0FFF80FFC0F87F0381FFF81E07FF80FFC0F83E07F0
FFE03F83FF01FFC0F80E07F00FC03F80FE01FFC0FC0007F800007FE00003FFC0
FE001FFE0000FFF8000FFFC0FFC0FFFFE00FFFFF003FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
90 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 0 4 81 setcachedevice
4 0 0 81 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 4 def
/Height 81 def
/ImageMatrix [4 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
4 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
0 0 0 6 52 64 setcachedevice
52 0 0 58 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 52 def
/Height 58 def
/ImageMatrix [52 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF8FFFFFFFFF0FFF83FFFFFFFF0FFF80FFFFFFFF0FFF80FFFFFFFF0FFF807FF
FFFFF0FFF803FFFFFFF0FFF800FFFFFFF0FFFE003FFFFFF0FFFE001FFFFFF0FF
FE001FFFFFF0FFFE000FFFFFF0FFFE0403FFFFF0FFFE0401FFFFF0FFFE0600FF
FFF0FFFE07007FFFF0FFFF07807FFFF0FFFF03F03FFFF0FFFF03F80FFFF0FFFF
03F807FFF0FFFF03FC03FFF0FFFF03FE01FFF0FFFF03FF81FFF0FFFF03FFC0FF
F0FFFF03FFE0FFF0FFFF03FFE03FF0FFFF03FFF01FF0FFFF03FFF80FF0FFFF03
FFFE0FF0FFFF03FFFF0FF0FFFF03FFFF87F0FFFF03FFFF83F0FFFF03FFFF83F0
FFFF03FFFFC0F0FFFF03FFFFE0F0FFFF03FFFFF8F0FFFE03FFFFF870FFFE03FF
FFF870FFFE03FFFFFC30FFFE03FFFFFC30FFFE07FFFFFE30FFFE07FFFFFE10FF
F807FFFFFF10FFF807FFFFFF10FFF807FFFFFF00FFF007FFFFFE00FFF00FFFFF
FE00FFF00FFFFFFE00FFE00FFFFFFC00FFE00FFFFFE000FFC01FFFFF8000FF80
1FFFFF8000FF803FFFFF8000FE003FFFFF8010F800FFFFFF80100000FFFFFF80
100001FFFFFFC0308003FFFFFFC070E00FFFFFFFE3F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
52 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
0 0 0 5 25 31 setcachedevice
25 0 0 26 0 5 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 26 def
/ImageMatrix [25 0 0 -26 0 26]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF1FF80FFF0FF80FFF0FF80FFF1FF80FFF1FF80CFF1FC8087F1F80081F1E000
80310000C0310080F0000380FE001F80FE001F80FE001F80F0000380F0000380
C031008081F1E00081F1E00087F1F800CFF1FC80FFF1FF80FFF1FF80FFF0FF80
FFF0FF80FFF1FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 26 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 0 57 29 setcachedevice
57 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 29 def
/ImageMatrix [57 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFF1FFFF83F80F8FFFF1FFFF83F80F07FFE07FFC00780F07FFE07FFC1C380
F01FFE03FF81C180F81FFF03FF81F180F81FFF03FF81F080F81FFF03FF81F880
F81FFF03FFC0F880FC0FFFC1FFC0FC00FC0FFFC1FFC0FC00FC0FFFC1FFC07C80
FC0FFFC1FFF07F80FC0FFFC1FFF07F80FF07FFE0FFF07F80FF07FFE0FFF83F80
FF07FFE0FFF83F80FF03FFE0FFF83F801F03FFE07FF81F801F83FFF07FFC1F80
1F81FFF01FFC1F801F807FF01FFC1F8007803FF00FFC1F80C7821FE007FC1F80
C38207E0C1F83F80E38787E0E1F83F80F00FC001F0007F80F81FF807FE01FF80
F81FF807FE01FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
0 0 0 0 33 29 setcachedevice
33 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 33 def
/Height 29 def
/ImageMatrix [33 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC03FC1F80FC03FC1F80F800F80380F0F8206380E0F800618081FF00F08081FF
80F88081FFC0F88001FFC0F88001FFE07C0001FFE07C0001FFE07C8001FFE07F
8001FFE07F8080FFF83F8080FFF83F8080FFF83F8080FFF83F80E07FF81F80E0
7FFC1F80F07FFC1F80F83FFC1F80F83FF81F80FC0FF80F80FE03E00F80FF83E2
0F80FFC0071F80FFF80FFF80FFF80FFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
33 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
0 0 0 0 32 29 setcachedevice
32 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 29 def
/ImageMatrix [32 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F07F80FFF07F80FFC01E003F078C3E1F03803E0701C03FC301E07FE101E07FF1
C1E07FF1E3F03FF8E3F03FF8FFF03FF9FFF03FFFFFF03FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFC7FC0FE1C7FE0FE1C7FE0FC0C3FE0FC0C3FE07C0E1FE07E0
F07C00F0F87C30F0FC003801FF81FE07FF81FE07>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
0 0 0 20 38 49 setcachedevice
38 0 0 29 0 20 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 29 def
/ImageMatrix [38 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFFC1FCF8FFFFC1FCF07FFE007CF07FFE1C1CF01FFC1C0CF81FFC1F0CF81F
FC1F84F81FFC1FC4F81FFE07C4FC0FFE07E0FC0FFE07E0FC0FFE03E4FC0FFF03
FCFC0FFF03FCFF07FF03FCFF07FFC1FCFF07FFC1FCFF07FFC1FC1F03FFC0FC1F
83FFE0FC1F81FFE0FC1F81FFE0FC07807FE0FCC7803FE0FCC3820FC1FCE3870F
C1FCF0078003FCF81FF01FFCF81FF01FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 56 38 94 setcachedevice
38 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 38 def
/ImageMatrix [38 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF01FFE0FCFF01FFE0FCF8003F001CF01E1E070CE01E04070CC07F000784C0FF
C01F84C0FFF01FC4C0FFF007C401FFF807C001FFF807C000FFFC07E000FFFC07
E000FFFC07E000FFFC03F000FFFE03FC00FFFE03FC007FFE03FC007FFE01FCC0
7FFE01FCC07FFF01FCC07FFF01FCC01FFF01FCC01FFF00FCE01FFF00FCE01FFF
C0FCF00FFFC0FCF00FFFC0FCF007FFC07CF807FFC07CFC03FFC07CFF03FFC07C
FF81FF007CFFC07F107CFFC03E107CFFE000187CFFFC003FFCFFFF00FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 56 42 94 setcachedevice
42 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 38 def
/ImageMatrix [42 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F80FFC03FFC0F80FFC03FFC0E003E000FFC083E1C0F83FC003E080F80FC000F0
80FE07C000F803FF87C000F803FFC7C000FE03FFC3C080FE03FFE3C080FE03FF
E1C0E1FF03FFE1C0FFFF00FFF1C0FFFF00FFF1C0FFFF00FFF9C0FFFF80FFFFC0
FFFF80FFFFC0FFFF80FFFFC0FFFF807FFFC0FFFF807FFFC0FFFFC07FFFC0FFFF
C07FFFC0FFFFC07FFFC0EFFFC03FFFC0E3FFC03FFFC0E3FFE03FFFC0E3FFE03F
FFC0E1FFE01FE1C0E1FFE01FC000F0FFE01FC000F07FE00FC000F87FE00FC000
FC3FE00FC000FE0FE003F000FE07C001F000FF8000E000C0FFC003F001C0FFF0
0FFC07C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -85 103 25 setcachedevice
103 0 0 110 0 -85 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 103 def
/Height 110 def
/ImageMatrix [103 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000003FE800000000000000000000003FE800000000000
000000000001FEC00000000000000000000001FEC00000000000000000000001
FEE00000000000000000000000FEE00000000000000000000000FEF00FFFFFFF
FFFFFFE0000000FEFC0FFFFFFFFFFFFFFFE00000FEFE07FFFFFFFFFFFFFFFE00
007EFE01FFFFFFFFFFFFFFFE00007EFF00FFFFFFFFFFFFFFFFC0007EFF007FFF
FFFFFFFFFFFFF8001EFF807FFFFFFFFFFFFFFFFE001EFFC07FFFFFFFFFFFFFFF
FF001EFFF03FFFFFFFFFFFFFFFFFE01EFFF01FFFFFFFFFFFFFFFFFE00EFFF807
FFFFFFFFFFFFFFFFF00EFFF803FFFFFFFFFFFFFFFFF80EFFFC03FFFFFFFFFFFF
FFFFFC0EFFFE03FFFFFFFFFFFFFFFFFC06FFFF01FFFFFFFFFFFFFFFFFF06FFFF
00FFFFFFFFFFFFFFFFFF06FFFFC07FFFFFFFFFFFFFFFFF82FFFFC01FFFFFFFFF
FFFFFFFF82FFFFE01FFFFFFFFFFFFFFFFFC2FFFFF01FFFFFFFFFFFFFFFFFC2FF
FFF80FFFFFFFFFFFFFFFFFE0FFFFF807FFFFFFFFFFFFFFFFE0FFFFFC03FFFFFF
FFFFFFFFFFFEFFFFFC01FFFFFFFFFFFFFFFFFEFFFFFF01FFFFFFFFFFFFFFFFFE
FFFFFF81FFFFFFFFFFFFFFFFFEFFFFFFC07FFFFFFFFFFFFFFFFEFFFFFFC03FFF
FFFFFFFFFFFFFEFFFFFFE01FFFFFFFFFFFFFFFFEFFFFFFF00FFFFFFFFFFFFFFF
FEFFFFFFF00FFFFFFFFFFFFFFFFEFFFFFFFC0FFFFFFFFFFFFFFFFEFFFFFFFE07
FFFFFFFFFFFFFFFEFFFFFFFE01FFFFFFFFFFFFFFFEFFFFFFFF00FFFFFFFFFFFF
FFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF
C07FFFFFFFFFFFFFFEFFFFFFFFF03FFFFFFFFFFFFFFEFFFFFFFFF01FFFFFFFFF
FFFFFEFFFFFFFFF807FFFFFFFFFFFFFEFFFFFFFFFC03FFFFFFFFFFFFFEFFFFFF
FFFC03FFFFFFFFFFFFFEFFFFFFFFFE01FFFFFFFFFFFFFEFFFFFFFFFF01FFFFFF
FFFFFFFEFFFFFFFFFE00FFFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFF
FFFFFC007FFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFFFFFFF8007FFF
FFFFFFFFFEFFFFFFFFF000FFFFFFFFFFFFFEFFFFFFFFC000FFFFFFFFFFFFFEFF
FFFFFFC000FFFFFFFFFFFFFEFFFFFFFF8001FFFFFFFFFFFFFEFFFFFFFF8003FF
FFFFFFFFFFFEFFFFFFFF0007FFFFFFFFFFFFFEFFFFFFFE0007FFFFFFFFFFFFFE
FFFFFFFE0007FFFFFFFFFFFFFEFFFFFFFC001FFFFFFFFFFFFFFEFFFFFFF0003F
FFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFF
FEFFFFFFE000FFFFFFFFFFFFFFFEFFFFFFC000FFFFFFFFFFFFFFFEFFFFFF8001
FFFFFFFFFFFFFFFEFFFFFF8001FFFFFFFFFFFFFFFEFFFFFF8007FFFFFFFFFFFF
FFFEFFFFFF000FFFFFFFFFFFFFFFFEFFFFFC001FFFFFFFFFFFFFFFFEFFFFF800
1FFFFFFFFFFFFFFFFEFFFFF8001FFFFFFFFFFFFFFFFEFFFFF0003FFFFFFFFFFF
FFFFFEFFFFF0007FFFFFFFFFFFFFFFFEFFFFE001FFFFFFFFFFFFFFFFFEFFFFE0
01FFFFFFFFFFFFFFFFFEFFFFC001FFFFFFFFFFFFFFFFFEFFFF0003FFFFFFFFFF
FFFFFFE0FFFE0007FFFFFFFFFFFFFFFFC0FFFE0007FFFFFFFFFFFFFFFFC2FFFE
000FFFFFFFFFFFFFFFFFC2FFFC001FFFFFFFFFFFFFFFFF82FFF8001FFFFFFFFF
FFFFFFFF82FFF0007FFFFFFFFFFFFFFFFF06FFF0007FFFFFFFFFFFFFFFFC06FF
F000FFFFFFFFFFFFFFFFFC06FFC001FFFFFFFFFFFFFFFFFC0EFF8003FFFFFFFF
FFFFFFFFF80EFF8003FFFFFFFFFFFFFFFFF00EFF0003FFFFFFFFFFFFFFFFC00E
FE0007FFFFFFFFFFFFFFFF001EFE001FFFFFFFFFFFFFFFFF001EFC001FFFFFFF
FFFFFFFFFE007EFC003FFFFFFFFFFFFFFFF8007EF0003FFFFFFFFFFFFFFFC000
7EE0007FFFFFFFFFFFFFFE00007EC000FFFFFFFFFFFFFFC00000FEC000FFFFFF
FFFFFFFFC00000FEC001FFFFFFFFFFFFE0000000FE8000000000000000000000
01FE800000000000000000000001FE800000000000000000000001FE80000000
0000000000000001FE800000000000000000000003FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
103 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
75 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -75 85 5 setcachedevice
85 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 80 def
/ImageMatrix [85 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF0FFFFFFFFFFC007FFF8FFF01FFFFFFFFF80007FF8FFF00FFFFFFFFE00000F
F8FFF807FFFFFFFE000003F8FFF807FFFFFFFE000003F8FFFE03FFFFFFFE0000
00F8FFFE03FFFFFFFE001F8078FFFE00FFFFFFFE001F8038FFFE00FFFFFFFE00
3FE008FFFF007FFFFFFE003FF008FFFF007FFFFFFE003FF808FFFF007FFFFFFE
003FFC00FFFF807FFFFFFF803FFFC0FFFF803FFFFFFF803FFFC0FFFF803FFFFF
FF803FFFF8FFFF803FFFFFFF803FFFF8FFFFC03FFFFFFF803FFFF8FFFFC01FFF
FFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFE00F
FFFFFF801FFFF8FFFFE00FFFFFFFC01FFFF8FFFFE00FFFFFFFC01FFFF8FFFFF8
0FFFFFFFC01FFFF8FFFFF803FFFFFFC01FFFF8FFFFF803FFFFFFC00FFFF8FFFF
F803FFFFFFC00FFFF8FFFFFC01FFFFFFE00FFFF8FFFFFC01FFFFFFE00FFFF8FF
FFFC01FFFFFFE00FFFF8FFFFFE01FFFFFFE00FFFF8FFFFFE00FFFFFFE007FFF8
FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FF
F8FFF800000000000007FFF8FFF800000000000003FFF8FFF800000000000003
FFF8FFFE00000000000003FFF8FFFF80000000000003FFF8FFFFE00000000000
03FFF8FFFFFF803FFFFFFE00FFF8FFFFFF803FFFFFFE00FFF8FFFFFF800FFFFF
FE00FFF8FFFFFFE00FFFFFFE00FFF8FFFFFFE00FFFFFFF007FF8FFFFFFE00FFF
FFFF007FF8FFFFFFE00FFFFFFF007FF8FFFFFFF007FFFFFF807FF8FFFFFFF007
FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF0
07FFFFFF803FF8FFFFFFF003FFFFFFC01FF8FFFFFFF803FFFFFFC01FF8FFFFFF
F803FFFFFFC01FF8FFFFFFF803FFFFFFC01FF81FFFFFF803FFFFFFE00FF81FFF
FFF803FFFFFFE00FF803FFFFF801FFFFFFE00FF800FFFFF801FFFFFFF80FF800
7FFFF801FFFFFFF803F8807FFFF801FFFFFFF803F8E03FFFFC01FFFFFFF803F8
E03FFFFC01FFFFFFFC03F8F00FFFFC01FFFFFFFC01F8F80FFFFC01FFFFFFFC01
F8F807FFFC00FFFFFFFC01F8FC03FFFC00FFFFFFFE00F8FE01FFFC00FFFFFFFE
00F8FF81FFFC00FFFFFFFF00F8FFC03FF800FFFFFFFF00F8FFF007F000FFFFFF
FF0078FFF0000000FFFFFFFF0078FFF8000000FFFFFFFF8038FFFF000000FFFF
FFFF8038FFFFC00001FFFFFFFFE038FFFFFC0003FFFFFFFFF038FFFFFF8007FF
FFFFFFFC08FFFFFF8007FFFFFFFFFC08>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
0 0 0 72 67 130 setcachedevice
67 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 67 def
/Height 58 def
/ImageMatrix [67 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE7FFFFFFF801FFE0FFE1FFFFFFE0003FE0FFE03FFFFFE00007E0FFE03FFFFF
E00007E0FFF01FFFFFE00001E0FFF01FFFFFE00FE0E0FFF01FFFFFE00FE020FF
F80FFFFFE01FE020FFF80FFFFFE01FF000FFF80FFFFFE01FFE00FFFE07FFFFE0
1FFF80FFFE07FFFFF81FFFE0FFFE07FFFFF81FFFE0FFFF03FFFFF81FFFE0FFFF
03FFFFF80FFFE0FFFF03FFFFF80FFFE0FFFF80FFFFF80FFFE0FFFF80FFFFF80F
FFE0FFFF80FFFFF80FFFE0FFFF807FFFFC0FFFE0FFFFC07FFFFC0FFFE0FFFFC0
7FFFFC0FFFE0FFFFC07FFFFC03FFE0FFFFE03FFFFE03FFE0FFFFE03FFFFE03FF
E0FFE00000000003FFE0FFE00000000001FFE0FFE00000000001FFE0FFF80000
000001FFE0FFFE0000000001FFE0FFFE0000000001FFE0FFFFF80FFFFF00FFE0
FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC03FF
FFE07FE0FFFFFC03FFFFE07FE0FFFFFC03FFFFE07FE0FFFFFE03FFFFE03FE0FF
FFFE03FFFFF03FE0FFFFFE03FFFFF03FE0FFFFFE01FFFFF03FE00FFFFE01FFFF
F00FE003FFFE01FFFFF80FE001FFFF01FFFFF80FE081FFFF01FFFFF80FE080FF
FF01FFFFFC07E0E0FFFF00FFFFFC07E0E07FFF00FFFFFC07E0F03FFF00FFFFFC
03E0F80FFE00FFFFFE03E0FC0FFE00FFFFFE03E0FF81FC00FFFFFF83E0FFC000
00FFFFFF81E0FFC00000FFFFFF81E0FFF00000FFFFFFC0E0FFFF0001FFFFFFE0
E0FFFFF803FFFFFFF8E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
67 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/E/N241 -1 TZ
%%BeginResource: font F
10 dict begin
T3Defs
/FontType 3 def
/FontName /N258 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-109 
145 
191 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 21 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 110 80 setcachedevice
110 0 0 80 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 110 def
/Height 80 def
/ImageMatrix [110 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF1FFFFFFFFFFFFFC7FFFFFFFFCFFF0FFFFFFFFFFFFFC3FFFFFFFFCFFF03FFF
FFFFFFFFFC3FFFFFFFFCFFF01FFFFFFFFFFFFC1FFFFFFFFCFFF01FFFFFFFFFFF
FC1FFFFFFFFCFFF00FFFFFFFFFFFFC0FFFFFFFFCFFF807FFFFFFFFFFFC03FFFF
FFFCFFF807FFFFFFFFFFFC01FFFFFFFCFFF803FFFFFFFFFFFC00FFFFFFFCFFF8
00FFFFFFFFFFFC007FFFFFFCFFF800FFFFFFFFFFFC007FFFFFFCFFF8007FFFFF
FFFFF8007FFFFFFCFFFE007FFFFFFFFFF8003FFFFFFCFFFE003FFFFFFFFFF800
0FFFFFFCFFFE001FFFFFFFFFF80007FFFFFCFFFE000FFFFFFFFFF80007FFFFFC
FFFE000FFFFFFFFFF80007FFFFFCFFFE0003FFFFFFFFF80203FFFFFCFFFE0003
FFFFFFFFF80381FFFFFCFFFE0001FFFFFFFFF80380FFFFFCFFFE0000FFFFFFFF
F80380FFFFFCFFFF0000FFFFFFFFF803C03FFFFCFFFF0080FFFFFFFFF803E03F
FFFCFFFF00E07FFFFFFFF803F01FFFFCFFFF00703FFFFFFFF803F01FFFFCFFFF
00700FFFFFFFE003F00FFFFCFFFF00780FFFFFFFE003F807FFFCFFFF007807FF
FFFFE003FE07FFFCFFFF007C07FFFFFFE003FF07FFFCFFFF007E03FFFFFFE003
FF03FFFCFFFF807E03FFFFFFE00FFF80FFFCFFFF807E01FFFFFFE00FFF80FFFC
FFFF807F80FFFFFFE00FFFC07FFCFFFF803FC0FFFFFFE00FFFC03FFCFFFF803F
E0FFFFFFE00FFFE03FFCFFFF803FE03FFFFFC00FFFF83FFCFFFF803FF01FFFFF
C00FFFF81FFCFFFF803FF01FFFFFC00FFFF81FFCFFFF803FF80FFFFFC00FFFFC
0FFCFFFF803FF807FFFFC00FFFFE0FFCFFFF803FFE07FFFFC01FFFFE0FFCFFFF
803FFF07FFFFC01FFFFF03FCFFFF803FFF03FFFF801FFFFF81FCFFFF803FFF03
FFFF801FFFFF81FCFFFF803FFF80FFFF801FFFFF80FCFFFF803FFFC07FFF801F
FFFFE0FCFFFF803FFFC07FFF801FFFFFE0FCFFFF803FFFE07FFF003FFFFFF0FC
FFFF803FFFF83FFF003FFFFFF07CFFFF803FFFF83FFF003FFFFFF07CFFFF803F
FFF81FFF003FFFFFF83CFFFF803FFFFC0FFF003FFFFFF83CFFFF803FFFFC0FFF
007FFFFFFC3CFFFF003FFFFE0FFE007FFFFFFC0CFFFF003FFFFF03FE007FFFFF
FE0CFFFF003FFFFF03FE007FFFFFFE0CFFFF003FFFFF01FE007FFFFFFE04FFFF
003FFFFF81F8007FFFFFFE04FFFF007FFFFF81F800FFFFFFFF84FFFF007FFFFF
E0F800FFFFFFFF84FFFE007FFFFFF0F800FFFFFFFF80FFFE007FFFFFF07000FF
FFFFFF80FFFE007FFFFFF07000FFFFFFFF80FFF8007FFFFFF83003FFFFFFFE00
FFF8007FFFFFF83003FFFFFFFE00FFF800FFFFFFFC3003FFFFFFFE00FFF000FF
FFFFFC0007FFFFFFFC00FFF000FFFFFFFC0007FFFFFFF000FFE000FFFFFFFE00
07FFFFFF8000FFC003FFFFFFFE0007FFFFFF0000FFC003FFFFFFFF8007FFFFFF
0000FF8007FFFFFFFF800FFFFFFF0000F80007FFFFFFFFC00FFFFFFF00040000
07FFFFFFFF800FFFFFFF000400000FFFFFFFFF800FFFFFFF800480001FFFFFFF
FF801FFFFFFF800480003FFFFFFFFFC01FFFFFFFE00CF000FFFFFFFFFFE01FFF
FFFFE03CF807FFFFFFFFFFF83FFFFFFFF0FCF807FFFFFFFFFFF83FFFFFFFF0FC
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
110 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 -27 145 126 setcachedevice
145 0 0 153 0 -27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 145 def
/Height 153 def
/ImageMatrix [145 0 0 -153 0 153]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000000000000000FFF8080000000000000000000000000
00000007FF808000000000000000000000000000000007FF80C0000000000000
00000000000000000007FF80E000000000000000000000000000000007FF80E0
00000000000000000000000000000001FF80F000000000000000000000000000
000001FF80F000000000000000000000000000000001FF80FC00000000000000
000000000000000001FF80FE00000000000000000000000000000000FF80FF00
7FFFFFFFFFFFFFFFFFFF0000000000FF80FF003FFFFFFFFFFFFFFFFFFF000000
00007F80FF801FFFFFFFFFFFFFFFFFFFFFC00000007F80FFC007FFFFFFFFFFFF
FFFFFFFFFF0000007F80FFC007FFFFFFFFFFFFFFFFFFFFFFF000007F80FFF007
FFFFFFFFFFFFFFFFFFFFFFFF00003F80FFF803FFFFFFFFFFFFFFFFFFFFFFFFC0
003F80FFF801FFFFFFFFFFFFFFFFFFFFFFFFC0003F80FFFC00FFFFFFFFFFFFFF
FFFFFFFFFFF0001F80FFFE007FFFFFFFFFFFFFFFFFFFFFFFFE001F80FFFF007F
FFFFFFFFFFFFFFFFFFFFFFFF801F80FFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFC0
0780FFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFF00780FFFFC00FFFFFFFFFFFFFFF
FFFFFFFFFFF00780FFFFE007FFFFFFFFFFFFFFFFFFFFFFFFF80380FFFFF003FF
FFFFFFFFFFFFFFFFFFFFFFFC0380FFFFF803FFFFFFFFFFFFFFFFFFFFFFFFFE03
80FFFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFF0180FFFFFF007FFFFFFFFFFFFFFF
FFFFFFFFFFC180FFFFFF003FFFFFFFFFFFFFFFFFFFFFFFFFC180FFFFFF003FFF
FFFFFFFFFFFFFFFFFFFFFFE080FFFFFF801FFFFFFFFFFFFFFFFFFFFFFFFFE080
FFFFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFF080FFFFFFE00FFFFFFFFFFFFFFFFF
FFFFFFFFF080FFFFFFF007FFFFFFFFFFFFFFFFFFFFFFFFF800FFFFFFF001FFFF
FFFFFFFFFFFFFFFFFFFFF800FFFFFFFC00FFFFFFFFFFFFFFFFFFFFFFFFFF80FF
FFFFFE00FFFFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFE00FFFFFFFFFFFFFFFFFF
FFFFFFFF80FFFFFFFF007FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF803FFFFF
FFFFFFFFFFFFFFFFFFFF80FFFFFFFF801FFFFFFFFFFFFFFFFFFFFFFFFF80FFFF
FFFFC007FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF003FFFFFFFFFFFFFFFFFF
FFFFFF80FFFFFFFFF803FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF801FFFFFF
FFFFFFFFFFFFFFFFFF80FFFFFFFFFC01FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF
FFFC00FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFE007FFFFFFFFFFFFFFFFFFF
FFFF80FFFFFFFFFF001FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFC01FFFFFFF
FFFFFFFFFFFFFFFF80FFFFFFFFFFE00FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF
FFF007FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF007FFFFFFFFFFFFFFFFFFFF
FF80FFFFFFFFFFF003FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF801FFFFFFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFC01FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFF
FF007FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFFFF
80FFFFFFFFFFFF801FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFC00FFFFFFFFF
FFFFFFFFFFFF80FFFFFFFFFFFFC00FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
E00FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFF007FFFFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFC01FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFC00FFFFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFE007FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFF
003FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF80FF
FFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFF801FFFFFFFFFFF
FFFFFFFF80FFFFFFFFFFFFFF0007FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFE00
03FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFE0001FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFE0001FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFC0000FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFF00000FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFF00000
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFE00000FFFFFFFFFFFFFFFFFF80FFFFFF
FFFFFFC00001FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFC00003FFFFFFFFFFFFFF
FFFF80FFFFFFFFFFFF800003FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF800007FF
FFFFFFFFFFFFFFFF80FFFFFFFFFFFF000007FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFC00001FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF800003FFFFFFFFFFFFFFFFF
FF80FFFFFFFFFFF800003FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF800007FFFFF
FFFFFFFFFFFFFF80FFFFFFFFFFF00000FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFF
E00000FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFC00001FFFFFFFFFFFFFFFFFFFF
80FFFFFFFFFFC00001FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFC00007FFFFFFFF
FFFFFFFFFFFF80FFFFFFFFFF00000FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFE00
001FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFE00001FFFFFFFFFFFFFFFFFFFFF80
FFFFFFFFFC00001FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF800003FFFFFFFFFFF
FFFFFFFFFF80FFFFFFFFF800007FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF00000
7FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF00001FFFFFFFFFFFFFFFFFFFFFF80FF
FFFFFFC00001FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF800003FFFFFFFFFFFFFF
FFFFFFFF80FFFFFFFF000007FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF000007FF
FFFFFFFFFFFFFFFFFFFF80FFFFFFFF00000FFFFFFFFFFFFFFFFFFFFFFF80FFFF
FFFE00001FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFC00001FFFFFFFFFFFFFFFFF
>
<FFFFFF80FFFFFFF000007FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFF000007FFFFF
FFFFFFFFFFFFFFFFFF80FFFFFFF00000FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF
E00001FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFC00003FFFFFFFFFFFFFFFFFFFF
FFFF80FFFFFFC00003FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF800003FFFFFFFF
FFFFFFFFFFFFFFFF80FFFFFF000007FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF00
001FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFFC00001FFFFFFFFFFFFFFFFFFFFFFF
FF80FFFFFC00003FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFF800003FFFFFFFFFFF
FFFFFFFFFFFFFF80FFFFF000007FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFE00000
FFFFFFFFFFFFFFFFFFFFFFFFF800FFFFE00000FFFFFFFFFFFFFFFFFFFFFFFFF8
00FFFFE00001FFFFFFFFFFFFFFFFFFFFFFFFF080FFFFC00007FFFFFFFFFFFFFF
FFFFFFFFFFF080FFFF000007FFFFFFFFFFFFFFFFFFFFFFFFE080FFFE00000FFF
FFFFFFFFFFFFFFFFFFFFFFE080FFFE00000FFFFFFFFFFFFFFFFFFFFFFFFFC180
FFFE00001FFFFFFFFFFFFFFFFFFFFFFFFFC180FFFC00003FFFFFFFFFFFFFFFFF
FFFFFFFF0380FFF800007FFFFFFFFFFFFFFFFFFFFFFFFE0380FFF800007FFFFF
FFFFFFFFFFFFFFFFFFFC0380FFF000007FFFFFFFFFFFFFFFFFFFFFFFF80780FF
C00001FFFFFFFFFFFFFFFFFFFFFFFFF00780FFC00003FFFFFFFFFFFFFFFFFFFF
FFFFF00780FF800003FFFFFFFFFFFFFFFFFFFFFFFFC01F80FF800007FFFFFFFF
FFFFFFFFFFFFFFFF001F80FF000007FFFFFFFFFFFFFFFFFFFFFFFC001F80FE00
000FFFFFFFFFFFFFFFFFFFFFFFF0003F80FC00001FFFFFFFFFFFFFFFFFFFFFFF
C0003F80FC00001FFFFFFFFFFFFFFFFFFFFFFFC0007F80FC00007FFFFFFFFFFF
FFFFFFFFFFFC00007F80F00000FFFFFFFFFFFFFFFFFFFFFFE000007F80E00000
FFFFFFFFFFFFFFFFFFFFFE0000007F80C00001FFFFFFFFFFFFFFFFFFFF800000
00FF80C00001FFFFFFFFFFFFFFFFFC0000000000FF80C00003FFFFFFFFFFFFFF
FFFC0000000001FF808000000000000000000000000000000001FF8080000000
00000000000000000000000007FF808000000000000000000000000000000007
FF808000000000000000000000000000000007FF808000000000000000000000
000000000007FF80800000000000000000000000000000000FFF80>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
145 153 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
133 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -82 28 27 setcachedevice
28 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 109 def
/ImageMatrix [28 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF080000000
80000000800000008000000080000000C0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
0 0 0 -76 51 -72 setcachedevice
51 0 0 4 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 4 def
/ImageMatrix [51 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 0 42 38 setcachedevice
42 0 0 38 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 38 def
/ImageMatrix [42 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFF81FC0C3FFFFF81FC001FFFFE007C000FFFFC1C3C000FFFF01C1C000FF
FF01E1C0C0FFFF01F040C0FFFF03F040C07FFF01FC40C07FFF01FC00C07FFF01
FC00E07FFF01FE00E01FFF01FE00E01FFF01FE00E01FFF01FF00F01FFF01FFC0
F01FFE01FFC0F00FFC01FFC0F00F8003FFC0F00F8007FFC0F800003FFFC0F800
07FFFFC0F80007FFFFC0F8001FFFFFC0F8040FFFFFC0FC070FFFFFC0FC0781FF
FFC0FC03F0FFFFC0FC03F07FFFC0FC03F83F87C0FF03FC1C03C0FF03FE1C03C0
FF01FF0001C0FF01FFE001C0FF01FFE001C0FF81FFF801C0FF81FFFF07C0FFC3
FFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
0 0 0 -13 27 96 setcachedevice
27 0 0 109 0 -13 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 27 def
/Height 109 def
/ImageMatrix [27 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFE20FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC0000000000
0000000000000000000000000000000000000020>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
27 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
149 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
0 0 0 -19 37 34 setcachedevice
37 0 0 53 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 53 def
/ImageMatrix [37 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000FFFFF880001FFFF8000007FFF801FE00FFF801FF00FFF800FFC07FF800FF
E03FF800FFE01FF800FFE01FF8E1FFF80FF8FFFFF80FF8FFFFFC0FF8FFFFFC0F
F8FFFFFC03F8FFFFFC03F8FFFFFC03F8FFFFFE03F8FFF01E03F8FFC00601F8FE
000001F8FC03C001F8FC07F801F8FC0FFC01F8F80FFE00F8F80FFF00F8F00FFF
00F8F00FFF80F8F00FFF8078F00FFF8078F00FFF8078F00FFFE078F00FFFE078
F007FFE038F007FFE038F807FFE038F807FFF038F807FFF038F803FFF008F803
FFF008FC03FFF008FC03FFF808FE01FFF808FE01FFF800FE00FFF800FF80FFF8
00FFC03FF800FFE03FF800FFF01FF000FFF80FF000FFF807E000FFFE000180FF
FF8003F8FFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 109 31 150 setcachedevice
31 0 0 41 0 109 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 41 def
/ImageMatrix [31 0 0 -41 0 41]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F003FFFEF003FFFE80003FFE83F01FFE01F007FE01FE07FE01FF03FE81FF83FE
E1FFC0FEFFFFC0FEFFFFC0FEFFFFC07EFFFFE07EFFFFE07EFFC0E07EFE00007E
FC00003EF80F003EF03FC03EF07FE03EF07FF83EF07FFC1EE07FFC1EE07FFC1E
E07FFC1EE07FFC1EF03FFE0EF03FFE0EF03FFE0EF03FFE0EF80FFE02F80FFF02
FC0FFF02FE07FF02FE07FE02FE03FE00FF80FC00FFE0FC00FFF000E2FFFF03FE
FFFF03FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
31 41 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
81FFFFFFFFFFFE0081FFFFFFFFFFFE0081FFFFFFFFFFFE00C1FFFFFFFFFFFE08
C07FFFFFFFFFFC08C07FFFFFFFFFFC08C03FFFFFFFFFF008E01FFFFFFFFFE018
E01FFFFFFFFFE018F00FFFFFFFFFC038FC07FFFFFFFF8078FC00FFFFFFFC0078
FE003FFFFFF001F8FF0007FFFFC003F8FF8007FFFFC007F8FFF0007FF8001FF8
FFFC00000000FFF8FFFC00000000FFF8FFFF00000003FFF8FFFFE000001FFFF8
FFFFFF0001FFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
62 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 6 28 46 setcachedevice
28 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 40 def
/ImageMatrix [28 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000708000007080000030C0000030E0000030F1FFFE30F8FFFE30FE3FFE30
FE0FFE00FF07FF80FF83FF80FFC3FFF0FFE0FFF0FFF87FF0FFF81FF0FFFC0FF0
FFFE03F0FFFF03F0FFFF81F0FFFF80F0FFFF8070FFFFE030FFFFF030FFFFF030
FFFFF000E3FFF000C1FFF00080FFF80080FFF00080FFF00080FFF00081FFF030
81FFF030C7FFE030C3FF8070E3FF80F0F0FE01F0FE0003F0FE0003F0FF803FF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/F/N258 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.8 679.6 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
108.899 679.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
108.899 679.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021ILVAW)
[11.199 0 9.09917 0 5.19952 0 ] pdfxs
140.596 682.9 m
(\033/\035)
[0 3.69966 0 ] pdfxs
147.495 682.9 m
(N) show
147.495 682.9 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\025)
[5.09953 0 ] pdfxs
162.094 672.101 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
169.793 672.201 m
(=) show
175.193 672.101 m
(\025) show
175.193 672.101 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
183.792 672.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
186.891 672.101 m
(\027) show
190.56 672.12 m
/N22 10.9091 Tf
(.) show
196.669 672.12 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
221.825 672.12 m
(we)
[7.90916 4.78904 ] pdfxs
237.284 672.12 m
(ha)
[5.38913 4.78904 ] pdfxs
247.222 672.12 m
(v) show
252.491 672.12 m
(e:)
[4.78904 2.98911 ] pdfxs
189 653.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
194.599 654.3 m
(\023) show
200.999 653.8 m
(\025) show
200.999 653.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
204.599 653.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
217.197 661.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
217.197 661.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(U\031.\033)
[11.299 0 8.19925 0 ] pdfxs
240.395 661.299 m
(\035) show
243.295 661.399 m
(\037\026!\005"+#&%\(')
[0 6.39941 0 6.69939 0 4.89955 0 2.49977 0 3.59967 0 
] pdfxs
255.694 655.9 m
(%) show
271.492 661.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
276.392 653.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
284.191 654.3 m
(=) show
289.591 653.8 m
(\025) show
289.591 653.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
298.19 654.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
301.19 653.8 m
(\027) show
305.589 661.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
305.589 661.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\034\006)
[8.09926 0 ] pdfxs
323.988 653.8 m
(<) show
331.687 654.3 m
(=) show
337.086 653.8 m
(\025) show
337.086 653.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
340.686 653.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
217.197 636.402 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
217.197 636.402 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\001)
[13.2988 0 ] pdfxs
228.596 628.002 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
232.396 627.902 m
(\035) show
235.496 628.002 m
(N) show
240.695 628.002 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
249.694 636.402 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
258.094 630.702 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
263.693 636.802 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
266.693 647.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
270.592 636.302 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
257.394 637.802 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
261.393 637.802 m
(\033\036\035)
[0 3.79965 0 ] pdfxs
274.292 628.802 m
(<) show
281.991 629.502 m
(=) show
287.391 628.802 m
(\025) show
287.391 628.802 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
295.99 629.502 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
299.09 628.802 m
(\027) show
306.189 636.402 m
(\006) show
316.388 628.802 m
(<) show
324.188 629.502 m
(=) show
329.387 628.802 m
(\025) show
329.387 628.802 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
332.987 628.802 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
217.597 602.705 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(4) show
217.597 602.705 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\001)
[12.8988 0 ] pdfxs
228.596 594.206 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033\036\035,N)
[0 3.79965 0 3.09972 0 ] pdfxs
240.695 594.206 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
249.694 602.705 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
258.094 596.905 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
263.693 603.005 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
266.693 613.404 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
270.592 602.505 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
257.394 604.105 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
261.393 604.105 m
(\033\036\035)
[0 3.79965 0 ] pdfxs
274.292 602.605 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
289.091 602.705 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
299.39 595.105 m
(<) show
307.089 595.705 m
(=) show
312.389 595.105 m
(\025) show
312.389 595.105 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
315.988 595.105 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
217.197 569.008 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
228.396 568.908 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
244.095 569.108 m
(\001) show
242.095 560.509 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033/\035)
[0 3.69966 0 ] pdfxs
248.994 560.509 m
(N) show
248.994 560.509 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\025)
[5.09953 0 ] pdfxs
263.093 569.008 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
271.492 563.208 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
277.192 569.308 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
280.092 579.707 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
284.091 568.808 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
270.892 570.408 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
274.792 570.408 m
(\033) show
278.592 570.308 m
(\035) show
290.891 569.008 m
(\006) show
301.19 561.408 m
(<) show
308.889 562.008 m
(=) show
314.188 561.408 m
(\025) show
314.188 561.408 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
317.788 561.408 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
330.387 569.008 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
341.586 568.908 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
356.285 569.008 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
366.584 561.408 m
(<) show
374.283 562.008 m
(=) show
379.682 561.408 m
(\025) show
379.682 561.408 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
383.282 561.408 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
396.281 569.008 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(4) show
407.18 561.408 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
512.88 602.04 m
/N22 10.9091 Tf
(\(2\))
[3.58903 5.38913 3.58903 ] pdfxs
93.6 531.96 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
112.036 531.96 m
(gi)
[5.38913 2.98911 ] pdfxs
120.174 531.96 m
(v) show
125.444 531.96 m
(es)
[4.78904 4.18912 ] pdfxs
137.5 532 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\024\023)
[0 5.69948 0 ] pdfxs
149.699 532 m
(\025) show
149.699 532 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
153.299 532 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
166.297 539.599 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(4) show
177.196 532 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
185.04 531.96 m
/N22 10.9091 Tf
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
214.385 531.96 m
(contradicts)
[4.78904 5.38913 5.38913 2.98911 3.58903 4.78904 5.38913 2.98911 4.78904 2.98911 4.18912 
] pdfxs
264.785 531.96 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
280.833 531.96 m
(f) show
284.302 531.96 m
(act)
[4.78904 4.78904 2.98911 ] pdfxs
299.749 531.96 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
319.1 532 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
328.145 531.96 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
338.203 531.96 m
(an)
[4.78904 5.38913 ] pdfxs
351.5 532 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
355.581 531.96 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
405.512 531.96 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
426.937 531.96 m
(y) show
435.206 531.96 m
(on)
[5.38913 5.38913 ] pdfxs
449 539.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
455.225 531.96 m
/N22 10.9091 Tf
(.) show
110.52 504.84 m
/N110 10.9091 Tf
(Theor)
[7.30907 6.10906 4.78904 5.38913 4.78904 ] pdfxs
138.665 504.84 m
(em)
[4.78904 9.10916 ] pdfxs
155.684 504.84 m
(2) show
164.193 504.84 m
/N22 10.9091 Tf
(Let)
[6.70915 4.78904 2.98911 ] pdfxs
181.9 512.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
191.16 504.84 m
/N22 10.9091 Tf
(be)
[5.38913 4.78904 ] pdfxs
204.458 504.84 m
(an)
[4.78904 5.38913 ] pdfxs
218.3 504.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
222.316 504.84 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
272.487 504.84 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
317.89 504.84 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
372.84 504.84 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
418.21 504.84 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
437.018 504.84 m
(let)
[2.98911 4.78904 2.98911 ] pdfxs
451.3 504.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
459.065 504.84 m
/N22 10.9091 Tf
(denote)
[5.38913 4.78904 5.38913 5.38913 2.98911 4.78904 ] pdfxs
491.159 504.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
507.447 504.84 m
(cur)
[4.78904 5.38913 3.58903 ] pdfxs
520.974 504.84 m
(-) show
93.6001 491.28 m
(rent)
[3.58903 4.78904 5.38913 2.98911 ] pdfxs
112.996 491.28 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
135.262 491.28 m
(of)
[5.38913 3.58903 ] pdfxs
146.76 491.28 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
162.447 491.28 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
203.738 491.28 m
(.) show
210.207 491.28 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
235.003 491.28 m
(an)
[4.78904 5.38913 ] pdfxs
245.062 491.28 m
(y) show
253.4 491.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
257.411 491.28 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
306.982 491.28 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
328.407 491.28 m
(y) show
336.7 491.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
345.436 491.28 m
/N22 10.9091 Tf
(on)
[5.38913 5.38913 ] pdfxs
358.8 498.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
367.494 491.28 m
/N22 10.9091 Tf
(will)
[7.90916 2.98911 2.98911 2.98911 ] pdfxs
386.89 491.28 m
(terminate)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 4.78904 ] pdfxs
430.352 491.28 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
446.159 491.28 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
490.81 491.28 m
(in)
[2.98911 5.38913 ] pdfxs
501.708 491.28 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
93.5994 476.64 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
116.116 476.64 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
139.821 476.64 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
163.057 476.64 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
214.537 476.64 m
(one.)
[5.38913 5.38913 4.78904 2.74908 ] pdfxs
239.574 476.64 m
(Furthermore,)
[6.10906 5.38913 3.58903 2.98911 5.38913 4.78904 3.58903 8.50908 5.38913 3.58903 4.78904 
2.74908 ] pdfxs
300.763 476.64 m
(termination)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 
] pdfxs
354.763 476.64 m
(occurs)
[5.38913 4.78904 4.78904 5.38913 3.58903 4.18912 ] pdfxs
386.977 476.64 m
(in)
[2.98911 5.38913 ] pdfxs
399.316 476.64 m
(a) show
403.865 476.64 m
(v) show
409.134 476.64 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
436.559 476.64 m
(in)
[2.98911 5.38913 ] pdfxs
448.777 476.64 m
(at)
[4.78904 2.98911 ] pdfxs
460.395 476.64 m
(most)
[8.50908 5.38913 4.18912 2.98911 ] pdfxs
487.1 476.6 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004\006\005)
[0 5.79947 0 ] pdfxs
498.999 487.999 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
505.298 488.099 m
(\004) show
509.698 484.199 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
512.698 494.598 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
516.597 483.699 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
Q
q
273.6 0 0 -4.79999 4922.28 4796.28 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
501.2 476.4 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
506.1 483.499 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(") show
506.1 483.499 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t\b)
[14.8986 0 ] pdfxs
93.6 463.08 m
/N22 10.9091 Tf
(steps,)
[4.18912 2.98911 4.78904 5.38913 4.18912 2.74908 ] pdfxs
120.774 463.08 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
150.5 463.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
156.699 463.1 m
(\023) show
164.88 463.08 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
174.938 463.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
190.865 463.08 m
(guaranteed)
[5.38913 5.38913 4.78904 3.58903 4.78904 5.38913 2.98911 4.78904 4.78904 5.38913 ] pdfxs
241.396 463.08 m
(e) show
246.065 463.08 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
282.589 463.08 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
315.043 463.08 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
334.08 463.08 m
(of)
[5.38913 3.58903 ] pdfxs
345.818 463.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
361.865 463.08 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
383.29 463.08 m
(y) show
391.9 463.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
398.16 463.08 m
/N22 10.9091 Tf
(.) show
110.52 435.96 m
/N110 10.9091 Tf
(Pr)
[6.70915 4.78904 ] pdfxs
121.778 435.96 m
(oof)
[5.38913 5.38913 3.58903 ] pdfxs
138.905 435.96 m
(\(sk)
[3.58903 4.18912 6.10906 ] pdfxs
152.673 435.96 m
(etch\):)
[4.78904 3.58903 4.78904 6.10906 3.58903 3.58903 ] pdfxs
182.607 435.96 m
/N22 10.9091 Tf
(Since)
[6.10906 2.98911 5.38913 4.78904 4.78904 ] pdfxs
209.5 443.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
218.433 435.96 m
/N22 10.9091 Tf
(terminates)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 4.78904 4.18912 ] pdfxs
266.324 435.96 m
(only)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
288.24 435.96 m
(in)
[2.98911 5.38913 ] pdfxs
299.378 435.96 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
320.695 435.96 m
(states,)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 2.74908 ] pdfxs
350.258 435.96 m
(we)
[7.90916 4.78904 ] pdfxs
365.477 435.96 m
(only)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
387.513 435.96 m
(need)
[5.38913 4.78904 4.78904 5.38913 ] pdfxs
410.629 435.96 m
(to)
[2.98911 5.38913 ] pdfxs
421.647 435.96 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
436.375 435.96 m
(w) show
447.044 435.96 m
(there)
[2.98911 5.38913 4.78904 3.58903 4.78904 ] pdfxs
471.349 435.96 m
(e) show
476.018 435.96 m
(xists)
[5.38913 2.98911 4.18912 2.98911 4.18912 ] pdfxs
498.523 435.96 m
(a) show
505.952 435.96 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
93.6004 422.4 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
116.6 422.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
116.6 422.4 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013\n)
[4.99954 0 ] pdfxs
121.6 422.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(^?)
[8.49922 0 ] pdfxs
139.798 429.999 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
139.798 429.999 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\000)
[6.69939 0 ] pdfxs
154.92 422.4 m
/N22 10.9091 Tf
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
177.556 422.4 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
196.8 430 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
205.199 435.699 m
(\017) show
204.599 432.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
208.599 432.4 m
(\033) show
208.599 432.4 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\f)
[3.79965 0 ] pdfxs
220.998 422.401 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(1\0033)
[0 10.899 0 ] pdfxs
237 422.4 m
/N22 10.9091 Tf
(,) show
242.509 422.4 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
271.9 430 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
280.299 435.699 m
(\017) show
279.799 431.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
283.699 431.6 m
(\033\036\035)
[0 3.79965 0 ] pdfxs
293.16 422.4 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
303.098 422.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
319.145 422.4 m
(multi-step)
[8.50908 5.38913 2.98911 2.98911 2.98911 3.58903 4.18912 2.98911 4.78904 5.38913 ] pdfxs
366.076 422.4 m
(transition)
[2.98911 3.58903 4.78904 5.38913 4.18912 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
409.887 422.4 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
460.407 422.4 m
(\(Precup,)
[3.58903 6.10906 3.58903 4.78904 4.78904 5.38913 5.38913 2.74908 ] pdfxs
499.68 422.4 m
(2000\))
[5.38913 5.38913 5.38913 5.38913 3.58903 ] pdfxs
93.5997 408.84 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
112.276 408.84 m
(gi)
[5.38913 2.98911 ] pdfxs
120.414 408.84 m
(v) show
125.683 408.84 m
(es)
[4.78904 4.18912 ] pdfxs
137.181 408.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
152.869 408.84 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
202.909 408.84 m
(of)
[5.38913 3.58903 ] pdfxs
214.407 408.84 m
(e) show
219.076 408.84 m
(x) show
224.345 408.84 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
259 408.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
265.399 416.499 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
273.12 408.84 m
/N22 10.9091 Tf
(in)
[2.98911 5.38913 ] pdfxs
283.898 408.84 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
306.6 408.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
313.724 408.84 m
/N22 10.9091 Tf
(until)
[5.38913 5.38913 2.98911 2.98911 2.98911 ] pdfxs
335.989 408.84 m
(it)
[2.98911 2.98911 ] pdfxs
344.367 408.84 m
(terminates)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 4.78904 4.18912 ] pdfxs
392.138 408.84 m
(in)
[2.98911 5.38913 ] pdfxs
402.916 408.84 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
425.6 408.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
430.899 408.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(*) show
433.44 408.84 m
/N22 10.9091 Tf
(.) show
439.429 408.84 m
(Based)
[7.30907 4.78904 4.18912 4.78904 5.38913 ] pdfxs
468.414 408.84 m
(on)
[5.38913 5.38913 ] pdfxs
481.593 408.84 m
(Lemma)
[6.70915 4.78904 8.50908 8.50908 4.78904 ] pdfxs
517.298 408.84 m
(1,)
[5.38913 2.74908 ] pdfxs
93.6 395.28 m
(there)
[2.98911 5.38913 4.78904 3.58903 4.78904 ] pdfxs
117.545 395.28 m
(e) show
122.214 395.28 m
(xists)
[5.38913 2.98911 4.18912 2.98911 4.18912 ] pdfxs
144.24 395.28 m
(a) show
151.309 395.28 m
(path)
[5.38913 4.78904 2.98911 5.38913 ] pdfxs
173.1 402.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002) show
176.7 395.301 m
(\000) show
182.299 402.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
186.699 395.301 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
192.298 402.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006\t\006\017\006\017\006\017\032\t)
[0 4.79956 0 4.79956 0 4.79956 0 4.79956 0 5.09953 0 
] pdfxs
220.996 395.301 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
225.895 402.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
231.895 402.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
237.72 395.28 m
/N22 10.9091 Tf
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
259.876 395.28 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
278.5 402.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
286.899 408.499 m
(\017) show
286.399 405.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
290.299 405.2 m
(\033) show
294.199 396.401 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
303.298 395.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(1\0033)
[0 10.899 0 ] pdfxs
319.32 395.28 m
/N22 10.9091 Tf
(,) show
324.349 395.28 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
342.316 395.28 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
357.763 395.28 m
(sequence)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 4.78904 4.78904 ] pdfxs
400.8 402.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002) show
404.2 395.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
412.099 395.301 m
(=d\025)
[0 5.39951 0 ] pdfxs
417.498 395.301 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
421.098 395.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
430.897 402.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
435.097 395.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<2=d\025)
[0 7.6993 0 5.39951 0 ] pdfxs
448.196 395.301 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
457.295 402.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
461.794 395.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
466.294 402.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t\006\017\006\017\006\017\020\t)
[0 4.79956 0 4.79956 0 4.79956 0 4.99954 0 ] pdfxs
489.892 395.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<:=d\025)
[0 7.79929 0 5.39951 0 ] pdfxs
503.091 395.301 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
511.59 402.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
517.589 395.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
521.789 402.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
93.6 381.72 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
104.138 381.72 m
(monotonically)
[8.50908 5.38913 5.38913 5.38913 2.98911 5.38913 5.38913 2.98911 4.78904 4.78904 2.98911 
2.98911 5.38913 ] pdfxs
170.236 381.72 m
(increasing.)
[2.98911 5.38913 4.78904 3.58903 4.78904 4.78904 4.18912 2.98911 5.38913 5.38913 2.74908 
] pdfxs
222.556 381.72 m
(Thus)
[6.70915 5.38913 5.38913 4.18912 ] pdfxs
247.593 381.72 m
(in)
[2.98911 5.38913 ] pdfxs
259.331 381.72 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
275.858 381.72 m
(limit)
[2.98911 2.98911 8.50908 2.98911 2.98911 ] pdfxs
299.9 381.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
308.099 381.8 m
(=) show
313.399 381.7 m
(\025) show
313.399 381.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
321.898 389.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
327.897 381.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
336.097 389.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
348.196 381.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
355.995 381.8 m
(=) show
361.394 381.7 m
(\025) show
361.394 381.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
364.994 381.7 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\016\n)
[4.89955 0 ] pdfxs
374.993 381.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
381.96 381.72 m
/N22 10.9091 Tf
(for)
[3.58903 5.38913 3.58903 ] pdfxs
397.887 381.72 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
424.124 381.72 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
446.16 381.72 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
469.7 381.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
474.8 389.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021\002\001)
[0 9.89909 0 ] pdfxs
497.098 381.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
497.098 381.7 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\016\n)
[4.89955 0 ] pdfxs
509.88 381.72 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
93.6 368.28 m
(thus)
[2.98911 5.38913 5.38913 4.18912 ] pdfxs
114.556 368.28 m
(we)
[7.90916 4.78904 ] pdfxs
130.014 368.28 m
(ha)
[5.38913 4.78904 ] pdfxs
139.953 368.28 m
(v) show
145.222 368.28 m
(e) show
153.2 375.9 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
161.699 368.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
161.099 378.1 m
(\033) show
164.999 378.1 m
(\033) show
168.799 378.2 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f) show
177.498 368.301 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(1\0073)
[0 11.099 0 ] pdfxs
193.68 368.28 m
/N22 10.9091 Tf
(.) show
200.149 368.28 m
(Note)
[7.90916 5.38913 2.98911 4.78904 ] pdfxs
224.105 368.28 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
243.262 368.28 m
(at)
[4.78904 2.98911 ] pdfxs
253.92 368.28 m
(e) show
258.469 368.28 m
(v) show
263.738 368.28 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
280.505 368.28 m
(step)
[4.18912 2.98911 4.78904 5.38913 ] pdfxs
300.861 368.28 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
316.909 368.28 m
(v) show
322.058 368.28 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
343.014 368.28 m
(of)
[5.38913 3.58903 ] pdfxs
354.992 368.28 m
(a) show
362.541 368.28 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
385.287 368.28 m
(increases)
[2.98911 5.38913 4.78904 3.58903 4.78904 4.78904 4.18912 4.78904 4.18912 ] pdfxs
428.028 368.28 m
(by)
[5.38913 5.38913 ] pdfxs
442.2 368.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(GH\023)
[0 6.5994 0 ] pdfxs
456.96 368.28 m
/N22 10.9091 Tf
(in)
[2.98911 5.38913 ] pdfxs
468.338 368.28 m
(a) show
472.887 368.28 m
(v) show
478.156 368.28 m
(erage,)
[4.78904 3.58903 4.78904 5.38913 4.78904 2.74908 ] pdfxs
507.251 368.28 m
(thus)
[2.98911 5.38913 5.38913 4.18912 ] pdfxs
93.5997 351 m
(in)
[2.98911 5.38913 ] pdfxs
105.218 351 m
(a) show
109.767 351 m
(v) show
115.036 351 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
141.861 351 m
(it)
[2.98911 2.98911 ] pdfxs
151.08 351 m
(will)
[7.90916 2.98911 2.98911 2.98911 ] pdfxs
171.196 351 m
(tak)
[2.98911 4.78904 5.38913 ] pdfxs
184.243 351 m
(e) show
192.392 351 m
(at)
[4.78904 2.98911 ] pdfxs
203.41 351 m
(most)
[8.50908 5.38913 4.18912 2.98911 ] pdfxs
229.4 351 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004\017\005)
[0 5.29951 0 ] pdfxs
240.799 362.399 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
247.098 362.499 m
(\004) show
251.498 358.599 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
254.398 368.998 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
258.397 358.099 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
Q
q
273.6 0 0 -4.79999 2339.88 3539.88 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
243.1 350.9 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
248 357.999 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(") show
262.798 357.899 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
270.6 351 m
/N22 10.9091 Tf
(steps)
[4.18912 2.98911 4.78904 5.38913 4.18912 ] pdfxs
295.505 351 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
311.7 351 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
316.8 358.599 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
325.32 351 m
/N22 10.9091 Tf
(in)
[2.98911 5.38913 ] pdfxs
336.938 351 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
353.465 351 m
(sequence)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 4.78904 4.78904 ] pdfxs
397.5 358.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002) show
401.1 351.001 m
(\000) show
406.599 358.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
410.999 351.001 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
416.598 358.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\n\t\006\017\006\017\006\017\n\t)
[0 4.89955 0 4.79956 0 4.79956 0 4.79956 0 4.89955 0 
] pdfxs
445.196 351.001 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
450.195 358.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
456.095 358.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
463.08 351 m
/N22 10.9091 Tf
(to)
[2.98911 5.38913 ] pdfxs
474.698 351 m
(con)
[4.78904 5.38913 5.38913 ] pdfxs
489.785 351 m
(v) show
495.055 351 m
(er)
[4.78904 3.58903 ] pdfxs
503.193 351 m
(ge)
[5.38913 4.78904 ] pdfxs
516.971 351 m
(to)
[2.98911 5.38913 ] pdfxs
93.5999 337.44 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
119.356 337.44 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
140.792 337.44 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
163.8 337.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
168.9 337.5 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
173.52 337.44 m
/N22 10.9091 Tf
(.) show
110.52 310.32 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
132.196 310.32 m
(result)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 ] pdfxs
158.651 310.32 m
(assures)
[4.78904 4.18912 4.18912 5.38913 3.58903 4.78904 4.18912 ] pdfxs
192.294 310.32 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
210.851 310.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
226.418 310.32 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
271.069 310.32 m
(arri)
[4.78904 3.58903 3.58903 2.98911 ] pdfxs
285.785 310.32 m
(v) show
291.054 310.32 m
(es)
[4.78904 4.18912 ] pdfxs
302.432 310.32 m
(in)
[2.98911 5.38913 ] pdfxs
313.21 310.32 m
(a) show
320.279 310.32 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
341.356 310.32 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
363.501 310.32 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
381.468 310.32 m
(will)
[7.90916 2.98911 2.98911 2.98911 ] pdfxs
400.745 310.32 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
423.25 310.32 m
(v) show
428.519 310.32 m
(e) show
435.828 310.32 m
(its)
[2.98911 2.98911 4.18912 ] pdfxs
448.395 310.32 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
469.352 310.32 m
(in)
[2.98911 5.38913 ] pdfxs
480.13 310.32 m
(a) show
487.199 310.32 m
(bounded)
[5.38913 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 ] pdfxs
93.5997 296.88 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
129.534 296.88 m
(of)
[5.38913 3.58903 ] pdfxs
141.152 296.88 m
(steps.)
[4.18912 2.98911 4.78904 5.38913 4.18912 2.74908 ] pdfxs
169.047 296.88 m
(W) show
178.516 296.88 m
(e) show
185.825 296.88 m
(use)
[5.38913 4.18912 4.78904 ] pdfxs
203.072 296.88 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
221.388 296.88 m
(result)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 ] pdfxs
248.203 296.88 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
274.319 296.88 m
(studying)
[4.18912 2.98911 5.38913 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
314.552 296.88 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
372.152 296.88 m
(of)
[5.38913 3.58903 ] pdfxs
383.77 296.88 m
(running)
[3.58903 5.38913 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
420.294 296.88 m
(multiple)
[8.50908 5.38913 2.98911 2.98911 2.98911 5.38913 2.98911 4.78904 ] pdfxs
459.206 296.88 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
505.308 296.88 m
(con-)
[4.78904 5.38913 5.38913 3.58903 ] pdfxs
93.5992 283.32 m
(trollers)
[2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 ] pdfxs
127.952 283.32 m
(in)
[2.98911 5.38913 ] pdfxs
139.93 283.32 m
(parallel.)
[5.38913 4.78904 3.58903 4.78904 2.98911 2.98911 4.78904 2.98911 2.74908 ] pdfxs
181.232 283.32 m
(Ne)
[7.90916 4.78904 ] pdfxs
193.81 283.32 m
(xt,)
[5.38913 2.98911 2.74908 ] pdfxs
208.657 283.32 m
(we)
[7.90916 4.78904 ] pdfxs
224.955 283.32 m
(study)
[4.18912 2.98911 5.38913 5.38913 5.38913 ] pdfxs
252.021 283.32 m
(ho)
[5.38913 5.38913 ] pdfxs
262.559 283.32 m
(w) show
274.068 283.32 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
324.119 283.32 m
(e) show
328.788 283.32 m
(x) show
334.057 283.32 m
(ecution)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
369.741 283.32 m
(of)
[5.38913 3.58903 ] pdfxs
382.319 283.32 m
(tw)
[2.98911 7.90916 ] pdfxs
393.097 283.32 m
(o) show
402.086 283.32 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
452.246 283.32 m
(using)
[5.38913 4.18912 2.98911 5.38913 5.38913 ] pdfxs
479.311 283.32 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
93.5992 269.76 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
111.327 269.76 m
(g) show
116.596 269.76 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
146.17 269.76 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
169.516 269.76 m
/N22 10.9091 Tf
(impacts)
[2.98911 8.50908 5.38913 4.78904 4.78904 2.98911 4.18912 ] pdfxs
205.919 269.76 m
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
228.435 269.76 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
273.326 269.76 m
(\(this)
[3.58903 2.98911 5.38913 2.98911 4.18912 ] pdfxs
295.232 269.76 m
(result)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 ] pdfxs
321.926 269.76 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
339.653 269.76 m
(be)
[5.38913 4.78904 ] pdfxs
352.472 269.76 m
(tri)
[2.98911 3.58903 2.98911 ] pdfxs
361.799 269.76 m
(vially)
[5.38913 2.98911 4.78904 2.98911 2.98911 5.38913 ] pdfxs
389.213 269.76 m
(e) show
393.882 269.76 m
(xtended)
[5.38913 2.98911 4.78904 5.38913 5.38913 4.78904 5.38913 ] pdfxs
430.886 269.76 m
(to)
[2.98911 5.38913 ] pdfxs
441.904 269.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
457.711 269.76 m
(case)
[4.78904 4.78904 4.18912 4.78904 ] pdfxs
479.028 269.76 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
505.144 269.76 m
(a) show
512.573 269.76 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
93.5991 256.2 m
(of)
[5.38913 3.58903 ] pdfxs
105.5 256.2 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
118.999 256.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(1) show
129.898 263.799 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\034) show
137.738 256.2 m
/N22 10.9091 Tf
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
186.938 256.2 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
202.985 256.2 m
(e) show
207.654 256.2 m
(x) show
212.923 256.2 m
(ecuted)
[4.78904 4.78904 5.38913 2.98911 4.78904 5.38913 ] pdfxs
244.058 256.2 m
(concurrently\):)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 2.98911 
5.38913 3.58903 2.98911 ] pdfxs
110.52 229.08 m
/N110 10.9091 Tf
(Theor)
[7.30907 6.10906 4.78904 5.38913 4.78904 ] pdfxs
138.665 229.08 m
(em)
[4.78904 9.10916 ] pdfxs
155.683 229.08 m
(3) show
164.192 229.08 m
/N22 10.9091 Tf
(Gi)
[7.90916 2.98911 ] pdfxs
174.851 229.08 m
(v) show
180.12 229.08 m
(en)
[4.78904 5.38913 ] pdfxs
193.298 229.08 m
(an)
[4.78904 5.38913 ] pdfxs
206.596 229.08 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
233.5 236.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
250.398 236.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
262.897 236.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\005\004)
[0 3.39969 0 ] pdfxs
274.296 236.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
274.296 236.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
287.895 236.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
287.895 236.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\b)
[4.19962 0 ] pdfxs
301.094 236.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
301.094 236.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\t\013\n)
[4.19962 0 9.49913 0 ] pdfxs
318.523 229.08 m
/N22 10.9091 Tf
(,) show
324.632 229.08 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
343.319 229.08 m
(an)
[4.78904 5.38913 ] pdfxs
353.378 229.08 m
(y) show
361.887 229.08 m
(tw)
[2.98911 7.90916 ] pdfxs
372.665 229.08 m
(o) show
381.054 229.08 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
426.457 229.08 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
481.407 229.08 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
93.5995 215.52 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
143.3 223.1 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\006\005)
[0 4.79956 0 ] pdfxs
154.499 223.1 m
(\007\n\t\013\005\r\f\032\023)
[0 4.89955 0 4.09962 0 5.99945 0 5.09953 0 ] pdfxs
181.8 215.52 m
/N22 10.9091 Tf
(de\002ned)
[5.38913 4.78904 6.10906 5.38913 4.78904 5.38913 ] pdfxs
216.294 215.52 m
(o) show
221.564 215.52 m
(v) show
226.833 215.52 m
(er)
[4.78904 3.58903 ] pdfxs
237.9 223.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
250.691 215.52 m
/N22 10.9091 Tf
(,) show
255.96 215.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
271.647 215.52 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
293.073 215.52 m
(y) show
301.4 215.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
310.102 215.52 m
/N22 10.9091 Tf
(obtained)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 4.78904 5.38913 ] pdfxs
349.975 215.52 m
(by)
[5.38913 5.38913 ] pdfxs
363.273 215.52 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
411.055 215.52 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
428.782 215.52 m
(g) show
434.051 215.52 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
463.625 215.52 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
486.851 215.52 m
/N22 10.9091 Tf
(based)
[5.38913 4.78904 4.18912 4.78904 5.38913 ] pdfxs
514.036 215.52 m
(on)
[5.38913 5.38913 ] pdfxs
93.6003 201.96 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
109.527 201.96 m
(ranking)
[3.58903 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
145.331 201.96 m
(system)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 ] pdfxs
179 209.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\006\005\024\f)
[0 4.79956 0 6.09944 0 ] pdfxs
196.598 209.6 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
203.998 209.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\b\007)
[0 6.29942 0 ] pdfxs
214.997 209.6 m
(\023) show
222.36 201.96 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
232.7 202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
237.5 209.599 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
241.44 201.96 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
291.251 201.96 m
(on)
[5.38913 5.38913 ] pdfxs
304.8 209.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
311.299 209.6 m
(\007) show
316.399 202.001 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
316.399 202.001 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
319.999 202.001 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
328.92 201.96 m
/N22 10.9091 Tf
(.) show
335.029 201.96 m
(Moreo)
[9.70908 5.38913 3.58903 4.78904 5.38913 ] pdfxs
363.775 201.96 m
(v) show
369.044 201.96 m
(er)
[4.78904 3.58903 ] pdfxs
376.942 201.96 m
(,) show
382.451 201.96 m
(if)
[2.98911 3.58903 ] pdfxs
391.8 202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(]) show
391.8 202 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\000)
[6.4994 0 ] pdfxs
398.299 202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(^?)
[8.49922 0 ] pdfxs
416.498 209.599 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
424.497 209.599 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
424.497 209.599 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
437.696 210.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
437.696 210.399 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033\032)
[3.89964 0 ] pdfxs
437.496 207.899 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
442.495 202.1 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
447.495 202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
447.495 202 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
451.095 202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
456.394 202 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021\020)
[6.19943 0 ] pdfxs
471.693 209.599 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
480.492 210.399 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
480.492 210.399 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023\022)
[3.59967 0 ] pdfxs
480.292 207.899 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
485.091 202.1 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
490.191 202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
490.191 202 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
493.791 202 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
507.389 202 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(,) show
506.389 209.599 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
517.788 209.599 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(.) show
522.84 201.96 m
/N22 10.9091 Tf
(,) show
93.6 188.4 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
115.025 188.4 m
(y) show
123.7 188.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
132.654 188.4 m
/N22 10.9091 Tf
(will)
[7.90916 2.98911 2.98911 2.98911 ] pdfxs
152.41 188.4 m
(be)
[5.38913 4.78904 ] pdfxs
165.348 188.4 m
(ascending)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
211.57 188.4 m
(on)
[5.38913 5.38913 ] pdfxs
225.228 188.4 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
247.265 188.4 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
296.585 188.4 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
318.621 188.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
334.668 188.4 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
367.003 188.4 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
386.039 188.4 m
(at)
[4.78904 2.98911 ] pdfxs
396.697 188.4 m
(least)
[2.98911 4.78904 4.78904 4.18912 2.98911 ] pdfxs
419.7 188.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
426.399 188.5 m
(\023) show
435.499 195.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
435.499 195.999 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(UILK)
[11.299 0 9.09917 0 ] pdfxs
459.096 195.999 m
(M) show
465.296 195.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
470.395 188.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
476.495 188.5 m
(\023) show
481.894 195.899 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
486.694 195.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
491.093 188.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
497.093 188.5 m
(\023) show
502.192 195.899 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
507.192 195.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
511.92 188.4 m
/N22 10.9091 Tf
(.) show
93.6 174.84 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
117.676 174.84 m
(theorem)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 8.50908 ] pdfxs
158.04 174.84 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
186.894 174.84 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
207.851 174.84 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
224.498 174.84 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
248.574 174.84 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
287.127 174.84 m
(of)
[5.38913 3.58903 ] pdfxs
300.905 174.84 m
(tw)
[2.98911 7.90916 ] pdfxs
311.683 174.84 m
(o) show
321.752 174.84 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
372.992 174.84 m
(using)
[5.38913 4.18912 2.98911 5.38913 5.38913 ] pdfxs
401.258 174.84 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
451.319 174.84 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
469.047 174.84 m
(g) show
474.316 174.84 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
503.89 174.84 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
93.5993 161.28 m
/N22 10.9091 Tf
(w) show
101.388 161.28 m
(ould)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
124.745 161.28 m
(generate)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 ] pdfxs
165.697 161.28 m
(a) show
174.566 161.28 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
195.992 161.28 m
(y) show
205.581 161.28 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
226.057 161.28 m
(remains)
[3.58903 4.78904 8.50908 4.78904 2.98911 5.38913 4.18912 ] pdfxs
264.9 161.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
270 168.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
273.96 161.28 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
325.211 161.28 m
(on)
[5.38913 5.38913 ] pdfxs
340.189 161.28 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
357.436 161.28 m
(superior)
[4.18912 5.38913 5.38913 4.78904 3.58903 2.98911 5.38913 3.58903 ] pdfxs
397.189 161.28 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
438.48 161.28 m
(.) show
448.909 161.28 m
(In)
[3.58903 5.38913 ] pdfxs
462.087 161.28 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
488.432 161.28 m
(w) show
496.221 161.28 m
(ords)
[5.38913 3.58903 5.38913 4.18912 ] pdfxs
518.978 161.28 m
(it)
[2.98911 2.98911 ] pdfxs
93.5997 147.84 m
(does)
[5.38913 5.38913 4.78904 4.18912 ] pdfxs
116.236 147.84 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
132.883 147.84 m
(ne)
[5.38913 4.78904 ] pdfxs
142.941 147.84 m
(gati)
[5.38913 4.78904 2.98911 2.98911 ] pdfxs
158.858 147.84 m
(v) show
164.127 147.84 m
(ely)
[4.78904 2.98911 5.38913 ] pdfxs
180.294 147.84 m
(impact)
[2.98911 8.50908 5.38913 4.78904 4.78904 2.98911 ] pdfxs
212.628 147.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
228.676 147.84 m
(superior)
[4.18912 5.38913 5.38913 4.78904 3.58903 2.98911 5.38913 3.58903 ] pdfxs
267.108 147.84 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
308.399 147.84 m
(.) show
110.519 120.72 m
/N110 10.9091 Tf
(Pr)
[6.70915 4.78904 ] pdfxs
121.777 120.72 m
(oof)
[5.38913 5.38913 3.58903 ] pdfxs
139.865 120.72 m
(\(sk)
[3.58903 4.18912 6.10906 ] pdfxs
153.632 120.72 m
(etch\):)
[4.78904 3.58903 4.78904 6.10906 3.58903 3.58903 ] pdfxs
185.247 120.72 m
/N22 10.9091 Tf
(Since)
[6.10906 2.98911 5.38913 4.78904 4.78904 ] pdfxs
213 128.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
219.199 128.3 m
(\f) show
226.899 128.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
235.198 128.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\b\007)
[0 6.29942 0 ] pdfxs
245.52 120.72 m
/N22 10.9091 Tf
(,) show
251.989 120.72 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
300.851 120.72 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
318.578 120.72 m
(g) show
323.847 120.72 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
353.422 120.72 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
377.727 120.72 m
/N22 10.9091 Tf
(will)
[7.90916 2.98911 2.98911 2.98911 ] pdfxs
398.203 120.72 m
(al)
[4.78904 2.98911 ] pdfxs
405.862 120.72 m
(w) show
413.651 120.72 m
(ays)
[4.78904 5.38913 4.18912 ] pdfxs
431.618 120.72 m
(select)
[4.18912 4.78904 2.98911 4.78904 4.78904 2.98911 ] pdfxs
459.992 120.72 m
(an)
[4.78904 5.38913 ] pdfxs
473.77 120.72 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
503.825 120.72 m
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
93.6 107.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
111.447 107.16 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
128.4 114.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
137.299 115.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
137.299 115.5 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033\032)
[3.89964 0 ] pdfxs
137.099 113 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
142.199 107.201 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
146.998 107.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
146.998 107.201 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
150.598 107.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
159.6 107.16 m
/N22 10.9091 Tf
(.) show
171.349 107.16 m
(Thus)
[6.70915 5.38913 5.38913 4.18912 ] pdfxs
197.705 107.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
215.552 107.16 m
(resulting)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
258.294 107.16 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
279.72 107.16 m
(y) show
289.909 107.16 m
(remains)
[3.58903 4.78904 8.50908 4.78904 2.98911 5.38913 4.18912 ] pdfxs
329.4 107.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
334.4 114.799 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
338.4 107.16 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
390.131 107.16 m
(on)
[5.38913 5.38913 ] pdfxs
405.7 114.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
412.199 114.8 m
(\007) show
416.28 107.16 m
/N22 10.9091 Tf
(.) show
427.909 107.16 m
(When)
[10.3092 5.38913 4.78904 5.38913 ] pdfxs
458.465 107.16 m
(we)
[7.90916 4.78904 ] pdfxs
475.843 107.16 m
(ha)
[5.38913 4.78904 ] pdfxs
485.781 107.16 m
(v) show
491.051 107.16 m
(e) show
500.5 107.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(]) show
500.5 107.2 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\000)
[6.4994 0 ] pdfxs
506.999 107.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(D?)
[12.0989 0 ] pdfxs
306.84 77.2801 m
/N22 10.9091 Tf
(7) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 8 8
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font B
10 dict begin
T3Defs
/FontType 3 def
/FontName /N68 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-38 
119 
115 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 31 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 41 2 setcachedevice
41 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 50 def
/ImageMatrix [41 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFFF80FFE001FFFF80FF00003FFF80F80FFC07FF80E00FFC01FF80C0FF
FFC0FF80C1FFFFE03F80C3FFFFF03F8083FFFFF81F8080FFFFFE0F80801FFFFE
0F80801FFFFE0780801FFFFF0780801FFFFF0780C00FFFFF0380C00FFFFF0380
C00FFFFF0380E01FFFFF0380F8FFFFFE0380FFFFFFFE0380FFFFFFF80380FFFF
FFE00380FFFFFE000380FFFF80000380FFFE00000780FFFE00000780FFFC0000
0F80FFF800003F80FFE000003F80FFC00000FF80FFC00007FF80FFC000FFFF80
FFC01FFFFF80FFC03FFFFF80FFC03FFF8780FFC07FFF0080FFC07FFF0080FFC0
7FFF0080FFE07FFF0000FFE07FFF0000FFE07FFF0000FFE03FFF8000FFF81FFF
C000FFFC1FFFE000FFFC1FFFE080FFFF03FFC380FFFF00FF0380FFFF80000780
FFFFF0000F80FFFFFE00FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 109 75 setcachedevice
109 0 0 75 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 109 def
/Height 75 def
/ImageMatrix [109 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000FFF83FFE00000003FFFF88000000FFF03FFE00000001FFFF88000000F
FF01FFE00000001FFFF88000000FFF00FFE00000001FFFF8FF000FFFFF00FFFF
FC003FFFFFF8FFC01FFFFF00FFFFFE00FFFFFFF8FFE03FFFFF007FFFFE003FFF
FFF8FFF83FFFFF003FFFFE003FFFFFF8FFF83FFFFF003FFFFE003FFFFFF8FFFC
3FFFFE000FFFFF803FFFFFF8FFFC1FFFFE000FFFFF801FFFFFF8FFFC1FFFFE00
0FFFFF801FFFFFF8FFFE1FFFFE0087FFFF801FFFFFF8FFFE1FFFFE00C3FFFFC0
1FFFFFF8FFFE1FFFFE00C3FFFFC01FFFFFF8FFFE0FFFFE00C1FFFFC00FFFFFF8
FFFE0FFFFE00E0FFFFC00FFFFFF8FFFF0FFFFE00F0FFFFC00FFFFFF8FFFF0FFF
FE00F0FFFFE00FFFFFF8FFFF0FFFFE00F83FFFE00FFFFFF8FFFF03FFFC00F83F
FFE007FFFFF8FFFF03FFFC01F81FFFE007FFFFF8FFFF83FFFC01FE0FFFE007FF
FFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF
81FFFC01FF87FFF003FFFFF8FFFF81FFFC01FF87FFF003FFFFF8FFFFE1FFFC01
FF83FFF003FFFFF8FFFFE1FFFC01FFC0FFF803FFFFF8FFFFE1FFFC01FFE0FFF8
03FFFFF8FFFFE0FFF803FFE0FFF800FFFFF8FFFFF0FFF803FFF87FF800FFFFF8
FFFFF0FFF803FFF83FF800FFFFF8FFFFF0FFF803FFFC3FFE00FFFFF8FFFFF07F
F803FFFC1FFE007FFFF8FFFFF07FF803FFFE1FFE007FFFF8FFFFF87FF803FFFE
1FFE007FFFF8FFFFF87FF803FFFF0FFF007FFFF8FFFFF87FF803FFFF03FF007F
FFF8FFFFF83FE003FFFF83FF003FFFF8FFFFF83FE00FFFFF81FF003FFFF8FFFF
FC3FE00FFFFFE1FF003FFFF8FFFFFC3FE00FFFFFF0FF803FFFF8FFFFFC3FE00F
FFFFF0FF803FFFF8FFFFFC0FE00FFFFFF07F801FFFF8FFFFFC0FE00FFFFFF87F
801FFFF8FFFFFE0FE00FFFFFF83F801FFFF8FFFFFE0FE00FFFFFFC3FC01FFFF8
FFFFFE0FE00FFFFFFE0FC01FFFF8FFFFFE07C01FFFFFFE0FC00FFFF8FFFFFE07
C01FFFFFFE07C00FFFF8FFFFFF87C01FFFFFFF83C00FFFF8FFFFFF87C01FFFFF
FFC3E00FFFF8FFFFFF87C01FFFFFFFC3E00FFFF8FFFFFF83C01FFFFFFFE1E003
FFF8FFFFFFC3C01FFFFFFFE1E003FFF8FFFFFFC3C01FFFFFFFE0E003FFF8FFFF
FFC3C01FFFFFFFF03803FFF8FFFFFFC1C01FFFFFFFF83801FFF8FFFFFFC1C01F
FFFFFFF83801FFF8FFFFFFE1803FFFFFFFFE1801FFF8FFFFFFE1803FFFFFFFFE
1C01FFF8FFFFFFE1803FFFFFFFFE0C01FFF8FFFFFFE0803FFFFFFFFF0400FFF8
FFFFFFE0803FFFFFFFFF8400FFF8FFFFFFF0803FFFFFFFFF8400FFF8FFFFFFF0
803FFFFFFFFFC200FFF8FFFFFFF0803FFFFFFFFFE000FFF8FFFFFFF0003FFFFF
FFFFE0007FF8FFFFFFF0003FFFFFFFFFE0003FF8FFFFE000007FFFFFFFFFF800
0008FFFFE000007FFFFFFFFFF8000008FFFFE000007FFFFFFFFFFC000008FFFF
E000007FFFFFFFFFFE000000FFFFE000007FFFFFFFFFFE000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
109 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF880FFFFF000FFFFF000FFFFE000FFFFE000FFFFE000FFFF8080FFFF8080
FFFF8080FFFF8180FFFF0180FFFF0180FFFE0180FFFE0380FFFE0380FFFE0F80
FFFC0F80FFFC0F80FFFC0F80FFF81F80FFF81F80FFF81F80FFE03F80FFE03F80
FFE03F80FFC07F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80FF80FF80
FF83FF80FF03FF80FF03FF80FE03FF80FE07FF80FE07FF80FE0FFF80F80FFF80
F80FFF80F80FFF80F01FFF80F01FFF80F01FFF80E03FFF80E03FFF80E03FFF80
C0FFFF80C0FFFF80C0FFFF80C1FFFF8081FFFF8081FFFF8081FFFF8081FFFF80
81FFFF80C1FFFF80C0FFFF80C0FFFF80C0FFFF80E03FFF80E03FFF80E03FFF80
F01FFF80F01FFF80F01FFF80F80FFF80F80FFF80F80FFF80FE0FFF80FE07FF80
FE07FF80FE03FF80FF03FF80FF03FF80FF83FF80FF80FF80FF80FF80FF80FF80
FFC0FF80FFC07F80FFC07F80FFC07F80FFE03F80FFE03F80FFE03F80FFF81F80
FFF81F80FFF81F80FFFC0F80FFFC0F80FFFC0F80FFFE0F80FFFE0380FFFE0380
FFFE0180FFFF0180FFFF0180FFFF8180FFFF8080FFFF8080FFFF8080FFFFE000
FFFFE000FFFFE000FFFFF000FFFFF000FFFFF880>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
123 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -1 68 79 setcachedevice
68 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 80 def
/ImageMatrix [68 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF0003FFFFFFFFF0FFF000003FFFFFFFF0FFF000003FFFFFFFF0FFC0000003
FFFFFFF0FE00000000FFFFFFF0FC000000001FFFFFF0F80000000007FFFFF0F0
00007FC003FFFFF0F00007FFFE03FFFFF0E0001FFFFF807FFFF08000FFFFFFE0
3FFFF08000FFFFFFE01FFFF00001FFFFFFF80FFFF00003FFFFFFFC03FFF00007
FFFFFFFE03FFF0000FFFFFFFFE01FFF0000FFFFFFFFF00FFF0000FFFFFFFFF00
FFF0003FFFFFFFFF007FF0003FFFFFFFFF807FF0803FFFFFFFFF807FF0803FFF
FFFFFF803FF0803FFFFFFFFF803FF0803FFFFFFFFF800FF0E00FFFFFFFFF800F
F0E00FFFFFFFFF800FF0F00FFFFFFFFF800FF0F807FFFFFFFF000FF0FC01FFFF
FFFF000FF0FC00FFFFFFFE000FF0FF80FFFFFFFE000FF0FFE0FFFFFFFC000FF0
FFFFFFFFFFFC003FF0FFFFFFFFFFF8003FF0FFFFFFFFFFE0007FF0FFFFFFFFFF
80007FF0FFFFFFFFFF00007FF0FFFFFFFFF80000FFF0FFFFFFFFF80001FFF0FF
FFFFFFE00003FFF0FFFFFFFF80000FFFF0FFFFFFFC00000FFFF0FFFFFFF00000
3FFFF0FFFFFF8000007FFFF0FFFFFF800003FFFFF0FFFFFF00000FFFFFF0FFFF
FE00003FFFFFF0FFFFFC00003FFFFFF0FFFFF80001FFFFFFF0FFFFE00007FFFF
FFF0FFFFE0003FFFFFFFF0FFFFE0007FFFFFFFF0FFFFE000FFFFFFFFF0FFFFC0
00FFFFFFFFF0FFFFC001FFFFFFFFF0FFFFC003FFFFFFFFF0FFFFC003FFFFFFFF
F0FFFFC003FFFFFFFFF0FFFFC00FFFFFFFFFF0FFFFC00FFFFFFF87F0FFFFE00F
FFFFFF81F0FFFFE00FFFFFFF80F0FFFFE00FFFFFFFC0F0FFFFF80FFFFFFFC030
FFFFF803FFFFFFC010FFFFF803FFFFFFC010FFFFFC03FFFFFFC000FFFFFE01FF
FFFF8000FFFFFF01FFFFFF8000FFFFFF80FFFFFF8000FFFFFFE07FFFFE0000FF
FFFFE00FFFF00000FFFFFFF001FF000000FFFFFFFC0000000010FFFFFFFE0000
000010FFFFFFFFC000000030FFFFFFFFF0000000F0FFFFFFFFF0000000F0FFFF
FFFFFF000007F0FFFFFFFFFFE0007FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -3 85 82 setcachedevice
85 0 0 85 0 -3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 85 def
/ImageMatrix [85 0 0 -85 0 85]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFFFFFFFFF8F801FFFFFFFFFFFFFFFFF8F0003FFFFFFFFFFFE01F
F8E0001FFFFFFFFFFFC003F880000FFFFFFFFFFF8000F880000FFFFFFFFFFF80
00F8800007FFFFFFFFFF800078000003FFFFFFFFFF800008000000FFFFFFFFFF
000000000000FFFFFFFFFF000C000000007FFFFFFFFF001F80000F007FFFFFFF
FF001FF8007FC03FFFFFFFFF001FF880FFE01FFFFFFFFE003FF880FFE01FFFFF
FFFE003FF881FFF80FFFFFFFFE003FF8E3FFFC03FFFFFFFE003FF8E3FFFE03FF
FFFFFE003FF8F3FFFE01FFFFFFFE007FF8FFFFFF01FFFFFFFE007FF8FFFFFF00
FFFFFFF8007FF8FFFFFF807FFFFFF8007FF8FFFFFFE07FFFFFF8007FF8FFFFFF
E07FFFFFF8007FF8FFFFFFF000000000007FF8FFFFFFF80000000000FFF8FFFF
FFF80000000000FFF8FFFFFFFC0000000000FFF8FFFFFFFC0000000000FFF8FF
FFFFFE0000000000FFF8FFFFFFFF83FFFFF800FFF8FFFFFFFF81FFFFF800FFF8
FFFFFFFF81FFFFF800FFF8FFFFFFFFC0FFFFF000FFF8FFFFFFFFE03FFFF000FF
F8FFFFFFFFE03FFFF000FFF8FFFFFFFFF03FFFF000FFF8FFFFFFFFF81FFFF000
FFF8FFFFFFFFF81FFFF000FFF8FFFFFFFFF80FFFF003FFF8FFFFFFFFFE07FFF0
03FFF8FFFFFFFFFE07FFF003FFF8FFFFFFFFFF07FFF003FFF8FFFFFFFFFF83FF
F003FFF8FFFFFFFFFF83FFF003FFF8FFFFFFFFFF80FFF003FFF8FFFFFFFFFFC0
FFF003FFF8FFFFFFFFFFC0FFF003FFF8FFFFFFFFFFE07FF003FFF8FFFFFFFFFF
F83FF003FFF8FFFFFFFFFFF83FF003FFF8FFFFFFFFFFF81FF003FFF8FFFFFFFF
FFFC1FF003FFF8FFFFFFFFFFFC1FF003FFF8FFFFFFFFFFFE0FF003FFF8FFFFFF
FFFFFE0FF003FFF8FFFFFFFFFFFE03F003FFF8FFFFFFFFFFFF03F003FFF8FFFF
FFFFFFFF81F003FFF8FFFFFFFFFFFF81F003FFF8FFFFFFFFFFFFE1F003FFF8FF
FFFFFFFFFFE0F003FFF8FFFFFFFFFFFFE0F003FFF8FFFFFFFFFFFFF07003FFF8
FFFFFFFFFFFFF07003FFF8FFFFFFFFFFFFF87003FFF8FFFFFFFFFFFFF83003FF
F8FFFFFFFFFFFFFC3003FFF8FFFFFFFFFFFFFC0003FFF8FFFFFFFFFFFFFC0003
FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFF80
03FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF
C003FFF8FFFFFFFFFFFFFFC003FFF8FFFFFFFFFFFFFFE003FFF8FFFFFFFFFFFF
FFE003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFF
FFFFF803FFF8FFFFFFFFFFFFFFFE03FFF8FFFFFFFFFFFFFFFF03FFF8FFFFFFFF
FFFFFFFFC7FFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 85 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 1 78 82 setcachedevice
78 0 0 81 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 81 def
/ImageMatrix [78 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFFFCFFC1FFFFFFFFFFFFFFFCFFC03FFFFFFFFFFFFFFCFFC0
1FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE00FFF
FFFFFFFFFFFCFFF00FFFFFFFFFFFFFFCFFF007FFFFFFFFFFFFFCFFF007FFFFFF
FFFFFFFCFFF007FFFFFFFFFFFFFCFFF807FFFFFFFFFFFFFCFFF803FFFFFFFFFF
FFFCFFFE03FFFFFFFFFFFFFCFFFE03FFFFFFFFFFFFFCFFFE00FFFFFFFFFFFFFC
FFFE00FFFFFFFFFFFFFCFFFF00FFFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF
007FFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFF803F
FFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFFC03FFFFFFFFFFFFCFFFFC01FFFFF
FFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC00801FFFFFF
FFFCFFFFE00801FFFFFFFFFCFFFFE00C0007FFFFFFFCFFFFE00E00007FFFFFFC
FFFFE00E00001FFFFFFCFFFFF803800001FFFFFCFFFFF803E000007FFFFCFFFF
F803FFE0007FFFFCFFFFF803FFFF803FFFFCFFFFFC01FFFFF807FFFCFFFFFC01
FFFFF803FFFCFFFFFC01FFFFFE00FFFCFFFFFC01FFFFFF803FFCFFFFFC01FFFF
FFE03FFCFFFFFE00FFFFFFF01FFCFFFFFE00FFFFFFF80FFCFFFFFE00FFFFFFF8
07FCFFFFFE00FFFFFFFE03FCFFFFFE007FFFFFFF00FCFFFFFE007FFFFFFF00FC
FFFFFF007FFFFFFF807CFFFFFF007FFFFFFF807CFFFFFF007FFFFFFF803CFFFF
FF007FFFFFFFC03CFFFFFF003FFFFFFFC01CFFFFFF003FFFFFFFC01CFFFFFF80
3FFFFFFFE01CFFFFFF803FFFFFFFE00CFFFFFF803FFFFFFFE00CFFFFFF803FFF
FFFFE00C1FFFFF800FFFFFFFE0001FFFFF800FFFFFFFE00003FFFF800FFFFFFF
E00000FFFFE00FFFFFFFE000007FFFE00FFFFFFFC000007FFFE00FFFFFFFC000
803FFFE00FFFFFFFC000E03FFFE00FFFFFFFC000E03FFFE007FFFFFF8000F00F
FFE007FFFFFF000CF00FFFE007FFFFFE000CF807FFE007FFFFF0000CFC01FFE0
07FFFFC0000CFE01FFF007FFFFC0001CFF803FF007FFFE00003CFFE000F007FF
8000007CFFE0000000000000007CFFF800000000000000FCFFFF000000000000
07FCFFFFC000000000001FFCFFFFFC0000000000FFFCFFFFFFF00000003FFFFC
FFFFFFF00000003FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 1 88 79 setcachedevice
88 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 88 def
/Height 78 def
/ImageMatrix [88 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFFFFFFFE00FFFFFFFC0FFFFFFFFFF8000FFFFFFE0FFFFFFFFFF8000FF
FFFFE01FFFFFFFFE00001FFFFFE00FFFFFFFFC000003FFFFE00FFFFFFFF80000
01FFFFF007FFFFFFF80000007FFFF007FFFFFFF0000F003FFFF807FFFFFFF000
3FF03FFFF807FFFFFFF000FFF80FFFF803FFFFFFE001FFFC07FFF803FFFFFFE0
01FFFC03FFFE00FFFFFF8001FFFC01FFFE00FFFFFF8003FFFE01FFFE00FFFFFF
8003FFFF81FFFF00FFFFFF8007FFFFC0FFFF007FFFFF0007FFFFF8FFFF007FFF
FF0007FFFFF8FFFF007FFFFE000FFFFFFFFFFF803FFFFE000FFFFFFFFFFF803F
FFFE000FFFFFFFFFFF803FFFFE003FFFFFFFFFFFC03FFFFC003FFFFFFFFFFFC0
1FFFFC003FFFFFFFFFFFC01FFFF8007FFFFFFFFFFFC01FFFF8007FFFFFFFFFFF
E01FFFF8007FFFFFFFFFFFE00FFFE000FFFFFFFFFFFFE00FFFE000FFFFFFFFFF
FFE00FFFC000FFFFFFFFFFFFF803FF8001FFFFFFFFFFFFF803FE0001FFFFFFFF
FFFFF803FE0003FFFFFFFFFFFFF803E00003FFFFFFFFFFFFFC01F0000FFFFFFF
FFFFFFFC01F0000FFFFFFFFFFFFFFC01F80000FFFFFFFFFFFFFC01FE00003FFF
FFFFFFFFFC01FF80003FFFFFFFFFFFFE00FFFF000FFFFFFFFFFFFE00FFFFF803
FFFFFFFFFFFE00FFFFF801FFFFFFFFFFFE00FFFFFF803FFFFFFFFFFE007FFFFF
C01FFFFFFFFFFF007FFFFFF01FFFFFFFFFFF007FFFFFF80FFFFFFFFFFF007FFF
FFFE07FFFFFFFFFF007FFFFFFE03FFFFFFFFFF003FFFFFFF00FFFFFFFFFF003F
FFFFFF007FFFFFFFFF803FFFFFFF807FFFFFFFFF803FFFFFFFC07FFFFFFFFF80
3FFFFFFFC03FFFFFFFFF803FFFFFFFC01FFFFFFFFF800FFFFFFFC01FFF1FFFFF
800FFFFFFFE00FFF1FFFFF800FFFFFFFE00FFF03FFFFE00FFFFFFFE00FFF00FF
FFE00FFFFFFFE00FFF007FFFE00FFFFFFFE003FF007FFFE00FFFFFFFE003FF80
3FFFE007FFFFFFE003FFE03FFFE007FFFFFFE003FFE03FFFE007FFFFFFC003FF
F00FFFE007FFFFFFC003FFF00FFFE007FFFFFF8003FFF807FFE007FFFFFF0003
FFFC01FFF007FFFFF80003FFFE01FFF007FFFFF8000FFFFF803FF007FFFFC000
0FFFFFE000F007FFF000001FFFFFE0000000000000001FFFFFF8000000000000
003FFFFFFF000000000000007FFFFFFFC0000000000003FFFFFFFFFC00000000
001FFFFFFFFFFFF000000007FFFFFFFFFFFFF000000007FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
88 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFF8083FFFF8083FFFF8081FFFF8081FFFF8081FFFF80C07FFF80C07FFF80
C07FFF80E07FFF80E03FFF80E03FFF80E01FFF80F01FFF80F01FFF80FC1FFF80
FC0FFF80FC0FFF80FC0FFF80FE07FF80FE07FF80FE07FF80FF01FF80FF01FF80
FF01FF80FF80FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80FFC07F80
FFF07F80FFF03F80FFF03F80FFF01F80FFF81F80FFF81F80FFFC1F80FFFC0780
FFFC0780FFFC0780FFFE0380FFFE0380FFFE0380FFFF0180FFFF0180FFFF0180
FFFFC080FFFFC080FFFFC080FFFFE080FFFFE000FFFFE000FFFFE000FFFFE000
FFFFE000FFFFE080FFFFC080FFFFC080FFFFC080FFFF0180FFFF0180FFFF0180
FFFE0380FFFE0380FFFE0380FFFC0780FFFC0780FFFC0780FFFC1F80FFF81F80
FFF81F80FFF01F80FFF03F80FFF03F80FFF07F80FFC07F80FFC07F80FFC07F80
FFC0FF80FF80FF80FF80FF80FF80FF80FF01FF80FF01FF80FF01FF80FE07FF80
FE07FF80FE07FF80FC0FFF80FC0FFF80FC0FFF80FC1FFF80F01FFF80F01FFF80
E01FFF80E03FFF80E03FFF80E07FFF80C07FFF80C07FFF80C07FFF8081FFFF80
81FFFF8081FFFF8083FFFF8083FFFF80C7FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
95 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 -1 119 82 setcachedevice
119 0 0 83 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 119 def
/Height 83 def
/ImageMatrix [119 0 0 -83 0 83]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FFFFFFFFFFFFFFFFFFFFFFFFFFEF003FFFFFFFFFFFFFFFFFFFFFFFFFEC001
FFFFFFFFFFFFFFFFFFFFF807FE00007FFFFFFFFFFFFFFFFFFFF001FE00003FFF
FFFFFFFFFFFFFFFFF0003E00003FFFFFFFFFFFFFFFFFFFF0003E00003FFFFFFF
FFFFFFFFFFFFE0000E00001FFFFFFFFFFFFFFFFFFFE0000600000FFFFFFFFFFF
FFFFFFFFE0000000000FFFFFFFFF1FFFFFFFFFE00300000007FFFFFFFF0FFFFF
FFFFE003C0C01E07FFFFFFFF0FFFFFFFFFE007FEC0FF07FFFFFFFC07FFFFFFFF
E007FEE3FF81FFFFFFFC03FFFFFFFFE007FEE3FF81FFFFFFF801FFFFFFFFE007
FEFFFF80FFFFFFF8007FFFFFFFE007FEFFFFC0FFFFFFF0003FFFFFFFE007FEFF
FFF0FFFFFFF0003FFFFFFFE007FEFFFFF0FFFFFFF0001FFFFFFFE007FEFFFFF8
7FFFFFE0000FFFFFFFE007FEFFFFF87FFFFFE00007FFFFFFE007FEFFFFF83FFF
FFC00001FFFFFFE007FEFFFFF83FFFFFC00400FFFFFFE007FEFFFFFC3FFFFFC0
0600FFFFFFE007FEFFFFFC3FFFFF000F007FFFFFE007FEFFFFFE1FFFFF000F80
3FFFFFF007FEFFFFFE1FFFFF000F801FFFFFF007FEFFFFFE07FFFE001FC007FF
FFF007FEFFFFFE07FFFE001FF003FFFFF007FEFFFFFF07FFFE007FF803FFFFF0
07FEFFFFFF07FFFE007FFC01FFFFF003FEFFFFFFC3FFFE007FFE00FFFFF003FE
FFFFFFC3FFFC007FFE00FFFFF003FEFFFFFFC1FFFC00FFFF007FFFF003FEFFFF
FFC1FFFC00FFFFC01FFFF003FEFFFFFFE1FFFC00FFFFE01FFFF003FEFFFFFFE1
FFF800FFFFF00FFFF803FEFFFFFFE0FFF801FFFFF807FFF803FEFFFFFFE0FFF8
01FFFFF803FFF803FEFFFFFFF0FFF801FFFFFC01FFF803FEFFFFFFF07FF001FF
FFFF007FF801FEFFFFFFF07FF003FFFFFF007FF801FEFFFFFFF87FF003FFFFFF
807FF801FEFFFFFFF87FF003FFFFFFC03FF801FEFFFFFFF81FF003FFFFFFC01F
F801FEFFFFFFF81FC003FFFFFFE00FFC01FEFFFFFFFC1FC007FFFFFFF007FC01
FEFFFFFFFC1FC007FFFFFFFC07FC01FEFFFFFFFC0FC007FFFFFFFE01FC01FEFF
FFFFFC0FC007FFFFFFFF00FC007EFFFFFFFC0F8007FFFFFFFF00FC007EFFFFFF
FF0F801FFFFFFFFF007C007EFFFFFFFF07801FFFFFFFFF803F007EFFFFFFFF07
801FFFFFFFFFC03F007EFFFFFFFF07801FFFFFFFFFF01F007EFFFFFFFF87003F
FFFFFFFFF807007EFFFFFFFF87003FFFFFFFFFF803003EFFFFFFFF83003FFFFF
FFFFFC01003EFFFFFFFF83003FFFFFFFFFFE01003EFFFFFFFF83003FFFFFFFFF
FE01803EFFFFFFFFC3007FFFFFFFFFFF00803EFFFFFFFFC2007FFFFFFFFFFFC0
003EFFFFFFFFC0007FFFFFFFFFFFC0003EFFFFFFFFC0007FFFFFFFFFFFE0001E
FFFFFFFFC0007FFFFFFFFFFFF0001EFFFFFFFFC0007FFFFFFFFFFFF8001EFFFF
FFFFE000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFC001EFFFFFFFF
E000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFF000EFFFFFFFFE000
FFFFFFFFFFFFFF800EFFFFFFFFE000FFFFFFFFFFFFFFC00EFFFFFFFFE001FFFF
FFFFFFFFFFE00EFFFFFFFFF001FFFFFFFFFFFFFFF00EFFFFFFFFF001FFFFFFFF
FFFFFFF00EFFFFFFFFF001FFFFFFFFFFFFFFF006FFFFFFFFF001FFFFFFFFFFFF
FFFC06FFFFFFFFF001FFFFFFFFFFFFFFFE06FFFFFFFFF007FFFFFFFFFFFFFFFF
06FFFFFFFFFC07FFFFFFFFFFFFFFFF86FFFFFFFFFC07FFFFFFFFFFFFFFFF86FF
FFFFFFFE07FFFFFFFFFFFFFFFFC6FFFFFFFFFF87FFFFFFFFFFFFFFFFF6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
119 83 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 38 43 95 setcachedevice
43 0 0 57 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 57 def
/ImageMatrix [43 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFFFE0FFE007FFFFE0FF00007FFFE0FC00000FFFE0F8000007FFE0F000
0000FFE0C0001F807FE0C000FFF87FE0C003FFFC1FE08007FFFE07E08007FFFE
03E0801FFFFF01E0003FFFFFC0E0003FFFFFE0E0007FFFFFF8E0007FFFFFFFE0
007FFFFFFFE0007FFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FF
FFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE080FFFFFFFFE080FFFFFF
FFE080FFFFFFFFE0807FFFFFFFE0807FFFFFFFE0C07FFFFFFFE0C07FFFFFFFE0
C07FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F81FFFFFFFE0F81F
FFFFFFE0FC1FFFFE1FE0FC07FFFE07E0FC07FFFE03E0FE03FFFF01E0FF01FFFF
01E0FF01FFFFC1E0FFC1FFFFC0E0FFE0FFFFE0E0FFE07FFFE060FFF01FFFE060
FFF80FFFE000FFFC0FFFE000FFFF83FFC000FFFFC07F0000FFFFC0000000FFFF
F0000000FFFFFE000000FFFFFF800060FFFFFFFC00E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 1 73 76 setcachedevice
73 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 75 def
/ImageMatrix [73 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000003FFFFFF808000000000003FFFFF8080000000000003FFFF80E000
0000000001FFFF80F00000000000007FFF80FC0000000000007FFF80FFFFF81F
FFFFE03FFF80FFFFFC0FFFFFF80FFF80FFFFFC03FFFFF807FF80FFFFFE01FFFF
F803FF80FFFFFE00FFFFFC03FF80FFFFFF00FFFFFE03FF80FFFFFF00FFFFFF81
FF80FFFFFF807FFFFFE1FF80FFFFFF807FFFFFE1FF80FFFFFF803FFFFFFFFF80
FFFFFFE03FFFFFFFFF80FFFFFFE03FFFFFFFFF80FFFFFFE00FFFFFFFFF80FFFF
FFF00FFFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF0
07FFFFFFFF80FFFFFFF807FFFFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF803FF
FFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF801FFFFFFFF80FFFFFFFC01FFFFFF
FF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80
FFFFFFFC00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFF
FFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF
803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803F
FFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFF
FF80FFFFFFFFC01FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80
FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE007FFFFFF80FFFF
FFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFF
F807FFFFFF80FFFFFFFFF803FFFFFF80FE3FFFFFF803FFFFFF80FE07FFFFFE03
FFFFFF80FE01FFFFFE00FFFFFF80FE01FFFFFE00FFFFFF80FF80FFFFFF00FFFF
FF80FF80FFFFFF007FFFFF80FF803FFFFF007FFFFF80FFC03FFFFF807FFFFF80
FFE01FFFFFC03FFFFF80FFF01FFFFFC03FFFFF80FFF807FFFFE01FFFFF80FFFE
001FFFF81FFFFF80FFFE0000000000001F80FFFF8000000000000780FFFFE000
000000000080FFFFFC00000000000080FFFFFF80000000000000FFFFFFFE0000
00000000FFFFFFFE000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -1 61 98 setcachedevice
61 0 0 99 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 99 def
/ImageMatrix [61 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8
0FFFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF883FFFFFFFFFFFFF8
83FFFFFFFFFFFFF883FFFFFFFFFFFFF881FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8
E1FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8
F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F07FFFFFFFFFFFF8
F07FF800FFFFFFF8F87FF800FFFFFFF8F87FC0000FFFFFF8F87F03FC01FFFFF8
F83E03FC003FFFF8F8380FFFC01FFFF8FC303FFFF007FFF8FC30FFFFF807FFF8
FC20FFFFFE03FFF8FC01FFFFFF00FFF8FC01FFFFFF007FF8FE01FFFFFF803FF8
FE03FFFFFFC01FF8FE03FFFFFFE01FF8FE03FFFFFFE00FF8FF83FFFFFFF80FF8
FF83FFFFFFF803F8FF83FFFFFFF803F8FF83FFFFFFFC01F8FF83FFFFFFFC01F8
FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC1FFFFFFFE00F8
FFC1FFFFFFFE00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8
FFE0FFFFFFFF00F8FFE0FFFFFFFF00F8FFF0FFFFFFFF00F8FFF0FFFFFFFF00F8
FFF0FFFFFFFF00F8FFF03FFFFFFF00F8FFF03FFFFFFF00F8FFF83FFFFFFF00F8
FFF83FFFFFFF01F8FFF83FFFFFFF01F8FFF81FFFFFFE01F8FFFE1FFFFFFE03F8
FFFE1FFFFFFE03F8FFFE1FFFFFFC0FF8FFFE0FF800380FF8FFFE0FF800381FF8
FFFF0FE000003FF8FFFF0FE1FF00FFF8FFFF0FE000003FF8FFFF07E000001FF8
FFFF07F8001803F8FFFF87FFFFFC03F8FFFF87FFFFFE01F8FFFF83FFFFFF00F8
FFFF83FFFFFF00F8FFFFC3FFFFFF8078FFFFC0FFFFFFE038FFFFC0FFFFFFE038
FFFFE0FFFFFFF038FFFFE0FFFFFFF008FFFFE07FFFFFF008FFFFF87FFFFFF008
FFFFF83FFFFFF808FFFFFC3FFFFFF808FFFFFC1FFFFFF800FFFFFE1FFFFFF800
FFFFFE0FFFFFF800FFFFFE0FFFFFF800FFFFFF03FFFFFC00FFFFFF83FFFFFC00
FFFFFFE1FFFFF808FFFFFFE0FFFFF808FFFFFFE07FFFF808FFFFFFF03FFFF008
FFFFFFF80FFFF038FFFFFFFE0FFFF078FFFFFFFF83FFE0F8FFFFFFFFE0FF01F8
FFFFFFFFE00001F8FFFFFFFFF8000FF8FFFFFFFFFF003FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
65 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
74 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
132 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/B/N68 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%BeginResource: font D
10 dict begin
T3Defs
/FontType 3 def
/FontName /N196 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-56 
76 
179 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 60 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 63 23 setcachedevice
63 0 0 71 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 71 def
/ImageMatrix [63 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFC03FE8FFFFFFFFFC000FE03FFFFFFFF00007E01FFFFFFFE00703E
81FFFFFFFE00783EE0FFFFFFF800FC3EF07FFFFFF803FC0EF03FFFFFF003FC0E
F03FFFFFF003FE3EF80FFFFFF007FFFEFC0FFFFFF007FFFEFE07FFFFE00FFFFE
FF83FFFFE00FFFFEFF81FFFFC00FFFFEFFC0FFFFC00FFFFEFFE03FFFC01FFFFE
FFF03FFFC01FFFFEFFF81FFF803FFFFEFFFE0FFF803FFFFEFFFE0FFF803FFFFE
FFFE07FE003FFFFEFFFF03FE00FFFFFEFFFF83FE00FFFFFEFFFFC0FE00FFFFFE
FFFFE07C01FFFFFEFFFFE03C01FFFFFEFFFFF81C01FFFFFEFFFFFC0801FFFFFE
FFFFFE0803FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFE
FFFFFF8007FFFFFEFFFFFFE007FFFFFEFFFFFFF007FFFFFEFFFFFFF007FFFFFE
FFFFFFE00FFFFFFEFFFFFFE007FFFFFEFFFFFFE003FFFFFEFFFFFFE001FFFFFE
FFFFFFE001FFFFFEFFFFFF8020FFFFFEFFFFFF80203FFFFEFFFFFF80203FFFFE
FFFFFF00701FFFFEFFFFFF00780FFFFEFFFFFF007E0FFFFEFFFFFF007F07FFFE
FFFFFE00FF83FFFEFFFFFE00FF80FFFEFFFFFE00FFC07FFEFFFFFC00FFE03FFE
FFFFFC01FFF83FFEFFFFFC01FFFC1FFEFFFFFC01FFFC0FFEFFFFF801FFFC0FFE
FFFFF803FFFE03FEFFFFE003FFFF01FEFFFFE00FFFFF81FEFFFFE00FFFFFE0FE
FFFFC00FFFFFF07EFFFFC00FFFFFF03EF8FF801FFFFFF80EF87F801FFFFFFC06
F87F803FFFFFFE06F87F003FFFFFFF82F83F007FFFFFFF80F80E007FFFFFFF80
FC0000FFFFFFFFC0FE0007FFFFFFFFE0FFC01FFFFFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 46 53 setcachedevice
46 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 53 def
/ImageMatrix [46 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFF80FC1FFFFFFC001C0FFFFFF8000C0FFFFFF0070C8FFFFFF00F8C83FF
FFE00F84E1FFFFE03FCCE0FFFFE03FCCF07FFF803FFCF83FFF807FFCFC3FFF80
7FFCFE0FFF00FFFCFF87FF00FFFCFF83FF00FFFCFFC1FE01FFFCFFE0FE01FFFC
FFF0FE01FFFCFFF83E03FFFCFFFE3C03FFFCFFFE1C03FFFCFFFE0C03FFFCFFFF
000FFFFCFFFF800FFFFCFFFFC00FFFFCFFFFE01FFFFCFFFFE01FFFFCFFFFE01F
FFFCFFFFE01FFFFCFFFFE01FFFFCFFFFC00FFFFCFFFFC003FFFCFFFFC001FFFC
FFFF8060FFFCFFFF8070FFFCFFFF8078FFFCFFFF80F87FFCFFFF00FC3FFCFFFF
00FC0FFCFFFF00FE07FCFFFE03FF83FCFFFE03FFC3FCFFFE03FFE1FCFFF807FF
F0FCFFF807FFF03CFFF007FFF81CEFF00FFFFE0CEFF00FFFFF0C83E00FFFFF84
E3E01FFFFFC4E1C01FFFFFC0E0003FFFFFC0F000FFFFFFE0FC03FFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -16 23 11 setcachedevice
23 0 0 27 0 -16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 23 def
/Height 27 def
/ImageMatrix [23 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF803EFF803EFC000EF01F86E01F86C0FFF6C1FFFEC1FFFE01FFFE03FFFE03FF
FE03FFFE03FFFE03FFFE01FFFE00000E00000E00000EC0FFFEC0FFFEE0FFFEF0
7FFEF01FFEF803FEFC0000FF8000FFF000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
23 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 34 44 setcachedevice
34 0 0 44 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 44 def
/ImageMatrix [34 0 0 -44 0 44]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE001FFFC0FE001FFFC0F80003FFC0F000007FC0E000003FC0E003F80FC0800F
FE03C0803FFF03C0807FFF81C0007FFFE0C0007FFFE04000FFFFF04000FFFFFF
C001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001
FFFFFFC001FFFFFFC081FFFFFFC080FFFFFFC080FFFFFFC080FFFFFFC080FFFF
FFC0E0FFFFFFC0E07FFFFFC0E07FFF1FC0F03FFF03C0F03FFF01C0F83FFF81C0
F80FFF80C0FC0FFFE0C0FC07FFE040FE03FFE040FF81FFF000FFC1FFF000FFF0
3FF000FFF80FE000FFF8000000FFFF000000FFFFC00000FFFFFC0040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 44 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -77 65 3 setcachedevice
65 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 65 def
/Height 80 def
/ImageMatrix [65 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF8007FFFFFFF8087FF00000FFFFFFF8087FF00000FFFFFFF8083FC000001
FFFFFF8081F803FF007FFFFF8081C003FF001FFFFF8080003FFFC007FFFF80C0
00FFFFF803FFFF80C001FFFFFC03FFFF80C007FFFFFE01FFFF80C00FFFFFFF00
FFFF80C00FFFFFFF007FFF80E00FFFFFFFC01FFF80E01FFFFFFFE01FFF80E01F
FFFFFFE01FFF80E03FFFFFFFF00FFF80F03FFFFFFFF00FFF80F03FFFFFFFF007
FF80F03FFFFFFFF807FF80F03FFFFFFFF803FF80F03FFFFFFFF803FF80FC3FFF
FFFFFC03FF80FC3FFFFFFFFC03FF80FC1FFFFFFFFC03FF80FC1FFFFFFFFC01FF
80FC1FFFFFFFFC01FF80FE1FFFFFFFFC01FF80FFFFFFFFFFFC01FF80FFFFFFFF
FFF801FF80FFFFFFFFFFF801FF80FFFFFFFFFFF001FF80FFFFFFFFFFE001FF80
FFFFFFFFFFE001FF80FFFFFFFFFFC003FF80FFFFFFFFFE0003FF80FFFFFFFFC0
0003FF80FFFFFFFC000003FF80FFFFFFC0000007FF80FFFFFFC0000007FF80FF
FFFC0000000FFF80FFFFF00000001FFF80FFFFE00000001FFF80FFFFC0000000
7FFF80FFFF00000000FFFF80FFFF00000003FFFF80FFFF0000003FFFFF80FFFE
000007FFFFFF80FFFE000007FFFFFF80FFFC00007FFFFFFF80FFFC0007FFFFFF
FF80FFFC001FFFFFFFFF80FFFC007FFFFFFFFF80FFFC00FFFFFFFFFF80FFFC00
FFFFFFFE1F80FFFC00FFFFFFFE1F80FFFC01FFFFFFFE1F80FFFC01FFFFFFFE1F
80FFFC01FFFFFFFE1F80FFFE01FFFFFFFE0F80FFFE01FFFFFFFE0F80FFFE01FF
FFFFFE0F80FFFE00FFFFFFFE0F80FFFE00FFFFFFFE0F80FFFF00FFFFFFFE0780
FFFF00FFFFFFFE0780FFFF007FFFFFFE0780FFFFC07FFFFFFC0780FFFFE01FFF
FFFC0180FFFFE01FFFFFFC0180FFFFF00FFFFFF00180FFFFF807FFFFF00180FF
FFF803FFFFE00180FFFFFC01FFFFC00080FFFFFF003FFF800080FFFFFF803FFF
818080FFFFFFE00FF803C080FFFFFFFC00000FF080FFFFFFFC00000FF000FFFF
FFFF00007FF800FFFFFFFFF001FFF800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
65 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
105 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -6 6 104 setcachedevice
6 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 6 def
/Height 110 def
/ImageMatrix [6 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C480808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
80808080808080808080808080C4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
6 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
104 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
98 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 38 35 109 setcachedevice
35 0 0 71 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 71 def
/ImageMatrix [35 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00FFFFFE0C000FFFFE080007FFFE081C01FFFE081F81FFFE080FC0FFFE080FE
03FFE080FE01FFE080FE01FFE0E1FF00FFE0FFFF00FFE0FFFF80FFE0FFFF80FF
E0FFFF807FE0FFFF807FE0FFFF807FE0FFFFE07FE0FFFFE07FE0FFFFE03FE0FF
FFE03FE0FFFFE03FE0FFFFF03FE0FFFFF03FE0FFFFF00FE0FFFFF00FE0FFFFF0
0FE0FFFFF80FE0FFFFF807E0FFFFF807E0FFFFF807E0FFFFFC07E0FFFFFC07E0
FFFFFC03E0FFFFFC03E0FFFFFC03E0FFFFFE03E0FFFFFE03E0FFFFFE01E0FFCF
FE01E0FFC7FE01E0FFC7FF81E0FFC3FF81E0FFE3FF81E0FFE0FF80E0FFE0FF80
E0FFF87FC0E0FFF87FC0E0FFFC3FC1E0FFFE1FC1E0FFFE0381E0FFFF0001E0FF
FF8007E0FFFFF80FE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFF0E0
FFFFFFF0E0FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFF000FFFF
FFF820>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 22 47 75 setcachedevice
47 0 0 53 0 22 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 53 def
/ImageMatrix [47 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC6FFFFFFFFFF00FFFFFFFFFC00FFFFFFFFF000FFFFFFFFF000FFFF
FFFFC000FFFFFFFF0000FFFFFFF80000FFFFFFF00180FFFFFFC00380FFFFFFC0
0F80FFFFFE007F80FFFFFC01FF80FFFFF001FF80FFFF8003FF80FFFF001FFF80
FFFF007FFF80FFFC00FFFF80FFE007FFFF80FF8007FFFF80FF001FFFFF80F800
3FFFFF80F801FFFFFF80E007FFFFFF80C01FFFFFFF80001FFFFFFF80007FFFFF
FF80001FFFFFFF80C01FFFFFFF80E007FFFFFF80F801FFFFFF80F8003FFFFF80
FF001FFFFF80FF8007FFFF80FFE007FFFF80FFFC00FFFF80FFFF007FFF80FFFF
001FFF80FFFF8003FF80FFFFF001FF80FFFFFC01FF80FFFFFE007F80FFFFFFC0
0F80FFFFFFC00380FFFFFFF00180FFFFFFF80000FFFFFFFF0000FFFFFFFFC000
FFFFFFFFF000FFFFFFFFF000FFFFFFFFFC00FFFFFFFFFF00FFFFFFFFFFC6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 3 28 78 setcachedevice
28 0 0 75 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 75 def
/ImageMatrix [28 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE03FF0FFE03FF0FF800FF0FE0383F0FC0380F0FC07C0F0FC07E070FC07F870
FC07F830FC07FC30FC03FC10FC03FC10FC03FE10FC03FE10FC01FE00FE01FF00
FE01FF00FE00FF00FE00FF00FF80FFF0FF803FF0FFC03FF0FFC03FF0FFC01FF0
FFC01FF0FFE01FF0FFE01FF0FFE00FF0FFE00FF0FFF007F0FFF007F0FFF807F0
03F807F003F803F003F803F083FE03F081FE00F081FE00F0E1FF00F0E1FF00F0
E0FF00F0F0FF00F0F07F80F0F87F80F0F83F80F0FC3F83F0FC0703F0FE0003F0
FF8007F0FFE01FF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFF870FFFFC010FFFFC010FFFFC000FFFFC000FFFFC000FFFFC000
FFFFE000FFFFE000FFFFFC10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 -73 44 23 setcachedevice
44 0 0 96 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 96 def
/ImageMatrix [44 0 0 -96 0 96]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F803FFFFFFF0E0007FFFFFF0C0001FFFFFF081F803FFFFF081FC03FFFFF0803E
01FFFFF0801F00FFFFF0801F007FFFF0801F803FFFF0801FE00FFFF0801FE00F
FFF0C01FF00FFFF0F0FFF007FFF0F0FFF007FFF0FFFFF807FFF0FFFFF803FFF0
FFFFF803FFF0FFFFFC03FFF0FFFFFC03FFF0FFFFFC01FFF0FFFFFC01FFF0FFFF
FC01FFF0FFFFFE01FFF0FFFFFE01FFF0FFFFFE00FFF0FFFFFE00FFF0FFFFFE00
FFF0FFFFFF80FFF0FFFFFF80FFF0FFFFFF803FF0FFFFFF803FF0FFFFFF803FF0
FFFFFFC03FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFE01FF0FFFF
FFE01FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFF00FF0FFFFFFF0
0FF0FFFFFFF007F0FFFFFFF007F0FFFFFFF007F0FFFFFFF807F0FFFFFFF807F0
FFFFFFF803F0FFFFFFF803F0FFFFFFF803F0FFFFFFFE03F0FFFFFFFE03F0FFF8
3FFE00F0FFF83FFE00F0FFF83FFE00F0FFFC1FFF00F0FFFC1FFF00F0FFFE1FFF
00F0FFFE0FFF0070FFFF0FFF8070FFFF03FF8070FFFF01FF8070FFFF81FF8070
FFFFE1FF80F0FFFFF0FF80F0FFFFF87F83F0FFFFF80F03F0FFFFFC0003F0FFFF
FF800FF0FFFFFFE03FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFF
FFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0
FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFF870FFFFFFFFC010FFFFFFFFC010FFFFFFFFC000FFFFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFE000FFFFFFFFE000FFFFFFFFFC30
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 96 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -78 68 0 setcachedevice
68 0 0 78 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 78 def
/ImageMatrix [68 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FFFE
00000000F8001FFFFFF80007F0FF007FFFFFFE000FF0FF81FFFFFFFF001FF0FF
C1FFFFFFFF001FF0FFC1FFFFFFFE001FF0FFC1FFFFFFFE001FF0FFE1FFFFFFFE
007FF0FFE1FFFFFFFE007FF0FFE1FFFFFFFC007FF0FFF07FFFFFFC00FFF0FFF0
7FFFFFFC00FFF0FFF07FFFFFF800FFF0FFF03FFFFFF800FFF0FFFC3FFFFFF801
FFF0FFFC3FFFFFF801FFF0FFFC3FFFFFF001FFF0FFFC1FFFFFF001FFF0FFFC1F
FFFFF001FFF0FFFE1FFFFFF003FFF0FFFE1FFFFFF003FFF0FFFE0FFFFFC003FF
F0FFFF0FFFFFC007FFF0FFFF0FFFFFC007FFF0FFFF07FFFF8007FFF0FFFF07FF
FF8007FFF0FFFF87FFFF801FFFF0FFFF87FFFF801FFFF0FFFF87FFFF001FFFF0
FFFF81FFFF001FFFF0FFFFC1FFFF003FFFF0FFFFC1FFFE003FFFF0FFFFC1FFFE
003FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFC007FFFF0FF
FFF07FFC007FFFF0FFFFF87FFC00FFFFF0FFFFF87FFC00FFFFF0FFFFF87FF000
FFFFF0FFFFF83FF000FFFFF0FFFFF83FF000FFFFF0FFFFFC3FF001FFFFF0FFFF
FC1FE001FFFFF0FFFFFC1FE001FFFFF0FFFFFE1FE007FFFFF0FFFFFE1FE007FF
FFF0FFFFFE1FC007FFFFF0FFFFFE07C007FFFFF0FFFFFF07C00FFFFFF0FFFFFF
07C00FFFFFF0FFFFFF07800FFFFFF0FFFFFFC3801FFFFFF0FFFFFFC3801FFFFF
F0FFFFFFC3001FFFFFF0FFFFFFC1001FFFFFF0FFFFFFE1003FFFFFF0FFFFFFE1
003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0
FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF801
FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FF
FFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FF
FFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
0 0 0 39 35 94 setcachedevice
35 0 0 55 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 55 def
/ImageMatrix [35 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFE0FFE001FFE0FF80007FE0FC0FF01FE0F00FF003E0E07FFC01E0C1FF
FE00E0C3FFFE00E0C7FFFF00E001FFFF0060007FFF0060007FFF0000007FFFC0
00007FFFC000007FFFC000C0FFFFC000C0FFFFC000E1FFFFC000FFFFFFC000FF
FFFFC000FFFFFF0060FFFFFF0060FFFFFF0060FFFFFE00E0FFFFFE00E0FFFFFE
01E0FFFFFC03E0FFFFF01FE0FFC0001FE0FFC0007FE0FFC0007FE0FFFF807FE0
FFFFF03FE0FFFFF81FE0FFFFF807E0FFFFFC03E0FFFFFC01E0FFFFFE01E0FFFF
FE01E0FFFFFE00E0F8FFFE00E0E01FFE00E0E01FFF00E0E01FFF00E0E00FFF00
E0E01FFE00E0E01FFE00E0E01FFE00E0F0FFFC01E0F0FFFC03E0F87FF807E0FC
07F01FE0FC00001FE0FF80007FE0FFF001FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 56 69 94 setcachedevice
69 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 38 def
/ImageMatrix [69 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFF87FFFFE03F8F87FFFF87FFFFE03F8F03FFFF03FFFF801F8F00FFFF00F
FFF07038F00FFFF00FFFF07038F00FFFF00FFFE07E18F80FFFF80FFFE07E08F8
0FFFF80FFFE07F08F807FFF807FFE07F88F807FFF807FFE03F80F807FFF807FF
E03F80FC07FFFC07FFF00FC0FC03FFFC03FFF00FC0FC03FFFC03FFF80FC0FC03
FFFC03FFF80FE0FE03FFFE03FFF807F8FE03FFFE03FFF807F8FE01FFFE01FFFC
07F8FE01FFFE01FFFC03F8FE01FFFE01FFFC03F8FF81FFFF81FFFE03F8FF81FF
FF81FFFE03F8FF80FFFF80FFFE03F83F80FFFF80FFFE01F81F80FFFF80FFFE01
F81FC0FFFFC0FFFF81F81FC03FFFC03FFF81F80FC01FFFC03FFF81F80FC01FFF
C01FFF81F88FC00FFFC00FFF81F883E007FFC00FFF81F883E007FFC08FFF81F8
E3E0C3FFC087FF81F8E1E0E0FFC1C0FF83F8E1C0E03F81C03E03F8F001F80001
F80003F8F003FE0007FC000FF8FC0FFF803FFF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 6 19 49 setcachedevice
19 0 0 43 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 43 def
/ImageMatrix [19 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FE0FC0FE0F803E0F061E0F06060F07C60F07C20F07E20F07E20F81F00F81F
00F81F20F80FE0FC0FE0FC0FE0FF07E0FF07E0FF07E01F03E01F83E01F83E01F
83E00781E0C3C1E0E1C3E0E1C3E0F007E0FC0FE0FC0FE0FFFFE0FFFFE0FFFFE0
FFFFE0FFFFE0FFFFE0FFFFE0FFE1E0FFE1E0FFE060FFE020FFE020FFE020FFF0
60>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
0 0 0 6 22 46 setcachedevice
22 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 40 def
/ImageMatrix [22 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000FE01FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03
FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF
03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FC
FF03FC0103FC0003FC0003FCFC03FCFF03FCFF03FCFFC3FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
39 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 3 44 76 setcachedevice
44 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 73 def
/ImageMatrix [44 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000030800000000030800000000030800000000030C00000000010E000
00000010F00000000010F00000000010F00000000010F80FFFFFFC10FE07FFFF
FE10FF07FFFFFE10FF83FFFFFE10FFC0FFFFFE10FFC07FFFFE00FFE03FFFFF00
FFF81FFFFF00FFF81FFFFF00FFFC0FFFFF00FFFE03FFFFF0FFFE01FFFFF0FFFF
00FFFFF0FFFF807FFFF0FFFFE07FFFF0FFFFF03FFFF0FFFFF80FFFF0FFFFF807
FFF0FFFFF803FFF0FFFFFC01FFF0FFFFFE01FFF0FFFFFF80FFF0FFFFFFC03FF0
FFFFFFC01FF0FFFFFFC00FF0FFFFFFE007F0FFFFFFF007F0FFFFFFF003F0FFFF
FFF800F0FFFFFFF80070FFFFFFF80070FFFFFFFE0030FFFFFFFE0030FFFFFFFF
0030FFFFFFFF0010FFFFFFFF0010FFFFFFFF0010F8FFFFFF8000F8FFFFFF8000
E01FFFFF8000C00FFFFF80008007FFFF80008007FFFF80008007FFFF80008007
FFFF80008007FFFF80008007FFFF80008007FFFF8000800FFFFF0000801FFFFF
0010C3FFFFFF0010C1FFFFFF0010C1FFFFFE0030C0FFFFFE0030E0FFFFF80030
F03FFFF80070F03FFFF800F0F81FFFF003F0FE07FFC007F0FE00FE0007F0FF00
00000FF0FFC000003FF0FFF80001FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80001FFF0FFF80001FFF0FFC000003FF0FF007F801FF0FE00
7F8007F0F807FFC003F0F01FFFE000F0F03FFFF000F0E0FFFFF80070C1FFFFF8
0070C1FFFFF80030C01FFFFE0030800FFFFE0010800FFFFE00108007FFFF0010
8007FFFF00108007FFFF00008007FFFF00008007FFFF00008007FFFF0000C00F
FFFF0000E01FFFFF0000E01FFFFF0000F8FFFFFF0000FFFFFFFF0000FFFFFFFF
0000FFFFFFFF0010FFFFFFFF0010FFFFFFFE0010FFFFFFFE0010FFFFFFFE0030
FFFFFFFE0030FFFFFFF80070FFFFFFF800F0FFFFFFF000F0FFFFFFE003F0FFFF
FFC007F0FFFFFFC00FF0FFFFFF803FF0FFFC0001FFF0FFFC0001FFF0FFFC0003
FFF0FFFFFC00FFF0FFFFFF80FFF0FFFFFFC03FF0FFFFFFE00FF0FFFFFFE007F0
FFFFFFE003F0FFFFFFF003F0FFFFFFF003F0FFFFFFF800F0FFFFFFF800F0FFFF
FFF80070FFFFFFF80070F807FFFE0030F807FFFE0030F003FFFE0030E003FFFE
0030E003FFFE0030E000FFFE0030E000FFFE0030E003FFFE0030E003FFFE0030
E007FFFE0030E007FFFE0030F00FFFF80070F03FFFF80070F83FFFF800F0F81F
FFF003F0FE0FFFF007F0FE03FFE007F0FF807F800FF0FFC000003FF0FFF80001
FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 28 60 78 setcachedevice
60 0 0 50 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 50 def
/ImageMatrix [60 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFF807FF0FF87FFFFFF807FF0FC03FFFFFE001FF0FC01FFFFF80E0FF0
FC01FFFFF00E03F0FE01FFFFF01F81F0FE01FFFFF01FE0F0FE01FFFFF01FE0F0
FE00FFFFF01FF0F0FF80FFFFF01FF870FF80FFFFF00FF870FF80FFFFF00FF830
FF803FFFF00FFC30FF803FFFF00FFC30FFC03FFFF007FC00FFC03FFFF807FE00
FFC03FFFF807FE00FFC01FFFF803FE00FFC01FFFF803FE00FFE01FFFFE03FFF0
FFE01FFFFE03FFF0FFE01FFFFE00FFF0FFE00FFFFE00FFF0FFE00FFFFF00FFF0
FFF00FFFFF007FF0FFF00FFFFF007FF0FFF00FFFFF807FF0FFF007FFFF807FF0
FFF007FFFF803FF0FFF807FFFF803FF0FFF807FFFFC03FF0FFF807FFFFC03FF0
03F803FFFFC03FF003FE03FFFFC01FF003FE00FFFFC01FF083FE00FFFFE01FF0
81FE007FFFE01FF081FE007FFFE01FF0E1FE007FFFE01FF0E1FF003FFFE01FF0
E0FF001FFFE01FF0E0FF000FFFE01FF0F0FF0003FFE01FF0F0FF0303FFE03FF0
F87F0381FFE03FF0F83E07E0FFC07FF0F80E07E03F807FF0FC0007F80000FFF0
FE001FFE0003FFF0FFC0FFFFC00FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0081FFFFFFFFFFFE00
81FFFFFFFFFFFE00807FFFFFFFFFFC00C07FFFFFFFFFFC08C07FFFFFFFFFFC08
E07FFFFFFFFFFC18E03FFFFFFFFFF018E03FFFFFFFFFF018E01FFFFFFFFFE018
F01FFFFFFFFFE038F00FFFFFFFFFC038FC0FFFFFFFFFC078FC0FFFFFFFFFC078
FE0FFFFFFFFFC1F8FE07FFFFFFFF81F8FE07FFFFFFFF81F8FE01FFFFFFFF01F8
FF01FFFFFFFF03F8FF01FFFFFFFF03F8FF80FFFFFFFC07F8FF80FFFFFFFC07F8
FF80FFFFFFFC07F8FFC07FFFFFF80FF8FFC07FFFFFF80FF8FFC07FFFFFF80FF8
FFF03FFFFFF01FF8FFF03FFFFFF01FF8FFF01FFFFFE01FF8FFF81FFFFFE07FF8
FFF81FFFFFE07FF8FFFC1FFFFFE0FFF8FFFC07FFFFC0FFF8FFFC07FFFFC0FFF8
FFFC03FFFF00FFF8FFFE03FFFF01FFF8FFFE03FFFF01FFF8FFFF01FFFE03FFF8
FFFF01FFFE03FFF8FFFF00FFFC03FFF8FFFFC0FFFC07FFF8FFFFC0FFFC07FFF8
FFFFE0FFFC1FFFF8FFFFE07FF81FFFF8FFFFE07FF81FFFF8FFFFE01FF01FFFF8
FFFFF01FF03FFFF8FFFFF00FC03FFFF8FFFFF80FC07FFFF8FFFFF80FC07FFFF8
FFFFFC0FC0FFFFF8FFFFFC0780FFFFF8FFFFFC0780FFFFF8FFFFFC0300FFFFF8
FFFFFF0301FFFFF8FFFFFF0301FFFFF8FFFFFF8007FFFFF8FFFFFF8007FFFFF8
FFFFFF8007FFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8
FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFF03FFFFFF8
FFFFFFFC7FFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a36 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 -35 41 39 setcachedevice
41 0 0 74 0 -35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 74 def
/ImageMatrix [41 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFFFFF80C007FFFFFF808003FFFFFF808380FFFFFF8083C0FFFFFF8080C0
FFFFFF8080E07FFFFF8080E07FFFFF8080E03FFFFF8080F83FFFFF80E1F83FFF
FF80FFF81FFFFF80FFF81FFFFF80FFF81FFFFF80FFF80FFFFF80FFFC0FFFFF80
FFFC0FFFFF80FFFC0FFFFF80FFFC0FFFFF80FFFC03FFFF80FFFC03FFFF80FFFE
03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE01FFFF80FFFE01FF
FF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80
FFFF00FFFF80FFFF00FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF807FFF80FFFF807FFF80FFFFE07FFF80FFFFE07FFF80FFFFE07F
FF80FFFFE07FFF80FFFFE03FFF80FFFFE03FFF80FFFFF03FFF80FFFFF03FFF80
FFFFF03FFF80FFF800000F80FFF800000F80FFF800000F80FFFFF00FFF80FFFF
F80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF807FF80FFFFF807
FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07C380FFFFFC038000
FFFFFE038000FFFFFE038000FFFFFE038000FFFFFE038000FFFFFF81C000FFFF
FF80E000FFFFFFC0F800FFFFFFF00080FFFFFFFE0780FFFFFFFE0780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 -38 20 43 setcachedevice
20 0 0 81 0 -38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF80FFFF00FFFF00FFFC10FFF870FFF070FFE0F0FFC1F0FFC1F0FF03F0FF07
F0FE07F0FC07F0FC1FF0FC1FF0F83FF0F83FF0F03FF0F07FF0F07FF0F07FF0C0
FFF0C0FFF0C0FFF0C0FFF080FFF081FFF081FFF081FFF081FFF081FFF001FFF0
01FFF001FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FF
F007FFF007FFF007FFF007FFF001FFF001FFF001FFF081FFF081FFF081FFF081
FFF081FFF080FFF0C0FFF0C0FFF0C0FFF0C0FFF0C07FF0F07FF0F07FF0F07FF0
F83FF0F83FF0F81FF0FC1FF0FC1FF0FE07F0FF07F0FF03F0FF01F0FFC1F0FFE1
F0FFF0F0FFF870FFF810FFFC00FFFF00FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
0 0 0 -43 20 38 setcachedevice
20 0 0 81 0 -43 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF087FFF087FFF0C3FFF0E1FFF0E0FFF0F03FF0F81FF0F81FF0FE0FF0FF0F
F0FF07F0FF03F0FF83F0FF83F0FFC0F0FFC0F0FFC070FFE070FFE070FFE070FF
F830FFF830FFF830FFF830FFF810FFFC10FFFC10FFFC10FFFC10FFFC10FFFC00
FFFC00FFFC00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE
00FFFE00FFFE00FFFE00FFFE00FFFC00FFFC00FFFC00FFFC10FFFC10FFFC10FF
FC10FFFC10FFF810FFF830FFF830FFF830FFF830FFE030FFE070FFE070FFE070
FFC0F0FFC0F0FF80F0FF83F0FF83F0FF07F0FF0FF0FE0FF0F80FF0F81FF0F83F
F0F0FFF0E1FFF0C1FFF083FFF087FFF08FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a42 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -77 54 23 setcachedevice
54 0 0 100 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 100 def
/ImageMatrix [54 0 0 -100 0 100]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFCF000FFFFFFFFFCC0007FFFFFFFFCC1E01FFFFFFFFCC3F81FFF
FFFFFC81FC1FFFFFFFFC803E0FFFFFFFFC801E03FFFFFFFC801E03FFFFFFFC80
1E01FFFFFFFC801F01FFFFFFFCC01F01FFFFFFFCC01F00FFFFFFFCC01F00FFFF
FFFCF03F00FFFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF
807FFFFFFCFFFF803FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFF
FCFFFFE03FFFFFFCFFFFE00FFFFFFCFFFFE00FFFFFFCFFFFF00FFFFFFCFFFFF0
0FFFFFFCFFFFF00FFFFFFCFFFFF00FFFFFFCFFFFF007FFFFFCFFFFF007FFFFFC
FFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF803
FFFFFCFFFFF803FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFF
FFFC03FFFFFCFFFFFC01FFFFFCFFFFFC01FFFFFCFFFFFE01FFFFFCFFFFFE01FF
FFFCFFFFFE01FFFFFCFFFFFE01FFFFFCFFFFFE00FFFFFCFFFFFE00FFFFFCFFFF
FF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFF
FCFFFFFF803FFFFCFFFFFF803FFFFCFFFFFFC03FFFFCFFFFFFC03FFFFCFFFFFF
C03FFFFCFFFFFFC03FFFFCFFFFFFC01FFFFCFFFFFFC01FFFFCFFFFFFE01FFFFC
FFFFFFE01FFFFCFFFFFFE01FFFFCFFFF80000001FCFFFF80000001FCFFFF8000
0001FCFFFF80000001FCFFFFFFF00FFFFCFFFFFFF00FFFFCFFFFFFF00FFFFCFF
FFFFF007FFFCFFFFFFF007FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF807
FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF803FFFCFFFFFFFE03FFFCFFFF
FFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FC3CFFFFFFFE00F0
04FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF80F000FFFFFF
FF807000FFFFFFFF807000FFFFFFFFC07800FFFFFFFFC07E00FFFFFFFFE03F80
FFFFFFFFF81E04FFFFFFFFF80004FFFFFFFFFE000CFFFFFFFFFF80FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 100 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
0 0 0 -78 54 23 setcachedevice
54 0 0 101 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 101 def
/ImageMatrix [54 0 0 -101 0 101]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFC03FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFF
FFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFFFFFCE0
1FFFFFFFFFFCF01FFFFFFFFFFCF01FFFFFFFFFFCF80FFFFFFFFFFCF80FFFFFFF
FFFCF807FFFFFFFFFCFC07FFFFFFFFFCFC07FFFFFFFFFCFF03FFFFFFFFFCFF03
FFFFFFFFFCFF01FFFFFFFFFCFF81FFFFFFFFFCFF807FFFFFFFFCFFC07FFFFFFF
FCFFC07FFFFFFFFCFFE03FFFFFFFFCFFE03FFFFFFFFCFFE01FFFFFFFFCFFF01F
FFFFFFFCFFF01FFFFFFFFCFFFC0FFFFFFFFCFFFC0FFFFFFFFCFFFC07FFFFFFFC
FFFE07FFFFFFFCFFFE01FFFFFFFCFFFF01FFFFFFFCFFFF01FFFFFFFCFFFF80FF
FFFFFCFFFF80FFFFFFFCFFFF807FFFFFFCFFFFC07FFFFFFCFFFFC07FFFFFFCFF
FFF03FFFFFFCFFFFF03FFFFFFCFFFFF01FFFFFFCFFFFF81FFFFFFCFFFFF807FF
FFFCFFFFFC07FFFFFCFFFFFC07FFFFFCFFFFFE03FFFFFCFFFFFE03FFFFFCFFFF
FE01FFFFFCFFFFFF01FFFFFCFFFFFF01FFFFFCFFFFFFC0FFFFFCFFFFFFC0FFFF
FCFFFFFFC07FFFFCFFFFFFE07FFFFCFFFFFFE01FFFFCFFFFFFF01FFFFCFFFFFF
F01FFFFCFFFFFFF80FFFFCFFFFFFF80FFFFCFFFFFFF807FFFCFFFFFFFC07FFFC
FFFFFFFC07FFFCFFFFFFFF03FFFCFFFFFFFF03FFFCFFFFFFFF01FFFCFFFFFFFF
81FFFCFFFFFFFF807FFCFFFFFFFFC07FFCFFFFFFFFC07FFCFFFFFFFFE03FFCFF
FFFFFFE03FFCFFFFFFFFE01FFCFFFFFFFFF01FFCFFFFFFFFF01FFCFFFFFFFFFC
0FFCFFFFFFFFFC0FFCFFFFFFFFFC07FCFFFFFFFFFE07FCFFFFFFFFFE01FCFFFF
FFFFFF01FCFFFFFFFFFF01FCFFFFFFFFFF80FCFFFFFFFFFF80FCFFFFFFFFFF80
7CFFFFFFFFFFC07CFFFFFFFFFFC07CFFFFFFFFFFF03CFFFFFFFFFFF03CFFFFFF
FFFFF01CFFFFFFFFFFF81CFFFFFFFFFFF804FFFFFFFFFFFC04FFFFFFFFFFFC04
FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFF00FFFFFFFF
FFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 101 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a45 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
0 0 0 -8 44 85 setcachedevice
44 0 0 93 0 -8 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 93 def
/ImageMatrix [44 0 0 -93 0 93]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF03FFFFFFF0FF03
FFFFFFF0FF03800FFFF0FF800003FFF0FF800003FFF0FF801FC0FFF0FFC07FF0
3FF0FF807FF00FF0FF807FF80FF0FF007FFE07F0FF007FFF07F0FE007FFF83F0
F8007FFF80F0F8003FFF80F0F8003FFFC0F0F0003FFFC070F0183FFFC070F018
1FFFC070E0381FFFE030E0381FFFE030E03C1FFFE030C03C0FFFE010C03C0FFF
E010C03C0FFFE010C03E0FFFE010C03E0FFFE010C0FE03FFF810C0FE03FFF810
C0FE03FFF81080FF03FFF80080FF01FFF80080FF01FFF80080FF01FFF80080FF
81FFF80080FF81FFF80080FF80FFF80080FF80FFF80080FF80FFF80080FFE0FF
F80080FFE07FF80080FFE07FF80080FFE07FF80080FFF07FF80080FFF03FF800
80FFF03FF80080FFF03FF80080FFF83FF80080FFF83FF80080FFF80FF80080FF
F80FF80080FFF80FF80080FFFC0FF80080FFFC0FF80080FFFC07F80080FFFC07
F80080FFFC07F800C0FFFE03F810C0FFFE03F810C0FFFE03F810C0FFFF83F810
C0FFFF83F810C03FFF81E010C03FFF81E010E03FFF81E030E03FFFC1E030E03F
FFC1E030E03FFFC0E030E03FFFC0E030F01FFFC0C070F01FFFE00070F81FFFE0
00F0F81FFFE000F0FE0FFFF003F0FE0FFFF003F0FE07FFF003F0FF03FFF007F0
FF83FFF00FF0FFC0FFF81FF0FFE07FF01FF0FFE01FC00FF0FFF800000FF0FFFE
00000FF0FFFF800E0FF0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFF
07F0FFFFFFFF07F0FFFFFFFF8FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 93 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a47 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
97 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 6 28 61 setcachedevice
28 0 0 55 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 55 def
/ImageMatrix [28 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFF0F01FFFF0C007FFF0C3C0FFF081C07FF081E07FF081F83FF0C1F83FF0
E1FC1FF0FFFC1FF0FFFC1FF0FFFC0FF0FFFE0FF0FFFE0FF0FFFE0FF0FFFE0FF0
FFFE03F0FFFF03F0FFFF03F0FFFF03F0FFFF03F0FFFF81F0FFFF81F0FFFF81F0
FFFF81F0FFFF81F0FFFFE0F0FFFFE0F0FFFFE0F0FFFFE0F0FF8FE070FF8FF070
FF8FF070FFC7F070FFC7F070FFC3F070FFE07070FFF870F0FFFC00F0FFFF03F0
FFFF03F0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFC30FFFFFC30FFFFF800FFFFF800FFFFF800FFFFFC00FFFFFE30>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
0 0 0 6 66 93 setcachedevice
66 0 0 87 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
FFFFFFFFF040FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF00
00FFFFFFFFFFFFF80000FFFFFFFFFFFFE00040FFFFFFFFFFFF0003C0FFFFFFFF
FFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFFFFF001FFC0FFFFFFFFFF8001FFC0
FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC0
07FFFFC0FFFFFFFF001FFFFFC0FFFFFFF8001FFFFFC0FFFFFFE0007FFFFFC0FF
FFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FFFFFC007FFFFFFFC0FFFFF001FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFFFFFFC0FFF0003FFFFFFFFFC0FFF0
00FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF001FFFFFFFFFFFC0F8001FFFFFFFFF
FFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0007FFF
FFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFFFFFFFFC0C001FFFFFFFFFFFF
C0F0003FFFFFFFFFFFC0FC003FFFFFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FF
FFFFFFFFC0FFE0007FFFFFFFFFC0FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0
FFFFC003FFFFFFFFC0FFFFF800FFFFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007
FFFFFFC0FFFFFFC001FFFFFFC0FFFFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FF
FFFFFF800FFFFFC0FFFFFFFFE001FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC00
1FFFC0FFFFFFFFFF0003FFC0FFFFFFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFF
FFFFFFFE001FC0FFFFFFFFFFFE0007C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF0
0040FFFFFFFFFFFFFC0040FFFFFFFFFFFFFF8000FFFFFFFFFFFFFFE000FFFFFF
FFFFFFFFE000FFFFFFFFFFFFFFFC40>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a53 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -77 76 3 setcachedevice
76 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 76 def
/Height 80 def
/ImageMatrix [76 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8001FFFFFFFFFF0FFFFC00000FFFFFFFFF0FFFFC00000FFFFFFFFF0FFFE
00FF801FFFFFFFF0FFF803FFF803FFFFFFF0FFC003FFF800FFFFFFF0FF801FFF
FE001FFFFFF0FF003FFFFFC00FFFFFF0FF007FFFFFE00FFFFFF0FE00FFFFFFF8
07FFFFF0FC01FFFFFFFC01FFFFF0FC01FFFFFFFC007FFFF0F001FFFFFFFF003F
FFF0F007FFFFFFFF801FFFF0F007FFFFFFFFC01FFFF0E00FFFFFFFFFE00FFFF0
E00FFFFFFFFFF007FFF0C00FFFFFFFFFF001FFF0C00FFFFFFFFFF000FFF0C00F
FFFFFFFFFC007FF0C00FFFFFFFFFFE007FF0801FFFFFFFFFFE007FF0801FFFFF
FFFFFF003FF0801FFFFFFFFFFF001FF0801FFFFFFFFFFF001FF0801FFFFFFFFF
FF8007F0801FFFFFFFFFFFC007F0801FFFFFFFFFFFC003F0801FFFFFFFFFFFC0
03F0801FFFFFFFFFFFC001F0801FFFFFFFFFFFF001F0800FFFFFFFFFFFF000F0
800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800F
FFFFFFFFFFF80070800FFFFFFFFFFFFC0070800FFFFFFFFFFFFC0070800FFFFF
FFFFFFFC0070C007FFFFFFFFFFFE0010C007FFFFFFFFFFFE0010C007FFFFFFFF
FFFE0010C007FFFFFFFFFFFE0010C001FFFFFFFFFFFE0010E001FFFFFFFFFFFF
0010E001FFFFFFFFFFFF0000F001FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000
F000FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000FC00FFFFFFFFFFFF0000FC00
7FFFFFFFFFFF0000FE007FFFFFFFFFFFC000FE003FFFFFFFFFFFC000FF003FFF
FFFFFFFFC000FF001FFFFFFFFFFFC000FF801FFFFFFFFFFFC010FF801FFFFFFF
FFFFC010FFC007FFFFFFFFFF0010FFC007FFFFFFFFFF0010FFF003FFFFFFFFFF
0010FFF801FFFFFFFFFF0010FFFC01FFFFFFFFFF0070FFFC01FFFFFFFFFF0070
FFFE00FFFFFFFFFE00F0FFFE007FFFFFFFFE00F0FFFF001FFFFFFFFE00F0FFFF
C00FFFFFFFFC01F0FFFFF00FFFFFFFFC01F0FFFFF807FFFFFFFC03F0FFFFFC03
FFFFFFF807F0FFFFFC007FFFFFF007F0FFFFFF803FFFFFC01FF0FFFFFFC00FFF
FF803FF0FFFFFFF00FFFFF807FF0FFFFFFFE01FFFE01FFF0FFFFFFFF803FE007
FFF0FFFFFFFF80000007FFF0FFFFFFFFF800001FFFF0FFFFFFFFFFC003FFFFF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
76 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -2 75 76 setcachedevice
75 0 0 78 0 -2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 75 def
/Height 78 def
/ImageMatrix [75 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000007FFFF8000000200000007FFFF8000000000000007FFFF8000000000000
007FFFF800000000FC000FFFFFFFF0001FE0FFC01FFFFFFFFC003FE0FFE03FFF
FFFFFC003FE0FFF03FFFFFFFFC003FE0FFF01FFFFFFFFC003FE0FFFC1FFFFFFF
FC007FE0FFFE0FFFFFFFFC007FE0FFFE0FFFFFFFFC007FE0FFFF0FFFFFFFFC00
7FE0FFFF87FFFFFFFC007FE0FFFF87FFFFFFFC007FE0FFFF81FFFFFFFC007FE0
FFFFC0FFFFFFFC007FE0FFFFC0FFFFFFFC007FE0FFFFF0FFFFFFFC007FE0FFFF
F87FFFFFF8007FE0FFFFF87FFFFFF8007FE0FFFFF83FFFFFF8007FE0FFFFFC1F
FFFFF801FFE0FFFFFC1FFFFFF801FFE0FFFFFE1FFFFFF801FFE0FFFFFF000000
0001FFE0FFFFFF0000000001FFE0FFFFFF0000000001FFE0FFFFFFC000000001
FFE0FFFFFFC3FFFFF801FFE0FFFFFFE1FFFFF801FFE0FFFFFFF0FFFFF801FFE0
FFFFFFF0FFFFF001FFE0FFFFFFF07FFFF001FFE0FFFFFFF87FFFF001FFE0FFFF
FFF87FFFF003FFE0FFFFFFFC1FFFF003FFE0FFFFFFFC0FFFF003FFE0FFFFFFFC
0FFFF003FFE0FFFFFFFF07FFF003FFE0FFFFFFFF87FFF003FFE0FFFFFFFF87FF
F003FFE0FFFFFFFFC3FFF003FFE0FFFFFFFFC1FFF003FFE0FFFFFFFFC1FFF003
FFE0FFFFFFFFE07FF003FFE0FFFFFFFFF07FE003FFE0FFFFFFFFF07FE003FFE0
FFFFFFFFFC3FE003FFE0FFFFFFFFFC3FE007FFE0FFFFFFFFFC1FE007FFE0FFFF
FFFFFE0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFF
FF87E007FFE0FFFFFFFFFF87E007FFE0FFFFFFFFFF81E007FFE0FFFFFFFFFFC0
E007FFE0FFFFFFFFFFC0E007FFE0FFFFFFFFFFF0E007FFE0FFFFFFFFFFF84007
FFE0FFFFFFFFFFF84007FFE0FFFFFFFFFFF80007FFE0FFFFFFFFFFFC000FFFE0
FFFFFFFFFFFC000FFFE0FFFFFFFFFFFE000FFFE0FFFFFFFFFFFF000FFFE0FFFF
FFFFFFFF000FFFE0FFFFFFFFFFFF000FFFE0FFFFFFFFFFFFC00FFFE0FFFFFFFF
FFFFC00FFFE0FFFFFFFFFFFFE00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFF
F00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFFF80FFFE0FFFFFFFFFFFFF81F
FFE0FFFFFFFFFFFFFC1FFFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
75 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
90 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/D/N196 -1 TZ
%%BeginResource: font E
10 dict begin
T3Defs
/FontType 3 def
/FontName /N241 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-72 
103 
195 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 25 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 90 2 setcachedevice
90 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 90 def
/Height 50 def
/ImageMatrix [90 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFE1FFFFFFE01FFC0FF87FFFFFE1FFFFFFE01FFC0FC03FFFFF00FFFFF
F8007FC0FC01FFFFF007FFFFE0383FC0FC01FFFFF007FFFFC0380FC0FE01FFFF
F007FFFFC07E07C0FE01FFFFF807FFFFC07F83C0FE01FFFFF807FFFFC07F83C0
FE00FFFFF803FFFFC07FC3C0FF80FFFFF803FFFFC07FE1C0FF80FFFFF803FFFF
C03FE1C0FF80FFFFFE03FFFFC03FE0C0FF803FFFFE00FFFFC03FF0C0FF803FFF
FE00FFFFC03FF0C0FFC03FFFFE00FFFFC01FF000FFC03FFFFF00FFFFE01FF800
FFC03FFFFF00FFFFE01FF800FFC01FFFFF007FFFE00FF800FFC01FFFFF007FFF
E00FF800FFE01FFFFF007FFFF80FFFC0FFE01FFFFF807FFFF80FFFC0FFE01FFF
FF807FFFF803FFC0FFE00FFFFF803FFFF803FFC0FFE00FFFFF803FFFFC03FFC0
FFF00FFFFF803FFFFC01FFC0FFF00FFFFFC03FFFFC01FFC0FFF00FFFFFC03FFF
FE01FFC0FFF007FFFFC01FFFFE01FFC0FFF007FFFFC01FFFFE00FFC0FFF807FF
FFC01FFFFE00FFC0FFF807FFFFE01FFFFF00FFC0FFF807FFFFE01FFFFF00FFC0
03F803FFFFE00FFFFF00FFC003FE03FFFFE00FFFFF007FC003FE00FFFFE003FF
FF007FC083FE00FFFFF803FFFF807FC081FE007FFFF801FFFF807FC081FE007F
FFF801FFFF807FC0E1FE007FFFF801FFFF807FC0E1FF003FFFF800FFFF807FC0
E0FF001FFFF8007FFF807FC0E0FF000FFFF8003FFF807FC0F0FF0003FFF8080F
FF807FC0F0FF0303FFF81C0FFF80FFC0F87F0381FFF81E07FF80FFC0F83E07F0
FFE03F83FF01FFC0F80E07F00FC03F80FE01FFC0FC0007F800007FE00003FFC0
FE001FFE0000FFF8000FFFC0FFC0FFFFE00FFFFF003FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
90 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 0 4 81 setcachedevice
4 0 0 81 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 4 def
/Height 81 def
/ImageMatrix [4 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
4 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
0 0 0 6 52 64 setcachedevice
52 0 0 58 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 52 def
/Height 58 def
/ImageMatrix [52 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF8FFFFFFFFF0FFF83FFFFFFFF0FFF80FFFFFFFF0FFF80FFFFFFFF0FFF807FF
FFFFF0FFF803FFFFFFF0FFF800FFFFFFF0FFFE003FFFFFF0FFFE001FFFFFF0FF
FE001FFFFFF0FFFE000FFFFFF0FFFE0403FFFFF0FFFE0401FFFFF0FFFE0600FF
FFF0FFFE07007FFFF0FFFF07807FFFF0FFFF03F03FFFF0FFFF03F80FFFF0FFFF
03F807FFF0FFFF03FC03FFF0FFFF03FE01FFF0FFFF03FF81FFF0FFFF03FFC0FF
F0FFFF03FFE0FFF0FFFF03FFE03FF0FFFF03FFF01FF0FFFF03FFF80FF0FFFF03
FFFE0FF0FFFF03FFFF0FF0FFFF03FFFF87F0FFFF03FFFF83F0FFFF03FFFF83F0
FFFF03FFFFC0F0FFFF03FFFFE0F0FFFF03FFFFF8F0FFFE03FFFFF870FFFE03FF
FFF870FFFE03FFFFFC30FFFE03FFFFFC30FFFE07FFFFFE30FFFE07FFFFFE10FF
F807FFFFFF10FFF807FFFFFF10FFF807FFFFFF00FFF007FFFFFE00FFF00FFFFF
FE00FFF00FFFFFFE00FFE00FFFFFFC00FFE00FFFFFE000FFC01FFFFF8000FF80
1FFFFF8000FF803FFFFF8000FE003FFFFF8010F800FFFFFF80100000FFFFFF80
100001FFFFFFC0308003FFFFFFC070E00FFFFFFFE3F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
52 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
0 0 0 5 25 31 setcachedevice
25 0 0 26 0 5 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 26 def
/ImageMatrix [25 0 0 -26 0 26]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF1FF80FFF0FF80FFF0FF80FFF1FF80FFF1FF80CFF1FC8087F1F80081F1E000
80310000C0310080F0000380FE001F80FE001F80FE001F80F0000380F0000380
C031008081F1E00081F1E00087F1F800CFF1FC80FFF1FF80FFF1FF80FFF0FF80
FFF0FF80FFF1FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 26 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 0 57 29 setcachedevice
57 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 29 def
/ImageMatrix [57 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFF1FFFF83F80F8FFFF1FFFF83F80F07FFE07FFC00780F07FFE07FFC1C380
F01FFE03FF81C180F81FFF03FF81F180F81FFF03FF81F080F81FFF03FF81F880
F81FFF03FFC0F880FC0FFFC1FFC0FC00FC0FFFC1FFC0FC00FC0FFFC1FFC07C80
FC0FFFC1FFF07F80FC0FFFC1FFF07F80FF07FFE0FFF07F80FF07FFE0FFF83F80
FF07FFE0FFF83F80FF03FFE0FFF83F801F03FFE07FF81F801F83FFF07FFC1F80
1F81FFF01FFC1F801F807FF01FFC1F8007803FF00FFC1F80C7821FE007FC1F80
C38207E0C1F83F80E38787E0E1F83F80F00FC001F0007F80F81FF807FE01FF80
F81FF807FE01FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
0 0 0 0 33 29 setcachedevice
33 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 33 def
/Height 29 def
/ImageMatrix [33 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC03FC1F80FC03FC1F80F800F80380F0F8206380E0F800618081FF00F08081FF
80F88081FFC0F88001FFC0F88001FFE07C0001FFE07C0001FFE07C8001FFE07F
8001FFE07F8080FFF83F8080FFF83F8080FFF83F8080FFF83F80E07FF81F80E0
7FFC1F80F07FFC1F80F83FFC1F80F83FF81F80FC0FF80F80FE03E00F80FF83E2
0F80FFC0071F80FFF80FFF80FFF80FFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
33 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
0 0 0 0 32 29 setcachedevice
32 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 29 def
/ImageMatrix [32 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F07F80FFF07F80FFC01E003F078C3E1F03803E0701C03FC301E07FE101E07FF1
C1E07FF1E3F03FF8E3F03FF8FFF03FF9FFF03FFFFFF03FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFC7FC0FE1C7FE0FE1C7FE0FC0C3FE0FC0C3FE07C0E1FE07E0
F07C00F0F87C30F0FC003801FF81FE07FF81FE07>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
0 0 0 20 38 49 setcachedevice
38 0 0 29 0 20 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 29 def
/ImageMatrix [38 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFFC1FCF8FFFFC1FCF07FFE007CF07FFE1C1CF01FFC1C0CF81FFC1F0CF81F
FC1F84F81FFC1FC4F81FFE07C4FC0FFE07E0FC0FFE07E0FC0FFE03E4FC0FFF03
FCFC0FFF03FCFF07FF03FCFF07FFC1FCFF07FFC1FCFF07FFC1FC1F03FFC0FC1F
83FFE0FC1F81FFE0FC1F81FFE0FC07807FE0FCC7803FE0FCC3820FC1FCE3870F
C1FCF0078003FCF81FF01FFCF81FF01FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 56 38 94 setcachedevice
38 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 38 def
/ImageMatrix [38 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF01FFE0FCFF01FFE0FCF8003F001CF01E1E070CE01E04070CC07F000784C0FF
C01F84C0FFF01FC4C0FFF007C401FFF807C001FFF807C000FFFC07E000FFFC07
E000FFFC07E000FFFC03F000FFFE03FC00FFFE03FC007FFE03FC007FFE01FCC0
7FFE01FCC07FFF01FCC07FFF01FCC01FFF01FCC01FFF00FCE01FFF00FCE01FFF
C0FCF00FFFC0FCF00FFFC0FCF007FFC07CF807FFC07CFC03FFC07CFF03FFC07C
FF81FF007CFFC07F107CFFC03E107CFFE000187CFFFC003FFCFFFF00FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 56 42 94 setcachedevice
42 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 38 def
/ImageMatrix [42 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F80FFC03FFC0F80FFC03FFC0E003E000FFC083E1C0F83FC003E080F80FC000F0
80FE07C000F803FF87C000F803FFC7C000FE03FFC3C080FE03FFE3C080FE03FF
E1C0E1FF03FFE1C0FFFF00FFF1C0FFFF00FFF1C0FFFF00FFF9C0FFFF80FFFFC0
FFFF80FFFFC0FFFF80FFFFC0FFFF807FFFC0FFFF807FFFC0FFFFC07FFFC0FFFF
C07FFFC0FFFFC07FFFC0EFFFC03FFFC0E3FFC03FFFC0E3FFE03FFFC0E3FFE03F
FFC0E1FFE01FE1C0E1FFE01FC000F0FFE01FC000F07FE00FC000F87FE00FC000
FC3FE00FC000FE0FE003F000FE07C001F000FF8000E000C0FFC003F001C0FFF0
0FFC07C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -85 103 25 setcachedevice
103 0 0 110 0 -85 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 103 def
/Height 110 def
/ImageMatrix [103 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000003FE800000000000000000000003FE800000000000
000000000001FEC00000000000000000000001FEC00000000000000000000001
FEE00000000000000000000000FEE00000000000000000000000FEF00FFFFFFF
FFFFFFE0000000FEFC0FFFFFFFFFFFFFFFE00000FEFE07FFFFFFFFFFFFFFFE00
007EFE01FFFFFFFFFFFFFFFE00007EFF00FFFFFFFFFFFFFFFFC0007EFF007FFF
FFFFFFFFFFFFF8001EFF807FFFFFFFFFFFFFFFFE001EFFC07FFFFFFFFFFFFFFF
FF001EFFF03FFFFFFFFFFFFFFFFFE01EFFF01FFFFFFFFFFFFFFFFFE00EFFF807
FFFFFFFFFFFFFFFFF00EFFF803FFFFFFFFFFFFFFFFF80EFFFC03FFFFFFFFFFFF
FFFFFC0EFFFE03FFFFFFFFFFFFFFFFFC06FFFF01FFFFFFFFFFFFFFFFFF06FFFF
00FFFFFFFFFFFFFFFFFF06FFFFC07FFFFFFFFFFFFFFFFF82FFFFC01FFFFFFFFF
FFFFFFFF82FFFFE01FFFFFFFFFFFFFFFFFC2FFFFF01FFFFFFFFFFFFFFFFFC2FF
FFF80FFFFFFFFFFFFFFFFFE0FFFFF807FFFFFFFFFFFFFFFFE0FFFFFC03FFFFFF
FFFFFFFFFFFEFFFFFC01FFFFFFFFFFFFFFFFFEFFFFFF01FFFFFFFFFFFFFFFFFE
FFFFFF81FFFFFFFFFFFFFFFFFEFFFFFFC07FFFFFFFFFFFFFFFFEFFFFFFC03FFF
FFFFFFFFFFFFFEFFFFFFE01FFFFFFFFFFFFFFFFEFFFFFFF00FFFFFFFFFFFFFFF
FEFFFFFFF00FFFFFFFFFFFFFFFFEFFFFFFFC0FFFFFFFFFFFFFFFFEFFFFFFFE07
FFFFFFFFFFFFFFFEFFFFFFFE01FFFFFFFFFFFFFFFEFFFFFFFF00FFFFFFFFFFFF
FFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF
C07FFFFFFFFFFFFFFEFFFFFFFFF03FFFFFFFFFFFFFFEFFFFFFFFF01FFFFFFFFF
FFFFFEFFFFFFFFF807FFFFFFFFFFFFFEFFFFFFFFFC03FFFFFFFFFFFFFEFFFFFF
FFFC03FFFFFFFFFFFFFEFFFFFFFFFE01FFFFFFFFFFFFFEFFFFFFFFFF01FFFFFF
FFFFFFFEFFFFFFFFFE00FFFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFF
FFFFFC007FFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFFFFFFF8007FFF
FFFFFFFFFEFFFFFFFFF000FFFFFFFFFFFFFEFFFFFFFFC000FFFFFFFFFFFFFEFF
FFFFFFC000FFFFFFFFFFFFFEFFFFFFFF8001FFFFFFFFFFFFFEFFFFFFFF8003FF
FFFFFFFFFFFEFFFFFFFF0007FFFFFFFFFFFFFEFFFFFFFE0007FFFFFFFFFFFFFE
FFFFFFFE0007FFFFFFFFFFFFFEFFFFFFFC001FFFFFFFFFFFFFFEFFFFFFF0003F
FFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFF
FEFFFFFFE000FFFFFFFFFFFFFFFEFFFFFFC000FFFFFFFFFFFFFFFEFFFFFF8001
FFFFFFFFFFFFFFFEFFFFFF8001FFFFFFFFFFFFFFFEFFFFFF8007FFFFFFFFFFFF
FFFEFFFFFF000FFFFFFFFFFFFFFFFEFFFFFC001FFFFFFFFFFFFFFFFEFFFFF800
1FFFFFFFFFFFFFFFFEFFFFF8001FFFFFFFFFFFFFFFFEFFFFF0003FFFFFFFFFFF
FFFFFEFFFFF0007FFFFFFFFFFFFFFFFEFFFFE001FFFFFFFFFFFFFFFFFEFFFFE0
01FFFFFFFFFFFFFFFFFEFFFFC001FFFFFFFFFFFFFFFFFEFFFF0003FFFFFFFFFF
FFFFFFE0FFFE0007FFFFFFFFFFFFFFFFC0FFFE0007FFFFFFFFFFFFFFFFC2FFFE
000FFFFFFFFFFFFFFFFFC2FFFC001FFFFFFFFFFFFFFFFF82FFF8001FFFFFFFFF
FFFFFFFF82FFF0007FFFFFFFFFFFFFFFFF06FFF0007FFFFFFFFFFFFFFFFC06FF
F000FFFFFFFFFFFFFFFFFC06FFC001FFFFFFFFFFFFFFFFFC0EFF8003FFFFFFFF
FFFFFFFFF80EFF8003FFFFFFFFFFFFFFFFF00EFF0003FFFFFFFFFFFFFFFFC00E
FE0007FFFFFFFFFFFFFFFF001EFE001FFFFFFFFFFFFFFFFF001EFC001FFFFFFF
FFFFFFFFFE007EFC003FFFFFFFFFFFFFFFF8007EF0003FFFFFFFFFFFFFFFC000
7EE0007FFFFFFFFFFFFFFE00007EC000FFFFFFFFFFFFFFC00000FEC000FFFFFF
FFFFFFFFC00000FEC001FFFFFFFFFFFFE0000000FE8000000000000000000000
01FE800000000000000000000001FE800000000000000000000001FE80000000
0000000000000001FE800000000000000000000003FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
103 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
75 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -75 85 5 setcachedevice
85 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 80 def
/ImageMatrix [85 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF0FFFFFFFFFFC007FFF8FFF01FFFFFFFFF80007FF8FFF00FFFFFFFFE00000F
F8FFF807FFFFFFFE000003F8FFF807FFFFFFFE000003F8FFFE03FFFFFFFE0000
00F8FFFE03FFFFFFFE001F8078FFFE00FFFFFFFE001F8038FFFE00FFFFFFFE00
3FE008FFFF007FFFFFFE003FF008FFFF007FFFFFFE003FF808FFFF007FFFFFFE
003FFC00FFFF807FFFFFFF803FFFC0FFFF803FFFFFFF803FFFC0FFFF803FFFFF
FF803FFFF8FFFF803FFFFFFF803FFFF8FFFFC03FFFFFFF803FFFF8FFFFC01FFF
FFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFE00F
FFFFFF801FFFF8FFFFE00FFFFFFFC01FFFF8FFFFE00FFFFFFFC01FFFF8FFFFF8
0FFFFFFFC01FFFF8FFFFF803FFFFFFC01FFFF8FFFFF803FFFFFFC00FFFF8FFFF
F803FFFFFFC00FFFF8FFFFFC01FFFFFFE00FFFF8FFFFFC01FFFFFFE00FFFF8FF
FFFC01FFFFFFE00FFFF8FFFFFE01FFFFFFE00FFFF8FFFFFE00FFFFFFE007FFF8
FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FF
F8FFF800000000000007FFF8FFF800000000000003FFF8FFF800000000000003
FFF8FFFE00000000000003FFF8FFFF80000000000003FFF8FFFFE00000000000
03FFF8FFFFFF803FFFFFFE00FFF8FFFFFF803FFFFFFE00FFF8FFFFFF800FFFFF
FE00FFF8FFFFFFE00FFFFFFE00FFF8FFFFFFE00FFFFFFF007FF8FFFFFFE00FFF
FFFF007FF8FFFFFFE00FFFFFFF007FF8FFFFFFF007FFFFFF807FF8FFFFFFF007
FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF0
07FFFFFF803FF8FFFFFFF003FFFFFFC01FF8FFFFFFF803FFFFFFC01FF8FFFFFF
F803FFFFFFC01FF8FFFFFFF803FFFFFFC01FF81FFFFFF803FFFFFFE00FF81FFF
FFF803FFFFFFE00FF803FFFFF801FFFFFFE00FF800FFFFF801FFFFFFF80FF800
7FFFF801FFFFFFF803F8807FFFF801FFFFFFF803F8E03FFFFC01FFFFFFF803F8
E03FFFFC01FFFFFFFC03F8F00FFFFC01FFFFFFFC01F8F80FFFFC01FFFFFFFC01
F8F807FFFC00FFFFFFFC01F8FC03FFFC00FFFFFFFE00F8FE01FFFC00FFFFFFFE
00F8FF81FFFC00FFFFFFFF00F8FFC03FF800FFFFFFFF00F8FFF007F000FFFFFF
FF0078FFF0000000FFFFFFFF0078FFF8000000FFFFFFFF8038FFFF000000FFFF
FFFF8038FFFFC00001FFFFFFFFE038FFFFFC0003FFFFFFFFF038FFFFFF8007FF
FFFFFFFC08FFFFFF8007FFFFFFFFFC08>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
0 0 0 72 67 130 setcachedevice
67 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 67 def
/Height 58 def
/ImageMatrix [67 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE7FFFFFFF801FFE0FFE1FFFFFFE0003FE0FFE03FFFFFE00007E0FFE03FFFFF
E00007E0FFF01FFFFFE00001E0FFF01FFFFFE00FE0E0FFF01FFFFFE00FE020FF
F80FFFFFE01FE020FFF80FFFFFE01FF000FFF80FFFFFE01FFE00FFFE07FFFFE0
1FFF80FFFE07FFFFF81FFFE0FFFE07FFFFF81FFFE0FFFF03FFFFF81FFFE0FFFF
03FFFFF80FFFE0FFFF03FFFFF80FFFE0FFFF80FFFFF80FFFE0FFFF80FFFFF80F
FFE0FFFF80FFFFF80FFFE0FFFF807FFFFC0FFFE0FFFFC07FFFFC0FFFE0FFFFC0
7FFFFC0FFFE0FFFFC07FFFFC03FFE0FFFFE03FFFFE03FFE0FFFFE03FFFFE03FF
E0FFE00000000003FFE0FFE00000000001FFE0FFE00000000001FFE0FFF80000
000001FFE0FFFE0000000001FFE0FFFE0000000001FFE0FFFFF80FFFFF00FFE0
FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC03FF
FFE07FE0FFFFFC03FFFFE07FE0FFFFFC03FFFFE07FE0FFFFFE03FFFFE03FE0FF
FFFE03FFFFF03FE0FFFFFE03FFFFF03FE0FFFFFE01FFFFF03FE00FFFFE01FFFF
F00FE003FFFE01FFFFF80FE001FFFF01FFFFF80FE081FFFF01FFFFF80FE080FF
FF01FFFFFC07E0E0FFFF00FFFFFC07E0E07FFF00FFFFFC07E0F03FFF00FFFFFC
03E0F80FFE00FFFFFE03E0FC0FFE00FFFFFE03E0FF81FC00FFFFFF83E0FFC000
00FFFFFF81E0FFC00000FFFFFF81E0FFF00000FFFFFFC0E0FFFF0001FFFFFFE0
E0FFFFF803FFFFFFF8E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
67 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/E/N241 -1 TZ
%%BeginResource: font F
10 dict begin
T3Defs
/FontType 3 def
/FontName /N258 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-109 
145 
191 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 21 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 110 80 setcachedevice
110 0 0 80 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 110 def
/Height 80 def
/ImageMatrix [110 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF1FFFFFFFFFFFFFC7FFFFFFFFCFFF0FFFFFFFFFFFFFC3FFFFFFFFCFFF03FFF
FFFFFFFFFC3FFFFFFFFCFFF01FFFFFFFFFFFFC1FFFFFFFFCFFF01FFFFFFFFFFF
FC1FFFFFFFFCFFF00FFFFFFFFFFFFC0FFFFFFFFCFFF807FFFFFFFFFFFC03FFFF
FFFCFFF807FFFFFFFFFFFC01FFFFFFFCFFF803FFFFFFFFFFFC00FFFFFFFCFFF8
00FFFFFFFFFFFC007FFFFFFCFFF800FFFFFFFFFFFC007FFFFFFCFFF8007FFFFF
FFFFF8007FFFFFFCFFFE007FFFFFFFFFF8003FFFFFFCFFFE003FFFFFFFFFF800
0FFFFFFCFFFE001FFFFFFFFFF80007FFFFFCFFFE000FFFFFFFFFF80007FFFFFC
FFFE000FFFFFFFFFF80007FFFFFCFFFE0003FFFFFFFFF80203FFFFFCFFFE0003
FFFFFFFFF80381FFFFFCFFFE0001FFFFFFFFF80380FFFFFCFFFE0000FFFFFFFF
F80380FFFFFCFFFF0000FFFFFFFFF803C03FFFFCFFFF0080FFFFFFFFF803E03F
FFFCFFFF00E07FFFFFFFF803F01FFFFCFFFF00703FFFFFFFF803F01FFFFCFFFF
00700FFFFFFFE003F00FFFFCFFFF00780FFFFFFFE003F807FFFCFFFF007807FF
FFFFE003FE07FFFCFFFF007C07FFFFFFE003FF07FFFCFFFF007E03FFFFFFE003
FF03FFFCFFFF807E03FFFFFFE00FFF80FFFCFFFF807E01FFFFFFE00FFF80FFFC
FFFF807F80FFFFFFE00FFFC07FFCFFFF803FC0FFFFFFE00FFFC03FFCFFFF803F
E0FFFFFFE00FFFE03FFCFFFF803FE03FFFFFC00FFFF83FFCFFFF803FF01FFFFF
C00FFFF81FFCFFFF803FF01FFFFFC00FFFF81FFCFFFF803FF80FFFFFC00FFFFC
0FFCFFFF803FF807FFFFC00FFFFE0FFCFFFF803FFE07FFFFC01FFFFE0FFCFFFF
803FFF07FFFFC01FFFFF03FCFFFF803FFF03FFFF801FFFFF81FCFFFF803FFF03
FFFF801FFFFF81FCFFFF803FFF80FFFF801FFFFF80FCFFFF803FFFC07FFF801F
FFFFE0FCFFFF803FFFC07FFF801FFFFFE0FCFFFF803FFFE07FFF003FFFFFF0FC
FFFF803FFFF83FFF003FFFFFF07CFFFF803FFFF83FFF003FFFFFF07CFFFF803F
FFF81FFF003FFFFFF83CFFFF803FFFFC0FFF003FFFFFF83CFFFF803FFFFC0FFF
007FFFFFFC3CFFFF003FFFFE0FFE007FFFFFFC0CFFFF003FFFFF03FE007FFFFF
FE0CFFFF003FFFFF03FE007FFFFFFE0CFFFF003FFFFF01FE007FFFFFFE04FFFF
003FFFFF81F8007FFFFFFE04FFFF007FFFFF81F800FFFFFFFF84FFFF007FFFFF
E0F800FFFFFFFF84FFFE007FFFFFF0F800FFFFFFFF80FFFE007FFFFFF07000FF
FFFFFF80FFFE007FFFFFF07000FFFFFFFF80FFF8007FFFFFF83003FFFFFFFE00
FFF8007FFFFFF83003FFFFFFFE00FFF800FFFFFFFC3003FFFFFFFE00FFF000FF
FFFFFC0007FFFFFFFC00FFF000FFFFFFFC0007FFFFFFF000FFE000FFFFFFFE00
07FFFFFF8000FFC003FFFFFFFE0007FFFFFF0000FFC003FFFFFFFF8007FFFFFF
0000FF8007FFFFFFFF800FFFFFFF0000F80007FFFFFFFFC00FFFFFFF00040000
07FFFFFFFF800FFFFFFF000400000FFFFFFFFF800FFFFFFF800480001FFFFFFF
FF801FFFFFFF800480003FFFFFFFFFC01FFFFFFFE00CF000FFFFFFFFFFE01FFF
FFFFE03CF807FFFFFFFFFFF83FFFFFFFF0FCF807FFFFFFFFFFF83FFFFFFFF0FC
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
110 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 -27 145 126 setcachedevice
145 0 0 153 0 -27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 145 def
/Height 153 def
/ImageMatrix [145 0 0 -153 0 153]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000000000000000FFF8080000000000000000000000000
00000007FF808000000000000000000000000000000007FF80C0000000000000
00000000000000000007FF80E000000000000000000000000000000007FF80E0
00000000000000000000000000000001FF80F000000000000000000000000000
000001FF80F000000000000000000000000000000001FF80FC00000000000000
000000000000000001FF80FE00000000000000000000000000000000FF80FF00
7FFFFFFFFFFFFFFFFFFF0000000000FF80FF003FFFFFFFFFFFFFFFFFFF000000
00007F80FF801FFFFFFFFFFFFFFFFFFFFFC00000007F80FFC007FFFFFFFFFFFF
FFFFFFFFFF0000007F80FFC007FFFFFFFFFFFFFFFFFFFFFFF000007F80FFF007
FFFFFFFFFFFFFFFFFFFFFFFF00003F80FFF803FFFFFFFFFFFFFFFFFFFFFFFFC0
003F80FFF801FFFFFFFFFFFFFFFFFFFFFFFFC0003F80FFFC00FFFFFFFFFFFFFF
FFFFFFFFFFF0001F80FFFE007FFFFFFFFFFFFFFFFFFFFFFFFE001F80FFFF007F
FFFFFFFFFFFFFFFFFFFFFFFF801F80FFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFC0
0780FFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFF00780FFFFC00FFFFFFFFFFFFFFF
FFFFFFFFFFF00780FFFFE007FFFFFFFFFFFFFFFFFFFFFFFFF80380FFFFF003FF
FFFFFFFFFFFFFFFFFFFFFFFC0380FFFFF803FFFFFFFFFFFFFFFFFFFFFFFFFE03
80FFFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFF0180FFFFFF007FFFFFFFFFFFFFFF
FFFFFFFFFFC180FFFFFF003FFFFFFFFFFFFFFFFFFFFFFFFFC180FFFFFF003FFF
FFFFFFFFFFFFFFFFFFFFFFE080FFFFFF801FFFFFFFFFFFFFFFFFFFFFFFFFE080
FFFFFFC01FFFFFFFFFFFFFFFFFFFFFFFFFF080FFFFFFE00FFFFFFFFFFFFFFFFF
FFFFFFFFF080FFFFFFF007FFFFFFFFFFFFFFFFFFFFFFFFF800FFFFFFF001FFFF
FFFFFFFFFFFFFFFFFFFFF800FFFFFFFC00FFFFFFFFFFFFFFFFFFFFFFFFFF80FF
FFFFFE00FFFFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFE00FFFFFFFFFFFFFFFFFF
FFFFFFFF80FFFFFFFF007FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF803FFFFF
FFFFFFFFFFFFFFFFFFFF80FFFFFFFF801FFFFFFFFFFFFFFFFFFFFFFFFF80FFFF
FFFFC007FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF003FFFFFFFFFFFFFFFFFF
FFFFFF80FFFFFFFFF803FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF801FFFFFF
FFFFFFFFFFFFFFFFFF80FFFFFFFFFC01FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF
FFFC00FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFE007FFFFFFFFFFFFFFFFFFF
FFFF80FFFFFFFFFF001FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFC01FFFFFFF
FFFFFFFFFFFFFFFF80FFFFFFFFFFE00FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF
FFF007FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF007FFFFFFFFFFFFFFFFFFFF
FF80FFFFFFFFFFF003FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF801FFFFFFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFC01FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFF
FF007FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFFFF
80FFFFFFFFFFFF801FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFC00FFFFFFFFF
FFFFFFFFFFFF80FFFFFFFFFFFFC00FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
E00FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFF007FFFFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFC01FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFC00FFFFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFE007FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFF
003FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF80FF
FFFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFF801FFFFFFFFFFF
FFFFFFFF80FFFFFFFFFFFFFF0007FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFE00
03FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFE0001FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFE0001FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFC0000FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFF00000FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFF00000
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFE00000FFFFFFFFFFFFFFFFFF80FFFFFF
FFFFFFC00001FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFC00003FFFFFFFFFFFFFF
FFFF80FFFFFFFFFFFF800003FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF800007FF
FFFFFFFFFFFFFFFF80FFFFFFFFFFFF000007FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFC00001FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF800003FFFFFFFFFFFFFFFFF
FF80FFFFFFFFFFF800003FFFFFFFFFFFFFFFFFFF80FFFFFFFFFFF800007FFFFF
FFFFFFFFFFFFFF80FFFFFFFFFFF00000FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFF
E00000FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFC00001FFFFFFFFFFFFFFFFFFFF
80FFFFFFFFFFC00001FFFFFFFFFFFFFFFFFFFF80FFFFFFFFFFC00007FFFFFFFF
FFFFFFFFFFFF80FFFFFFFFFF00000FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFE00
001FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFFE00001FFFFFFFFFFFFFFFFFFFFF80
FFFFFFFFFC00001FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF800003FFFFFFFFFFF
FFFFFFFFFF80FFFFFFFFF800007FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF00000
7FFFFFFFFFFFFFFFFFFFFF80FFFFFFFFF00001FFFFFFFFFFFFFFFFFFFFFF80FF
FFFFFFC00001FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF800003FFFFFFFFFFFFFF
FFFFFFFF80FFFFFFFF000007FFFFFFFFFFFFFFFFFFFFFF80FFFFFFFF000007FF
FFFFFFFFFFFFFFFFFFFF80FFFFFFFF00000FFFFFFFFFFFFFFFFFFFFFFF80FFFF
FFFE00001FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFFC00001FFFFFFFFFFFFFFFFF
>
<FFFFFF80FFFFFFF000007FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFF000007FFFFF
FFFFFFFFFFFFFFFFFF80FFFFFFF00000FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF
E00001FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFFC00003FFFFFFFFFFFFFFFFFFFF
FFFF80FFFFFFC00003FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF800003FFFFFFFF
FFFFFFFFFFFFFFFF80FFFFFF000007FFFFFFFFFFFFFFFFFFFFFFFF80FFFFFF00
001FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFFC00001FFFFFFFFFFFFFFFFFFFFFFF
FF80FFFFFC00003FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFF800003FFFFFFFFFFF
FFFFFFFFFFFFFF80FFFFF000007FFFFFFFFFFFFFFFFFFFFFFFFF80FFFFE00000
FFFFFFFFFFFFFFFFFFFFFFFFF800FFFFE00000FFFFFFFFFFFFFFFFFFFFFFFFF8
00FFFFE00001FFFFFFFFFFFFFFFFFFFFFFFFF080FFFFC00007FFFFFFFFFFFFFF
FFFFFFFFFFF080FFFF000007FFFFFFFFFFFFFFFFFFFFFFFFE080FFFE00000FFF
FFFFFFFFFFFFFFFFFFFFFFE080FFFE00000FFFFFFFFFFFFFFFFFFFFFFFFFC180
FFFE00001FFFFFFFFFFFFFFFFFFFFFFFFFC180FFFC00003FFFFFFFFFFFFFFFFF
FFFFFFFF0380FFF800007FFFFFFFFFFFFFFFFFFFFFFFFE0380FFF800007FFFFF
FFFFFFFFFFFFFFFFFFFC0380FFF000007FFFFFFFFFFFFFFFFFFFFFFFF80780FF
C00001FFFFFFFFFFFFFFFFFFFFFFFFF00780FFC00003FFFFFFFFFFFFFFFFFFFF
FFFFF00780FF800003FFFFFFFFFFFFFFFFFFFFFFFFC01F80FF800007FFFFFFFF
FFFFFFFFFFFFFFFF001F80FF000007FFFFFFFFFFFFFFFFFFFFFFFC001F80FE00
000FFFFFFFFFFFFFFFFFFFFFFFF0003F80FC00001FFFFFFFFFFFFFFFFFFFFFFF
C0003F80FC00001FFFFFFFFFFFFFFFFFFFFFFFC0007F80FC00007FFFFFFFFFFF
FFFFFFFFFFFC00007F80F00000FFFFFFFFFFFFFFFFFFFFFFE000007F80E00000
FFFFFFFFFFFFFFFFFFFFFE0000007F80C00001FFFFFFFFFFFFFFFFFFFF800000
00FF80C00001FFFFFFFFFFFFFFFFFC0000000000FF80C00003FFFFFFFFFFFFFF
FFFC0000000001FF808000000000000000000000000000000001FF8080000000
00000000000000000000000007FF808000000000000000000000000000000007
FF808000000000000000000000000000000007FF808000000000000000000000
000000000007FF80800000000000000000000000000000000FFF80>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
145 153 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
133 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -82 28 27 setcachedevice
28 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 109 def
/ImageMatrix [28 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF0
83FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF083FFFFF080000000
80000000800000008000000080000000C0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
0 0 0 -76 51 -72 setcachedevice
51 0 0 4 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 4 def
/ImageMatrix [51 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 0 42 38 setcachedevice
42 0 0 38 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 38 def
/ImageMatrix [42 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFF81FC0C3FFFFF81FC001FFFFE007C000FFFFC1C3C000FFFF01C1C000FF
FF01E1C0C0FFFF01F040C0FFFF03F040C07FFF01FC40C07FFF01FC00C07FFF01
FC00E07FFF01FE00E01FFF01FE00E01FFF01FE00E01FFF01FF00F01FFF01FFC0
F01FFE01FFC0F00FFC01FFC0F00F8003FFC0F00F8007FFC0F800003FFFC0F800
07FFFFC0F80007FFFFC0F8001FFFFFC0F8040FFFFFC0FC070FFFFFC0FC0781FF
FFC0FC03F0FFFFC0FC03F07FFFC0FC03F83F87C0FF03FC1C03C0FF03FE1C03C0
FF01FF0001C0FF01FFE001C0FF01FFE001C0FF81FFF801C0FF81FFFF07C0FFC3
FFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
0 0 0 -13 27 96 setcachedevice
27 0 0 109 0 -13 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 27 def
/Height 109 def
/ImageMatrix [27 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFE20FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00
FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC00FFFFFC0000000000
0000000000000000000000000000000000000020>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
27 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
149 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
0 0 0 -19 37 34 setcachedevice
37 0 0 53 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 53 def
/ImageMatrix [37 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000FFFFF880001FFFF8000007FFF801FE00FFF801FF00FFF800FFC07FF800FF
E03FF800FFE01FF800FFE01FF8E1FFF80FF8FFFFF80FF8FFFFFC0FF8FFFFFC0F
F8FFFFFC03F8FFFFFC03F8FFFFFC03F8FFFFFE03F8FFF01E03F8FFC00601F8FE
000001F8FC03C001F8FC07F801F8FC0FFC01F8F80FFE00F8F80FFF00F8F00FFF
00F8F00FFF80F8F00FFF8078F00FFF8078F00FFF8078F00FFFE078F00FFFE078
F007FFE038F007FFE038F807FFE038F807FFF038F807FFF038F803FFF008F803
FFF008FC03FFF008FC03FFF808FE01FFF808FE01FFF800FE00FFF800FF80FFF8
00FFC03FF800FFE03FF800FFF01FF000FFF80FF000FFF807E000FFFE000180FF
FF8003F8FFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 109 31 150 setcachedevice
31 0 0 41 0 109 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 31 def
/Height 41 def
/ImageMatrix [31 0 0 -41 0 41]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F003FFFEF003FFFE80003FFE83F01FFE01F007FE01FE07FE01FF03FE81FF83FE
E1FFC0FEFFFFC0FEFFFFC0FEFFFFC07EFFFFE07EFFFFE07EFFC0E07EFE00007E
FC00003EF80F003EF03FC03EF07FE03EF07FF83EF07FFC1EE07FFC1EE07FFC1E
E07FFC1EE07FFC1EF03FFE0EF03FFE0EF03FFE0EF03FFE0EF80FFE02F80FFF02
FC0FFF02FE07FF02FE07FE02FE03FE00FF80FC00FFE0FC00FFF000E2FFFF03FE
FFFF03FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
31 41 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
83FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF0083FFFFFFFFFFFF00
81FFFFFFFFFFFE0081FFFFFFFFFFFE0081FFFFFFFFFFFE00C1FFFFFFFFFFFE08
C07FFFFFFFFFFC08C07FFFFFFFFFFC08C03FFFFFFFFFF008E01FFFFFFFFFE018
E01FFFFFFFFFE018F00FFFFFFFFFC038FC07FFFFFFFF8078FC00FFFFFFFC0078
FE003FFFFFF001F8FF0007FFFFC003F8FF8007FFFFC007F8FFF0007FF8001FF8
FFFC00000000FFF8FFFC00000000FFF8FFFF00000003FFF8FFFFE000001FFFF8
FFFFFF0001FFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
62 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 6 28 46 setcachedevice
28 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 40 def
/ImageMatrix [28 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000708000007080000030C0000030E0000030F1FFFE30F8FFFE30FE3FFE30
FE0FFE00FF07FF80FF83FF80FFC3FFF0FFE0FFF0FFF87FF0FFF81FF0FFFC0FF0
FFFE03F0FFFF03F0FFFF81F0FFFF80F0FFFF8070FFFFE030FFFFF030FFFFF030
FFFFF000E3FFF000C1FFF00080FFF80080FFF00080FFF00080FFF00081FFF030
81FFF030C7FFE030C3FF8070E3FF80F0F0FE01F0FE0003F0FE0003F0FF803FF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/F/N258 -1 TZ
%%BeginResource: font G
10 dict begin
T3Defs
/FontType 3 def
/FontName /N279 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-42 
132 
214 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 70 dict begin
/.notdef {250 0 d0} bind def
/a1 {{
0 0 0 0 58 72 setcachedevice
58 0 0 72 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 58 def
/Height 72 def
/ImageMatrix [58 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFFC001FFFFFFFFFFFFC000FFFFFFFFFFFFC000FFFFFFFFFFFFC0
00FFFFFFFFFFFFC000FFFFFFFFFFFFC0007FFFFFFFFFFFC0007FFFFFFFFFFFC0
007FFFFFFFFFFFC0807FFFFFFFFFFFC0803FFFFFFFFFFFC0803FFFFFFFFFFFC0
803FFFFFFFFFFFC0E03FFFFFFFFFFFC0E03FFFFFFFFFFFC0E00FFFFFFFFFFFC0
E00FFFFFFFFFFFC0E00FFFFFFFFFFFC0F00FFFFFFFFFFFC0F00FFFFFFFFFFFC0
F007FFFFFFFFFFC0F007FFFFFFFFFFC0F007C00FFFE03FC0F807C00FFFE03FC0
F8070001FF800FC0F80007F07F0383C0F80007F03E0381C0F8001FFC0607E1C0
FC003FFE0007E0C0FC003FFF8007F0C0FC00FFFFC007F0C0FC00FFFFE007F040
FC00FFFFE007F040FE00FFFFF007F840FE00FFFFF003F800FE00FFFFF803F800
FF80FFFFF803FC00FF80FFFFFE03FC00FF80FFFFFE03FC00FF803FFFFE00FC00
FF803FFFFE00FC00FF803FFFFE00FFC0FFC03FFFFF00FFC0FFC03FFFFF00FFC0
FFC01FFFFF007FC0FFC01FFFFF007FC0FFC01FFFFF007FC0FFE01FFFFF807FC0
FFE01FFFFF807FC0FFE00FFFFF803FC0FFE00FFFFF803FC0FFE00FFFFF803FC0
FFF00FFFFFC03FC0FFF00FFFFFC03FC0FFF007FFFFC01FC0FFF007FFFFC01FC0
FFF007FFFFC01FC0FFF807FFFFE01FC0FFF803FFFFE00FC0FFF803FFFFE00FC0
FFF803FFFFE00FC0FFFE03FFFFF80FC0FFFE03FFFFF80FC0FFFE00FFFFF803C0
FFFE00FFFFF803C0FFFE00FFFFF803C0FFFF00FFFFFC03C0FFFF00FFFFFC03C0
FFFF00FFFFFC03C0FFFF00FFFFFC03C0FFFF80FFFFFF0FC0FFFFC3FFFFFFFFC0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
58 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 11 36 83 setcachedevice
36 0 0 72 0 11 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 72 def
/ImageMatrix [36 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF01FFF0FFFC007FF0FFE0003FF0FFE07C1FF0FFE3FE1FF0FFFFFE07F0FFFF
FE07F0FFFFFE03F0FFFFFE03F0FFFFFE03F0FFFFFE03F0FFFFFC03F0FFFFF007
F0FFFF0007F0FFF00007F0FF80001FF0FF80003FF0FC00007FF0F80007FFF0F0
0007FFF0E0003FFFF0E003FFFFF0E00FFFFFF0C01FFFFFF0C07FFFFFF0C07FFF
FFF0C0FFFFFFF000FFFFFFF001FFFFFFF001FFFFFFF001FFFFFFF001FFFFFFF0
01FFFFFFF0C1FFFFFFF0C1FFFFFFF0C1FFFFFFF0C1FFFFFFF0C0FFFFFFF0C0FF
FFFFF0E0FFFFFFF0E0FFFFFFF0E0FFFFFFF0E07FFFFFF0E07FFFFFF0F01FFFFF
F0F01FFFFFF0F81FFFFFF0F81FFFFFF0FC0FFFFFF0FC07FFFFF0FF07FFFFF0FF
03FFFFF0FF83FFFFF0FFC1FFFFF0FFC1FFFFF0FFC07FFFF0FFE03FFFF0FFF01F
FFF0FFFC1FFFF0FFFE0FFFF0FFFF07FFF0FFFF010070FFFF800000FFFFF00000
FFFFFC0000FFFFF80010FFFFF8FFF0FFFFF8FFF0FFFFF8FFF0FFFFF8FFF0FFFF
F8FFF0FFFFF8FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 78 45 setcachedevice
78 0 0 45 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 45 def
/ImageMatrix [78 0 0 -45 0 45]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000003F000003E000000000003F000003E000000000003F000003E0000000000
03F000003E000000FC00FFFFC00FFFF800FCFE01FFFFE01FFFFE03FCFE01FFFF
E01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01F
FFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE
03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FC
FE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01
FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFF
E01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01F
FFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE
03FCFE01FFFFE01FFFFE03FCFE00FFFFE00FFFFE03FCFE00FFFFE00FFFFE03FC
FE00FFFFE00FFFFE03FCFE003FFFE007FFFE03FCFE003FFFE007FFFE03FCFE00
3FFFE007FFFE03FCFE001FFFC003FFF807FCFE010FFFC020FFF807FCF80107FF
C0207FF807FC000183FF80383FF007FC0001C07E00FC0FE00FFC0001E07E01FE
0FE01FFC0001FC0007FF8000FFFCFE01FF003FFFF003FFFCFE01FF003FFFF003
FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 45 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
0 0 0 -1 47 47 setcachedevice
47 0 0 48 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 48 def
/ImageMatrix [47 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFE03EFFE007FFE03EFF00007FC01EF803F83F800EE003F8070006C007
FE0703C6C00FFFC003C0C01FFFC007F0001FFFE007F0007FFFF007F0007FFFF0
07F0007FFFF007F0007FFFF807F0007FFFF807F0007FFFF807F0C01FFFF807F0
C01FFFF807F0C00FFFF807FEC007FFF807FEE007FFF807FEF007FFF807FEF801
FFF807FEF8007FF807FEFF001FF807FEFFC000F807FEFFF000F807FEFFFF0000
07FEFFFFF80007FEFFFFF80007FEFFFFFFF807FEFFFFFFF807FEFFFFFFF807FE
FFFFFFF807FEFC0FFFF807FEF807FFF807FEF003FFF807FEF003FFF007FEF003
FFF00FFEF003FFF00FFEF003FFE01FFEF003FFE01FFEF007FFC01FFEF80FFF00
7FFEFC1FFF01FFFEFF03FC03FFFEFFC0001FFFFEFFC0001FFFFEFFFC00FFFFFE
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
84 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 2 50 45 setcachedevice
50 0 0 43 0 2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 43 def
/ImageMatrix [50 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00001FF800000000001FF800000000001FF800000000001FF8000000F800FFFE
000FC0FF00FFFF007FC0FFC1FFFF00FFC0FFE0FFFE01FFC0FFE0FFFC01FFC0FF
F07FFC01FFC0FFF87FF803FFC0FFFC7FF807FFC0FFFF1FF01FFFC0FFFF0FC01F
FFC0FFFF07C01FFFC0FFFF83803FFFC0FFFFC3007FFFC0FFFFE300FFFFC0FFFF
F000FFFFC0FFFFF001FFFFC0FFFFF001FFFFC0FFFFF007FFFFC0FFFFE007FFFF
C0FFFFE00FFFFFC0FFFFE00FFFFFC0FFFFC007FFFFC0FFFF8001FFFFC0FFFF00
01FFFFC0FFFF0070FFFFC0FFFF01F8FFFFC0FFFC03F87FFFC0FFF803FC3FFFC0
FFF803FC3FFFC0FFF007FE1FFFC0FFE00FFF07FFC0FFE01FFF07FFC0FFC01FFF
01FFC0FF001FFF00FFC0FE001FFE000FC0000007FC000040000007FC00004000
0007FC000040000007FC000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 0 21 49 setcachedevice
21 0 0 49 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 21 def
/Height 49 def
/ImageMatrix [21 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF03F8FF03F8FC01F8F81C38F81C38F01E18F01F08F01F88F01F88F80FC0F80F
C0F807C0FC07C0FC07F8FC07F8FF03F8FF03F8FF01F8FF81F8FF81F8FF81F81F
C0781FC07807C078C7C038C7E038E3E038E3E038E1E038F0E038F80078FC01F8
FF03F8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFC38FFF0
18FFF018FFF008FFF008FFF008FFFC08FFFE18>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
21 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 0 26 99 setcachedevice
26 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 99 def
/ImageMatrix [26 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0800000408000000080000000
80000000C0000040C0000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
0 0 0 -21 61 -15 setcachedevice
61 0 0 6 0 -21 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 6 def
/ImageMatrix [61 0 0 -6 0 6]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000000000008800000000000000800000000000000000000000000000000
00000000000000008000000000000008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 6 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
0 0 0 -62 62 12 setcachedevice
62 0 0 74 0 -62 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 74 def
/ImageMatrix [62 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE7FFFFFFFFFFCFFFE3FFFFFFFFFFCFFFE0FFFFFFFFFFCFFFE07FFFFFFFFFC
FFFE07FFFFFFFFFCFFFE01FFFFFFFFFCFFFE00FFFFFFFFFCFFFE007FFFFFFFFC
FFFF001FFFFFFFFCFFFF0007FFFFFFFCFFFF0007FFFFFFFCFFFF0003FFFFFFFC
FFFF0001FFFFFFFCFFFF0000FFFFFFFCFFFF00007FFFFFFCFFFF00001FFFFFFC
FFFF00C01FFFFFFCFFFF00E00FFFFFFCFFFF00F807FFFFFCFFFF00F803FFFFFC
FFFF80FC01FFFFFCFFFF80FF007FFFFCFFFF80FF807FFFFCFFFF807FC03FFFFC
FFFF807FE01FFFFCFFFF807FE00FFFFCFFFF807FF00FFFFCFFFF807FFC07FFFC
FFFF807FFE07FFFCFFFF807FFF01FFFCFFFF807FFF80FFFCFFFF807FFF807FFC
FFFF807FFFC03FFCFFFF807FFFF03FFCFFFF807FFFF83FFCFFFF807FFFFC1FFC
FFFF807FFFFC07FCFFFF807FFFFC07FCFFFF807FFFFE03FCFFFF807FFFFF01FC
FFFF807FFFFFC1FCFFFF807FFFFFE1FCFFFF807FFFFFF0FCFFFF807FFFFFF0FC
FFFF007FFFFFF07CFFFF007FFFFFF87CFFFF007FFFFFFC7CFFFF007FFFFFFC1C
FFFF007FFFFFFF1CFFFF007FFFFFFF0CFFFF00FFFFFFFF0CFFFF00FFFFFFFF8C
FFFF00FFFFFFFF8CFFFE00FFFFFFFFC4FFFE00FFFFFFFFC4FFFE00FFFFFFFFC4
FFFC00FFFFFFFFC0FFFC00FFFFFFFFC0FFFC01FFFFFFFFC0FFFC01FFFFFFFF80
FFF001FFFFFFFF80FFE001FFFFFFFF00FFE007FFFFFFF800FFC007FFFFFF0000
FFC007FFFFFF0000FF800FFFFFFF0000FF001FFFFFFF0000F0001FFFFFFF0000
00001FFFFFFF000400003FFFFFFFC00400007FFFFFFFC00CE001FFFFFFFFE01C
F00FFFFFFFFFE0FCF00FFFFFFFFFE0FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 -62 29 -31 setcachedevice
29 0 0 31 0 -62 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 31 def
/ImageMatrix [29 0 0 -31 0 31]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8C7F87F8881F87C00
807878008078780080387000E0084018E0000018FE0001F8FF8007F8FFF03FF8
FF8007F8FE0001F8E000001880084000803870008078780081F87C00C7F87F88
C7F87F88FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 31 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
71 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -54 24 45 setcachedevice
24 0 0 99 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 24 def
/Height 99 def
/ImageMatrix [24 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8FFFFF0FFFFC0FFFF81FFFF07FFFF0FFFFE1FFFFC1FFFF01FFFE03FFFE0
7FFFE07FFFC1FFFF83FFFF83FFFF03FFFF07FFFF07FFFC07FFFC0FFFF80FFFF8
0FFFF81FFFF81FFFF01FFFF07FFFF07FFFE07FFFE07FFFE07FFFE07FFFC0FFFF
C0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFF00FFFF01FFFF01FFFF01FFFF01FF
FF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01
FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFFC0FFFFC0FFFFC0FFFFC0FFFF
C0FFFFC0FFFFC0FFFFE07FFFE07FFFE07FFFE07FFFF07FFFF07FFFF01FFFF01F
FFF81FFFF80FFFF80FFFFC0FFFFC07FFFC07FFFF07FFFF03FFFF83FFFF83FFFF
C1FFFFC07FFFE07FFFE03FFFF03FFFFC1FFFFE1FFFFE0FFFFF07FFFF81FFFFC1
FFFFF0FFFFF8FFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
24 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -24 37 23 setcachedevice
37 0 0 47 0 -24 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 47 def
/ImageMatrix [37 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF800FFFF8FF800FFFF8FE0000FFF8F03FF03FF8E03FF007F8C1FFFC03F883FF
FF81F887FFFFC1F881FFFFE0F8803FFFE0F8801FFFE038801FFFF038801FFFF0
38801FFFF038C01FFFF018C01FFFF018C01FFFF018F03FFFE018FFFFFFC018FF
FFFFC018FFFFFC0018FFFF800038FFFC000038FFE0000038FFC00000F8FFC000
01F8FF800003F8FF80000FF8FF80000FF8FF0000FFF8FF003FFFF8FF007FFFF8
FF00FFF818FF83FFF000FF83FFF000FF83FFF000FF80FFF000FF80FFF000FFC0
FFF800FFE07FFF00FFE07FFF00FFE01FFF00FFF803F808FFFE03F818FFFF8000
F8FFFFF003F8FFFFF003F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
33 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -54 24 45 setcachedevice
24 0 0 99 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 24 def
/Height 99 def
/ImageMatrix [24 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF87FFFF83FFFFC1FFFFE0FFFFF0FFFFF83FFFF81FFFF80FFFFE07FFFF07
FFFF07FFFF83FFFFC0FFFFC0FFFFC07FFFE07FFFE07FFFE03FFFF83FFFF81FFF
F81FFFFC1FFFFC1FFFFC0FFFFE0FFFFE0FFFFE03FFFE03FFFE03FFFE03FFFF01
FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF00FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FF
FF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF01FFFF01FFFF01FFFF01
FFFF01FFFF01FFFF01FFFE03FFFE03FFFE03FFFE03FFFE0FFFFE0FFFFC0FFFFC
0FFFFC1FFFF81FFFF81FFFF83FFFE03FFFE03FFFE07FFFC07FFFC0FFFFC0FFFF
83FFFF03FFFF07FFFE07FFFE0FFFF81FFFF83FFFF03FFFE0FFFFC1FFFFC3FFFF
87FFFF8FFFFF8FFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
24 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
47 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 0 46 67 setcachedevice
46 0 0 67 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 67 def
/ImageMatrix [46 0 0 -67 0 67]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF0FFFCFFFFFFE03FFCFFFFFFE03FFCFFFFFFE03FFCFFFFFFE00FFCFFFF
FFE00FFCFFFFFFE00FFCFFFFFFF00FFCFFFFFFF007FCFFFFFFF007FCFFFFFFF0
07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF803FCFFFFFFF803FCFFFFFFF803FC
FFFFFFFC03FCFFFFFFFC03FCFFFFFFFC01FCFFFFFFFC01FCFC3FFFFC01FCFC3F
FFFE01FCF00FFFFE01FCF007FFFE00FCF007FFFE00FCF807FFFE00FCF807FFFF
80FCF807FFFF80FCF803FFFF803CFC03FFFF803CFC03FFFF803CFC03FFFFC03C
FC01FFFFC01CFC01FFFFC01CFE01FFFFC01CFE01FFFFE01CFE01FFFFE01CFE00
FFFFE00CFE00FFFFE00CFF80FFFFE00CFF80FFFFF00CFF80FFFFF00CFF803FFF
F004FF803FFFF004FFC03FFFF004FFC03FFFF804FFC03FFFF804FFC01FFFF800
FFC01FFFF8001FE01FFFF8001FE01FFFFE001FE01FFFFE001FE00FFFFE000FF0
0FFFFE000FF007FFFE008FF007FFFF0083F003FFFF0083F003FFFF00E3F000FF
FF00E3F0087FFE00E1F0083FFE00E0F00C0FFE00F0601E01F804F8603F81F80C
FC00FFF0001CFE03FFFC01FCFE03FFFC01FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 67 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
0 0 0 -19 42 13 setcachedevice
42 0 0 32 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 32 def
/ImageMatrix [42 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC1FFFC3FFC0FC1FFFC3FFC0F80FFF01FFC0F80FFF01FFC0F807FE01FFC0FC07
FE01FFC0FC07FE01FFC0FF07FE03FFC0FF03FE03FFC0FF83FE03FFC0FF83FE03
FFC0FF83FE07FFC0FFC1FE07FFC0FFC1FE07FFC0FFE1FE07FFC0FFE1FE07FFC0
FFE1FE07FFC0FFE07E07FFC0FFF07F07FFC0FFF07F07FFC0FFFC7F07FFC0FFFC
7F07FFC01FFC3F07FFC01FFC3F07FFC003FE3FC7FFC0C3FE3FC7FFC0E0FE3FC7
FFC0F000000001C0F00000000040F80000000000FC0000000000FF8000000040
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 0 26 99 setcachedevice
26 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 99 def
/ImageMatrix [26 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC40FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000800000000000000000000000
000000008000004080000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
0 0 0 11 61 93 setcachedevice
61 0 0 82 0 11 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 82 def
/ImageMatrix [61 0 0 -82 0 82]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000000000008000000000000000000000000000000000000000000000000
8000000000000008FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFE08FFFFFFFFFFFFF800FFFFFFFFFFFFF800
FFFFFFFFFFFFE000FFFFFFFFFFFF0008FFFFFFFFFFFC0008FFFFFFFFFFE00078
FFFFFFFFFF8001F8FFFFFFFFFF800FF8FFFFFFFFFE003FF8FFFFFFFFF000FFF8
FFFFFFFFC000FFF8FFFFFFFE0007FFF8FFFFFFF8001FFFF8FFFFFFF800FFFFF8
FFFFFFE003FFFFF8FFFFFF000FFFFFF8FFFFFC000FFFFFF8FFFFE0007FFFFFF8
FFFF8001FFFFFFF8FFFF800FFFFFFFF8FFFE003FFFFFFFF8FFF000FFFFFFFFF8
FFC000FFFFFFFFF8FE0007FFFFFFFFF8F8001FFFFFFFFFF8F800FFFFFFFFFFF8
E003FFFFFFFFFFF8800FFFFFFFFFFFF8000FFFFFFFFFFFF8003FFFFFFFFFFFF8
0007FFFFFFFFFFF88007FFFFFFFFFFF8E001FFFFFFFFFFF8FC003FFFFFFFFFF8
FC000FFFFFFFFFF8FF8003FFFFFFFFF8FFE0007FFFFFFFF8FFF8007FFFFFFFF8
FFFF001FFFFFFFF8FFFFC003FFFFFFF8FFFFC000FFFFFFF8FFFFF8003FFFFFF8
FFFFFE0007FFFFF8FFFFFF8007FFFFF8FFFFFFF001FFFFF8FFFFFFFC003FFFF8
FFFFFFFC000FFFF8FFFFFFFF8003FFF8FFFFFFFFE0007FF8FFFFFFFFF8007FF8
FFFFFFFFFF001FF8FFFFFFFFFFC003F8FFFFFFFFFFC000F8FFFFFFFFFFF80038
FFFFFFFFFFFE0008FFFFFFFFFFFF8008FFFFFFFFFFFFF000FFFFFFFFFFFFFC00
FFFFFFFFFFFFFC00FFFFFFFFFFFFFF88>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 82 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
79 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 30 55 97 setcachedevice
55 0 0 67 0 30 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 67 def
/ImageMatrix [55 0 0 -67 0 67]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE007FFFFF
FFFFFE007FFFFFFFFFFE007FFFFFFFFFFE807FFFFFFFFFFE803FFFFFFFFFFE80
3FFFFFFFFFFE803FFFFFFFFFFEE03FFFFFFFFFFEE03FFFFFFFFFFEE00FFFFFFF
FFFEE00FFFFFFFFFFEE00FFFFFFFFFFEF00FFFFFFFFFFEF00FFFFFFFFFFEF007
FFFFFFFFFEF007FFFFFFFFFEF007801FFF80FEF807801FFF80FEF8060003FE00
7EF8000FE0F80C3EF8000FE0700C1EF8001FF8201E0EFC003FFC001F0EFC00FF
FE001F8EFC00FFFF801F8EFC00FFFFC01F82FC00FFFFC01F82FE00FFFFC01FE2
FE00FFFFE00FE0FE00FFFFE00FE0FE00FFFFE00FF0FF80FFFFF00FF0FF80FFFF
F00FF0FF803FFFF007F0FF803FFFF007FEFF803FFFF007FEFFC03FFFF807FEFF
C03FFFF807FEFFC01FFFF803FEFFC01FFFF803FEFFC01FFFF803FEFFE01FFFFE
03FEFFE01FFFFE03FEFFE00FFFFE00FEFFE00FFFFE00FEFFE00FFFFE00FEFFF0
0FFFFF00FEFFF00FFFFF00FEFFF007FFFF007EFFF007FFFF007EFFF007FFFF00
7EFFF807FFFF807EFFF803FFFF803EFFF803FFFF803EFFF803FFFF803EFFFE03
FFFFC03EFFFE03FFFFC03EFFFE00FFFFC03EFFFE00FFFFC03EFFFE00FFFFE03E
FFFF00FFFFF87EFFFF87FFFFFFFEFFFF87FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 67 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
100 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 42 32 105 setcachedevice
32 0 0 63 0 42 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 63 def
/ImageMatrix [32 0 0 -63 0 63]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE07FFFFF000FFFFF000FFFFE1F87FFFE7FC3FFFE7FC3FFFFFFC1FFFFFFC1F
FFFFFC1FFFFFF81FFFFFC01FFFFE001FFFE0001FFF00003FFF00007FFC0000FF
F00007FFE00007FFE0007FFFC007FFFFC01FFFFFC07FFFFF00FFFFFF00FFFFFF
01FFFFFF01FFFFFF01FFFFFF01FFFFFF03FFFFFF01FFFFFF01FFFFFF01FFFFFF
C1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFE0FFFFFFE0FFFFFFE0FFFFFFF07FFFFF
F07FFFFFF07FFFFFF81FFFFFFC0FFFFFFC0FFFFFFF0FFFFFFF87FFFFFF83FFFF
FFC1FFFFFFE07FFFFFF07FFFFFFC3FFFFFFE1FFFFFFE0C01FFFF0000FFFF8000
FFFFF000FFFFF001FFFFF1FFFFFFF1FFFFFFF1FFFFFFF1FFFFFFF1FF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 63 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 -19 132 121 setcachedevice
132 0 0 140 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 132 def
/Height 140 def
/ImageMatrix [132 0 0 -140 0 140]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000000000000FFF0800000000000000000000000000000
FFF08000000000000000000000000000007FF0C0000000000000000000000000
00007FF0C000000000000000000000000000007FF0E000000000000000000000
000000001FF0F000000000000000000000000000001FF0F00000000000000000
0000000000001FF0FC00000000000000000000000000001FF0FE000000000000
00000000000000000FF0FE00000000000000000000000000000FF0FF003FFFFF
FFFFFFFFFFFF0000000007F0FF801FFFFFFFFFFFFFFFFFFFC0000007F0FFC01F
FFFFFFFFFFFFFFFFFFFF000007F0FFC01FFFFFFFFFFFFFFFFFFFFFF00007F0FF
F007FFFFFFFFFFFFFFFFFFFFFE0003F0FFF003FFFFFFFFFFFFFFFFFFFFFE0003
F0FFF801FFFFFFFFFFFFFFFFFFFFFFC003F0FFFC00FFFFFFFFFFFFFFFFFFFFFF
F001F0FFFE00FFFFFFFFFFFFFFFFFFFFFFF801F0FFFF007FFFFFFFFFFFFFFFFF
FFFFFF01F0FFFF007FFFFFFFFFFFFFFFFFFFFFFF81F0FFFF001FFFFFFFFFFFFF
FFFFFFFFFF8070FFFFC00FFFFFFFFFFFFFFFFFFFFFFFC070FFFFE007FFFFFFFF
FFFFFFFFFFFFFFE030FFFFF007FFFFFFFFFFFFFFFFFFFFFFF030FFFFF803FFFF
FFFFFFFFFFFFFFFFFFFC30FFFFFC01FFFFFFFFFFFFFFFFFFFFFFFE30FFFFFC01
FFFFFFFFFFFFFFFFFFFFFFFE10FFFFFF007FFFFFFFFFFFFFFFFFFFFFFE10FFFF
FF003FFFFFFFFFFFFFFFFFFFFFFF10FFFFFF803FFFFFFFFFFFFFFFFFFFFFFF10
FFFFFFC01FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFE00FFFFFFFFFFFFFFFFFFFFF
FFF0FFFFFFE007FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFF001FFFFFFFFFFFFFFFF
FFFFFFF0FFFFFFFC01FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFC01FFFFFFFFFFFF
FFFFFFFFFFF0FFFFFFFE00FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFF007FFFFFFF
FFFFFFFFFFFFFFF0FFFFFFFF003FFFFFFFFFFFFFFFFFFFFFF0FFFFFFFF801FFF
FFFFFFFFFFFFFFFFFFF0FFFFFFFFC007FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF0
07FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF007FFFFFFFFFFFFFFFFFFFFF0FFFFFF
FFF803FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF801FFFFFFFFFFFFFFFFFFFFF0FF
FFFFFFFC00FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFE007FFFFFFFFFFFFFFFFFFF
F0FFFFFFFFFF007FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFC01FFFFFFFFFFFFFFF
FFFFF0FFFFFFFFFFE01FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFE00FFFFFFFFFFF
FFFFFFFFF0FFFFFFFFFFE007FFFFFFFFFFFFFFFFFFF0FFFFFFFFFFF003FFFFFF
FFFFFFFFFFFFF0FFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFC01FF
FFFFFFFFFFFFFFFFF0FFFFFFFFFFFF007FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFF
003FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFF803FFFFFFFFFFFFFFFFFF0FFFFFFFF
FFFF801FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFC01FFFFFFFFFFFFFFFFFF0FFFF
FFFFFFFFE00FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFF007FFFFFFFFFFFFFFFFF0
FFFFFFFFFFFFF001FFFFFFFFFFFFFFFFF0FFFFFFFFFFFFE000FFFFFFFFFFFFFF
FFF0FFFFFFFFFFFFC000FFFFFFFFFFFFFFFFF0FFFFFFFFFFFFC000FFFFFFFFFF
FFFFFFF0FFFFFFFFFFFFC0007FFFFFFFFFFFFFFFF0FFFFFFFFFFFF80003FFFFF
FFFFFFFFFFF0FFFFFFFFFFFF00003FFFFFFFFFFFFFFFF0FFFFFFFFFFFC00003F
FFFFFFFFFFFFFFF0FFFFFFFFFFFC00007FFFFFFFFFFFFFFFF0FFFFFFFFFFFC00
007FFFFFFFFFFFFFFFF0FFFFFFFFFFF80000FFFFFFFFFFFFFFFFF0FFFFFFFFFF
F00001FFFFFFFFFFFFFFFFF0FFFFFFFFFFF00001FFFFFFFFFFFFFFFFF0FFFFFF
FFFFE00007FFFFFFFFFFFFFFFFF0FFFFFFFFFFC00007FFFFFFFFFFFFFFFFF0FF
FFFFFFFFC0000FFFFFFFFFFFFFFFFFF0FFFFFFFFFF00001FFFFFFFFFFFFFFFFF
F0FFFFFFFFFF00003FFFFFFFFFFFFFFFFFF0FFFFFFFFFE00003FFFFFFFFFFFFF
FFFFF0FFFFFFFFFC00003FFFFFFFFFFFFFFFFFF0FFFFFFFFF800007FFFFFFFFF
FFFFFFFFF0FFFFFFFFF80001FFFFFFFFFFFFFFFFFFF0FFFFFFFFF80003FFFFFF
FFFFFFFFFFFFF0FFFFFFFFF00003FFFFFFFFFFFFFFFFFFF0FFFFFFFFC00003FF
FFFFFFFFFFFFFFFFF0FFFFFFFF800007FFFFFFFFFFFFFFFFFFF0FFFFFFFF8000
0FFFFFFFFFFFFFFFFFFFF0FFFFFFFF80000FFFFFFFFFFFFFFFFFFFF0FFFFFFFF
00001FFFFFFFFFFFFFFFFFFFF0FFFFFFFE00007FFFFFFFFFFFFFFFFFFFF0FFFF
FFFC00007FFFFFFFFFFFFFFFFFFFF0FFFFFFFC0000FFFFFFFFFFFFFFFFFFFFF0
FFFFFFF00000FFFFFFFFFFFFFFFFFFFFF0FFFFFFF00001FFFFFFFFFFFFFFFFFF
FFF0FFFFFFE00003FFFFFFFFFFFFFFFFFFFFF0FFFFFFC00007FFFFFFFFFFFFFF
FFFFFFF0FFFFFFC00007FFFFFFFFFFFFFFFFFFFFF0FFFFFF800007FFFFFFFFFF
FFFFFFFFFFF0FFFFFF00001FFFFFFFFFFFFFFFFFFFFFF0FFFFFF00003FFFFFFF
FFFFFFFFFFFFFFF0FFFFFC00007FFFFFFFFFFFFFFFFFFFFFF0FFFFFC00007FFF
FFFFFFFFFFFFFFFFFFF0FFFFF800007FFFFFFFFFFFFFFFFFFFFFF0FFFFF00000
FFFFFFFFFFFFFFFFFFFFFFF0FFFFF00001FFFFFFFFFFFFFFFFFFFFFFF0FFFFF0
0007FFFFFFFFFFFFFFFFFFFFFFF0FFFFE00007FFFFFFFFFFFFFFFFFFFFFFF0FF
FFC0000FFFFFFFFFFFFFFFFFFFFFFF80FFFF00000FFFFFFFFFFFFFFFFFFFFFFF
00FFFF00001FFFFFFFFFFFFFFFFFFFFFFF10FFFE00003FFFFFFFFFFFFFFFFFFF
FFFE10FFFE00003FFFFFFFFFFFFFFFFFFFFFFE10FFFC00007FFFFFFFFFFFFFFF
FFFFFFFC30FFF80001FFFFFFFFFFFFFFFFFFFFFFFC30FFF80001FFFFFFFFFFFF
FFFFFFFFFFF030FFF00001FFFFFFFFFFFFFFFFFFFFFFE070FFC00003FFFFFFFF
>
<FFFFFFFFFFFFFFC070FFC00007FFFFFFFFFFFFFFFFFFFFFFC1F0FF80000FFFFF
FFFFFFFFFFFFFFFFFF81F0FF80000FFFFFFFFFFFFFFFFFFFFFFC01F0FF00000F
FFFFFFFFFFFFFFFFFFFFF801F0FE00001FFFFFFFFFFFFFFFFFFFFFE003F0FC00
007FFFFFFFFFFFFFFFFFFFFF0003F0FC0000FFFFFFFFFFFFFFFFFFFFFF0007F0
FC0000FFFFFFFFFFFFFFFFFFFFFC0007F0F00001FFFFFFFFFFFFFFFFFFFFC000
07F0E00001FFFFFFFFFFFFFFFFFFFE000007F0C00003FFFFFFFFFFFFFFFFFF80
00000FF0C00007FFFFFFFFFFFFFFFE000000000FF0C00007FFFFFFFFFFFFFFFE
000000001FF08000000000000000000000000000001FF0800000000000000000
0000000000007FF08000000000000000000000000000007FF080000000000000
00000000000000007FF08000000000000000000000000000007FF08000000000
00000000000000000000FFF0>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
132 140 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
114 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 0 38 50 setcachedevice
38 0 0 50 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFF81FCC3FFFF81FC81FFFE003C80FFFC0E1C80FFFC0E1C80FFF80F0CC0FF
F80F84C0FFF80FC4C03FF80FC4C03FFC07E0C03FFC07E0E03FFC03E0E01FFE03
E0E01FFE03FCE01FFE03FCF01FFF81FCF01FFF81FCF00FFF81FCF00FFF80FCF0
0FFFC0FCF80FFFC0FCF80FFFC0FCF807FFC0FCF807FFC0FCF803FFE0FCFE03FF
E0FCFE03FFE0FCFE00FFE0FCFE003FC0FCFE000FC0FCFF020001FCFF038003FC
FF00F00FFCFF00FFFFFCFF00FFFFFCFF80FFFFFCFF807FFFFCFF807FFFFCFF80
7FFFFCFFC07FFFFCFFC07FFFFCFFC03FFFFCFFC03FFFFCFFC03FFFFCFFE03FFF
FCFFE03FFFFCFE001FFFFCFE001FFFFCFE001FFFFCFFF81FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 7 39 54 setcachedevice
39 0 0 47 0 7 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 47 def
/ImageMatrix [39 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC00000FFFC000000FFF0000000FFC0000000FF000FFFFEFF00FFFFFEFE03
FFFFFEFC1FFFFFFEF81FFFFFFEF03FFFFFFEF07FFFFFFEF0FFFFFFFEC0FFFFFF
FEC1FFFFFFFE81FFFFFFFE81FFFFFFFE87FFFFFFFE87FFFFFFFE07FFFFFFFE0F
FFFFFFFE0FFFFFFFFE00000000000000000000000000000000000000000FFFFF
FFFE0FFFFFFFFE07FFFFFFFE07FFFFFFFE87FFFFFFFE87FFFFFFFE81FFFFFFFE
81FFFFFFFEC0FFFFFFFEC0FFFFFFFEF0FFFFFFFEF07FFFFFFEF83FFFFFFEF81F
FFFFFEFC03FFFFFEFE00FFFFFEFF00FFFFFEFFC00FFFFEFFF0000000FFF00000
00FFFC000000FFFFC00000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 0 62 52 setcachedevice
62 0 0 52 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 52 def
/ImageMatrix [62 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC00FFCFFE1FFFFFF8000FCFFE0FFFFFF80003CFFE0FFFFFF80003C
FFE03FFFFF807C0CFFF03FFFFF80FC04FFF01FFFFF80FC04FFF01FFFFF80FE00
FFF01FFFFF80FF80FFF81FFFFF80FFFCFFF80FFFFF80FFFCFFF80FFFFFC0FFFC
FFF80FFFFFC07FFCFFFE07FFFFC07FFCFFFE07FFFFC07FFCFFFE07FFFFC07FFC
FFFF07FFFFC07FFCFFFF03FFFFC07FFCFFFF03FFFFC07FFCFFFF03FFFFE03FFC
FFFF80FFFFE03FFCFFFF80FFFFE03FFCFFFF80FFFFE03FFCFFE0000000003FFC
FFE0000000001FFCFFF0000000001FFCFFF8000000001FFCFFFFC07FFFFC1FFC
FFFFE07FFFFC0FFCFFFFE03FFFFC0FFCFFFFE03FFFFC0FFCFFFFE03FFFFC0FFC
FFFFE03FFFFE03FCFFFFF83FFFFE03FCFFFFF81FFFFE03FCFFFFF81FFFFF03FC
FFFFF81FFFFF01FCFFFFF81FFFFF01FC0FFFF81FFFFF01FC0FFFF81FFFFF81FC
81FFFC1FFFFF80FC80FFFC0FFFFF80FC80FFFC0FFFFF80FCE07FFC0FFFFFE07C
F03FFC0FFFFFE07CF83FFC0FFFFFF07CFC0FFC0FFFFFF03CFF81F80FFFFFF03C
FF80000FFFFFF03CFFC0000FFFFFF80CFFF0000FFFFFFC0CFFFF801FFFFFFE0C
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
0 0 0 -140 71 -66 setcachedevice
71 0 0 74 0 -140 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 71 def
/Height 74 def
/ImageMatrix [71 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFEFFC1FFFFFFFFFFFFFEFFC07FFFFFFFFFFFFEFFC01FFFFF
FFFFFFFEFFE01FFFFFFFFFFFFEFFE01FFFFFFFFFFFFEFFE01FFFFFFFFFFFFEFF
E00FFFFFFFFFFFFEFFF00FFFFFFFFFFFFEFFF00FFFFFFFFFFFFEFFF80FFFFFFF
FFFFFEFFF807FFFFFFFFFFFEFFF807FFFFFFFFFFFEFFF803FFFFFFFFFFFEFFFC
03FFFFFFFFFFFEFFFC03FFFFFFFFFFFEFFFC03FFFFFFFFFFFEFFFF01FFFFFFFF
FFFEFFFF01FFFFFFFFFFFEFFFF01FFFFFFFFFFFEFFFF007FFFFFFFFFFEFFFF80
7FFFFFFFFFFEFFFF807FFFFFFFFFFEFFFF807FFFFFFFFFFEFFFFC03FFFFFFFFF
FEFFFFC03007FFFFFFFEFFFFC030007FFFFFFEFFFFC0180007FFFFFEFFFFC01C
0007FFFFFEFFFFE01F0001FFFFFEFFFFE01FFF803FFFFEFFFFE01FFF800FFFFE
FFFFE00FFFFC01FFFEFFFFF00FFFFF00FFFEFFFFF00FFFFFC0FFFEFFFFF00FFF
FFF87FFEFFFFF007FFFFFC1FFEFFFFF007FFFFFC07FEFFFFFC07FFFFFE03FEFF
FFFC07FFFFFF01FEFFFFFC07FFFFFFC1FEFFFFFC01FFFFFFC0FEFFFFFC01FFFF
FFE07EFFFFFC01FFFFFFE01EFFFFFE01FFFFFFF01EFFFFFE01FFFFFFF00EFFFF
FE01FFFFFFF80EFFFFFE00FFFFFFF806FFFFFE00FFFFFFF806FFFFFE00FFFFFF
F802FFFFFF00FFFFFFFC02FFFFFF00FFFFFFFC02FFFFFF00FFFFFFFC02FFFFFF
007FFFFFFC001FFFFF007FFFFFFC0001FFFF007FFFFFFC0080FFFF007FFFFFF8
00807FFF807FFFFFF800C07FFF807FFFFFF800C03FFF807FFFFFF800F03FFF80
3FFFFFF000F01FFF803FFFFFE000F81FFF803FFFFFC002FC07FF803FFFFE0002
FE07FF803FFFFE0002FF03FF803FFFFC0006FFE0FFC03FFFC0000EFFE003C03F
FC00000EFFF00000000000001EFFFC000000000000FEFFFFC00000000001FEFF
FFF0000000001FFEFFFFFFC0000001FFFEFFFFFFC0000001FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
71 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a39 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a40 {{
0 0 0 -49 50 23 setcachedevice
50 0 0 72 0 -49 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 72 def
/ImageMatrix [50 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFC07FC0E1FFFFFFC07FC080FFFFFF001FC0803FFFFE0F0FC0803FFFF8
0F03C0C03FFFF80F81C0C03FFFF80FE1C0C03FFFF80FF1C0C01FFFF80FF0C0E0
1FFFF80FF8C0E01FFFF807F840E01FFFF807F840E00FFFF807FC40E00FFFF807
FC40F00FFFF803FC00F00FFFFE03FE00F00FFFFE00FE00F007FFFE00FE00F007
FFFF00FFC0F807FFFF00FFC0F807FFFF007FC0F807FFFF807FC0F803FFFF807F
C0F803FFFF803FC0FE03FFFF803FC0FE03FFFFC03FC0FE03FFFFC03FC0FE00FF
FFC03FC0FE00FFFFC01FC0FF00FFFFC01FC0FF00FFFFE01FC0FF00FFFFE01FC0
FF007FFFE01FC0FF807FFFE01FC0FF803FFFE01FC0FF803FFFF81FC0FF801FFF
F81FC0FF801FFFF81FC0FFC00FFFF81FC0FFC003FFE01FC0FFC001FFE01FC0FF
C0007FE01FC0FFC0100FC03FC0FFE01C0FC07FC0FFE01F8000FFC0FFE01FE00F
FFC0FFE00FE00FFFC0FFE00FFFFFFFC0FFF80FFFFFFFC0FFF80FFFFFFFC0FFF8
0FFFFFFFC0FFF803FFFFFFC0FFF803FFFFFFC0FFFC03FFFFFFC0FFFC03FFFFFF
C0FFFC03FFFFFFC0FFFC01FFFFFFC0FFFE01FFFFFFC0FFFE01FFFFFFC0FFFE01
FFFFFFC0FFFE00FFFFFFC0FFFE00FFFFFFC0FFFF00FFFFFFC0FFFF00FFFFFFC0
FFFF00FFFFFFC0FFFF007FFFFFC0FF80007FFFFFC0FF80007FFFFFC0FF80007F
FFFFC0FF80007FFFFFC0FF80007FFFFFC0FFFF807FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a41 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -134 63 -101 setcachedevice
63 0 0 33 0 -134 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 33 def
/ImageMatrix [63 0 0 -33 0 33]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFE1FFFFC0FEF87FFFE1FFFFC0FEF01FFFC0FFFF001EF01FFFC0FFFE070E
F00FFFC07FFE070EF80FFFE07FFC0786F80FFFE07FFC07C2F80FFFE07FFC07E2
F80FFFE07FFC07E2FC07FFF01FFE03F0FC07FFF01FFE03F0FC07FFF01FFE01F0
FC07FFF01FFF01F0FC07FFF01FFF01FEFF03FFF80FFF01FEFF03FFF80FFFC0FE
FF03FFF80FFFC0FEFF03FFF80FFFC0FEFF01FFF807FFC07EFF81FFFC07FFE07E
FF81FFFC07FFE07E1F81FFFC07FFE07E1F807FFC07FFE07E07807FFC03FFE07E
C7C03FFF01FFF07EC7C03FFF01FFF07EC7C01FFF01FFF07EE3C00FFC047FF07E
E3C007FC041FE07EE1C1C0F80607E07EF001F0000F0000FEF803F8001FC001FE
FC0FFE00FFF807FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 33 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
0 0 0 19 53 40 setcachedevice
53 0 0 21 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 21 def
/ImageMatrix [53 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000000000000000000000000000FFFFFFFF
FFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FF
FFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFF
FFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8000000000000000000
00000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
53 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a46 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
0 0 0 1 27 47 setcachedevice
27 0 0 46 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 27 def
/Height 46 def
/ImageMatrix [27 0 0 -46 0 46]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FF803FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE087C07FE080007FE0
80007FE0F0007FE0FF807FE0FFF07FE0FFF07FE0FFF87FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
27 46 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a48 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 -46 26 23 setcachedevice
26 0 0 69 0 -46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 69 def
/ImageMatrix [26 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC0FFC0FFC0FFC0FE001FC0FC0F0FC0F80F07C0F80F83C0F80FC3C0F80FE3C0
F80FE0C0F80FF8C0F807F840F807F840F803FC40F803FC40FC03FC00FC03FE00
FC01FE00FC01FE00FE01FFC0FE01FFC0FE00FFC0FF80FFC0FF803FC0FF803FC0
FF803FC0FFC03FC0FFC01FC0FFE01FC0FFE01FC01FE00FC01FE00FC01FF00FC0
0FF00FC08FF007C08FF007C083F807C083F807C0E3FE07C0E1FE07C0F1FE07C0
F0FE07C0F07E07C0F83E07C0FC3E0FC0FE001FC0FFC0FFC0FFC0FFC0FFFFFFC0
FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0
FFFFFFC0FFFFFFC0FFFFFFC0FFFFC3C0FFFF0040FFFF0040FFFF0000FFFF0000
FFFF0000FFFF0000FFFF8000FFFF8000FFFFE0C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
0 0 0 0 35 4 setcachedevice
35 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 4 def
/ImageMatrix [35 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a55 {{
0 0 0 0 50 47 setcachedevice
50 0 0 47 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 47 def
/ImageMatrix [50 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFE03FC0E1FFFFFFE03FC080FFFFFF800FC0803FFFFE0783C0803FFFF8
0781C0803FFFF80FE1C0C03FFFF80FF0C0C03FFFF80FF0C0C01FFFF00FF8C0C0
1FFFF00FF840C01FFFF00FF840E01FFFF00FFC40E00FFFF007FC40E00FFFF007
FC40E00FFFF807FC00F00FFFF807FE00F00FFFF807FE00F007FFF007FE00F007
FFF007FFC0F007FFF007FFC0F807FFE00FFFC0F807FFC01FFFC0F803FE001FFF
C0F803E0003FFFC0F8000000FFFFC0FE000007FFFFC0FE0000FFFFFFC0FE001F
FFFFFFC0FE0003FFFFFFC0FE0001FFFFFFC0FF00E0FFFFFFC0FF00F0FFFFFFC0
FF00783FFFFFC0FF007E0FFFFFC0FF007E07FFFFC0FF807F83FE1FC0FF803FC1
F803C0FF803FE1F803C0FF803FF0F801C0FFC03FF81801C0FFC03FF80801C0FF
C01FFF0001C0FFC01FFF8001C0FFC01FFFE001C0FFE01FFFFE0FC0FFF87FFFFF
FFC0FFF87FFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFF81FFCE1FFFFFFF81FFC80FFFFFFC003FC803FFFFF80E0FC803FFFFF
00E07C803FFFFF03F07CC03FFFFF03F83CC03FFFFF03FC3CC01FFFFF03FC0CC0
1FFFFF03FE0CC01FFFFF00FE04E01FFFFF00FE04E00FFFFF00FF84E00FFFFF00
FF84E00FFFFF007F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF803FC0F007
FFFF803FC0F007FFFFC03FFCF807FFFFC03FFCF807FFFFC01FFCF803FFFFC01F
FCF803FFFFE00FFCF803FFFFE00FFCFE03FFFFE00FFCFE03FFFFF80FFCFE00FF
FFF80FFCFE00FFFFF803FCFE00FFFFF803FCFF00FFFFFC03FCFF00FFFFFC03FC
FF007FFFFC03FCFF007FFFFC01FCFF003FFFFC01FCFF803FFFFE01FCFF801FFF
FE01FCFF801FFFFE01FCFF801FFFFE01FCFFC00FFFFE01FCFFC003FFFE01FCFF
C001FFFE01FCFFC000FFFE01FCFFC000FFFE03FCFFE0107FFE03FCFFE01C3FFC
0FFCFFE00C03F80FFCFFE00E00001FFCFFE00FC0003FFCFFF80FF803FFFCFFF8
0FFFFFFFFCFFF803FFFFFFFCFFF803FFFFFFFCFFF803FFFFFFFCFFFC03FFFFFF
FCFFFC03FFFFFFFCFFFC01FFFFFFFCFFFC01FFFFFFFCFFFC01FFFFFFFCFFFE01
FFFFFFFCFFFE00FFFFFFFCFFFE00FFFFFFFCFFFE00FFFFFFFCFFFF00FFFFFFFC
FFFF00FFFFFFFCFFFF007FFFFFFCFFFF007FFFFFFCFFFF007FFFFFFCFFFF807F
FFFFFCFFFF807FFFFFFCFFFF803FFFFFFCFFFF803FFFFFFCFFC0003FFFFFFCFF
C0003FFFFFFCFFC0003FFFFFFCFFC0000FFFFFFCFFC0000FFFFFFCFFFFE00FFF
FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a57 {{
0 0 0 28 50 99 setcachedevice
50 0 0 71 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 71 def
/ImageMatrix [50 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE000FFFFFFFC0F00001FFFFFFC08000001FFFFFC0007FC00FFFFFC001FFF00F
FFFFC0007FFE01FFFFC0003FFF00FFFFC0003FFF007FFFC0003FFF803FFFC000
3FFFC01FFFC0003FFFC01FFFC0803FFFF01FFFC0F0FFFFF007FFC0F0FFFFF007
FFC0FFFFFFF803FFC0FFFFFFF803FFC0FFFFFFF803FFC0FFFFFFFC03FFC0FFFF
FFFC03FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFE01FF
C0FFFF007E01FFC0FFF8001E00FFC0FFE0000600FFC0FFC01F0000FFC0FF00FF
C000FFC0FF00FFF000FFC0FF01FFF8007FC0FE01FFFC007FC0FC01FFFC007FC0
FC01FFFE007FC0FC03FFFF001FC0FC03FFFFC01FC0FC03FFFFC01FC0F803FFFF
E01FC0F801FFFFE01FC0F801FFFFE00FC0F801FFFFE00FC0F801FFFFE00FC0F8
01FFFFF00FC0F801FFFFF00FC0F800FFFFF007C0F800FFFFF007C0FC00FFFFF0
07C0FC00FFFFF807C0FC00FFFFF807C0FC007FFFF803C0FC007FFFF803C0FE00
7FFFF803C0FE007FFFFC03C0FE007FFFFC03C0FF001FFFFC01C0FF001FFFFC01
C0FF001FFFFC01C0FFC00FFFFF01C0FFC00FFFFF0040FFE00FFFFF0040FFF007
FFFF0040FFF807FFFF0040FFF803FFFF0040FFF801FFFC0000FFFC007FFC0000
FFFF807FFC0000FFFFC03FF84000FFFFE01FF04000FFFFE007E04000FFFFFC00
00F040FFFFFF0003FFC0FFFFFFF01FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -74 91 36 setcachedevice
91 0 0 110 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 91 def
/Height 110 def
/ImageMatrix [91 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000003FFFFFC000000000800000003FFFFFC000000000800000003FFFFFC0
00000000800000003FFFFFC000000000800000003FFFFFC00000000080000000
3FFFFFC000000000FE00000FFFFFFFFF000007E0FF80007FFFFFFFFFE0001FE0
FFC000FFFFFFFFFFF0003FE0FFC000FFFFFFFFFFF0003FE0FFC000FFFFFFFFFF
F0003FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFC001FFFFFFFFFFF8003FE0FFC001FF
FFFFFFFFF8003FE0FF8001FFFFFFFFFFF8001FE0FF8001FFFFFFFFFFF8001FE0
FE0001FFFFFFFFFFF80007E08000000000000000000000008000000000000000
0000000080000000000000000000000080000000000000000000000080000000
0000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
91 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
62 0 0 0 0 0 setcachedevice
} exec } bind def
/a62 {{
0 0 0 -14 56 9 setcachedevice
56 0 0 23 0 -14 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 23 def
/ImageMatrix [56 0 0 -23 0 23]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000000000800000000000008000000000000080000000000000FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF800000000000008000000000000080000000000000800000000000
00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 23 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 30 41 34 setcachedevice
41 0 0 4 0 30 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 4 def
/ImageMatrix [41 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
0 0 0 0 39 53 setcachedevice
39 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 53 def
/ImageMatrix [39 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFF0FFEFFFFFE03FEFFFFFE03FEFFFFFE01FEFFFFFE01FEFFFFFE01FEFFFF
FF01FEFFFFFF01FEFFFFFF00FEFFFFFF00FEFFFFFF00FEFFFFFF80FEFFFFFF80
FEFFFFFF807EFFFFFF807EF87FFF807EF87FFFE07EF03FFFE07EF00FFFE03EF0
0FFFE03EF00FFFE03EF80FFFF03EF80FFFF03EF807FFF00EF807FFF00EF807FF
F00EFC07FFF80EFC03FFF806FC03FFF806FC03FFF806FE03FFFC06FE03FFFC06
FE01FFFC02FE01FFFC02FE01FFFC02FF81FFFE02FF81FFFE02FF80FFFE003F80
FFFE001F80FFFE001FC0FFFF801FC03FFF800FC03FFF800FC01FFF808FC00FFF
8083E00FFF8083E00FFF80E3E087FF80E1E0C0FF82E0C0C03E02F000F80002F8
03FC000EFC07FF807E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a66 {{
0 0 0 -54 54 -1 setcachedevice
54 0 0 53 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 53 def
/ImageMatrix [54 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFC401FFFFFFFFFF0000FFFFFFFFFE00007FFFFFFFFC00C07FFFFF
FFFC00E01FFFFFFFF804F00FFFFFFFF01CF007FFFFFFC01CF803FFFFFF803CFC
01FFFFFF007CFF01FFFFFF00FCFF807FFFFE01FCFFC03FFFFC07FCFFC01FFFF0
07FCFFE00FFFE00FFCFFF007FFC01FFCFFFC07FFC03FFCFFFE01FF807FFCFFFF
00FF01FFFCFFFF007C01FFFCFFFF803803FFFCFFFFC01007FFFCFFFFF0100FFF
FCFFFFF8001FFFFCFFFFFC007FFFFCFFFFFC007FFFFCFFFFFE00FFFFFCFFFFFC
007FFFFCFFFFFC007FFFFCFFFFF8001FFFFCFFFFF0100FFFFCFFFFC01007FFFC
FFFF803803FFFCFFFF007C01FFFCFFFF00FF01FFFCFFFE01FF807FFCFFFC07FF
C03FFCFFF007FFC01FFCFFE00FFFE00FFCFFC01FFFF007FCFFC03FFFFC07FCFF
807FFFFE01FCFF01FFFFFF00FCFC01FFFFFF007CF803FFFFFF803CF007FFFFFF
C01CF00FFFFFFFF01CE01FFFFFFFF804C07FFFFFFFFC00007FFFFFFFFC0000FF
FFFFFFFE0001FFFFFFFFFF00C7FFFFFFFFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
0 0 0 -77 77 3 setcachedevice
77 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 80 def
/ImageMatrix [77 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFF000FFFFFFFFFF8FFFFE000007FFFFFFFF8FFFFE000007FFFFFFFF8FFFF
0000001FFE3FFFF8FFFC001FF803FC3FFFF8FFF0001FF800FC1FFFF8FFC001FF
FF00701FFFF8FF8007FFFFE0001FFFF8FF803FFFFFF8001FFFF8FF007FFFFFFC
001FFFF8FE00FFFFFFFF000FFFF8FC00FFFFFFFF000FFFF8F000FFFFFFFF800F
FFF8F001FFFFFFFFC00FFFF8F007FFFFFFFFC00FFFF8E007FFFFFFFFC007FFF8
E007FFFFFFFFE007FFF8C007FFFFFFFFE007FFF8C00FFFFFFFFFE007FFF8C00F
FFFFFFFFE001FFF8C00FFFFFFFFFE001FFF8801FFFFFFFFFF001FFF8801FFFFF
FFFFF001FFF8801FFFFFFFFFF001FFF8801FFFFFFFFFF000FFF8801FFFFFFFFF
F000FFF8801FFFFFFFFFFC00FFF8801FFFFFFFFFFC00FFF8801FFFFFFFFFFC00
7FF8801FFFFFFFFFF0007FF8801FFFFFFFC0000000F8800FFFFFFFC0000000F8
800FFFFFFFC0000000F8800FFFFFFFC0000000F8800FFFFFFFFFFFFFFFF8800F
FFFFFFFFFFFFFFF8800FFFFFFFFFFFFFFFF88007FFFFFFFFFFFFFFF88007FFFF
FFFFFFFFFFF8C007FFFFFFFFFFFFFFF8C007FFFFFFFFFFFFFFF8C007FFFFFFFF
FFFFFFF8C001FFFFFFFFFFFFFFF8C001FFFFFFFFFFFFFFF8E001FFFFFFFFFFFF
FFF8E001FFFFFFFFFFFFFFF8E000FFFFFFFFFFFFFFF8E000FFFFFFFFFFFFFFF8
F000FFFFFFFFFFFFC3F8F0007FFFFFFFFFFFC3F8FC007FFFFFFFFFFFC3F8FC00
7FFFFFFFFFFFC3F8FE003FFFFFFFFFFFC3F8FE003FFFFFFFFFFFC1F8FE001FFF
FFFFFFFFC1F8FF001FFFFFFFFFFFC1F8FF801FFFFFFFFFFFC1F8FF8007FFFFFF
FFFFC1F8FFC007FFFFFFFFFFC0F8FFC003FFFFFFFFFFC0F8FFF001FFFFFFFFFF
C0F8FFF800FFFFFFFFFF00F8FFF800FFFFFFFFFF00F8FFFC00FFFFFFFFFF0078
FFFE007FFFFFFFFF0078FFFE001FFFFFFFFE0078FFFF000FFFFFFFFE0078FFFF
C003FFFFFFFE0018FFFFF003FFFFFFFE0018FFFFF801FFFFFFFC0018FFFFFC00
7FFFFFF80018FFFFFC001FFFFFF00018FFFFFF8007FFFFC06008FFFFFFC000FF
FF80F008FFFFFFF000FFFF81F808FFFFFFFE0007FC07FC08FFFFFFFF8000000F
FF08FFFFFFFF8000000FFF00FFFFFFFFF800003FFF80FFFFFFFFFFC003FFFF80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a68 {{
0 0 0 1 49 76 setcachedevice
49 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 49 def
/Height 75 def
/ImageMatrix [49 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC000000000FFFFC000000000FFFFC000000000FFFFC000000000FFFFFFF0
01FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FF
FFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803
FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFF
FFF803FF80000000000000000000000000000000000000000000000000000000
000FFFFFFC03FF8083FFFFFC03FF80E1FFFFFC03FF80E1FFFFFC03FF80E0FFFF
FC03FF80F0FFFFFC03FF80F8FFFFFC03FF80F87FFFFC03FF80FC3FFFFC03FF80
FC3FFFFC03FF80FE0FFFFC03FF80FE07FFFC03FF80FF87FFFC03FF80FFC7FFFC
03FF80FFC3FFFC03FF80FFC1FFFC03FF80FFE1FFFC03FF80FFE0FFFC03FF80FF
F0FFFC03FF80FFF83FFC03FF80FFF83FFC03FF80FFF81FFC03FF80FFFE0FFC03
FF80FFFF0FFC03FF80FFFF0FFC03FF80FFFF87FC03FF80FFFFC3FC03FF80FFFF
C3FC03FF80FFFFC0FC03FF80FFFFE07C03FF80FFFFF87C03FF80FFFFF87C03FF
80FFFFFC3C03FF80FFFFFC1C03FF80FFFFFE1C03FF80FFFFFE0C03FF80FFFFFF
0C03FF80FFFFFF8C03FF80FFFFFF8003FF80FFFFFF8003FF80FFFFFFE003FF80
FFFFFFF003FF80FFFFFFF003FF80FFFFFFF803FF80FFFFFFFC03FF80FFFFFFFC
03FF80FFFFFFFC03FF80FFFFFFFE03FF80FFFFFFFE03FF80FFFFFFFF83FF80FF
FFFFFFC3FF80FFFFFFFFC3FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
49 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a69 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/G/N279 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.8 679.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
101.799 679.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
101.799 679.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
114.898 680.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
118.798 680.6 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
114.698 678.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
119.698 672.301 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
124.697 672.101 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
124.697 672.101 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
128.297 672.101 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
140.296 672.101 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
149.795 679.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
158.694 680.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
162.294 680.6 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
158.494 678.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
163.194 672.301 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
168.493 672.101 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
168.493 672.101 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
172.093 672.101 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
185.892 672.101 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(,) show
184.892 679.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
196.591 679.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(.) show
201.6 672.12 m
/N22 10.9091 Tf
(,) show
207.349 672.12 m
(then)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
228.905 672.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
245.072 672.12 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
266.498 672.12 m
(y) show
275.007 672.12 m
(generated)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 5.38913 ] pdfxs
320.269 672.12 m
(by)
[5.38913 5.38913 ] pdfxs
334.047 672.12 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
382.189 672.12 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
399.916 672.12 m
(g) show
405.185 672.12 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
434.759 672.12 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
458.465 672.12 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
469 672.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
474.299 679.699 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
478.32 672.12 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
93.6 658.68 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
116.116 658.68 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
150.12 658.68 m
(to)
[2.98911 5.38913 ] pdfxs
161.858 658.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
178.265 658.68 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
223.9 666.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
230.499 666.3 m
(\007) show
237.72 658.68 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
257 658.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
261.4 666.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f) show
265.8 658.68 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
316.211 658.68 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
338.727 658.68 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
372.731 658.68 m
(to)
[2.98911 5.38913 ] pdfxs
384.469 658.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
400.876 658.68 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
446.5 666.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\b\f)
[0 6.29942 0 ] pdfxs
457.32 658.68 m
/N22 10.9091 Tf
(,) show
463.309 658.68 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
482.236 658.68 m
(thus)
[2.98911 5.38913 5.38913 4.18912 ] pdfxs
503.553 658.68 m
(it)
[2.98911 2.98911 ] pdfxs
512.771 658.68 m
(as-)
[4.78904 4.18912 3.58903 ] pdfxs
93.5997 645.12 m
(cends)
[4.78904 4.78904 5.38913 5.38913 4.18912 ] pdfxs
121.145 645.12 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
143.4 645.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
151.199 645.2 m
(=) show
150.699 651.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
156.599 645.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
156.599 645.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
160.198 645.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
171.96 645.12 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
190.6 645.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(<) show
198.399 645.2 m
(=) show
197.499 651.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f) show
203.699 645.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
203.699 645.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
207.298 645.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(A\027)
[5.19952 0 ] pdfxs
219 645.12 m
/N22 10.9091 Tf
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
241.156 645.12 m
(an)
[4.78904 5.38913 ] pdfxs
254.094 645.12 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
286.429 645.12 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
305.465 645.12 m
(at)
[4.78904 2.98911 ] pdfxs
316.123 645.12 m
(least)
[2.98911 4.78904 4.78904 4.18912 2.98911 ] pdfxs
339 652.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(I) show
348.199 652.7 m
(K,M)
[0 3.09972 0 ] pdfxs
357.698 652.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
362.798 645.101 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
369.097 645.201 m
(\023) show
374.497 652.6 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
379.296 652.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
383.696 645.101 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(G) show
389.695 645.201 m
(\023) show
394.795 652.6 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022) show
399.794 652.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
404.52 645.12 m
/N22 10.9091 Tf
(.) show
110.52 618 m
(In)
[3.58903 5.38913 ] pdfxs
123.818 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
141.425 618 m
(ne)
[5.38913 4.78904 ] pdfxs
151.484 618 m
(xt)
[5.38913 2.98911 ] pdfxs
164.302 618 m
(theorem,)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 8.50908 2.74908 ] pdfxs
207.295 618 m
(we)
[7.90916 4.78904 ] pdfxs
224.313 618 m
(establish)
[4.78904 4.18912 2.98911 4.78904 5.38913 2.98911 2.98911 4.18912 5.38913 ] pdfxs
266.575 618 m
(bounds)
[5.38913 5.38913 5.38913 5.38913 5.38913 4.18912 ] pdfxs
302.269 618 m
(on)
[5.38913 5.38913 ] pdfxs
317.487 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
335.094 618 m
(e) show
339.763 618 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
377.847 618 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
415.342 618 m
(of)
[5.38913 3.58903 ] pdfxs
428.64 618 m
(steps)
[4.18912 2.98911 4.78904 5.38913 4.18912 ] pdfxs
454.745 618 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
475.341 618 m
(it)
[2.98911 2.98911 ] pdfxs
485.64 618 m
(tak)
[2.98911 4.78904 5.38913 ] pdfxs
498.687 618 m
(es)
[4.78904 4.18912 ] pdfxs
512.105 618 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
93.6001 604.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
110.847 604.44 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
132.273 604.44 m
(y) show
141.982 604.44 m
(obtained)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 4.78904 5.38913 ] pdfxs
183.414 604.44 m
(by)
[5.38913 5.38913 ] pdfxs
198.273 604.44 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
247.614 604.44 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
265.342 604.44 m
(g) show
270.611 604.44 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
300.185 604.44 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
325.091 604.44 m
/N22 10.9091 Tf
(to)
[2.98911 5.38913 ] pdfxs
337.549 604.44 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
360.054 604.44 m
(v) show
365.323 604.44 m
(e) show
374.312 604.44 m
(a) show
383.181 604.44 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
399.228 604.44 m
(of)
[5.38913 3.58903 ] pdfxs
412.287 604.44 m
(prioritized)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 
] pdfxs
461.607 604.44 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
504 604.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
516.699 611.999 m
(\001) show
94.3375 598.501 m
(\003) show
99.2371 590.901 m
(\025) show
106.536 598.501 m
(\007\006\t\006\017\006\017\006\017\032\t)
[0 4.79956 0 4.79956 0 4.79956 0 4.79956 0 5.09953 0 
] pdfxs
135.034 590.901 m
(\025) show
141.833 598.401 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
150.332 598.501 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
157.8 590.88 m
/N22 10.9091 Tf
(by)
[5.38913 5.38913 ] pdfxs
171.338 590.88 m
(concurrently)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 2.98911 
5.38913 ] pdfxs
229.167 590.88 m
(e) show
233.836 590.88 m
(x) show
239.105 590.88 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
273.829 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
289.876 590.88 m
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
337.287 590.88 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
387.3 598.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\006\005)
[0 4.79956 0 ] pdfxs
398.999 598.5 m
(\007\n\t\006\017\006\017\006\017\n\t\013\005)
[0 4.89955 0 4.79956 0 4.79956 0 4.79956 0 4.89955 0 
4.09962 0 ] pdfxs
433.196 598.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
441.695 598.5 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
446.4 590.88 m
/N22 10.9091 Tf
(:) show
110.52 563.76 m
/N110 10.9091 Tf
(Theor)
[7.30907 6.10906 4.78904 5.38913 4.78904 ] pdfxs
138.665 563.76 m
(em)
[4.78904 9.10916 ] pdfxs
157.364 563.76 m
(4) show
167.553 563.76 m
/N22 10.9091 Tf
(Assume)
[7.90916 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
207.7 571.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
220.199 571.4 m
(\001) show
235.497 571.4 m
(\003\006\005)
[0 4.79956 0 ] pdfxs
246.796 571.4 m
(\007\n\t\013\005\r\f\016\t\006\017\006\017\006\017\n\t\013\005)
[0 4.89955 0 4.09962 0 5.99945 0 5.29951 0 4.79956 0 
4.79956 0 4.79956 0 4.89955 0 4.09962 0 ] pdfxs
296.392 571.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
304.891 571.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
314.4 563.76 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
326.378 563.76 m
(a) show
335.847 563.76 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
352.734 563.76 m
(of)
[5.38913 3.58903 ] pdfxs
366.513 563.76 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
413.596 563.76 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
470.6 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
475.2 563.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
478.32 563.76 m
/N22 10.9091 Tf
(-redundant)
[3.58903 3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
93.6 550.2 m
(\() show
97.4 557.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
106.999 557.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
121.398 557.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
121.398 557.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\016\t\006\017\006\017\006\017\020\t)
[5.29951 0 4.79956 0 4.79956 0 4.79956 0 4.99954 0 ] pdfxs
150.295 550.201 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
159.709 550.2 m
/N22 10.9091 Tf
(\)) show
167.498 550.2 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
218.018 550.2 m
(de\002ned)
[5.38913 4.78904 6.10906 5.38913 4.78904 5.38913 ] pdfxs
254.192 550.2 m
(o) show
259.462 550.2 m
(v) show
264.731 550.2 m
(er)
[4.78904 3.58903 ] pdfxs
277.309 550.2 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
305.2 557.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
317.956 550.2 m
/N22 10.9091 Tf
(.) show
328.145 550.2 m
(Let)
[6.70915 4.78904 2.98911 ] pdfxs
346.712 550.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
364.079 550.2 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
385.505 550.2 m
(y) show
395.5 550.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
405.894 550.2 m
/N22 10.9091 Tf
(denote)
[5.38913 4.78904 5.38913 5.38913 2.98911 4.78904 ] pdfxs
438.948 550.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
456.316 550.2 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
477.741 550.2 m
(y) show
487.45 550.2 m
(obtained)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 4.78904 5.38913 ] pdfxs
93.6001 536.64 m
(by)
[5.38913 5.38913 ] pdfxs
107.378 536.64 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
155.64 536.64 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
173.367 536.64 m
(g) show
178.636 536.64 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
208.211 536.64 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
232.036 536.64 m
/N22 10.9091 Tf
(based)
[5.38913 4.78904 4.18912 4.78904 5.38913 ] pdfxs
259.702 536.64 m
(on)
[5.38913 5.38913 ] pdfxs
273.48 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
289.767 536.64 m
(ranking)
[3.58903 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
325.931 536.64 m
(system)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 ] pdfxs
359.8 544.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003\006\005)
[0 4.79956 0 ] pdfxs
370.599 544.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
378.098 544.2 m
(\r) show
386.598 544.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
392.497 536.701 m
(\026) show
396.697 544.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
398.796 544.2 m
(\017) show
406.696 536.601 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(9) show
406.696 536.601 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\016\021)
[10.799 0 ] pdfxs
423.494 544.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
428.16 536.64 m
/N22 10.9091 Tf
(.) show
434.869 536.64 m
(Let)
[6.70915 4.78904 2.98911 ] pdfxs
452.6 541.4 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001\003\002)
[0 6.69939 0 ] pdfxs
464.799 536.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
464.799 536.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
468.399 536.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
480.24 536.64 m
/N22 10.9091 Tf
(denote)
[5.38913 4.78904 5.38913 5.38913 2.98911 4.78904 ] pdfxs
512.215 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.6006 523.08 m
(e) show
98.2696 523.08 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
135.273 523.08 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
171.688 523.08 m
(of)
[5.38913 3.58903 ] pdfxs
183.906 523.08 m
(steps)
[4.18912 2.98911 4.78904 5.38913 4.18912 ] pdfxs
208.811 523.08 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
224.619 523.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
241.026 523.08 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
262.451 523.08 m
(y) show
271.5 523.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
281.04 523.08 m
/N22 10.9091 Tf
(for)
[3.58903 5.38913 3.58903 ] pdfxs
296.847 523.08 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
319.353 523.08 m
(ving)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
341.989 523.08 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
355.996 523.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
372.404 523.08 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
414.4 530.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
419.3 523.101 m
(\025) show
427.299 530.7 m
(\007\006\t)
[0 4.79956 0 ] pdfxs
436.298 523.101 m
(\025) show
443.197 530.7 m
(\f\016\t\006\017\006\017\006\017\n\t)
[0 5.29951 0 4.79956 0 4.79956 0 4.79956 0 4.89955 0 
] pdfxs
471.995 523.101 m
(\025) show
478.894 530.6 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
487.393 530.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
495.36 523.08 m
/N22 10.9091 Tf
(associ-)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 3.58903 ] pdfxs
93.6 509.64 m
(ated)
[4.78904 2.98911 4.78904 5.38913 ] pdfxs
114.076 509.64 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
135.753 509.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
151.32 509.64 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
165.807 509.64 m
(of)
[5.38913 3.58903 ] pdfxs
177.185 509.64 m
(controllers,)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
228.894 509.64 m
(assuming)
[4.78904 4.18912 4.18912 5.38913 8.50908 2.98911 5.38913 5.38913 ] pdfxs
272.367 509.64 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
290.923 509.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
306.611 509.64 m
(current)
[4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
339.774 509.64 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
362.039 509.64 m
(of)
[5.38913 3.58903 ] pdfxs
373.418 509.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
389.105 509.64 m
(system)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 ] pdfxs
421.559 509.64 m
(is)
[2.98911 4.18912 ] pdfxs
431.7 509.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
436.418 509.64 m
/N22 10.9091 Tf
(.) show
442.287 509.64 m
(Then)
[6.70915 5.38913 4.78904 5.38913 ] pdfxs
466.963 509.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
482.651 509.64 m
(follo)
[3.58903 5.38913 2.98911 2.98911 5.38913 ] pdfxs
502.756 509.64 m
(wing)
[7.90916 2.98911 5.38913 5.38913 ] pdfxs
93.6 496.08 m
(e) show
98.2691 496.08 m
(xpression)
[5.38913 5.38913 3.58903 4.78904 4.18912 4.18912 2.98911 5.38913 5.38913 ] pdfxs
142.691 496.08 m
(holds:)
[5.38913 5.38913 2.98911 5.38913 4.18912 2.98911 ] pdfxs
199.6 480.7 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004\006\005\b\007)
[0 8.39923 0 4.89955 0 ] pdfxs
207.499 474.601 m
(\t) show
219.498 483.7 m
(\n\b\013\r\f\017\016)
[0 4.89955 0 7.29933 0 7.09935 0 ] pdfxs
237.796 485.1 m
(\t\021\020\023\022\025\024)
[0 5.99945 0 3.2997 0 4.69957 0 ] pdfxs
Q
q
316.8 0 0 -4.79999 2235.48 4790.28 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
234.3 473.9 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\030\027)
[0 5.39951 0 ] pdfxs
239.3 471.3 m
(\t) show
256.498 483.699 m
(\031\033\032\035\034\037\036)
[0 7.89928 0 9.99908 0 6.09944 0 ] pdfxs
285.695 478.3 m
(\020\023\022\025\024)
[0 3.2997 0 4.69957 0 ] pdfxs
300.694 483.699 m
(\032! )
[0 11.399 0 ] pdfxs
310.793 469.1 m
("$#\b%'&)
[0 4.99954 0 4.89955 0 8.29924 0 ] pdfxs
337.591 478.3 m
(\020\)\(*\024,+)
[0 3.39969 0 5.69948 0 9.19916 0 ] pdfxs
352.289 483.699 m
( ) show
352.889 469.2 m
(\t.-0/)
[0 2.69975 0 6.29942 0 ] pdfxs
367.788 483.699 m
(\n\b\013\r\f\017\016)
[0 4.89955 0 7.29933 0 7.09935 0 ] pdfxs
386.086 485.099 m
(\t1\020\023\(0\020324\0245\024)
[0 5.89946 0 3.2997 0 6.29942 0 3.09972 0 3.69966 0 
3.79965 0 ] pdfxs
Q
q
440.4 0 0 -4.79999 3718.68 4790.28 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
390.3 475.3 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(6) show
389.7 473.9 m
(7) show
395.3 472.7 m
(\t) show
417.098 483.699 m
(\031) show
513.96 475.2 m
/N15 9.96254 Tf
(\(3\))
[3.35743 5.03113 3.35743 ] pdfxs
93.6 448.32 m
/N22 10.9091 Tf
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
123.4 448.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(T) show
129.199 448.4 m
(\023) show
128.799 446.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
137.76 448.32 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
147.938 448.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
164.225 448.32 m
(maximum)
[8.50908 4.78904 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
211.429 448.32 m
(possible)
[5.38913 5.38913 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
250.102 448.32 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
272.607 448.32 m
(v) show
277.756 448.32 m
(able)
[4.78904 5.38913 2.98911 4.78904 ] pdfxs
299.072 448.32 m
(e) show
303.741 448.32 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
340.625 448.32 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
373.2 448.32 m
(rate)
[3.58903 4.78904 2.98911 4.78904 ] pdfxs
392.476 448.32 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
408.163 448.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
424.45 448.32 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
469.9 455.9 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
476.499 448.301 m
(\026) show
482.64 448.32 m
/N22 10.9091 Tf
(\(see)
[3.58903 4.18912 4.78904 4.78904 ] pdfxs
503.116 448.32 m
(De\002-)
[7.90916 4.78904 6.10906 3.58903 ] pdfxs
93.6004 434.76 m
(nition)
[5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
121.975 434.76 m
(2\),)
[5.38913 3.58903 2.74908 ] pdfxs
137 434.8 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\024) show
149.182 434.76 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
159.48 434.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
175.767 434.76 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
190.855 434.76 m
(of)
[5.38913 3.58903 ] pdfxs
202.953 434.76 m
(sequences)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 4.78904 4.78904 4.18912 ] pdfxs
250.5 434.8 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(8) show
260.499 442.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
272.998 442.399 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002) show
276.598 434.8 m
(\000) show
282.097 442.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
282.097 442.399 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(:9)
[4.09962 0 ] pdfxs
286.197 442.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\024\007\020\t)
[6.09944 0 4.99954 0 ] pdfxs
297.296 442.399 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(:9)
[4.09962 0 ] pdfxs
306.795 442.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f\016\t\006\017\006\017\006\017\n\t)
[0 5.29951 0 4.79956 0 4.79956 0 4.79956 0 4.89955 0 
] pdfxs
331.393 442.399 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(:9)
[4.09962 0 ] pdfxs
340.792 442.299 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
349.191 442.399 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
355.92 434.76 m
/N22 10.9091 Tf
(in)
[2.98911 5.38913 ] pdfxs
367.418 434.76 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
397.1 442.4 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(9) show
402.399 434.801 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
408.72 434.76 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
419.018 434.76 m
(a) show
426.807 434.76 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
448.603 434.76 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
471.589 434.76 m
(in)
[2.98911 5.38913 ] pdfxs
483.087 434.76 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
93.7 428.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
99.5995 421.201 m
(\026) show
105.84 421.2 m
/N22 10.9091 Tf
(\(i.e.,)
[3.58903 2.98911 2.74908 4.78904 2.74908 2.74908 ] pdfxs
128.8 428.8 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(9) show
134.1 421.201 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
142.099 421.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(?) show
152.498 428.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
152.498 428.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005\000)
[6.69939 0 ] pdfxs
164.197 423.001 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
167.52 421.2 m
/N22 10.9091 Tf
(\).)
[3.58903 2.74908 ] pdfxs
178.538 421.2 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
198.545 421.2 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
249.425 421.2 m
(distrib)
[5.38913 2.98911 4.18912 2.98911 3.58903 2.98911 5.38913 ] pdfxs
276.709 421.2 m
(ution)
[5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
302.8 428.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
311.999 421.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
311.999 421.201 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(;8)
[3.59967 0 ] pdfxs
321.898 421.201 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\027) show
330.198 428.8 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
342.096 428.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
350.696 434.499 m
(\017) show
355.795 428.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
350.196 431 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
353.995 420.101 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
358.495 422.001 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
358.495 422.001 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(=<)
[6.19943 0 ] pdfxs
374.693 435.399 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
374.693 419.701 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
374.693 419.701 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(3>)
[3.09972 0 ] pdfxs
384.293 427.3 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\f) show
390.792 428.8 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
399.091 434.499 m
(\017) show
403.691 428.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
398.391 420.101 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
402.491 421.901 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
402.491 421.901 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(3?)
[3.09972 0 ] pdfxs
411.29 421.801 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\032) show
414.89 420.101 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
419.089 421.901 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
425.52 421.2 m
/N22 10.9091 Tf
(o) show
430.789 421.2 m
(v) show
436.058 421.2 m
(er)
[4.78904 3.58903 ] pdfxs
447.676 421.2 m
(sequences)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 4.78904 4.78904 4.18912 ] pdfxs
495.4 421.2 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(8) show
505.999 421.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(?) show
516.298 421.2 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\024) show
93.6 407.64 m
/N22 10.9091 Tf
(gi)
[5.38913 2.98911 ] pdfxs
101.738 407.64 m
(v) show
107.007 407.64 m
(es)
[4.78904 4.18912 ] pdfxs
119.465 407.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
136.113 407.64 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
187.233 407.64 m
(of)
[5.38913 3.58903 ] pdfxs
199.571 407.64 m
(e) show
204.24 407.64 m
(x) show
209.509 407.64 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
244.952 407.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
261.6 407.64 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
277.047 407.64 m
(of)
[5.38913 3.58903 ] pdfxs
289.385 407.64 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
339.305 407.64 m
(in)
[2.98911 5.38913 ] pdfxs
351.163 407.64 m
(sequence)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 4.78904 4.78904 ] pdfxs
394.396 407.64 m
(based)
[5.38913 4.78904 4.18912 4.78904 5.38913 ] pdfxs
422.421 407.64 m
(on)
[5.38913 5.38913 ] pdfxs
436.679 407.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
453.327 407.64 m
(order)
[5.38913 3.58903 5.38913 4.78904 3.58903 ] pdfxs
479.672 407.64 m
(of)
[5.38913 3.58903 ] pdfxs
492.01 407.64 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
93.5992 394.08 m
(starting)
[4.18912 2.98911 4.78904 3.58903 2.98911 2.98911 5.38913 5.38913 ] pdfxs
128.912 394.08 m
(in)
[2.98911 5.38913 ] pdfxs
140.17 394.08 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
163.2 394.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
167.956 394.08 m
/N22 10.9091 Tf
(,) show
173.345 394.08 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
191.792 394.08 m
(observing)
[5.38913 5.38913 4.18912 4.78904 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
237.534 394.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
253.461 394.08 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
275.017 394.08 m
(state)
[4.18912 2.98911 4.78904 2.98911 4.78904 ] pdfxs
297.643 394.08 m
(sequence)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 4.78904 4.78904 ] pdfxs
341.3 401.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002) show
341.3 401.7 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(\0239)
[3.2997 0 ] pdfxs
344.6 401.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b\007\n\t\006\017\006\017\006\017\020\t)
[6.29942 0 4.89955 0 4.79956 0 4.79956 0 4.79956 0 4.99954 
0 ] pdfxs
375.197 401.7 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(:9)
[4.09962 0 ] pdfxs
384.596 401.6 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
392.895 401.7 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\n) show
396.6 394.08 m
/N22 10.9091 Tf
(.) show
110.52 366.96 m
/N110 10.9091 Tf
(Pr)
[6.70915 4.78904 ] pdfxs
121.778 366.96 m
(oof)
[5.38913 5.38913 3.58903 ] pdfxs
138.665 366.96 m
(\(sk)
[3.58903 4.18912 6.10906 ] pdfxs
152.433 366.96 m
(etch\):)
[4.78904 3.58903 4.78904 6.10906 3.58903 3.58903 ] pdfxs
182.247 366.96 m
/N22 10.9091 Tf
(Based)
[7.30907 4.78904 4.18912 4.78904 5.38913 ] pdfxs
211.113 366.96 m
(on)
[5.38913 5.38913 ] pdfxs
224.411 366.96 m
(Theorem)
[6.70915 5.38913 4.78904 5.38913 3.58903 4.78904 8.50908 ] pdfxs
265.974 366.96 m
(3,)
[5.38913 2.74908 ] pdfxs
276.513 366.96 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
302.509 366.96 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
350.171 366.96 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
367.898 366.96 m
(g) show
373.167 366.96 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
402.742 366.96 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
425.847 366.96 m
/N22 10.9091 Tf
(al)
[4.78904 2.98911 ] pdfxs
433.505 366.96 m
(w) show
441.294 366.96 m
(ays)
[4.78904 5.38913 4.18912 ] pdfxs
458.181 366.96 m
(\002nds)
[6.10906 5.38913 5.38913 4.18912 ] pdfxs
481.658 366.96 m
(a) show
488.847 366.96 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
510.272 366.96 m
(y) show
518.5 367 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
93.6 353.4 m
/N22 10.9091 Tf
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
112.396 353.4 m
(optimizes)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 4.78904 4.18912 ] pdfxs
157.058 353.4 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
170.465 353.4 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
219.425 353.4 m
(\(i.e.,)
[3.58903 2.98911 2.74908 4.78904 2.74908 2.74908 ] pdfxs
241.6 353.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(]) show
241.6 353.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026\000)
[6.4994 0 ] pdfxs
248.099 353.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(^?)
[8.49922 0 ] pdfxs
266.198 360.999 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
274.297 360.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
278.797 353.4 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
286.196 366.599 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
286.196 352.1 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
286.196 352.1 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(@>)
[2.99973 0 ] pdfxs
296.095 359.699 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
300.295 360.999 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
309.194 361.899 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(b) show
312.693 361.899 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
308.994 359.299 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
313.593 353.5 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
317.893 353.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
317.893 353.4 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\000)
[3.59967 0 ] pdfxs
321.493 353.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030\027)
[5.29951 0 ] pdfxs
335.091 353.4 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(,) show
334.092 360.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
345.49 360.999 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(.) show
350.52 353.4 m
/N22 10.9091 Tf
(\),)
[3.58903 2.74908 ] pdfxs
359.378 353.4 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
380.803 353.4 m
(y) show
389.1 353.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
397.952 353.4 m
/N22 10.9091 Tf
(will)
[7.90916 2.98911 2.98911 2.98911 ] pdfxs
417.228 353.4 m
(ascend)
[4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 ] pdfxs
449.323 353.4 m
(on)
[5.38913 5.38913 ] pdfxs
462.621 353.4 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
475.908 353.4 m
(controllers.)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
93.5992 339.96 m
(Thus)
[6.70915 5.38913 5.38913 4.18912 ] pdfxs
117.675 339.96 m
(in)
[2.98911 5.38913 ] pdfxs
128.454 339.96 m
(a) show
133.003 339.96 m
(v) show
138.272 339.96 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
164.257 339.96 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
179.824 339.96 m
(total)
[2.98911 5.38913 2.98911 4.78904 2.98911 ] pdfxs
201.49 339.96 m
(time)
[2.98911 2.98911 8.50908 4.78904 ] pdfxs
223.046 339.96 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
238.133 339.96 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
251.3 339.96 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
300.14 339.96 m
(to)
[2.98911 5.38913 ] pdfxs
310.919 339.96 m
(terminate)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 4.78904 ] pdfxs
354.26 339.96 m
(equals)
[4.78904 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
384.435 339.96 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
400.002 339.96 m
(time)
[2.98911 2.98911 8.50908 4.78904 ] pdfxs
421.678 339.96 m
(required)
[3.58903 4.78904 5.38913 5.38913 2.98911 3.58903 4.78904 5.38913 ] pdfxs
460.231 339.96 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
475.198 339.96 m
(a) show
482.387 339.96 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
93.5982 324.6 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
112.994 324.6 m
(tak)
[2.98911 4.78904 5.38913 ] pdfxs
126.042 324.6 m
(es)
[4.78904 4.18912 ] pdfxs
138.26 324.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
154.547 324.6 m
(most)
[8.50908 5.38913 4.18912 2.98911 ] pdfxs
178.744 324.6 m
(time)
[2.98911 2.98911 8.50908 4.78904 ] pdfxs
201.14 324.6 m
(to)
[2.98911 5.38913 ] pdfxs
212.638 324.6 m
(complete)
[4.78904 5.38913 8.50908 5.38913 2.98911 4.78904 2.98911 4.78904 ] pdfxs
255.631 324.6 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
285.216 324.6 m
(has)
[5.38913 4.78904 4.18912 ] pdfxs
302.823 324.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
319.111 324.6 m
(lo)
[2.98911 5.38913 ] pdfxs
327.249 324.6 m
(wer)
[7.90916 4.78904 3.58903 ] pdfxs
346.656 324.6 m
(bound)
[5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
376.842 324.6 m
(of)
[5.38913 3.58903 ] pdfxs
389.2 332.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(I) show
398.399 332.2 m
(VAW)
[0 5.19952 0 ] pdfxs
410.098 324.601 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
410.098 324.601 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\016\004)
[4.89955 0 ] pdfxs
419.997 325.201 m
(\005) show
426.097 336.6 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
432.396 336.7 m
(\004) show
431.496 332.7 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
436.796 332.8 m
(') show
439.695 343.199 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
443.695 332.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
Q
q
273.6 0 0 -4.79999 4192.68 3275.88 cm
0 setgray
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 1 def
/Height 1 def
/ImageMatrix [1 0 0 -1 0 1]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource {currentfile userdict /CIstring get readhexstring pop} bind def
end
1 1 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
userdict /CIstring 1 string put
imagemask
00
Q
Q
q
10 0 0 10 0 0 cm
0 setgray
423.1 324.2 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(A) show
427.6 331.299 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(") show
433.199 322.8 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(') show
436.099 333.199 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\033) show
440.098 322.3 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\)) show
447.998 331.499 m
/N258 [0.0999908 0 0 -0.0999908 0 0] Tf
(\b) show
452.64 324.6 m
/N22 10.9091 Tf
(.) show
459.709 324.6 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
479.596 324.6 m
(w) show
487.385 324.6 m
(orst)
[5.38913 3.58903 4.18912 2.98911 ] pdfxs
506.782 324.6 m
(case)
[4.78904 4.78904 4.18912 4.78904 ] pdfxs
93.5997 311.04 m
(happens)
[5.38913 4.78904 5.38913 5.38913 4.78904 5.38913 4.18912 ] pdfxs
132.763 311.04 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
159.72 311.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
176.487 311.04 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
197.912 311.04 m
(y) show
207.3 311 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
216.982 311.04 m
/N22 10.9091 Tf
(generated)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 5.38913 ] pdfxs
262.844 311.04 m
(by)
[5.38913 5.38913 ] pdfxs
277.102 311.04 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
325.964 311.04 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
343.691 311.04 m
(g) show
348.96 311.04 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
378.535 311.04 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
402.72 311.04 m
/N22 10.9091 Tf
(can)
[4.78904 4.78904 5.38913 ] pdfxs
421.287 311.04 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
438.655 311.04 m
(optimize)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 4.78904 ] pdfxs
480.207 311.04 m
(more)
[8.50908 5.38913 3.58903 4.78904 ] pdfxs
505.964 311.04 m
(than)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
93.6005 297.48 m
(one)
[5.38913 5.38913 4.78904 ] pdfxs
111.808 297.48 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
156.699 297.48 m
(at)
[4.78904 2.98911 ] pdfxs
166.997 297.48 m
(a) show
174.426 297.48 m
(time.)
[2.98911 2.98911 8.50908 4.78904 2.74908 ] pdfxs
199.691 297.48 m
(In)
[3.58903 5.38913 ] pdfxs
211.31 297.48 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
229.506 297.48 m
(case)
[4.78904 4.78904 4.18912 4.78904 ] pdfxs
251.1 297.5 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\020) show
259.942 297.48 m
/N22 10.9091 Tf
(al)
[4.78904 2.98911 ] pdfxs
267.6 297.48 m
(w) show
275.389 297.48 m
(ays)
[4.78904 5.38913 4.18912 ] pdfxs
292.396 297.48 m
(optimizes)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 4.78904 4.18912 ] pdfxs
337.298 297.48 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
353.105 297.48 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
397.876 297.48 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
419.793 297.48 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
435.6 297.48 m
(highest)
[5.38913 2.98911 5.38913 5.38913 4.78904 4.18912 2.98911 ] pdfxs
469.604 297.48 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
504.676 297.48 m
(until)
[5.38913 5.38913 2.98911 2.98911 2.98911 ] pdfxs
93.6002 283.92 m
(its)
[2.98911 2.98911 4.18912 ] pdfxs
107.127 283.92 m
(termination,)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 
2.74908 ] pdfxs
163.396 283.92 m
(then)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
185.433 283.92 m
(optimizes)
[5.38913 5.38913 2.98911 2.98911 8.50908 2.98911 4.78904 4.78904 4.18912 ] pdfxs
231.055 283.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
247.582 283.92 m
(second)
[4.18912 4.78904 4.78904 5.38913 5.38913 5.38913 ] pdfxs
281.116 283.92 m
(highest)
[5.38913 2.98911 5.38913 5.38913 4.78904 4.18912 2.98911 ] pdfxs
315.84 283.92 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
351.753 283.92 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
397.363 283.92 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
416.291 283.92 m
(continues)
[4.78904 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 4.78904 4.18912 ] pdfxs
461.312 283.92 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
480.229 283.92 m
(process)
[5.38913 3.58903 5.38913 4.78904 4.78904 4.18912 4.18912 ] pdfxs
516.152 283.92 m
(to)
[2.98911 5.38913 ] pdfxs
93.6003 270.36 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
109.888 270.36 m
(end)
[4.78904 5.38913 5.38913 ] pdfxs
128.695 270.36 m
(in)
[2.98911 5.38913 ] pdfxs
140.193 270.36 m
(a) show
147.982 270.36 m
(sequential)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 ] pdfxs
195.153 270.36 m
(manner)
[8.50908 4.78904 5.38913 5.38913 4.78904 3.58903 ] pdfxs
227.008 270.36 m
(.) show
234.197 270.36 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
254.084 270.36 m
(right)
[3.58903 2.98911 5.38913 5.38913 2.98911 ] pdfxs
277.669 270.36 m
(hand)
[5.38913 4.78904 5.38913 5.38913 ] pdfxs
301.866 270.36 m
(side)
[4.18912 2.98911 5.38913 4.78904 ] pdfxs
322.462 270.36 m
(of)
[5.38913 3.58903 ] pdfxs
334.56 270.36 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
350.847 270.36 m
(inequality)
[2.98911 5.38913 4.78904 5.38913 5.38913 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
397.418 270.36 m
(gi)
[5.38913 2.98911 ] pdfxs
405.556 270.36 m
(v) show
410.825 270.36 m
(en)
[4.78904 5.38913 ] pdfxs
424.244 270.36 m
(by)
[5.38913 5.38913 ] pdfxs
438.142 270.36 m
(Equation)
[6.70915 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
480.415 270.36 m
(3) show
488.924 270.36 m
(gi)
[5.38913 2.98911 ] pdfxs
497.062 270.36 m
(v) show
502.331 270.36 m
(es)
[4.78904 4.18912 ] pdfxs
514.429 270.36 m
(an)
[4.78904 5.38913 ] pdfxs
93.6 256.8 m
(upper)
[5.38913 5.38913 5.38913 4.78904 3.58903 ] pdfxs
121.505 256.8 m
(bound)
[5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
151.811 256.8 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
167.618 256.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
184.025 256.8 m
(e) show
188.694 256.8 m
(xpected)
[5.38913 5.38913 4.78904 4.78904 2.98911 4.78904 5.38913 ] pdfxs
225.698 256.8 m
(time)
[2.98911 2.98911 8.50908 4.78904 ] pdfxs
248.094 256.8 m
(required)
[3.58903 4.78904 5.38913 5.38913 2.98911 3.58903 4.78904 5.38913 ] pdfxs
287.487 256.8 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
303.294 256.8 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
317.302 256.8 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
366.982 256.8 m
(to)
[2.98911 5.38913 ] pdfxs
378.48 256.8 m
(complete)
[4.78904 5.38913 8.50908 5.38913 2.98911 4.78904 2.98911 4.78904 ] pdfxs
421.592 256.8 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
448.309 256.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
461.356 256.8 m
(y) show
469.985 256.8 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
486.392 256.8 m
(e) show
491.061 256.8 m
(x) show
496.33 256.8 m
(ecuted)
[4.78904 4.78904 5.38913 2.98911 4.78904 5.38913 ] pdfxs
93.5995 243.36 m
(sequentially)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 2.98911 
5.38913 ] pdfxs
144.949 243.36 m
(.) show
152.618 243.36 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
172.625 243.36 m
(abo)
[4.78904 5.38913 5.38913 ] pdfxs
188.072 243.36 m
(v) show
193.341 243.36 m
(e) show
201.37 243.36 m
(theorem)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 8.50908 ] pdfxs
240.054 243.36 m
(implicitly)
[2.98911 8.50908 5.38913 2.98911 2.98911 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
285.425 243.36 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
312.719 243.36 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
332.116 243.36 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
358.712 243.36 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
407.094 243.36 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
424.821 243.36 m
(g) show
430.09 243.36 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
459.665 243.36 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
483.61 243.36 m
/N22 10.9091 Tf
(generates)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 4.18912 ] pdfxs
93.5989 229.8 m
(a) show
101.268 229.8 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
122.693 229.8 m
(y) show
131.202 229.8 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
150.479 229.8 m
(in)
[2.98911 5.38913 ] pdfxs
161.857 229.8 m
(a) show
166.406 229.8 m
(v) show
171.675 229.8 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
198.14 229.8 m
(commits)
[4.78904 5.38913 8.50908 8.50908 2.98911 2.98911 4.18912 ] pdfxs
238.504 229.8 m
(to)
[2.98911 5.38913 ] pdfxs
249.882 229.8 m
(more)
[8.50908 5.38913 3.58903 4.78904 ] pdfxs
275.158 229.8 m
(than)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
296.835 229.8 m
(one)
[5.38913 5.38913 4.78904 ] pdfxs
315.402 229.8 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
352.165 229.8 m
(it)
[2.98911 2.98911 ] pdfxs
361.023 229.8 m
(potentially)
[5.38913 5.38913 2.98911 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 2.98911 5.38913 
] pdfxs
410.463 229.8 m
(tak)
[2.98911 4.78904 5.38913 ] pdfxs
423.511 229.8 m
(es)
[4.78904 4.18912 ] pdfxs
435.609 229.8 m
(less)
[2.98911 4.78904 4.18912 4.18912 ] pdfxs
454.885 229.8 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
490.94 229.8 m
(of)
[5.38913 3.58903 ] pdfxs
502.918 229.8 m
(steps)
[4.18912 2.98911 4.78904 5.38913 4.18912 ] pdfxs
93.5978 216.24 m
(to)
[2.98911 5.38913 ] pdfxs
104.856 216.24 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
127.361 216.24 m
(v) show
132.63 216.24 m
(e) show
140.539 216.24 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
154.187 216.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
170.354 216.24 m
(subgoals,)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
214.056 216.24 m
(compared)
[4.78904 5.38913 8.50908 5.38913 4.78904 3.58903 4.78904 5.38913 ] pdfxs
259.808 216.24 m
(to)
[2.98911 5.38913 ] pdfxs
271.066 216.24 m
(a) show
278.735 216.24 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
300.161 216.24 m
(y) show
308.67 216.24 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
327.826 216.24 m
(sequentially)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 2.98911 
5.38913 ] pdfxs
383.255 216.24 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
405.761 216.24 m
(v) show
411.03 216.24 m
(es)
[4.78904 4.18912 ] pdfxs
423.128 216.24 m
(them)
[2.98911 5.38913 4.78904 8.50908 ] pdfxs
447.684 216.24 m
(according)
[4.78904 4.78904 4.78904 5.38913 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
493.426 216.24 m
(to)
[2.98911 5.38913 ] pdfxs
504.684 216.24 m
(their)
[2.98911 5.38913 4.78904 2.98911 3.58903 ] pdfxs
93.5971 202.68 m
(de)
[5.38913 4.78904 ] pdfxs
103.655 202.68 m
(gree)
[5.38913 3.58903 4.78904 4.78904 ] pdfxs
125.212 202.68 m
(of)
[5.38913 3.58903 ] pdfxs
136.95 202.68 m
(signi\002cance.)
[4.18912 2.98911 5.38913 5.38913 2.98911 6.10906 4.78904 4.78904 5.38913 4.78904 4.78904 
2.74908 ] pdfxs
93.5971 167.52 m
/N9 14.3462 Tf
(4) show
115.064 167.52 m
(Experiments)
[9.59769 7.18754 7.91913 6.35526 6.35526 3.95956 11.9934 6.35526 7.91913 4.79162 5.63813 
] pdfxs
93.5971 142.68 m
/N22 10.9091 Tf
(In)
[3.58903 5.38913 ] pdfxs
105.935 142.68 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
125.092 142.68 m
(section)
[4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
159.215 142.68 m
(we)
[7.90916 4.78904 ] pdfxs
175.273 142.68 m
(present)
[5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 ] pdfxs
209.997 142.68 m
(our)
[5.38913 5.38913 3.58903 ] pdfxs
227.844 142.68 m
(e) show
232.513 142.68 m
(xperimental)
[5.38913 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 4.78904 2.98911 
] pdfxs
287.833 142.68 m
(results)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 4.18912 ] pdfxs
319.557 142.68 m
(analyzing)
[4.78904 5.38913 4.78904 2.98911 5.38913 4.78904 2.98911 5.38913 5.38913 ] pdfxs
365.179 142.68 m
(redundant)
[3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
412.12 142.68 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
461.92 142.68 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
480.968 142.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
497.615 142.68 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
519.04 142.68 m
(y) show
93.5974 129.12 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
110.245 129.12 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
132.281 129.12 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
177.063 129.12 m
(described)
[5.38913 4.78904 4.18912 4.78904 3.58903 2.98911 5.38913 4.78904 5.38913 ] pdfxs
221.365 129.12 m
(in)
[2.98911 5.38913 ] pdfxs
232.383 129.12 m
(section)
[4.18912 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
265.786 129.12 m
(2.)
[5.38913 2.74908 ] pdfxs
277.284 129.12 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
308.179 129.12 m
(2\(a\))
[5.38913 3.58903 4.78904 3.58903 ] pdfxs
328.295 129.12 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
343.022 129.12 m
(ws)
[7.90916 4.18912 ] pdfxs
357.761 129.12 m
(a) show
366.1 136.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
370.9 129.101 m
(3) show
370.9 129.101 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006B)
[8.39923 0 ] pdfxs
388.998 136.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
393.797 129.101 m
(3) show
401.552 129.12 m
/N22 10.9091 Tf
(grid)
[5.38913 3.58903 2.98911 5.38913 ] pdfxs
421.548 129.12 m
(w) show
429.337 129.12 m
(orld)
[5.38913 3.58903 2.98911 5.38913 ] pdfxs
449.454 129.12 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
478.559 129.12 m
(an)
[4.78904 5.38913 ] pdfxs
491.377 129.12 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
517.483 129.12 m
(is)
[2.98911 4.18912 ] pdfxs
93.5998 115.56 m
(to)
[2.98911 5.38913 ] pdfxs
105.098 115.56 m
(visit)
[5.38913 2.98911 4.18912 2.98911 2.98911 ] pdfxs
126.883 115.56 m
(a) show
134.672 115.56 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
149.88 115.56 m
(of)
[5.38913 3.58903 ] pdfxs
161.858 115.56 m
(prioritized)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 
] pdfxs
210.218 115.56 m
(locations)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
252.6 115.56 m
(mark)
[8.50908 4.78904 3.58903 5.38913 ] pdfxs
274.756 115.56 m
(ed)
[4.78904 5.38913 ] pdfxs
288.174 115.56 m
(by)
[5.38913 5.38913 ] pdfxs
302.6 115.6 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
311.699 123.199 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\n\t\006\017\006\017\006\017\020\t)
[0 4.89955 0 4.79956 0 4.79956 0 4.79956 0 4.99954 0 
] pdfxs
340.497 115.6 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
348.696 123.099 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
359.64 115.56 m
/N22 10.9091 Tf
(\(in)
[3.58903 2.98911 5.38913 ] pdfxs
374.727 115.56 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
393.524 115.56 m
(e) show
398.193 115.56 m
(xample)
[5.38913 4.78904 8.50908 5.38913 2.98911 4.78904 ] pdfxs
433.5 115.6 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
446.899 123.199 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
446.899 123.199 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(ED)
[11.7989 0 ] pdfxs
463.887 115.56 m
/N22 10.9091 Tf
(\).)
[3.58903 2.74908 ] pdfxs
474.545 115.56 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
494.432 115.56 m
(agent')
[4.78904 5.38913 4.78904 5.38913 2.98911 3.58903 ] pdfxs
520.767 115.56 m
(s) show
306.84 77.28 m
(8) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 9 9
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font B
10 dict begin
T3Defs
/FontType 3 def
/FontName /N68 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-38 
119 
115 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 31 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 41 2 setcachedevice
41 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 50 def
/ImageMatrix [41 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFFF80FFE001FFFF80FF00003FFF80F80FFC07FF80E00FFC01FF80C0FF
FFC0FF80C1FFFFE03F80C3FFFFF03F8083FFFFF81F8080FFFFFE0F80801FFFFE
0F80801FFFFE0780801FFFFF0780801FFFFF0780C00FFFFF0380C00FFFFF0380
C00FFFFF0380E01FFFFF0380F8FFFFFE0380FFFFFFFE0380FFFFFFF80380FFFF
FFE00380FFFFFE000380FFFF80000380FFFE00000780FFFE00000780FFFC0000
0F80FFF800003F80FFE000003F80FFC00000FF80FFC00007FF80FFC000FFFF80
FFC01FFFFF80FFC03FFFFF80FFC03FFF8780FFC07FFF0080FFC07FFF0080FFC0
7FFF0080FFE07FFF0000FFE07FFF0000FFE07FFF0000FFE03FFF8000FFF81FFF
C000FFFC1FFFE000FFFC1FFFE080FFFF03FFC380FFFF00FF0380FFFF80000780
FFFFF0000F80FFFFFE00FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 109 75 setcachedevice
109 0 0 75 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 109 def
/Height 75 def
/ImageMatrix [109 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000FFF83FFE00000003FFFF88000000FFF03FFE00000001FFFF88000000F
FF01FFE00000001FFFF88000000FFF00FFE00000001FFFF8FF000FFFFF00FFFF
FC003FFFFFF8FFC01FFFFF00FFFFFE00FFFFFFF8FFE03FFFFF007FFFFE003FFF
FFF8FFF83FFFFF003FFFFE003FFFFFF8FFF83FFFFF003FFFFE003FFFFFF8FFFC
3FFFFE000FFFFF803FFFFFF8FFFC1FFFFE000FFFFF801FFFFFF8FFFC1FFFFE00
0FFFFF801FFFFFF8FFFE1FFFFE0087FFFF801FFFFFF8FFFE1FFFFE00C3FFFFC0
1FFFFFF8FFFE1FFFFE00C3FFFFC01FFFFFF8FFFE0FFFFE00C1FFFFC00FFFFFF8
FFFE0FFFFE00E0FFFFC00FFFFFF8FFFF0FFFFE00F0FFFFC00FFFFFF8FFFF0FFF
FE00F0FFFFE00FFFFFF8FFFF0FFFFE00F83FFFE00FFFFFF8FFFF03FFFC00F83F
FFE007FFFFF8FFFF03FFFC01F81FFFE007FFFFF8FFFF83FFFC01FE0FFFE007FF
FFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF83FFFC01FF0FFFF007FFFFF8FFFF
81FFFC01FF87FFF003FFFFF8FFFF81FFFC01FF87FFF003FFFFF8FFFFE1FFFC01
FF83FFF003FFFFF8FFFFE1FFFC01FFC0FFF803FFFFF8FFFFE1FFFC01FFE0FFF8
03FFFFF8FFFFE0FFF803FFE0FFF800FFFFF8FFFFF0FFF803FFF87FF800FFFFF8
FFFFF0FFF803FFF83FF800FFFFF8FFFFF0FFF803FFFC3FFE00FFFFF8FFFFF07F
F803FFFC1FFE007FFFF8FFFFF07FF803FFFE1FFE007FFFF8FFFFF87FF803FFFE
1FFE007FFFF8FFFFF87FF803FFFF0FFF007FFFF8FFFFF87FF803FFFF03FF007F
FFF8FFFFF83FE003FFFF83FF003FFFF8FFFFF83FE00FFFFF81FF003FFFF8FFFF
FC3FE00FFFFFE1FF003FFFF8FFFFFC3FE00FFFFFF0FF803FFFF8FFFFFC3FE00F
FFFFF0FF803FFFF8FFFFFC0FE00FFFFFF07F801FFFF8FFFFFC0FE00FFFFFF87F
801FFFF8FFFFFE0FE00FFFFFF83F801FFFF8FFFFFE0FE00FFFFFFC3FC01FFFF8
FFFFFE0FE00FFFFFFE0FC01FFFF8FFFFFE07C01FFFFFFE0FC00FFFF8FFFFFE07
C01FFFFFFE07C00FFFF8FFFFFF87C01FFFFFFF83C00FFFF8FFFFFF87C01FFFFF
FFC3E00FFFF8FFFFFF87C01FFFFFFFC3E00FFFF8FFFFFF83C01FFFFFFFE1E003
FFF8FFFFFFC3C01FFFFFFFE1E003FFF8FFFFFFC3C01FFFFFFFE0E003FFF8FFFF
FFC3C01FFFFFFFF03803FFF8FFFFFFC1C01FFFFFFFF83801FFF8FFFFFFC1C01F
FFFFFFF83801FFF8FFFFFFE1803FFFFFFFFE1801FFF8FFFFFFE1803FFFFFFFFE
1C01FFF8FFFFFFE1803FFFFFFFFE0C01FFF8FFFFFFE0803FFFFFFFFF0400FFF8
FFFFFFE0803FFFFFFFFF8400FFF8FFFFFFF0803FFFFFFFFF8400FFF8FFFFFFF0
803FFFFFFFFFC200FFF8FFFFFFF0803FFFFFFFFFE000FFF8FFFFFFF0003FFFFF
FFFFE0007FF8FFFFFFF0003FFFFFFFFFE0003FF8FFFFE000007FFFFFFFFFF800
0008FFFFE000007FFFFFFFFFF8000008FFFFE000007FFFFFFFFFFC000008FFFF
E000007FFFFFFFFFFE000000FFFFE000007FFFFFFFFFFE000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
109 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF880FFFFF000FFFFF000FFFFE000FFFFE000FFFFE000FFFF8080FFFF8080
FFFF8080FFFF8180FFFF0180FFFF0180FFFE0180FFFE0380FFFE0380FFFE0F80
FFFC0F80FFFC0F80FFFC0F80FFF81F80FFF81F80FFF81F80FFE03F80FFE03F80
FFE03F80FFC07F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80FF80FF80
FF83FF80FF03FF80FF03FF80FE03FF80FE07FF80FE07FF80FE0FFF80F80FFF80
F80FFF80F80FFF80F01FFF80F01FFF80F01FFF80E03FFF80E03FFF80E03FFF80
C0FFFF80C0FFFF80C0FFFF80C1FFFF8081FFFF8081FFFF8081FFFF8081FFFF80
81FFFF80C1FFFF80C0FFFF80C0FFFF80C0FFFF80E03FFF80E03FFF80E03FFF80
F01FFF80F01FFF80F01FFF80F80FFF80F80FFF80F80FFF80FE0FFF80FE07FF80
FE07FF80FE03FF80FF03FF80FF03FF80FF83FF80FF80FF80FF80FF80FF80FF80
FFC0FF80FFC07F80FFC07F80FFC07F80FFE03F80FFE03F80FFE03F80FFF81F80
FFF81F80FFF81F80FFFC0F80FFFC0F80FFFC0F80FFFE0F80FFFE0380FFFE0380
FFFE0180FFFF0180FFFF0180FFFF8180FFFF8080FFFF8080FFFF8080FFFFE000
FFFFE000FFFFE000FFFFF000FFFFF000FFFFF880>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
123 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 -1 68 79 setcachedevice
68 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 80 def
/ImageMatrix [68 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF0003FFFFFFFFF0FFF000003FFFFFFFF0FFF000003FFFFFFFF0FFC0000003
FFFFFFF0FE00000000FFFFFFF0FC000000001FFFFFF0F80000000007FFFFF0F0
00007FC003FFFFF0F00007FFFE03FFFFF0E0001FFFFF807FFFF08000FFFFFFE0
3FFFF08000FFFFFFE01FFFF00001FFFFFFF80FFFF00003FFFFFFFC03FFF00007
FFFFFFFE03FFF0000FFFFFFFFE01FFF0000FFFFFFFFF00FFF0000FFFFFFFFF00
FFF0003FFFFFFFFF007FF0003FFFFFFFFF807FF0803FFFFFFFFF807FF0803FFF
FFFFFF803FF0803FFFFFFFFF803FF0803FFFFFFFFF800FF0E00FFFFFFFFF800F
F0E00FFFFFFFFF800FF0F00FFFFFFFFF800FF0F807FFFFFFFF000FF0FC01FFFF
FFFF000FF0FC00FFFFFFFE000FF0FF80FFFFFFFE000FF0FFE0FFFFFFFC000FF0
FFFFFFFFFFFC003FF0FFFFFFFFFFF8003FF0FFFFFFFFFFE0007FF0FFFFFFFFFF
80007FF0FFFFFFFFFF00007FF0FFFFFFFFF80000FFF0FFFFFFFFF80001FFF0FF
FFFFFFE00003FFF0FFFFFFFF80000FFFF0FFFFFFFC00000FFFF0FFFFFFF00000
3FFFF0FFFFFF8000007FFFF0FFFFFF800003FFFFF0FFFFFF00000FFFFFF0FFFF
FE00003FFFFFF0FFFFFC00003FFFFFF0FFFFF80001FFFFFFF0FFFFE00007FFFF
FFF0FFFFE0003FFFFFFFF0FFFFE0007FFFFFFFF0FFFFE000FFFFFFFFF0FFFFC0
00FFFFFFFFF0FFFFC001FFFFFFFFF0FFFFC003FFFFFFFFF0FFFFC003FFFFFFFF
F0FFFFC003FFFFFFFFF0FFFFC00FFFFFFFFFF0FFFFC00FFFFFFF87F0FFFFE00F
FFFFFF81F0FFFFE00FFFFFFF80F0FFFFE00FFFFFFFC0F0FFFFF80FFFFFFFC030
FFFFF803FFFFFFC010FFFFF803FFFFFFC010FFFFFC03FFFFFFC000FFFFFE01FF
FFFF8000FFFFFF01FFFFFF8000FFFFFF80FFFFFF8000FFFFFFE07FFFFE0000FF
FFFFE00FFFF00000FFFFFFF001FF000000FFFFFFFC0000000010FFFFFFFE0000
000010FFFFFFFFC000000030FFFFFFFFF0000000F0FFFFFFFFF0000000F0FFFF
FFFFFF000007F0FFFFFFFFFFE0007FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -3 85 82 setcachedevice
85 0 0 85 0 -3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 85 def
/ImageMatrix [85 0 0 -85 0 85]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFFFFFFFFF8F801FFFFFFFFFFFFFFFFF8F0003FFFFFFFFFFFE01F
F8E0001FFFFFFFFFFFC003F880000FFFFFFFFFFF8000F880000FFFFFFFFFFF80
00F8800007FFFFFFFFFF800078000003FFFFFFFFFF800008000000FFFFFFFFFF
000000000000FFFFFFFFFF000C000000007FFFFFFFFF001F80000F007FFFFFFF
FF001FF8007FC03FFFFFFFFF001FF880FFE01FFFFFFFFE003FF880FFE01FFFFF
FFFE003FF881FFF80FFFFFFFFE003FF8E3FFFC03FFFFFFFE003FF8E3FFFE03FF
FFFFFE003FF8F3FFFE01FFFFFFFE007FF8FFFFFF01FFFFFFFE007FF8FFFFFF00
FFFFFFF8007FF8FFFFFF807FFFFFF8007FF8FFFFFFE07FFFFFF8007FF8FFFFFF
E07FFFFFF8007FF8FFFFFFF000000000007FF8FFFFFFF80000000000FFF8FFFF
FFF80000000000FFF8FFFFFFFC0000000000FFF8FFFFFFFC0000000000FFF8FF
FFFFFE0000000000FFF8FFFFFFFF83FFFFF800FFF8FFFFFFFF81FFFFF800FFF8
FFFFFFFF81FFFFF800FFF8FFFFFFFFC0FFFFF000FFF8FFFFFFFFE03FFFF000FF
F8FFFFFFFFE03FFFF000FFF8FFFFFFFFF03FFFF000FFF8FFFFFFFFF81FFFF000
FFF8FFFFFFFFF81FFFF000FFF8FFFFFFFFF80FFFF003FFF8FFFFFFFFFE07FFF0
03FFF8FFFFFFFFFE07FFF003FFF8FFFFFFFFFF07FFF003FFF8FFFFFFFFFF83FF
F003FFF8FFFFFFFFFF83FFF003FFF8FFFFFFFFFF80FFF003FFF8FFFFFFFFFFC0
FFF003FFF8FFFFFFFFFFC0FFF003FFF8FFFFFFFFFFE07FF003FFF8FFFFFFFFFF
F83FF003FFF8FFFFFFFFFFF83FF003FFF8FFFFFFFFFFF81FF003FFF8FFFFFFFF
FFFC1FF003FFF8FFFFFFFFFFFC1FF003FFF8FFFFFFFFFFFE0FF003FFF8FFFFFF
FFFFFE0FF003FFF8FFFFFFFFFFFE03F003FFF8FFFFFFFFFFFF03F003FFF8FFFF
FFFFFFFF81F003FFF8FFFFFFFFFFFF81F003FFF8FFFFFFFFFFFFE1F003FFF8FF
FFFFFFFFFFE0F003FFF8FFFFFFFFFFFFE0F003FFF8FFFFFFFFFFFFF07003FFF8
FFFFFFFFFFFFF07003FFF8FFFFFFFFFFFFF87003FFF8FFFFFFFFFFFFF83003FF
F8FFFFFFFFFFFFFC3003FFF8FFFFFFFFFFFFFC0003FFF8FFFFFFFFFFFFFC0003
FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFE0003FFF8FFFFFFFFFFFFFF80
03FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF8003FFF8FFFFFFFFFFFFFF
C003FFF8FFFFFFFFFFFFFFC003FFF8FFFFFFFFFFFFFFE003FFF8FFFFFFFFFFFF
FFE003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFFFFFFF003FFF8FFFFFFFFFF
FFFFF803FFF8FFFFFFFFFFFFFFFE03FFF8FFFFFFFFFFFFFFFF03FFF8FFFFFFFF
FFFFFFFFC7FFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 85 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 1 78 82 setcachedevice
78 0 0 81 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 81 def
/ImageMatrix [78 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFFFCFFC1FFFFFFFFFFFFFFFCFFC03FFFFFFFFFFFFFFCFFC0
1FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE01FFFFFFFFFFFFFFCFFE00FFF
FFFFFFFFFFFCFFF00FFFFFFFFFFFFFFCFFF007FFFFFFFFFFFFFCFFF007FFFFFF
FFFFFFFCFFF007FFFFFFFFFFFFFCFFF807FFFFFFFFFFFFFCFFF803FFFFFFFFFF
FFFCFFFE03FFFFFFFFFFFFFCFFFE03FFFFFFFFFFFFFCFFFE00FFFFFFFFFFFFFC
FFFE00FFFFFFFFFFFFFCFFFF00FFFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF
007FFFFFFFFFFFFCFFFF007FFFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFF803F
FFFFFFFFFFFCFFFF803FFFFFFFFFFFFCFFFFC03FFFFFFFFFFFFCFFFFC01FFFFF
FFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC01FFFFFFFFFFFFCFFFFC00801FFFFFF
FFFCFFFFE00801FFFFFFFFFCFFFFE00C0007FFFFFFFCFFFFE00E00007FFFFFFC
FFFFE00E00001FFFFFFCFFFFF803800001FFFFFCFFFFF803E000007FFFFCFFFF
F803FFE0007FFFFCFFFFF803FFFF803FFFFCFFFFFC01FFFFF807FFFCFFFFFC01
FFFFF803FFFCFFFFFC01FFFFFE00FFFCFFFFFC01FFFFFF803FFCFFFFFC01FFFF
FFE03FFCFFFFFE00FFFFFFF01FFCFFFFFE00FFFFFFF80FFCFFFFFE00FFFFFFF8
07FCFFFFFE00FFFFFFFE03FCFFFFFE007FFFFFFF00FCFFFFFE007FFFFFFF00FC
FFFFFF007FFFFFFF807CFFFFFF007FFFFFFF807CFFFFFF007FFFFFFF803CFFFF
FF007FFFFFFFC03CFFFFFF003FFFFFFFC01CFFFFFF003FFFFFFFC01CFFFFFF80
3FFFFFFFE01CFFFFFF803FFFFFFFE00CFFFFFF803FFFFFFFE00CFFFFFF803FFF
FFFFE00C1FFFFF800FFFFFFFE0001FFFFF800FFFFFFFE00003FFFF800FFFFFFF
E00000FFFFE00FFFFFFFE000007FFFE00FFFFFFFC000007FFFE00FFFFFFFC000
803FFFE00FFFFFFFC000E03FFFE00FFFFFFFC000E03FFFE007FFFFFF8000F00F
FFE007FFFFFF000CF00FFFE007FFFFFE000CF807FFE007FFFFF0000CFC01FFE0
07FFFFC0000CFE01FFF007FFFFC0001CFF803FF007FFFE00003CFFE000F007FF
8000007CFFE0000000000000007CFFF800000000000000FCFFFF000000000000
07FCFFFFC000000000001FFCFFFFFC0000000000FFFCFFFFFFF00000003FFFFC
FFFFFFF00000003FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 1 88 79 setcachedevice
88 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 88 def
/Height 78 def
/ImageMatrix [88 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFFFFFFFE00FFFFFFFC0FFFFFFFFFF8000FFFFFFE0FFFFFFFFFF8000FF
FFFFE01FFFFFFFFE00001FFFFFE00FFFFFFFFC000003FFFFE00FFFFFFFF80000
01FFFFF007FFFFFFF80000007FFFF007FFFFFFF0000F003FFFF807FFFFFFF000
3FF03FFFF807FFFFFFF000FFF80FFFF803FFFFFFE001FFFC07FFF803FFFFFFE0
01FFFC03FFFE00FFFFFF8001FFFC01FFFE00FFFFFF8003FFFE01FFFE00FFFFFF
8003FFFF81FFFF00FFFFFF8007FFFFC0FFFF007FFFFF0007FFFFF8FFFF007FFF
FF0007FFFFF8FFFF007FFFFE000FFFFFFFFFFF803FFFFE000FFFFFFFFFFF803F
FFFE000FFFFFFFFFFF803FFFFE003FFFFFFFFFFFC03FFFFC003FFFFFFFFFFFC0
1FFFFC003FFFFFFFFFFFC01FFFF8007FFFFFFFFFFFC01FFFF8007FFFFFFFFFFF
E01FFFF8007FFFFFFFFFFFE00FFFE000FFFFFFFFFFFFE00FFFE000FFFFFFFFFF
FFE00FFFC000FFFFFFFFFFFFF803FF8001FFFFFFFFFFFFF803FE0001FFFFFFFF
FFFFF803FE0003FFFFFFFFFFFFF803E00003FFFFFFFFFFFFFC01F0000FFFFFFF
FFFFFFFC01F0000FFFFFFFFFFFFFFC01F80000FFFFFFFFFFFFFC01FE00003FFF
FFFFFFFFFC01FF80003FFFFFFFFFFFFE00FFFF000FFFFFFFFFFFFE00FFFFF803
FFFFFFFFFFFE00FFFFF801FFFFFFFFFFFE00FFFFFF803FFFFFFFFFFE007FFFFF
C01FFFFFFFFFFF007FFFFFF01FFFFFFFFFFF007FFFFFF80FFFFFFFFFFF007FFF
FFFE07FFFFFFFFFF007FFFFFFE03FFFFFFFFFF003FFFFFFF00FFFFFFFFFF003F
FFFFFF007FFFFFFFFF803FFFFFFF807FFFFFFFFF803FFFFFFFC07FFFFFFFFF80
3FFFFFFFC03FFFFFFFFF803FFFFFFFC01FFFFFFFFF800FFFFFFFC01FFF1FFFFF
800FFFFFFFE00FFF1FFFFF800FFFFFFFE00FFF03FFFFE00FFFFFFFE00FFF00FF
FFE00FFFFFFFE00FFF007FFFE00FFFFFFFE003FF007FFFE00FFFFFFFE003FF80
3FFFE007FFFFFFE003FFE03FFFE007FFFFFFE003FFE03FFFE007FFFFFFC003FF
F00FFFE007FFFFFFC003FFF00FFFE007FFFFFF8003FFF807FFE007FFFFFF0003
FFFC01FFF007FFFFF80003FFFE01FFF007FFFFF8000FFFFF803FF007FFFFC000
0FFFFFE000F007FFF000001FFFFFE0000000000000001FFFFFF8000000000000
003FFFFFFF000000000000007FFFFFFFC0000000000003FFFFFFFFFC00000000
001FFFFFFFFFFFF000000007FFFFFFFFFFFFF000000007FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
88 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 -6 25 103 setcachedevice
25 0 0 109 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFF8083FFFF8083FFFF8081FFFF8081FFFF8081FFFF80C07FFF80C07FFF80
C07FFF80E07FFF80E03FFF80E03FFF80E01FFF80F01FFF80F01FFF80FC1FFF80
FC0FFF80FC0FFF80FC0FFF80FE07FF80FE07FF80FE07FF80FF01FF80FF01FF80
FF01FF80FF80FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80FFC07F80
FFF07F80FFF03F80FFF03F80FFF01F80FFF81F80FFF81F80FFFC1F80FFFC0780
FFFC0780FFFC0780FFFE0380FFFE0380FFFE0380FFFF0180FFFF0180FFFF0180
FFFFC080FFFFC080FFFFC080FFFFE080FFFFE000FFFFE000FFFFE000FFFFE000
FFFFE000FFFFE080FFFFC080FFFFC080FFFFC080FFFF0180FFFF0180FFFF0180
FFFE0380FFFE0380FFFE0380FFFC0780FFFC0780FFFC0780FFFC1F80FFF81F80
FFF81F80FFF01F80FFF03F80FFF03F80FFF07F80FFC07F80FFC07F80FFC07F80
FFC0FF80FF80FF80FF80FF80FF80FF80FF01FF80FF01FF80FF01FF80FE07FF80
FE07FF80FE07FF80FC0FFF80FC0FFF80FC0FFF80FC1FFF80F01FFF80F01FFF80
E01FFF80E03FFF80E03FFF80E07FFF80C07FFF80C07FFF80C07FFF8081FFFF80
81FFFF8081FFFF8083FFFF8083FFFF80C7FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
95 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 -1 119 82 setcachedevice
119 0 0 83 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 119 def
/Height 83 def
/ImageMatrix [119 0 0 -83 0 83]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FFFFFFFFFFFFFFFFFFFFFFFFFFEF003FFFFFFFFFFFFFFFFFFFFFFFFFEC001
FFFFFFFFFFFFFFFFFFFFF807FE00007FFFFFFFFFFFFFFFFFFFF001FE00003FFF
FFFFFFFFFFFFFFFFF0003E00003FFFFFFFFFFFFFFFFFFFF0003E00003FFFFFFF
FFFFFFFFFFFFE0000E00001FFFFFFFFFFFFFFFFFFFE0000600000FFFFFFFFFFF
FFFFFFFFE0000000000FFFFFFFFF1FFFFFFFFFE00300000007FFFFFFFF0FFFFF
FFFFE003C0C01E07FFFFFFFF0FFFFFFFFFE007FEC0FF07FFFFFFFC07FFFFFFFF
E007FEE3FF81FFFFFFFC03FFFFFFFFE007FEE3FF81FFFFFFF801FFFFFFFFE007
FEFFFF80FFFFFFF8007FFFFFFFE007FEFFFFC0FFFFFFF0003FFFFFFFE007FEFF
FFF0FFFFFFF0003FFFFFFFE007FEFFFFF0FFFFFFF0001FFFFFFFE007FEFFFFF8
7FFFFFE0000FFFFFFFE007FEFFFFF87FFFFFE00007FFFFFFE007FEFFFFF83FFF
FFC00001FFFFFFE007FEFFFFF83FFFFFC00400FFFFFFE007FEFFFFFC3FFFFFC0
0600FFFFFFE007FEFFFFFC3FFFFF000F007FFFFFE007FEFFFFFE1FFFFF000F80
3FFFFFF007FEFFFFFE1FFFFF000F801FFFFFF007FEFFFFFE07FFFE001FC007FF
FFF007FEFFFFFE07FFFE001FF003FFFFF007FEFFFFFF07FFFE007FF803FFFFF0
07FEFFFFFF07FFFE007FFC01FFFFF003FEFFFFFFC3FFFE007FFE00FFFFF003FE
FFFFFFC3FFFC007FFE00FFFFF003FEFFFFFFC1FFFC00FFFF007FFFF003FEFFFF
FFC1FFFC00FFFFC01FFFF003FEFFFFFFE1FFFC00FFFFE01FFFF003FEFFFFFFE1
FFF800FFFFF00FFFF803FEFFFFFFE0FFF801FFFFF807FFF803FEFFFFFFE0FFF8
01FFFFF803FFF803FEFFFFFFF0FFF801FFFFFC01FFF803FEFFFFFFF07FF001FF
FFFF007FF801FEFFFFFFF07FF003FFFFFF007FF801FEFFFFFFF87FF003FFFFFF
807FF801FEFFFFFFF87FF003FFFFFFC03FF801FEFFFFFFF81FF003FFFFFFC01F
F801FEFFFFFFF81FC003FFFFFFE00FFC01FEFFFFFFFC1FC007FFFFFFF007FC01
FEFFFFFFFC1FC007FFFFFFFC07FC01FEFFFFFFFC0FC007FFFFFFFE01FC01FEFF
FFFFFC0FC007FFFFFFFF00FC007EFFFFFFFC0F8007FFFFFFFF00FC007EFFFFFF
FF0F801FFFFFFFFF007C007EFFFFFFFF07801FFFFFFFFF803F007EFFFFFFFF07
801FFFFFFFFFC03F007EFFFFFFFF07801FFFFFFFFFF01F007EFFFFFFFF87003F
FFFFFFFFF807007EFFFFFFFF87003FFFFFFFFFF803003EFFFFFFFF83003FFFFF
FFFFFC01003EFFFFFFFF83003FFFFFFFFFFE01003EFFFFFFFF83003FFFFFFFFF
FE01803EFFFFFFFFC3007FFFFFFFFFFF00803EFFFFFFFFC2007FFFFFFFFFFFC0
003EFFFFFFFFC0007FFFFFFFFFFFC0003EFFFFFFFFC0007FFFFFFFFFFFE0001E
FFFFFFFFC0007FFFFFFFFFFFF0001EFFFFFFFFC0007FFFFFFFFFFFF8001EFFFF
FFFFE000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFC001EFFFFFFFF
E000FFFFFFFFFFFFFC001EFFFFFFFFE000FFFFFFFFFFFFFF000EFFFFFFFFE000
FFFFFFFFFFFFFF800EFFFFFFFFE000FFFFFFFFFFFFFFC00EFFFFFFFFE001FFFF
FFFFFFFFFFE00EFFFFFFFFF001FFFFFFFFFFFFFFF00EFFFFFFFFF001FFFFFFFF
FFFFFFF00EFFFFFFFFF001FFFFFFFFFFFFFFF006FFFFFFFFF001FFFFFFFFFFFF
FFFC06FFFFFFFFF001FFFFFFFFFFFFFFFE06FFFFFFFFF007FFFFFFFFFFFFFFFF
06FFFFFFFFFC07FFFFFFFFFFFFFFFF86FFFFFFFFFC07FFFFFFFFFFFFFFFF86FF
FFFFFFFE07FFFFFFFFFFFFFFFFC6FFFFFFFFFF87FFFFFFFFFFFFFFFFF6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
119 83 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 38 43 95 setcachedevice
43 0 0 57 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 57 def
/ImageMatrix [43 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFFFE0FFE007FFFFE0FF00007FFFE0FC00000FFFE0F8000007FFE0F000
0000FFE0C0001F807FE0C000FFF87FE0C003FFFC1FE08007FFFE07E08007FFFE
03E0801FFFFF01E0003FFFFFC0E0003FFFFFE0E0007FFFFFF8E0007FFFFFFFE0
007FFFFFFFE0007FFFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE000FF
FFFFFFE000FFFFFFFFE000FFFFFFFFE000FFFFFFFFE080FFFFFFFFE080FFFFFF
FFE080FFFFFFFFE0807FFFFFFFE0807FFFFFFFE0C07FFFFFFFE0C07FFFFFFFE0
C07FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F03FFFFFFFE0F81FFFFFFFE0F81F
FFFFFFE0FC1FFFFE1FE0FC07FFFE07E0FC07FFFE03E0FE03FFFF01E0FF01FFFF
01E0FF01FFFFC1E0FFC1FFFFC0E0FFE0FFFFE0E0FFE07FFFE060FFF01FFFE060
FFF80FFFE000FFFC0FFFE000FFFF83FFC000FFFFC07F0000FFFFC0000000FFFF
F0000000FFFFFE000000FFFFFF800060FFFFFFFC00E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
129 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 1 73 76 setcachedevice
73 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 75 def
/ImageMatrix [73 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000003FFFFFF808000000000003FFFFF8080000000000003FFFF80E000
0000000001FFFF80F00000000000007FFF80FC0000000000007FFF80FFFFF81F
FFFFE03FFF80FFFFFC0FFFFFF80FFF80FFFFFC03FFFFF807FF80FFFFFE01FFFF
F803FF80FFFFFE00FFFFFC03FF80FFFFFF00FFFFFE03FF80FFFFFF00FFFFFF81
FF80FFFFFF807FFFFFE1FF80FFFFFF807FFFFFE1FF80FFFFFF803FFFFFFFFF80
FFFFFFE03FFFFFFFFF80FFFFFFE03FFFFFFFFF80FFFFFFE00FFFFFFFFF80FFFF
FFF00FFFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF007FFFFFFFF80FFFFFFF0
07FFFFFFFF80FFFFFFF807FFFFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF803FF
FFFFFF80FFFFFFF803FFFFFFFF80FFFFFFF801FFFFFFFF80FFFFFFFC01FFFFFF
FF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80FFFFFFFC01FFFFFFFF80
FFFFFFFC00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFF
FFFE00FFFFFFFF80FFFFFFFE00FFFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF
803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803FFFFFFF80FFFFFFFF803F
FFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFFFF80FFFFFFFFC01FFFFF
FF80FFFFFFFFC01FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80
FFFFFFFFE00FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFE007FFFFFF80FFFF
FFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFFF007FFFFFF80FFFFFFFF
F807FFFFFF80FFFFFFFFF803FFFFFF80FE3FFFFFF803FFFFFF80FE07FFFFFE03
FFFFFF80FE01FFFFFE00FFFFFF80FE01FFFFFE00FFFFFF80FF80FFFFFF00FFFF
FF80FF80FFFFFF007FFFFF80FF803FFFFF007FFFFF80FFC03FFFFF807FFFFF80
FFE01FFFFFC03FFFFF80FFF01FFFFFC03FFFFF80FFF807FFFFE01FFFFF80FFFE
001FFFF81FFFFF80FFFE0000000000001F80FFFF8000000000000780FFFFE000
000000000080FFFFFC00000000000080FFFFFF80000000000000FFFFFFFE0000
00000000FFFFFFFE000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -1 61 98 setcachedevice
61 0 0 99 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 99 def
/ImageMatrix [61 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF80FFFFFFFFFFFFFF8
0FFFFFFFFFFFFFF803FFFFFFFFFFFFF803FFFFFFFFFFFFF883FFFFFFFFFFFFF8
83FFFFFFFFFFFFF883FFFFFFFFFFFFF881FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8
E1FFFFFFFFFFFFF8E1FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8E0FFFFFFFFFFFFF8
F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F0FFFFFFFFFFFFF8F07FFFFFFFFFFFF8
F07FF800FFFFFFF8F87FF800FFFFFFF8F87FC0000FFFFFF8F87F03FC01FFFFF8
F83E03FC003FFFF8F8380FFFC01FFFF8FC303FFFF007FFF8FC30FFFFF807FFF8
FC20FFFFFE03FFF8FC01FFFFFF00FFF8FC01FFFFFF007FF8FE01FFFFFF803FF8
FE03FFFFFFC01FF8FE03FFFFFFE01FF8FE03FFFFFFE00FF8FF83FFFFFFF80FF8
FF83FFFFFFF803F8FF83FFFFFFF803F8FF83FFFFFFFC01F8FF83FFFFFFFC01F8
FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC3FFFFFFFE01F8FFC1FFFFFFFE00F8
FFC1FFFFFFFE00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8FFE1FFFFFFFF00F8
FFE0FFFFFFFF00F8FFE0FFFFFFFF00F8FFF0FFFFFFFF00F8FFF0FFFFFFFF00F8
FFF0FFFFFFFF00F8FFF03FFFFFFF00F8FFF03FFFFFFF00F8FFF83FFFFFFF00F8
FFF83FFFFFFF01F8FFF83FFFFFFF01F8FFF81FFFFFFE01F8FFFE1FFFFFFE03F8
FFFE1FFFFFFE03F8FFFE1FFFFFFC0FF8FFFE0FF800380FF8FFFE0FF800381FF8
FFFF0FE000003FF8FFFF0FE1FF00FFF8FFFF0FE000003FF8FFFF07E000001FF8
FFFF07F8001803F8FFFF87FFFFFC03F8FFFF87FFFFFE01F8FFFF83FFFFFF00F8
FFFF83FFFFFF00F8FFFFC3FFFFFF8078FFFFC0FFFFFFE038FFFFC0FFFFFFE038
FFFFE0FFFFFFF038FFFFE0FFFFFFF008FFFFE07FFFFFF008FFFFF87FFFFFF008
FFFFF83FFFFFF808FFFFFC3FFFFFF808FFFFFC1FFFFFF800FFFFFE1FFFFFF800
FFFFFE0FFFFFF800FFFFFE0FFFFFF800FFFFFF03FFFFFC00FFFFFF83FFFFFC00
FFFFFFE1FFFFF808FFFFFFE0FFFFF808FFFFFFE07FFFF808FFFFFFF03FFFF008
FFFFFFF80FFFF038FFFFFFFE0FFFF078FFFFFFFF83FFE0F8FFFFFFFFE0FF01F8
FFFFFFFFE00001F8FFFFFFFFF8000FF8FFFFFFFFFF003FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
65 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
74 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
132 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/B/N68 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%BeginResource: font D
10 dict begin
T3Defs
/FontType 3 def
/FontName /N196 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-56 
76 
179 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 60 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 63 23 setcachedevice
63 0 0 71 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 71 def
/ImageMatrix [63 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFC03FE8FFFFFFFFFC000FE03FFFFFFFF00007E01FFFFFFFE00703E
81FFFFFFFE00783EE0FFFFFFF800FC3EF07FFFFFF803FC0EF03FFFFFF003FC0E
F03FFFFFF003FE3EF80FFFFFF007FFFEFC0FFFFFF007FFFEFE07FFFFE00FFFFE
FF83FFFFE00FFFFEFF81FFFFC00FFFFEFFC0FFFFC00FFFFEFFE03FFFC01FFFFE
FFF03FFFC01FFFFEFFF81FFF803FFFFEFFFE0FFF803FFFFEFFFE0FFF803FFFFE
FFFE07FE003FFFFEFFFF03FE00FFFFFEFFFF83FE00FFFFFEFFFFC0FE00FFFFFE
FFFFE07C01FFFFFEFFFFE03C01FFFFFEFFFFF81C01FFFFFEFFFFFC0801FFFFFE
FFFFFE0803FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFE
FFFFFF8007FFFFFEFFFFFFE007FFFFFEFFFFFFF007FFFFFEFFFFFFF007FFFFFE
FFFFFFE00FFFFFFEFFFFFFE007FFFFFEFFFFFFE003FFFFFEFFFFFFE001FFFFFE
FFFFFFE001FFFFFEFFFFFF8020FFFFFEFFFFFF80203FFFFEFFFFFF80203FFFFE
FFFFFF00701FFFFEFFFFFF00780FFFFEFFFFFF007E0FFFFEFFFFFF007F07FFFE
FFFFFE00FF83FFFEFFFFFE00FF80FFFEFFFFFE00FFC07FFEFFFFFC00FFE03FFE
FFFFFC01FFF83FFEFFFFFC01FFFC1FFEFFFFFC01FFFC0FFEFFFFF801FFFC0FFE
FFFFF803FFFE03FEFFFFE003FFFF01FEFFFFE00FFFFF81FEFFFFE00FFFFFE0FE
FFFFC00FFFFFF07EFFFFC00FFFFFF03EF8FF801FFFFFF80EF87F801FFFFFFC06
F87F803FFFFFFE06F87F003FFFFFFF82F83F007FFFFFFF80F80E007FFFFFFF80
FC0000FFFFFFFFC0FE0007FFFFFFFFE0FFC01FFFFFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 46 53 setcachedevice
46 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 53 def
/ImageMatrix [46 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFF80FC1FFFFFFC001C0FFFFFF8000C0FFFFFF0070C8FFFFFF00F8C83FF
FFE00F84E1FFFFE03FCCE0FFFFE03FCCF07FFF803FFCF83FFF807FFCFC3FFF80
7FFCFE0FFF00FFFCFF87FF00FFFCFF83FF00FFFCFFC1FE01FFFCFFE0FE01FFFC
FFF0FE01FFFCFFF83E03FFFCFFFE3C03FFFCFFFE1C03FFFCFFFE0C03FFFCFFFF
000FFFFCFFFF800FFFFCFFFFC00FFFFCFFFFE01FFFFCFFFFE01FFFFCFFFFE01F
FFFCFFFFE01FFFFCFFFFE01FFFFCFFFFC00FFFFCFFFFC003FFFCFFFFC001FFFC
FFFF8060FFFCFFFF8070FFFCFFFF8078FFFCFFFF80F87FFCFFFF00FC3FFCFFFF
00FC0FFCFFFF00FE07FCFFFE03FF83FCFFFE03FFC3FCFFFE03FFE1FCFFF807FF
F0FCFFF807FFF03CFFF007FFF81CEFF00FFFFE0CEFF00FFFFF0C83E00FFFFF84
E3E01FFFFFC4E1C01FFFFFC0E0003FFFFFC0F000FFFFFFE0FC03FFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -16 23 11 setcachedevice
23 0 0 27 0 -16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 23 def
/Height 27 def
/ImageMatrix [23 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF803EFF803EFC000EF01F86E01F86C0FFF6C1FFFEC1FFFE01FFFE03FFFE03FF
FE03FFFE03FFFE03FFFE01FFFE00000E00000E00000EC0FFFEC0FFFEE0FFFEF0
7FFEF01FFEF803FEFC0000FF8000FFF000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
23 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 34 44 setcachedevice
34 0 0 44 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 44 def
/ImageMatrix [34 0 0 -44 0 44]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE001FFFC0FE001FFFC0F80003FFC0F000007FC0E000003FC0E003F80FC0800F
FE03C0803FFF03C0807FFF81C0007FFFE0C0007FFFE04000FFFFF04000FFFFFF
C001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001
FFFFFFC001FFFFFFC081FFFFFFC080FFFFFFC080FFFFFFC080FFFFFFC080FFFF
FFC0E0FFFFFFC0E07FFFFFC0E07FFF1FC0F03FFF03C0F03FFF01C0F83FFF81C0
F80FFF80C0FC0FFFE0C0FC07FFE040FE03FFE040FF81FFF000FFC1FFF000FFF0
3FF000FFF80FE000FFF8000000FFFF000000FFFFC00000FFFFFC0040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 44 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -77 65 3 setcachedevice
65 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 65 def
/Height 80 def
/ImageMatrix [65 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF8007FFFFFFF8087FF00000FFFFFFF8087FF00000FFFFFFF8083FC000001
FFFFFF8081F803FF007FFFFF8081C003FF001FFFFF8080003FFFC007FFFF80C0
00FFFFF803FFFF80C001FFFFFC03FFFF80C007FFFFFE01FFFF80C00FFFFFFF00
FFFF80C00FFFFFFF007FFF80E00FFFFFFFC01FFF80E01FFFFFFFE01FFF80E01F
FFFFFFE01FFF80E03FFFFFFFF00FFF80F03FFFFFFFF00FFF80F03FFFFFFFF007
FF80F03FFFFFFFF807FF80F03FFFFFFFF803FF80F03FFFFFFFF803FF80FC3FFF
FFFFFC03FF80FC3FFFFFFFFC03FF80FC1FFFFFFFFC03FF80FC1FFFFFFFFC01FF
80FC1FFFFFFFFC01FF80FE1FFFFFFFFC01FF80FFFFFFFFFFFC01FF80FFFFFFFF
FFF801FF80FFFFFFFFFFF801FF80FFFFFFFFFFF001FF80FFFFFFFFFFE001FF80
FFFFFFFFFFE001FF80FFFFFFFFFFC003FF80FFFFFFFFFE0003FF80FFFFFFFFC0
0003FF80FFFFFFFC000003FF80FFFFFFC0000007FF80FFFFFFC0000007FF80FF
FFFC0000000FFF80FFFFF00000001FFF80FFFFE00000001FFF80FFFFC0000000
7FFF80FFFF00000000FFFF80FFFF00000003FFFF80FFFF0000003FFFFF80FFFE
000007FFFFFF80FFFE000007FFFFFF80FFFC00007FFFFFFF80FFFC0007FFFFFF
FF80FFFC001FFFFFFFFF80FFFC007FFFFFFFFF80FFFC00FFFFFFFFFF80FFFC00
FFFFFFFE1F80FFFC00FFFFFFFE1F80FFFC01FFFFFFFE1F80FFFC01FFFFFFFE1F
80FFFC01FFFFFFFE1F80FFFE01FFFFFFFE0F80FFFE01FFFFFFFE0F80FFFE01FF
FFFFFE0F80FFFE00FFFFFFFE0F80FFFE00FFFFFFFE0F80FFFF00FFFFFFFE0780
FFFF00FFFFFFFE0780FFFF007FFFFFFE0780FFFFC07FFFFFFC0780FFFFE01FFF
FFFC0180FFFFE01FFFFFFC0180FFFFF00FFFFFF00180FFFFF807FFFFF00180FF
FFF803FFFFE00180FFFFFC01FFFFC00080FFFFFF003FFF800080FFFFFF803FFF
818080FFFFFFE00FF803C080FFFFFFFC00000FF080FFFFFFFC00000FF000FFFF
FFFF00007FF800FFFFFFFFF001FFF800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
65 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
105 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -6 6 104 setcachedevice
6 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 6 def
/Height 110 def
/ImageMatrix [6 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C480808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
80808080808080808080808080C4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
6 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
104 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
98 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 38 35 109 setcachedevice
35 0 0 71 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 71 def
/ImageMatrix [35 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00FFFFFE0C000FFFFE080007FFFE081C01FFFE081F81FFFE080FC0FFFE080FE
03FFE080FE01FFE080FE01FFE0E1FF00FFE0FFFF00FFE0FFFF80FFE0FFFF80FF
E0FFFF807FE0FFFF807FE0FFFF807FE0FFFFE07FE0FFFFE07FE0FFFFE03FE0FF
FFE03FE0FFFFE03FE0FFFFF03FE0FFFFF03FE0FFFFF00FE0FFFFF00FE0FFFFF0
0FE0FFFFF80FE0FFFFF807E0FFFFF807E0FFFFF807E0FFFFFC07E0FFFFFC07E0
FFFFFC03E0FFFFFC03E0FFFFFC03E0FFFFFE03E0FFFFFE03E0FFFFFE01E0FFCF
FE01E0FFC7FE01E0FFC7FF81E0FFC3FF81E0FFE3FF81E0FFE0FF80E0FFE0FF80
E0FFF87FC0E0FFF87FC0E0FFFC3FC1E0FFFE1FC1E0FFFE0381E0FFFF0001E0FF
FF8007E0FFFFF80FE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFF0E0
FFFFFFF0E0FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFF000FFFF
FFF820>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 22 47 75 setcachedevice
47 0 0 53 0 22 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 53 def
/ImageMatrix [47 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC6FFFFFFFFFF00FFFFFFFFFC00FFFFFFFFF000FFFFFFFFF000FFFF
FFFFC000FFFFFFFF0000FFFFFFF80000FFFFFFF00180FFFFFFC00380FFFFFFC0
0F80FFFFFE007F80FFFFFC01FF80FFFFF001FF80FFFF8003FF80FFFF001FFF80
FFFF007FFF80FFFC00FFFF80FFE007FFFF80FF8007FFFF80FF001FFFFF80F800
3FFFFF80F801FFFFFF80E007FFFFFF80C01FFFFFFF80001FFFFFFF80007FFFFF
FF80001FFFFFFF80C01FFFFFFF80E007FFFFFF80F801FFFFFF80F8003FFFFF80
FF001FFFFF80FF8007FFFF80FFE007FFFF80FFFC00FFFF80FFFF007FFF80FFFF
001FFF80FFFF8003FF80FFFFF001FF80FFFFFC01FF80FFFFFE007F80FFFFFFC0
0F80FFFFFFC00380FFFFFFF00180FFFFFFF80000FFFFFFFF0000FFFFFFFFC000
FFFFFFFFF000FFFFFFFFF000FFFFFFFFFC00FFFFFFFFFF00FFFFFFFFFFC6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 3 28 78 setcachedevice
28 0 0 75 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 75 def
/ImageMatrix [28 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE03FF0FFE03FF0FF800FF0FE0383F0FC0380F0FC07C0F0FC07E070FC07F870
FC07F830FC07FC30FC03FC10FC03FC10FC03FE10FC03FE10FC01FE00FE01FF00
FE01FF00FE00FF00FE00FF00FF80FFF0FF803FF0FFC03FF0FFC03FF0FFC01FF0
FFC01FF0FFE01FF0FFE01FF0FFE00FF0FFE00FF0FFF007F0FFF007F0FFF807F0
03F807F003F803F003F803F083FE03F081FE00F081FE00F0E1FF00F0E1FF00F0
E0FF00F0F0FF00F0F07F80F0F87F80F0F83F80F0FC3F83F0FC0703F0FE0003F0
FF8007F0FFE01FF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFF870FFFFC010FFFFC010FFFFC000FFFFC000FFFFC000FFFFC000
FFFFE000FFFFE000FFFFFC10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 -73 44 23 setcachedevice
44 0 0 96 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 96 def
/ImageMatrix [44 0 0 -96 0 96]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F803FFFFFFF0E0007FFFFFF0C0001FFFFFF081F803FFFFF081FC03FFFFF0803E
01FFFFF0801F00FFFFF0801F007FFFF0801F803FFFF0801FE00FFFF0801FE00F
FFF0C01FF00FFFF0F0FFF007FFF0F0FFF007FFF0FFFFF807FFF0FFFFF803FFF0
FFFFF803FFF0FFFFFC03FFF0FFFFFC03FFF0FFFFFC01FFF0FFFFFC01FFF0FFFF
FC01FFF0FFFFFE01FFF0FFFFFE01FFF0FFFFFE00FFF0FFFFFE00FFF0FFFFFE00
FFF0FFFFFF80FFF0FFFFFF80FFF0FFFFFF803FF0FFFFFF803FF0FFFFFF803FF0
FFFFFFC03FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFE01FF0FFFF
FFE01FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFF00FF0FFFFFFF0
0FF0FFFFFFF007F0FFFFFFF007F0FFFFFFF007F0FFFFFFF807F0FFFFFFF807F0
FFFFFFF803F0FFFFFFF803F0FFFFFFF803F0FFFFFFFE03F0FFFFFFFE03F0FFF8
3FFE00F0FFF83FFE00F0FFF83FFE00F0FFFC1FFF00F0FFFC1FFF00F0FFFE1FFF
00F0FFFE0FFF0070FFFF0FFF8070FFFF03FF8070FFFF01FF8070FFFF81FF8070
FFFFE1FF80F0FFFFF0FF80F0FFFFF87F83F0FFFFF80F03F0FFFFFC0003F0FFFF
FF800FF0FFFFFFE03FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFF
FFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0
FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFF870FFFFFFFFC010FFFFFFFFC010FFFFFFFFC000FFFFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFE000FFFFFFFFE000FFFFFFFFFC30
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 96 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -78 68 0 setcachedevice
68 0 0 78 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 78 def
/ImageMatrix [68 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FFFE
00000000F8001FFFFFF80007F0FF007FFFFFFE000FF0FF81FFFFFFFF001FF0FF
C1FFFFFFFF001FF0FFC1FFFFFFFE001FF0FFC1FFFFFFFE001FF0FFE1FFFFFFFE
007FF0FFE1FFFFFFFE007FF0FFE1FFFFFFFC007FF0FFF07FFFFFFC00FFF0FFF0
7FFFFFFC00FFF0FFF07FFFFFF800FFF0FFF03FFFFFF800FFF0FFFC3FFFFFF801
FFF0FFFC3FFFFFF801FFF0FFFC3FFFFFF001FFF0FFFC1FFFFFF001FFF0FFFC1F
FFFFF001FFF0FFFE1FFFFFF003FFF0FFFE1FFFFFF003FFF0FFFE0FFFFFC003FF
F0FFFF0FFFFFC007FFF0FFFF0FFFFFC007FFF0FFFF07FFFF8007FFF0FFFF07FF
FF8007FFF0FFFF87FFFF801FFFF0FFFF87FFFF801FFFF0FFFF87FFFF001FFFF0
FFFF81FFFF001FFFF0FFFFC1FFFF003FFFF0FFFFC1FFFE003FFFF0FFFFC1FFFE
003FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFC007FFFF0FF
FFF07FFC007FFFF0FFFFF87FFC00FFFFF0FFFFF87FFC00FFFFF0FFFFF87FF000
FFFFF0FFFFF83FF000FFFFF0FFFFF83FF000FFFFF0FFFFFC3FF001FFFFF0FFFF
FC1FE001FFFFF0FFFFFC1FE001FFFFF0FFFFFE1FE007FFFFF0FFFFFE1FE007FF
FFF0FFFFFE1FC007FFFFF0FFFFFE07C007FFFFF0FFFFFF07C00FFFFFF0FFFFFF
07C00FFFFFF0FFFFFF07800FFFFFF0FFFFFFC3801FFFFFF0FFFFFFC3801FFFFF
F0FFFFFFC3001FFFFFF0FFFFFFC1001FFFFFF0FFFFFFE1003FFFFFF0FFFFFFE1
003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0
FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF801
FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FF
FFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FF
FFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
0 0 0 39 35 94 setcachedevice
35 0 0 55 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 55 def
/ImageMatrix [35 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFE0FFE001FFE0FF80007FE0FC0FF01FE0F00FF003E0E07FFC01E0C1FF
FE00E0C3FFFE00E0C7FFFF00E001FFFF0060007FFF0060007FFF0000007FFFC0
00007FFFC000007FFFC000C0FFFFC000C0FFFFC000E1FFFFC000FFFFFFC000FF
FFFFC000FFFFFF0060FFFFFF0060FFFFFF0060FFFFFE00E0FFFFFE00E0FFFFFE
01E0FFFFFC03E0FFFFF01FE0FFC0001FE0FFC0007FE0FFC0007FE0FFFF807FE0
FFFFF03FE0FFFFF81FE0FFFFF807E0FFFFFC03E0FFFFFC01E0FFFFFE01E0FFFF
FE01E0FFFFFE00E0F8FFFE00E0E01FFE00E0E01FFF00E0E01FFF00E0E00FFF00
E0E01FFE00E0E01FFE00E0E01FFE00E0F0FFFC01E0F0FFFC03E0F87FF807E0FC
07F01FE0FC00001FE0FF80007FE0FFF001FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 56 69 94 setcachedevice
69 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 38 def
/ImageMatrix [69 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFF87FFFFE03F8F87FFFF87FFFFE03F8F03FFFF03FFFF801F8F00FFFF00F
FFF07038F00FFFF00FFFF07038F00FFFF00FFFE07E18F80FFFF80FFFE07E08F8
0FFFF80FFFE07F08F807FFF807FFE07F88F807FFF807FFE03F80F807FFF807FF
E03F80FC07FFFC07FFF00FC0FC03FFFC03FFF00FC0FC03FFFC03FFF80FC0FC03
FFFC03FFF80FE0FE03FFFE03FFF807F8FE03FFFE03FFF807F8FE01FFFE01FFFC
07F8FE01FFFE01FFFC03F8FE01FFFE01FFFC03F8FF81FFFF81FFFE03F8FF81FF
FF81FFFE03F8FF80FFFF80FFFE03F83F80FFFF80FFFE01F81F80FFFF80FFFE01
F81FC0FFFFC0FFFF81F81FC03FFFC03FFF81F80FC01FFFC03FFF81F80FC01FFF
C01FFF81F88FC00FFFC00FFF81F883E007FFC00FFF81F883E007FFC08FFF81F8
E3E0C3FFC087FF81F8E1E0E0FFC1C0FF83F8E1C0E03F81C03E03F8F001F80001
F80003F8F003FE0007FC000FF8FC0FFF803FFF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 6 19 49 setcachedevice
19 0 0 43 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 43 def
/ImageMatrix [19 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FE0FC0FE0F803E0F061E0F06060F07C60F07C20F07E20F07E20F81F00F81F
00F81F20F80FE0FC0FE0FC0FE0FF07E0FF07E0FF07E01F03E01F83E01F83E01F
83E00781E0C3C1E0E1C3E0E1C3E0F007E0FC0FE0FC0FE0FFFFE0FFFFE0FFFFE0
FFFFE0FFFFE0FFFFE0FFFFE0FFE1E0FFE1E0FFE060FFE020FFE020FFE020FFF0
60>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
0 0 0 6 22 46 setcachedevice
22 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 40 def
/ImageMatrix [22 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000FE01FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03
FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF
03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FC
FF03FC0103FC0003FC0003FCFC03FCFF03FCFF03FCFFC3FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
39 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 3 44 76 setcachedevice
44 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 73 def
/ImageMatrix [44 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000030800000000030800000000030800000000030C00000000010E000
00000010F00000000010F00000000010F00000000010F80FFFFFFC10FE07FFFF
FE10FF07FFFFFE10FF83FFFFFE10FFC0FFFFFE10FFC07FFFFE00FFE03FFFFF00
FFF81FFFFF00FFF81FFFFF00FFFC0FFFFF00FFFE03FFFFF0FFFE01FFFFF0FFFF
00FFFFF0FFFF807FFFF0FFFFE07FFFF0FFFFF03FFFF0FFFFF80FFFF0FFFFF807
FFF0FFFFF803FFF0FFFFFC01FFF0FFFFFE01FFF0FFFFFF80FFF0FFFFFFC03FF0
FFFFFFC01FF0FFFFFFC00FF0FFFFFFE007F0FFFFFFF007F0FFFFFFF003F0FFFF
FFF800F0FFFFFFF80070FFFFFFF80070FFFFFFFE0030FFFFFFFE0030FFFFFFFF
0030FFFFFFFF0010FFFFFFFF0010FFFFFFFF0010F8FFFFFF8000F8FFFFFF8000
E01FFFFF8000C00FFFFF80008007FFFF80008007FFFF80008007FFFF80008007
FFFF80008007FFFF80008007FFFF80008007FFFF8000800FFFFF0000801FFFFF
0010C3FFFFFF0010C1FFFFFF0010C1FFFFFE0030C0FFFFFE0030E0FFFFF80030
F03FFFF80070F03FFFF800F0F81FFFF003F0FE07FFC007F0FE00FE0007F0FF00
00000FF0FFC000003FF0FFF80001FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80001FFF0FFF80001FFF0FFC000003FF0FF007F801FF0FE00
7F8007F0F807FFC003F0F01FFFE000F0F03FFFF000F0E0FFFFF80070C1FFFFF8
0070C1FFFFF80030C01FFFFE0030800FFFFE0010800FFFFE00108007FFFF0010
8007FFFF00108007FFFF00008007FFFF00008007FFFF00008007FFFF0000C00F
FFFF0000E01FFFFF0000E01FFFFF0000F8FFFFFF0000FFFFFFFF0000FFFFFFFF
0000FFFFFFFF0010FFFFFFFF0010FFFFFFFE0010FFFFFFFE0010FFFFFFFE0030
FFFFFFFE0030FFFFFFF80070FFFFFFF800F0FFFFFFF000F0FFFFFFE003F0FFFF
FFC007F0FFFFFFC00FF0FFFFFF803FF0FFFC0001FFF0FFFC0001FFF0FFFC0003
FFF0FFFFFC00FFF0FFFFFF80FFF0FFFFFFC03FF0FFFFFFE00FF0FFFFFFE007F0
FFFFFFE003F0FFFFFFF003F0FFFFFFF003F0FFFFFFF800F0FFFFFFF800F0FFFF
FFF80070FFFFFFF80070F807FFFE0030F807FFFE0030F003FFFE0030E003FFFE
0030E003FFFE0030E000FFFE0030E000FFFE0030E003FFFE0030E003FFFE0030
E007FFFE0030E007FFFE0030F00FFFF80070F03FFFF80070F83FFFF800F0F81F
FFF003F0FE0FFFF007F0FE03FFE007F0FF807F800FF0FFC000003FF0FFF80001
FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 28 60 78 setcachedevice
60 0 0 50 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 50 def
/ImageMatrix [60 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFF807FF0FF87FFFFFF807FF0FC03FFFFFE001FF0FC01FFFFF80E0FF0
FC01FFFFF00E03F0FE01FFFFF01F81F0FE01FFFFF01FE0F0FE01FFFFF01FE0F0
FE00FFFFF01FF0F0FF80FFFFF01FF870FF80FFFFF00FF870FF80FFFFF00FF830
FF803FFFF00FFC30FF803FFFF00FFC30FFC03FFFF007FC00FFC03FFFF807FE00
FFC03FFFF807FE00FFC01FFFF803FE00FFC01FFFF803FE00FFE01FFFFE03FFF0
FFE01FFFFE03FFF0FFE01FFFFE00FFF0FFE00FFFFE00FFF0FFE00FFFFF00FFF0
FFF00FFFFF007FF0FFF00FFFFF007FF0FFF00FFFFF807FF0FFF007FFFF807FF0
FFF007FFFF803FF0FFF807FFFF803FF0FFF807FFFFC03FF0FFF807FFFFC03FF0
03F803FFFFC03FF003FE03FFFFC01FF003FE00FFFFC01FF083FE00FFFFE01FF0
81FE007FFFE01FF081FE007FFFE01FF0E1FE007FFFE01FF0E1FF003FFFE01FF0
E0FF001FFFE01FF0E0FF000FFFE01FF0F0FF0003FFE01FF0F0FF0303FFE03FF0
F87F0381FFE03FF0F83E07E0FFC07FF0F80E07E03F807FF0FC0007F80000FFF0
FE001FFE0003FFF0FFC0FFFFC00FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0081FFFFFFFFFFFE00
81FFFFFFFFFFFE00807FFFFFFFFFFC00C07FFFFFFFFFFC08C07FFFFFFFFFFC08
E07FFFFFFFFFFC18E03FFFFFFFFFF018E03FFFFFFFFFF018E01FFFFFFFFFE018
F01FFFFFFFFFE038F00FFFFFFFFFC038FC0FFFFFFFFFC078FC0FFFFFFFFFC078
FE0FFFFFFFFFC1F8FE07FFFFFFFF81F8FE07FFFFFFFF81F8FE01FFFFFFFF01F8
FF01FFFFFFFF03F8FF01FFFFFFFF03F8FF80FFFFFFFC07F8FF80FFFFFFFC07F8
FF80FFFFFFFC07F8FFC07FFFFFF80FF8FFC07FFFFFF80FF8FFC07FFFFFF80FF8
FFF03FFFFFF01FF8FFF03FFFFFF01FF8FFF01FFFFFE01FF8FFF81FFFFFE07FF8
FFF81FFFFFE07FF8FFFC1FFFFFE0FFF8FFFC07FFFFC0FFF8FFFC07FFFFC0FFF8
FFFC03FFFF00FFF8FFFE03FFFF01FFF8FFFE03FFFF01FFF8FFFF01FFFE03FFF8
FFFF01FFFE03FFF8FFFF00FFFC03FFF8FFFFC0FFFC07FFF8FFFFC0FFFC07FFF8
FFFFE0FFFC1FFFF8FFFFE07FF81FFFF8FFFFE07FF81FFFF8FFFFE01FF01FFFF8
FFFFF01FF03FFFF8FFFFF00FC03FFFF8FFFFF80FC07FFFF8FFFFF80FC07FFFF8
FFFFFC0FC0FFFFF8FFFFFC0780FFFFF8FFFFFC0780FFFFF8FFFFFC0300FFFFF8
FFFFFF0301FFFFF8FFFFFF0301FFFFF8FFFFFF8007FFFFF8FFFFFF8007FFFFF8
FFFFFF8007FFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8
FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFF03FFFFFF8
FFFFFFFC7FFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a36 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 -35 41 39 setcachedevice
41 0 0 74 0 -35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 74 def
/ImageMatrix [41 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFFFFF80C007FFFFFF808003FFFFFF808380FFFFFF8083C0FFFFFF8080C0
FFFFFF8080E07FFFFF8080E07FFFFF8080E03FFFFF8080F83FFFFF80E1F83FFF
FF80FFF81FFFFF80FFF81FFFFF80FFF81FFFFF80FFF80FFFFF80FFFC0FFFFF80
FFFC0FFFFF80FFFC0FFFFF80FFFC0FFFFF80FFFC03FFFF80FFFC03FFFF80FFFE
03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE01FFFF80FFFE01FF
FF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80
FFFF00FFFF80FFFF00FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF807FFF80FFFF807FFF80FFFFE07FFF80FFFFE07FFF80FFFFE07F
FF80FFFFE07FFF80FFFFE03FFF80FFFFE03FFF80FFFFF03FFF80FFFFF03FFF80
FFFFF03FFF80FFF800000F80FFF800000F80FFF800000F80FFFFF00FFF80FFFF
F80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF807FF80FFFFF807
FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07C380FFFFFC038000
FFFFFE038000FFFFFE038000FFFFFE038000FFFFFE038000FFFFFF81C000FFFF
FF80E000FFFFFFC0F800FFFFFFF00080FFFFFFFE0780FFFFFFFE0780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 -38 20 43 setcachedevice
20 0 0 81 0 -38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF80FFFF00FFFF00FFFC10FFF870FFF070FFE0F0FFC1F0FFC1F0FF03F0FF07
F0FE07F0FC07F0FC1FF0FC1FF0F83FF0F83FF0F03FF0F07FF0F07FF0F07FF0C0
FFF0C0FFF0C0FFF0C0FFF080FFF081FFF081FFF081FFF081FFF081FFF001FFF0
01FFF001FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FF
F007FFF007FFF007FFF007FFF001FFF001FFF001FFF081FFF081FFF081FFF081
FFF081FFF080FFF0C0FFF0C0FFF0C0FFF0C0FFF0C07FF0F07FF0F07FF0F07FF0
F83FF0F83FF0F81FF0FC1FF0FC1FF0FE07F0FF07F0FF03F0FF01F0FFC1F0FFE1
F0FFF0F0FFF870FFF810FFFC00FFFF00FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
0 0 0 -43 20 38 setcachedevice
20 0 0 81 0 -43 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF087FFF087FFF0C3FFF0E1FFF0E0FFF0F03FF0F81FF0F81FF0FE0FF0FF0F
F0FF07F0FF03F0FF83F0FF83F0FFC0F0FFC0F0FFC070FFE070FFE070FFE070FF
F830FFF830FFF830FFF830FFF810FFFC10FFFC10FFFC10FFFC10FFFC10FFFC00
FFFC00FFFC00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE
00FFFE00FFFE00FFFE00FFFE00FFFC00FFFC00FFFC00FFFC10FFFC10FFFC10FF
FC10FFFC10FFF810FFF830FFF830FFF830FFF830FFE030FFE070FFE070FFE070
FFC0F0FFC0F0FF80F0FF83F0FF83F0FF07F0FF0FF0FE0FF0F80FF0F81FF0F83F
F0F0FFF0E1FFF0C1FFF083FFF087FFF08FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a42 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -77 54 23 setcachedevice
54 0 0 100 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 100 def
/ImageMatrix [54 0 0 -100 0 100]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFCF000FFFFFFFFFCC0007FFFFFFFFCC1E01FFFFFFFFCC3F81FFF
FFFFFC81FC1FFFFFFFFC803E0FFFFFFFFC801E03FFFFFFFC801E03FFFFFFFC80
1E01FFFFFFFC801F01FFFFFFFCC01F01FFFFFFFCC01F00FFFFFFFCC01F00FFFF
FFFCF03F00FFFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF
807FFFFFFCFFFF803FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFF
FCFFFFE03FFFFFFCFFFFE00FFFFFFCFFFFE00FFFFFFCFFFFF00FFFFFFCFFFFF0
0FFFFFFCFFFFF00FFFFFFCFFFFF00FFFFFFCFFFFF007FFFFFCFFFFF007FFFFFC
FFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF803
FFFFFCFFFFF803FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFF
FFFC03FFFFFCFFFFFC01FFFFFCFFFFFC01FFFFFCFFFFFE01FFFFFCFFFFFE01FF
FFFCFFFFFE01FFFFFCFFFFFE01FFFFFCFFFFFE00FFFFFCFFFFFE00FFFFFCFFFF
FF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFF
FCFFFFFF803FFFFCFFFFFF803FFFFCFFFFFFC03FFFFCFFFFFFC03FFFFCFFFFFF
C03FFFFCFFFFFFC03FFFFCFFFFFFC01FFFFCFFFFFFC01FFFFCFFFFFFE01FFFFC
FFFFFFE01FFFFCFFFFFFE01FFFFCFFFF80000001FCFFFF80000001FCFFFF8000
0001FCFFFF80000001FCFFFFFFF00FFFFCFFFFFFF00FFFFCFFFFFFF00FFFFCFF
FFFFF007FFFCFFFFFFF007FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF807
FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF803FFFCFFFFFFFE03FFFCFFFF
FFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FC3CFFFFFFFE00F0
04FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF80F000FFFFFF
FF807000FFFFFFFF807000FFFFFFFFC07800FFFFFFFFC07E00FFFFFFFFE03F80
FFFFFFFFF81E04FFFFFFFFF80004FFFFFFFFFE000CFFFFFFFFFF80FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 100 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
0 0 0 -78 54 23 setcachedevice
54 0 0 101 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 101 def
/ImageMatrix [54 0 0 -101 0 101]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFC03FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFF
FFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFFFFFCE0
1FFFFFFFFFFCF01FFFFFFFFFFCF01FFFFFFFFFFCF80FFFFFFFFFFCF80FFFFFFF
FFFCF807FFFFFFFFFCFC07FFFFFFFFFCFC07FFFFFFFFFCFF03FFFFFFFFFCFF03
FFFFFFFFFCFF01FFFFFFFFFCFF81FFFFFFFFFCFF807FFFFFFFFCFFC07FFFFFFF
FCFFC07FFFFFFFFCFFE03FFFFFFFFCFFE03FFFFFFFFCFFE01FFFFFFFFCFFF01F
FFFFFFFCFFF01FFFFFFFFCFFFC0FFFFFFFFCFFFC0FFFFFFFFCFFFC07FFFFFFFC
FFFE07FFFFFFFCFFFE01FFFFFFFCFFFF01FFFFFFFCFFFF01FFFFFFFCFFFF80FF
FFFFFCFFFF80FFFFFFFCFFFF807FFFFFFCFFFFC07FFFFFFCFFFFC07FFFFFFCFF
FFF03FFFFFFCFFFFF03FFFFFFCFFFFF01FFFFFFCFFFFF81FFFFFFCFFFFF807FF
FFFCFFFFFC07FFFFFCFFFFFC07FFFFFCFFFFFE03FFFFFCFFFFFE03FFFFFCFFFF
FE01FFFFFCFFFFFF01FFFFFCFFFFFF01FFFFFCFFFFFFC0FFFFFCFFFFFFC0FFFF
FCFFFFFFC07FFFFCFFFFFFE07FFFFCFFFFFFE01FFFFCFFFFFFF01FFFFCFFFFFF
F01FFFFCFFFFFFF80FFFFCFFFFFFF80FFFFCFFFFFFF807FFFCFFFFFFFC07FFFC
FFFFFFFC07FFFCFFFFFFFF03FFFCFFFFFFFF03FFFCFFFFFFFF01FFFCFFFFFFFF
81FFFCFFFFFFFF807FFCFFFFFFFFC07FFCFFFFFFFFC07FFCFFFFFFFFE03FFCFF
FFFFFFE03FFCFFFFFFFFE01FFCFFFFFFFFF01FFCFFFFFFFFF01FFCFFFFFFFFFC
0FFCFFFFFFFFFC0FFCFFFFFFFFFC07FCFFFFFFFFFE07FCFFFFFFFFFE01FCFFFF
FFFFFF01FCFFFFFFFFFF01FCFFFFFFFFFF80FCFFFFFFFFFF80FCFFFFFFFFFF80
7CFFFFFFFFFFC07CFFFFFFFFFFC07CFFFFFFFFFFF03CFFFFFFFFFFF03CFFFFFF
FFFFF01CFFFFFFFFFFF81CFFFFFFFFFFF804FFFFFFFFFFFC04FFFFFFFFFFFC04
FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFF00FFFFFFFF
FFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 101 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a45 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
0 0 0 -8 44 85 setcachedevice
44 0 0 93 0 -8 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 93 def
/ImageMatrix [44 0 0 -93 0 93]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF03FFFFFFF0FF03
FFFFFFF0FF03800FFFF0FF800003FFF0FF800003FFF0FF801FC0FFF0FFC07FF0
3FF0FF807FF00FF0FF807FF80FF0FF007FFE07F0FF007FFF07F0FE007FFF83F0
F8007FFF80F0F8003FFF80F0F8003FFFC0F0F0003FFFC070F0183FFFC070F018
1FFFC070E0381FFFE030E0381FFFE030E03C1FFFE030C03C0FFFE010C03C0FFF
E010C03C0FFFE010C03E0FFFE010C03E0FFFE010C0FE03FFF810C0FE03FFF810
C0FE03FFF81080FF03FFF80080FF01FFF80080FF01FFF80080FF01FFF80080FF
81FFF80080FF81FFF80080FF80FFF80080FF80FFF80080FF80FFF80080FFE0FF
F80080FFE07FF80080FFE07FF80080FFE07FF80080FFF07FF80080FFF03FF800
80FFF03FF80080FFF03FF80080FFF83FF80080FFF83FF80080FFF80FF80080FF
F80FF80080FFF80FF80080FFFC0FF80080FFFC0FF80080FFFC07F80080FFFC07
F80080FFFC07F800C0FFFE03F810C0FFFE03F810C0FFFE03F810C0FFFF83F810
C0FFFF83F810C03FFF81E010C03FFF81E010E03FFF81E030E03FFFC1E030E03F
FFC1E030E03FFFC0E030E03FFFC0E030F01FFFC0C070F01FFFE00070F81FFFE0
00F0F81FFFE000F0FE0FFFF003F0FE0FFFF003F0FE07FFF003F0FF03FFF007F0
FF83FFF00FF0FFC0FFF81FF0FFE07FF01FF0FFE01FC00FF0FFF800000FF0FFFE
00000FF0FFFF800E0FF0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFF
07F0FFFFFFFF07F0FFFFFFFF8FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 93 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a47 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
97 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 6 28 61 setcachedevice
28 0 0 55 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 55 def
/ImageMatrix [28 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFF0F01FFFF0C007FFF0C3C0FFF081C07FF081E07FF081F83FF0C1F83FF0
E1FC1FF0FFFC1FF0FFFC1FF0FFFC0FF0FFFE0FF0FFFE0FF0FFFE0FF0FFFE0FF0
FFFE03F0FFFF03F0FFFF03F0FFFF03F0FFFF03F0FFFF81F0FFFF81F0FFFF81F0
FFFF81F0FFFF81F0FFFFE0F0FFFFE0F0FFFFE0F0FFFFE0F0FF8FE070FF8FF070
FF8FF070FFC7F070FFC7F070FFC3F070FFE07070FFF870F0FFFC00F0FFFF03F0
FFFF03F0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFC30FFFFFC30FFFFF800FFFFF800FFFFF800FFFFFC00FFFFFE30>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
0 0 0 6 66 93 setcachedevice
66 0 0 87 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
FFFFFFFFF040FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF00
00FFFFFFFFFFFFF80000FFFFFFFFFFFFE00040FFFFFFFFFFFF0003C0FFFFFFFF
FFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFFFFF001FFC0FFFFFFFFFF8001FFC0
FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC0
07FFFFC0FFFFFFFF001FFFFFC0FFFFFFF8001FFFFFC0FFFFFFE0007FFFFFC0FF
FFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FFFFFC007FFFFFFFC0FFFFF001FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFFFFFFC0FFF0003FFFFFFFFFC0FFF0
00FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF001FFFFFFFFFFFC0F8001FFFFFFFFF
FFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0007FFF
FFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFFFFFFFFC0C001FFFFFFFFFFFF
C0F0003FFFFFFFFFFFC0FC003FFFFFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FF
FFFFFFFFC0FFE0007FFFFFFFFFC0FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0
FFFFC003FFFFFFFFC0FFFFF800FFFFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007
FFFFFFC0FFFFFFC001FFFFFFC0FFFFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FF
FFFFFF800FFFFFC0FFFFFFFFE001FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC00
1FFFC0FFFFFFFFFF0003FFC0FFFFFFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFF
FFFFFFFE001FC0FFFFFFFFFFFE0007C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF0
0040FFFFFFFFFFFFFC0040FFFFFFFFFFFFFF8000FFFFFFFFFFFFFFE000FFFFFF
FFFFFFFFE000FFFFFFFFFFFFFFFC40>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a53 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -77 76 3 setcachedevice
76 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 76 def
/Height 80 def
/ImageMatrix [76 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8001FFFFFFFFFF0FFFFC00000FFFFFFFFF0FFFFC00000FFFFFFFFF0FFFE
00FF801FFFFFFFF0FFF803FFF803FFFFFFF0FFC003FFF800FFFFFFF0FF801FFF
FE001FFFFFF0FF003FFFFFC00FFFFFF0FF007FFFFFE00FFFFFF0FE00FFFFFFF8
07FFFFF0FC01FFFFFFFC01FFFFF0FC01FFFFFFFC007FFFF0F001FFFFFFFF003F
FFF0F007FFFFFFFF801FFFF0F007FFFFFFFFC01FFFF0E00FFFFFFFFFE00FFFF0
E00FFFFFFFFFF007FFF0C00FFFFFFFFFF001FFF0C00FFFFFFFFFF000FFF0C00F
FFFFFFFFFC007FF0C00FFFFFFFFFFE007FF0801FFFFFFFFFFE007FF0801FFFFF
FFFFFF003FF0801FFFFFFFFFFF001FF0801FFFFFFFFFFF001FF0801FFFFFFFFF
FF8007F0801FFFFFFFFFFFC007F0801FFFFFFFFFFFC003F0801FFFFFFFFFFFC0
03F0801FFFFFFFFFFFC001F0801FFFFFFFFFFFF001F0800FFFFFFFFFFFF000F0
800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800F
FFFFFFFFFFF80070800FFFFFFFFFFFFC0070800FFFFFFFFFFFFC0070800FFFFF
FFFFFFFC0070C007FFFFFFFFFFFE0010C007FFFFFFFFFFFE0010C007FFFFFFFF
FFFE0010C007FFFFFFFFFFFE0010C001FFFFFFFFFFFE0010E001FFFFFFFFFFFF
0010E001FFFFFFFFFFFF0000F001FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000
F000FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000FC00FFFFFFFFFFFF0000FC00
7FFFFFFFFFFF0000FE007FFFFFFFFFFFC000FE003FFFFFFFFFFFC000FF003FFF
FFFFFFFFC000FF001FFFFFFFFFFFC000FF801FFFFFFFFFFFC010FF801FFFFFFF
FFFFC010FFC007FFFFFFFFFF0010FFC007FFFFFFFFFF0010FFF003FFFFFFFFFF
0010FFF801FFFFFFFFFF0010FFFC01FFFFFFFFFF0070FFFC01FFFFFFFFFF0070
FFFE00FFFFFFFFFE00F0FFFE007FFFFFFFFE00F0FFFF001FFFFFFFFE00F0FFFF
C00FFFFFFFFC01F0FFFFF00FFFFFFFFC01F0FFFFF807FFFFFFFC03F0FFFFFC03
FFFFFFF807F0FFFFFC007FFFFFF007F0FFFFFF803FFFFFC01FF0FFFFFFC00FFF
FF803FF0FFFFFFF00FFFFF807FF0FFFFFFFE01FFFE01FFF0FFFFFFFF803FE007
FFF0FFFFFFFF80000007FFF0FFFFFFFFF800001FFFF0FFFFFFFFFFC003FFFFF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
76 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -2 75 76 setcachedevice
75 0 0 78 0 -2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 75 def
/Height 78 def
/ImageMatrix [75 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000007FFFF8000000200000007FFFF8000000000000007FFFF8000000000000
007FFFF800000000FC000FFFFFFFF0001FE0FFC01FFFFFFFFC003FE0FFE03FFF
FFFFFC003FE0FFF03FFFFFFFFC003FE0FFF01FFFFFFFFC003FE0FFFC1FFFFFFF
FC007FE0FFFE0FFFFFFFFC007FE0FFFE0FFFFFFFFC007FE0FFFF0FFFFFFFFC00
7FE0FFFF87FFFFFFFC007FE0FFFF87FFFFFFFC007FE0FFFF81FFFFFFFC007FE0
FFFFC0FFFFFFFC007FE0FFFFC0FFFFFFFC007FE0FFFFF0FFFFFFFC007FE0FFFF
F87FFFFFF8007FE0FFFFF87FFFFFF8007FE0FFFFF83FFFFFF8007FE0FFFFFC1F
FFFFF801FFE0FFFFFC1FFFFFF801FFE0FFFFFE1FFFFFF801FFE0FFFFFF000000
0001FFE0FFFFFF0000000001FFE0FFFFFF0000000001FFE0FFFFFFC000000001
FFE0FFFFFFC3FFFFF801FFE0FFFFFFE1FFFFF801FFE0FFFFFFF0FFFFF801FFE0
FFFFFFF0FFFFF001FFE0FFFFFFF07FFFF001FFE0FFFFFFF87FFFF001FFE0FFFF
FFF87FFFF003FFE0FFFFFFFC1FFFF003FFE0FFFFFFFC0FFFF003FFE0FFFFFFFC
0FFFF003FFE0FFFFFFFF07FFF003FFE0FFFFFFFF87FFF003FFE0FFFFFFFF87FF
F003FFE0FFFFFFFFC3FFF003FFE0FFFFFFFFC1FFF003FFE0FFFFFFFFC1FFF003
FFE0FFFFFFFFE07FF003FFE0FFFFFFFFF07FE003FFE0FFFFFFFFF07FE003FFE0
FFFFFFFFFC3FE003FFE0FFFFFFFFFC3FE007FFE0FFFFFFFFFC1FE007FFE0FFFF
FFFFFE0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFF
FF87E007FFE0FFFFFFFFFF87E007FFE0FFFFFFFFFF81E007FFE0FFFFFFFFFFC0
E007FFE0FFFFFFFFFFC0E007FFE0FFFFFFFFFFF0E007FFE0FFFFFFFFFFF84007
FFE0FFFFFFFFFFF84007FFE0FFFFFFFFFFF80007FFE0FFFFFFFFFFFC000FFFE0
FFFFFFFFFFFC000FFFE0FFFFFFFFFFFE000FFFE0FFFFFFFFFFFF000FFFE0FFFF
FFFFFFFF000FFFE0FFFFFFFFFFFF000FFFE0FFFFFFFFFFFFC00FFFE0FFFFFFFF
FFFFC00FFFE0FFFFFFFFFFFFE00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFF
F00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFFF80FFFE0FFFFFFFFFFFFF81F
FFE0FFFFFFFFFFFFFC1FFFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
75 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
90 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/D/N196 -1 TZ
%%BeginResource: font E
10 dict begin
T3Defs
/FontType 3 def
/FontName /N241 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-72 
103 
195 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 25 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 90 2 setcachedevice
90 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 90 def
/Height 50 def
/ImageMatrix [90 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFE1FFFFFFE01FFC0FF87FFFFFE1FFFFFFE01FFC0FC03FFFFF00FFFFF
F8007FC0FC01FFFFF007FFFFE0383FC0FC01FFFFF007FFFFC0380FC0FE01FFFF
F007FFFFC07E07C0FE01FFFFF807FFFFC07F83C0FE01FFFFF807FFFFC07F83C0
FE00FFFFF803FFFFC07FC3C0FF80FFFFF803FFFFC07FE1C0FF80FFFFF803FFFF
C03FE1C0FF80FFFFFE03FFFFC03FE0C0FF803FFFFE00FFFFC03FF0C0FF803FFF
FE00FFFFC03FF0C0FFC03FFFFE00FFFFC01FF000FFC03FFFFF00FFFFE01FF800
FFC03FFFFF00FFFFE01FF800FFC01FFFFF007FFFE00FF800FFC01FFFFF007FFF
E00FF800FFE01FFFFF007FFFF80FFFC0FFE01FFFFF807FFFF80FFFC0FFE01FFF
FF807FFFF803FFC0FFE00FFFFF803FFFF803FFC0FFE00FFFFF803FFFFC03FFC0
FFF00FFFFF803FFFFC01FFC0FFF00FFFFFC03FFFFC01FFC0FFF00FFFFFC03FFF
FE01FFC0FFF007FFFFC01FFFFE01FFC0FFF007FFFFC01FFFFE00FFC0FFF807FF
FFC01FFFFE00FFC0FFF807FFFFE01FFFFF00FFC0FFF807FFFFE01FFFFF00FFC0
03F803FFFFE00FFFFF00FFC003FE03FFFFE00FFFFF007FC003FE00FFFFE003FF
FF007FC083FE00FFFFF803FFFF807FC081FE007FFFF801FFFF807FC081FE007F
FFF801FFFF807FC0E1FE007FFFF801FFFF807FC0E1FF003FFFF800FFFF807FC0
E0FF001FFFF8007FFF807FC0E0FF000FFFF8003FFF807FC0F0FF0003FFF8080F
FF807FC0F0FF0303FFF81C0FFF80FFC0F87F0381FFF81E07FF80FFC0F83E07F0
FFE03F83FF01FFC0F80E07F00FC03F80FE01FFC0FC0007F800007FE00003FFC0
FE001FFE0000FFF8000FFFC0FFC0FFFFE00FFFFF003FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
90 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 0 4 81 setcachedevice
4 0 0 81 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 4 def
/Height 81 def
/ImageMatrix [4 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
4 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
0 0 0 6 52 64 setcachedevice
52 0 0 58 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 52 def
/Height 58 def
/ImageMatrix [52 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF8FFFFFFFFF0FFF83FFFFFFFF0FFF80FFFFFFFF0FFF80FFFFFFFF0FFF807FF
FFFFF0FFF803FFFFFFF0FFF800FFFFFFF0FFFE003FFFFFF0FFFE001FFFFFF0FF
FE001FFFFFF0FFFE000FFFFFF0FFFE0403FFFFF0FFFE0401FFFFF0FFFE0600FF
FFF0FFFE07007FFFF0FFFF07807FFFF0FFFF03F03FFFF0FFFF03F80FFFF0FFFF
03F807FFF0FFFF03FC03FFF0FFFF03FE01FFF0FFFF03FF81FFF0FFFF03FFC0FF
F0FFFF03FFE0FFF0FFFF03FFE03FF0FFFF03FFF01FF0FFFF03FFF80FF0FFFF03
FFFE0FF0FFFF03FFFF0FF0FFFF03FFFF87F0FFFF03FFFF83F0FFFF03FFFF83F0
FFFF03FFFFC0F0FFFF03FFFFE0F0FFFF03FFFFF8F0FFFE03FFFFF870FFFE03FF
FFF870FFFE03FFFFFC30FFFE03FFFFFC30FFFE07FFFFFE30FFFE07FFFFFE10FF
F807FFFFFF10FFF807FFFFFF10FFF807FFFFFF00FFF007FFFFFE00FFF00FFFFF
FE00FFF00FFFFFFE00FFE00FFFFFFC00FFE00FFFFFE000FFC01FFFFF8000FF80
1FFFFF8000FF803FFFFF8000FE003FFFFF8010F800FFFFFF80100000FFFFFF80
100001FFFFFFC0308003FFFFFFC070E00FFFFFFFE3F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
52 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
0 0 0 5 25 31 setcachedevice
25 0 0 26 0 5 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 26 def
/ImageMatrix [25 0 0 -26 0 26]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF1FF80FFF0FF80FFF0FF80FFF1FF80FFF1FF80CFF1FC8087F1F80081F1E000
80310000C0310080F0000380FE001F80FE001F80FE001F80F0000380F0000380
C031008081F1E00081F1E00087F1F800CFF1FC80FFF1FF80FFF1FF80FFF0FF80
FFF0FF80FFF1FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 26 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 0 57 29 setcachedevice
57 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 29 def
/ImageMatrix [57 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFF1FFFF83F80F8FFFF1FFFF83F80F07FFE07FFC00780F07FFE07FFC1C380
F01FFE03FF81C180F81FFF03FF81F180F81FFF03FF81F080F81FFF03FF81F880
F81FFF03FFC0F880FC0FFFC1FFC0FC00FC0FFFC1FFC0FC00FC0FFFC1FFC07C80
FC0FFFC1FFF07F80FC0FFFC1FFF07F80FF07FFE0FFF07F80FF07FFE0FFF83F80
FF07FFE0FFF83F80FF03FFE0FFF83F801F03FFE07FF81F801F83FFF07FFC1F80
1F81FFF01FFC1F801F807FF01FFC1F8007803FF00FFC1F80C7821FE007FC1F80
C38207E0C1F83F80E38787E0E1F83F80F00FC001F0007F80F81FF807FE01FF80
F81FF807FE01FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
0 0 0 0 33 29 setcachedevice
33 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 33 def
/Height 29 def
/ImageMatrix [33 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC03FC1F80FC03FC1F80F800F80380F0F8206380E0F800618081FF00F08081FF
80F88081FFC0F88001FFC0F88001FFE07C0001FFE07C0001FFE07C8001FFE07F
8001FFE07F8080FFF83F8080FFF83F8080FFF83F8080FFF83F80E07FF81F80E0
7FFC1F80F07FFC1F80F83FFC1F80F83FF81F80FC0FF80F80FE03E00F80FF83E2
0F80FFC0071F80FFF80FFF80FFF80FFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
33 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
0 0 0 0 32 29 setcachedevice
32 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 29 def
/ImageMatrix [32 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F07F80FFF07F80FFC01E003F078C3E1F03803E0701C03FC301E07FE101E07FF1
C1E07FF1E3F03FF8E3F03FF8FFF03FF9FFF03FFFFFF03FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFC7FC0FE1C7FE0FE1C7FE0FC0C3FE0FC0C3FE07C0E1FE07E0
F07C00F0F87C30F0FC003801FF81FE07FF81FE07>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
0 0 0 20 38 49 setcachedevice
38 0 0 29 0 20 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 29 def
/ImageMatrix [38 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFFC1FCF8FFFFC1FCF07FFE007CF07FFE1C1CF01FFC1C0CF81FFC1F0CF81F
FC1F84F81FFC1FC4F81FFE07C4FC0FFE07E0FC0FFE07E0FC0FFE03E4FC0FFF03
FCFC0FFF03FCFF07FF03FCFF07FFC1FCFF07FFC1FCFF07FFC1FC1F03FFC0FC1F
83FFE0FC1F81FFE0FC1F81FFE0FC07807FE0FCC7803FE0FCC3820FC1FCE3870F
C1FCF0078003FCF81FF01FFCF81FF01FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 56 38 94 setcachedevice
38 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 38 def
/ImageMatrix [38 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF01FFE0FCFF01FFE0FCF8003F001CF01E1E070CE01E04070CC07F000784C0FF
C01F84C0FFF01FC4C0FFF007C401FFF807C001FFF807C000FFFC07E000FFFC07
E000FFFC07E000FFFC03F000FFFE03FC00FFFE03FC007FFE03FC007FFE01FCC0
7FFE01FCC07FFF01FCC07FFF01FCC01FFF01FCC01FFF00FCE01FFF00FCE01FFF
C0FCF00FFFC0FCF00FFFC0FCF007FFC07CF807FFC07CFC03FFC07CFF03FFC07C
FF81FF007CFFC07F107CFFC03E107CFFE000187CFFFC003FFCFFFF00FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 56 42 94 setcachedevice
42 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 38 def
/ImageMatrix [42 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F80FFC03FFC0F80FFC03FFC0E003E000FFC083E1C0F83FC003E080F80FC000F0
80FE07C000F803FF87C000F803FFC7C000FE03FFC3C080FE03FFE3C080FE03FF
E1C0E1FF03FFE1C0FFFF00FFF1C0FFFF00FFF1C0FFFF00FFF9C0FFFF80FFFFC0
FFFF80FFFFC0FFFF80FFFFC0FFFF807FFFC0FFFF807FFFC0FFFFC07FFFC0FFFF
C07FFFC0FFFFC07FFFC0EFFFC03FFFC0E3FFC03FFFC0E3FFE03FFFC0E3FFE03F
FFC0E1FFE01FE1C0E1FFE01FC000F0FFE01FC000F07FE00FC000F87FE00FC000
FC3FE00FC000FE0FE003F000FE07C001F000FF8000E000C0FFC003F001C0FFF0
0FFC07C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -85 103 25 setcachedevice
103 0 0 110 0 -85 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 103 def
/Height 110 def
/ImageMatrix [103 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000003FE800000000000000000000003FE800000000000
000000000001FEC00000000000000000000001FEC00000000000000000000001
FEE00000000000000000000000FEE00000000000000000000000FEF00FFFFFFF
FFFFFFE0000000FEFC0FFFFFFFFFFFFFFFE00000FEFE07FFFFFFFFFFFFFFFE00
007EFE01FFFFFFFFFFFFFFFE00007EFF00FFFFFFFFFFFFFFFFC0007EFF007FFF
FFFFFFFFFFFFF8001EFF807FFFFFFFFFFFFFFFFE001EFFC07FFFFFFFFFFFFFFF
FF001EFFF03FFFFFFFFFFFFFFFFFE01EFFF01FFFFFFFFFFFFFFFFFE00EFFF807
FFFFFFFFFFFFFFFFF00EFFF803FFFFFFFFFFFFFFFFF80EFFFC03FFFFFFFFFFFF
FFFFFC0EFFFE03FFFFFFFFFFFFFFFFFC06FFFF01FFFFFFFFFFFFFFFFFF06FFFF
00FFFFFFFFFFFFFFFFFF06FFFFC07FFFFFFFFFFFFFFFFF82FFFFC01FFFFFFFFF
FFFFFFFF82FFFFE01FFFFFFFFFFFFFFFFFC2FFFFF01FFFFFFFFFFFFFFFFFC2FF
FFF80FFFFFFFFFFFFFFFFFE0FFFFF807FFFFFFFFFFFFFFFFE0FFFFFC03FFFFFF
FFFFFFFFFFFEFFFFFC01FFFFFFFFFFFFFFFFFEFFFFFF01FFFFFFFFFFFFFFFFFE
FFFFFF81FFFFFFFFFFFFFFFFFEFFFFFFC07FFFFFFFFFFFFFFFFEFFFFFFC03FFF
FFFFFFFFFFFFFEFFFFFFE01FFFFFFFFFFFFFFFFEFFFFFFF00FFFFFFFFFFFFFFF
FEFFFFFFF00FFFFFFFFFFFFFFFFEFFFFFFFC0FFFFFFFFFFFFFFFFEFFFFFFFE07
FFFFFFFFFFFFFFFEFFFFFFFE01FFFFFFFFFFFFFFFEFFFFFFFF00FFFFFFFFFFFF
FFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF
C07FFFFFFFFFFFFFFEFFFFFFFFF03FFFFFFFFFFFFFFEFFFFFFFFF01FFFFFFFFF
FFFFFEFFFFFFFFF807FFFFFFFFFFFFFEFFFFFFFFFC03FFFFFFFFFFFFFEFFFFFF
FFFC03FFFFFFFFFFFFFEFFFFFFFFFE01FFFFFFFFFFFFFEFFFFFFFFFF01FFFFFF
FFFFFFFEFFFFFFFFFE00FFFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFF
FFFFFC007FFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFFFFFFF8007FFF
FFFFFFFFFEFFFFFFFFF000FFFFFFFFFFFFFEFFFFFFFFC000FFFFFFFFFFFFFEFF
FFFFFFC000FFFFFFFFFFFFFEFFFFFFFF8001FFFFFFFFFFFFFEFFFFFFFF8003FF
FFFFFFFFFFFEFFFFFFFF0007FFFFFFFFFFFFFEFFFFFFFE0007FFFFFFFFFFFFFE
FFFFFFFE0007FFFFFFFFFFFFFEFFFFFFFC001FFFFFFFFFFFFFFEFFFFFFF0003F
FFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFF
FEFFFFFFE000FFFFFFFFFFFFFFFEFFFFFFC000FFFFFFFFFFFFFFFEFFFFFF8001
FFFFFFFFFFFFFFFEFFFFFF8001FFFFFFFFFFFFFFFEFFFFFF8007FFFFFFFFFFFF
FFFEFFFFFF000FFFFFFFFFFFFFFFFEFFFFFC001FFFFFFFFFFFFFFFFEFFFFF800
1FFFFFFFFFFFFFFFFEFFFFF8001FFFFFFFFFFFFFFFFEFFFFF0003FFFFFFFFFFF
FFFFFEFFFFF0007FFFFFFFFFFFFFFFFEFFFFE001FFFFFFFFFFFFFFFFFEFFFFE0
01FFFFFFFFFFFFFFFFFEFFFFC001FFFFFFFFFFFFFFFFFEFFFF0003FFFFFFFFFF
FFFFFFE0FFFE0007FFFFFFFFFFFFFFFFC0FFFE0007FFFFFFFFFFFFFFFFC2FFFE
000FFFFFFFFFFFFFFFFFC2FFFC001FFFFFFFFFFFFFFFFF82FFF8001FFFFFFFFF
FFFFFFFF82FFF0007FFFFFFFFFFFFFFFFF06FFF0007FFFFFFFFFFFFFFFFC06FF
F000FFFFFFFFFFFFFFFFFC06FFC001FFFFFFFFFFFFFFFFFC0EFF8003FFFFFFFF
FFFFFFFFF80EFF8003FFFFFFFFFFFFFFFFF00EFF0003FFFFFFFFFFFFFFFFC00E
FE0007FFFFFFFFFFFFFFFF001EFE001FFFFFFFFFFFFFFFFF001EFC001FFFFFFF
FFFFFFFFFE007EFC003FFFFFFFFFFFFFFFF8007EF0003FFFFFFFFFFFFFFFC000
7EE0007FFFFFFFFFFFFFFE00007EC000FFFFFFFFFFFFFFC00000FEC000FFFFFF
FFFFFFFFC00000FEC001FFFFFFFFFFFFE0000000FE8000000000000000000000
01FE800000000000000000000001FE800000000000000000000001FE80000000
0000000000000001FE800000000000000000000003FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
103 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
75 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -75 85 5 setcachedevice
85 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 80 def
/ImageMatrix [85 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF0FFFFFFFFFFC007FFF8FFF01FFFFFFFFF80007FF8FFF00FFFFFFFFE00000F
F8FFF807FFFFFFFE000003F8FFF807FFFFFFFE000003F8FFFE03FFFFFFFE0000
00F8FFFE03FFFFFFFE001F8078FFFE00FFFFFFFE001F8038FFFE00FFFFFFFE00
3FE008FFFF007FFFFFFE003FF008FFFF007FFFFFFE003FF808FFFF007FFFFFFE
003FFC00FFFF807FFFFFFF803FFFC0FFFF803FFFFFFF803FFFC0FFFF803FFFFF
FF803FFFF8FFFF803FFFFFFF803FFFF8FFFFC03FFFFFFF803FFFF8FFFFC01FFF
FFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFE00F
FFFFFF801FFFF8FFFFE00FFFFFFFC01FFFF8FFFFE00FFFFFFFC01FFFF8FFFFF8
0FFFFFFFC01FFFF8FFFFF803FFFFFFC01FFFF8FFFFF803FFFFFFC00FFFF8FFFF
F803FFFFFFC00FFFF8FFFFFC01FFFFFFE00FFFF8FFFFFC01FFFFFFE00FFFF8FF
FFFC01FFFFFFE00FFFF8FFFFFE01FFFFFFE00FFFF8FFFFFE00FFFFFFE007FFF8
FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FF
F8FFF800000000000007FFF8FFF800000000000003FFF8FFF800000000000003
FFF8FFFE00000000000003FFF8FFFF80000000000003FFF8FFFFE00000000000
03FFF8FFFFFF803FFFFFFE00FFF8FFFFFF803FFFFFFE00FFF8FFFFFF800FFFFF
FE00FFF8FFFFFFE00FFFFFFE00FFF8FFFFFFE00FFFFFFF007FF8FFFFFFE00FFF
FFFF007FF8FFFFFFE00FFFFFFF007FF8FFFFFFF007FFFFFF807FF8FFFFFFF007
FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF0
07FFFFFF803FF8FFFFFFF003FFFFFFC01FF8FFFFFFF803FFFFFFC01FF8FFFFFF
F803FFFFFFC01FF8FFFFFFF803FFFFFFC01FF81FFFFFF803FFFFFFE00FF81FFF
FFF803FFFFFFE00FF803FFFFF801FFFFFFE00FF800FFFFF801FFFFFFF80FF800
7FFFF801FFFFFFF803F8807FFFF801FFFFFFF803F8E03FFFFC01FFFFFFF803F8
E03FFFFC01FFFFFFFC03F8F00FFFFC01FFFFFFFC01F8F80FFFFC01FFFFFFFC01
F8F807FFFC00FFFFFFFC01F8FC03FFFC00FFFFFFFE00F8FE01FFFC00FFFFFFFE
00F8FF81FFFC00FFFFFFFF00F8FFC03FF800FFFFFFFF00F8FFF007F000FFFFFF
FF0078FFF0000000FFFFFFFF0078FFF8000000FFFFFFFF8038FFFF000000FFFF
FFFF8038FFFFC00001FFFFFFFFE038FFFFFC0003FFFFFFFFF038FFFFFF8007FF
FFFFFFFC08FFFFFF8007FFFFFFFFFC08>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
0 0 0 72 67 130 setcachedevice
67 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 67 def
/Height 58 def
/ImageMatrix [67 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE7FFFFFFF801FFE0FFE1FFFFFFE0003FE0FFE03FFFFFE00007E0FFE03FFFFF
E00007E0FFF01FFFFFE00001E0FFF01FFFFFE00FE0E0FFF01FFFFFE00FE020FF
F80FFFFFE01FE020FFF80FFFFFE01FF000FFF80FFFFFE01FFE00FFFE07FFFFE0
1FFF80FFFE07FFFFF81FFFE0FFFE07FFFFF81FFFE0FFFF03FFFFF81FFFE0FFFF
03FFFFF80FFFE0FFFF03FFFFF80FFFE0FFFF80FFFFF80FFFE0FFFF80FFFFF80F
FFE0FFFF80FFFFF80FFFE0FFFF807FFFFC0FFFE0FFFFC07FFFFC0FFFE0FFFFC0
7FFFFC0FFFE0FFFFC07FFFFC03FFE0FFFFE03FFFFE03FFE0FFFFE03FFFFE03FF
E0FFE00000000003FFE0FFE00000000001FFE0FFE00000000001FFE0FFF80000
000001FFE0FFFE0000000001FFE0FFFE0000000001FFE0FFFFF80FFFFF00FFE0
FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC03FF
FFE07FE0FFFFFC03FFFFE07FE0FFFFFC03FFFFE07FE0FFFFFE03FFFFE03FE0FF
FFFE03FFFFF03FE0FFFFFE03FFFFF03FE0FFFFFE01FFFFF03FE00FFFFE01FFFF
F00FE003FFFE01FFFFF80FE001FFFF01FFFFF80FE081FFFF01FFFFF80FE080FF
FF01FFFFFC07E0E0FFFF00FFFFFC07E0E07FFF00FFFFFC07E0F03FFF00FFFFFC
03E0F80FFE00FFFFFE03E0FC0FFE00FFFFFE03E0FF81FC00FFFFFF83E0FFC000
00FFFFFF81E0FFC00000FFFFFF81E0FFF00000FFFFFFC0E0FFFF0001FFFFFFE0
E0FFFFF803FFFFFFF8E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
67 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/E/N241 -1 TZ
%%BeginResource: font G
10 dict begin
T3Defs
/FontType 3 def
/FontName /N279 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-42 
132 
214 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 70 dict begin
/.notdef {250 0 d0} bind def
/a1 {{
0 0 0 0 58 72 setcachedevice
58 0 0 72 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 58 def
/Height 72 def
/ImageMatrix [58 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFFC001FFFFFFFFFFFFC000FFFFFFFFFFFFC000FFFFFFFFFFFFC0
00FFFFFFFFFFFFC000FFFFFFFFFFFFC0007FFFFFFFFFFFC0007FFFFFFFFFFFC0
007FFFFFFFFFFFC0807FFFFFFFFFFFC0803FFFFFFFFFFFC0803FFFFFFFFFFFC0
803FFFFFFFFFFFC0E03FFFFFFFFFFFC0E03FFFFFFFFFFFC0E00FFFFFFFFFFFC0
E00FFFFFFFFFFFC0E00FFFFFFFFFFFC0F00FFFFFFFFFFFC0F00FFFFFFFFFFFC0
F007FFFFFFFFFFC0F007FFFFFFFFFFC0F007C00FFFE03FC0F807C00FFFE03FC0
F8070001FF800FC0F80007F07F0383C0F80007F03E0381C0F8001FFC0607E1C0
FC003FFE0007E0C0FC003FFF8007F0C0FC00FFFFC007F0C0FC00FFFFE007F040
FC00FFFFE007F040FE00FFFFF007F840FE00FFFFF003F800FE00FFFFF803F800
FF80FFFFF803FC00FF80FFFFFE03FC00FF80FFFFFE03FC00FF803FFFFE00FC00
FF803FFFFE00FC00FF803FFFFE00FFC0FFC03FFFFF00FFC0FFC03FFFFF00FFC0
FFC01FFFFF007FC0FFC01FFFFF007FC0FFC01FFFFF007FC0FFE01FFFFF807FC0
FFE01FFFFF807FC0FFE00FFFFF803FC0FFE00FFFFF803FC0FFE00FFFFF803FC0
FFF00FFFFFC03FC0FFF00FFFFFC03FC0FFF007FFFFC01FC0FFF007FFFFC01FC0
FFF007FFFFC01FC0FFF807FFFFE01FC0FFF803FFFFE00FC0FFF803FFFFE00FC0
FFF803FFFFE00FC0FFFE03FFFFF80FC0FFFE03FFFFF80FC0FFFE00FFFFF803C0
FFFE00FFFFF803C0FFFE00FFFFF803C0FFFF00FFFFFC03C0FFFF00FFFFFC03C0
FFFF00FFFFFC03C0FFFF00FFFFFC03C0FFFF80FFFFFF0FC0FFFFC3FFFFFFFFC0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
58 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 11 36 83 setcachedevice
36 0 0 72 0 11 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 72 def
/ImageMatrix [36 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF01FFF0FFFC007FF0FFE0003FF0FFE07C1FF0FFE3FE1FF0FFFFFE07F0FFFF
FE07F0FFFFFE03F0FFFFFE03F0FFFFFE03F0FFFFFE03F0FFFFFC03F0FFFFF007
F0FFFF0007F0FFF00007F0FF80001FF0FF80003FF0FC00007FF0F80007FFF0F0
0007FFF0E0003FFFF0E003FFFFF0E00FFFFFF0C01FFFFFF0C07FFFFFF0C07FFF
FFF0C0FFFFFFF000FFFFFFF001FFFFFFF001FFFFFFF001FFFFFFF001FFFFFFF0
01FFFFFFF0C1FFFFFFF0C1FFFFFFF0C1FFFFFFF0C1FFFFFFF0C0FFFFFFF0C0FF
FFFFF0E0FFFFFFF0E0FFFFFFF0E0FFFFFFF0E07FFFFFF0E07FFFFFF0F01FFFFF
F0F01FFFFFF0F81FFFFFF0F81FFFFFF0FC0FFFFFF0FC07FFFFF0FF07FFFFF0FF
03FFFFF0FF83FFFFF0FFC1FFFFF0FFC1FFFFF0FFC07FFFF0FFE03FFFF0FFF01F
FFF0FFFC1FFFF0FFFE0FFFF0FFFF07FFF0FFFF010070FFFF800000FFFFF00000
FFFFFC0000FFFFF80010FFFFF8FFF0FFFFF8FFF0FFFFF8FFF0FFFFF8FFF0FFFF
F8FFF0FFFFF8FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 78 45 setcachedevice
78 0 0 45 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 45 def
/ImageMatrix [78 0 0 -45 0 45]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000003F000003E000000000003F000003E000000000003F000003E0000000000
03F000003E000000FC00FFFFC00FFFF800FCFE01FFFFE01FFFFE03FCFE01FFFF
E01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01F
FFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE
03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FC
FE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01
FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFF
E01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01F
FFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE
03FCFE01FFFFE01FFFFE03FCFE00FFFFE00FFFFE03FCFE00FFFFE00FFFFE03FC
FE00FFFFE00FFFFE03FCFE003FFFE007FFFE03FCFE003FFFE007FFFE03FCFE00
3FFFE007FFFE03FCFE001FFFC003FFF807FCFE010FFFC020FFF807FCF80107FF
C0207FF807FC000183FF80383FF007FC0001C07E00FC0FE00FFC0001E07E01FE
0FE01FFC0001FC0007FF8000FFFCFE01FF003FFFF003FFFCFE01FF003FFFF003
FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 45 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
0 0 0 -1 47 47 setcachedevice
47 0 0 48 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 48 def
/ImageMatrix [47 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFE03EFFE007FFE03EFF00007FC01EF803F83F800EE003F8070006C007
FE0703C6C00FFFC003C0C01FFFC007F0001FFFE007F0007FFFF007F0007FFFF0
07F0007FFFF007F0007FFFF807F0007FFFF807F0007FFFF807F0C01FFFF807F0
C01FFFF807F0C00FFFF807FEC007FFF807FEE007FFF807FEF007FFF807FEF801
FFF807FEF8007FF807FEFF001FF807FEFFC000F807FEFFF000F807FEFFFF0000
07FEFFFFF80007FEFFFFF80007FEFFFFFFF807FEFFFFFFF807FEFFFFFFF807FE
FFFFFFF807FEFC0FFFF807FEF807FFF807FEF003FFF807FEF003FFF007FEF003
FFF00FFEF003FFF00FFEF003FFE01FFEF003FFE01FFEF007FFC01FFEF80FFF00
7FFEFC1FFF01FFFEFF03FC03FFFEFFC0001FFFFEFFC0001FFFFEFFFC00FFFFFE
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
84 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 2 50 45 setcachedevice
50 0 0 43 0 2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 43 def
/ImageMatrix [50 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00001FF800000000001FF800000000001FF800000000001FF8000000F800FFFE
000FC0FF00FFFF007FC0FFC1FFFF00FFC0FFE0FFFE01FFC0FFE0FFFC01FFC0FF
F07FFC01FFC0FFF87FF803FFC0FFFC7FF807FFC0FFFF1FF01FFFC0FFFF0FC01F
FFC0FFFF07C01FFFC0FFFF83803FFFC0FFFFC3007FFFC0FFFFE300FFFFC0FFFF
F000FFFFC0FFFFF001FFFFC0FFFFF001FFFFC0FFFFF007FFFFC0FFFFE007FFFF
C0FFFFE00FFFFFC0FFFFE00FFFFFC0FFFFC007FFFFC0FFFF8001FFFFC0FFFF00
01FFFFC0FFFF0070FFFFC0FFFF01F8FFFFC0FFFC03F87FFFC0FFF803FC3FFFC0
FFF803FC3FFFC0FFF007FE1FFFC0FFE00FFF07FFC0FFE01FFF07FFC0FFC01FFF
01FFC0FF001FFF00FFC0FE001FFE000FC0000007FC000040000007FC00004000
0007FC000040000007FC000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 0 21 49 setcachedevice
21 0 0 49 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 21 def
/Height 49 def
/ImageMatrix [21 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF03F8FF03F8FC01F8F81C38F81C38F01E18F01F08F01F88F01F88F80FC0F80F
C0F807C0FC07C0FC07F8FC07F8FF03F8FF03F8FF01F8FF81F8FF81F8FF81F81F
C0781FC07807C078C7C038C7E038E3E038E3E038E1E038F0E038F80078FC01F8
FF03F8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFC38FFF0
18FFF018FFF008FFF008FFF008FFFC08FFFE18>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
21 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 0 26 99 setcachedevice
26 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 99 def
/ImageMatrix [26 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0800000408000000080000000
80000000C0000040C0000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
0 0 0 -21 61 -15 setcachedevice
61 0 0 6 0 -21 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 6 def
/ImageMatrix [61 0 0 -6 0 6]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000000000008800000000000000800000000000000000000000000000000
00000000000000008000000000000008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 6 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
0 0 0 -62 62 12 setcachedevice
62 0 0 74 0 -62 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 74 def
/ImageMatrix [62 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE7FFFFFFFFFFCFFFE3FFFFFFFFFFCFFFE0FFFFFFFFFFCFFFE07FFFFFFFFFC
FFFE07FFFFFFFFFCFFFE01FFFFFFFFFCFFFE00FFFFFFFFFCFFFE007FFFFFFFFC
FFFF001FFFFFFFFCFFFF0007FFFFFFFCFFFF0007FFFFFFFCFFFF0003FFFFFFFC
FFFF0001FFFFFFFCFFFF0000FFFFFFFCFFFF00007FFFFFFCFFFF00001FFFFFFC
FFFF00C01FFFFFFCFFFF00E00FFFFFFCFFFF00F807FFFFFCFFFF00F803FFFFFC
FFFF80FC01FFFFFCFFFF80FF007FFFFCFFFF80FF807FFFFCFFFF807FC03FFFFC
FFFF807FE01FFFFCFFFF807FE00FFFFCFFFF807FF00FFFFCFFFF807FFC07FFFC
FFFF807FFE07FFFCFFFF807FFF01FFFCFFFF807FFF80FFFCFFFF807FFF807FFC
FFFF807FFFC03FFCFFFF807FFFF03FFCFFFF807FFFF83FFCFFFF807FFFFC1FFC
FFFF807FFFFC07FCFFFF807FFFFC07FCFFFF807FFFFE03FCFFFF807FFFFF01FC
FFFF807FFFFFC1FCFFFF807FFFFFE1FCFFFF807FFFFFF0FCFFFF807FFFFFF0FC
FFFF007FFFFFF07CFFFF007FFFFFF87CFFFF007FFFFFFC7CFFFF007FFFFFFC1C
FFFF007FFFFFFF1CFFFF007FFFFFFF0CFFFF00FFFFFFFF0CFFFF00FFFFFFFF8C
FFFF00FFFFFFFF8CFFFE00FFFFFFFFC4FFFE00FFFFFFFFC4FFFE00FFFFFFFFC4
FFFC00FFFFFFFFC0FFFC00FFFFFFFFC0FFFC01FFFFFFFFC0FFFC01FFFFFFFF80
FFF001FFFFFFFF80FFE001FFFFFFFF00FFE007FFFFFFF800FFC007FFFFFF0000
FFC007FFFFFF0000FF800FFFFFFF0000FF001FFFFFFF0000F0001FFFFFFF0000
00001FFFFFFF000400003FFFFFFFC00400007FFFFFFFC00CE001FFFFFFFFE01C
F00FFFFFFFFFE0FCF00FFFFFFFFFE0FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 -62 29 -31 setcachedevice
29 0 0 31 0 -62 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 31 def
/ImageMatrix [29 0 0 -31 0 31]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8C7F87F8881F87C00
807878008078780080387000E0084018E0000018FE0001F8FF8007F8FFF03FF8
FF8007F8FE0001F8E000001880084000803870008078780081F87C00C7F87F88
C7F87F88FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 31 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
71 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -54 24 45 setcachedevice
24 0 0 99 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 24 def
/Height 99 def
/ImageMatrix [24 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8FFFFF0FFFFC0FFFF81FFFF07FFFF0FFFFE1FFFFC1FFFF01FFFE03FFFE0
7FFFE07FFFC1FFFF83FFFF83FFFF03FFFF07FFFF07FFFC07FFFC0FFFF80FFFF8
0FFFF81FFFF81FFFF01FFFF07FFFF07FFFE07FFFE07FFFE07FFFE07FFFC0FFFF
C0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFF00FFFF01FFFF01FFFF01FFFF01FF
FF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01
FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFFC0FFFFC0FFFFC0FFFFC0FFFF
C0FFFFC0FFFFC0FFFFE07FFFE07FFFE07FFFE07FFFF07FFFF07FFFF01FFFF01F
FFF81FFFF80FFFF80FFFFC0FFFFC07FFFC07FFFF07FFFF03FFFF83FFFF83FFFF
C1FFFFC07FFFE07FFFE03FFFF03FFFFC1FFFFE1FFFFE0FFFFF07FFFF81FFFFC1
FFFFF0FFFFF8FFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
24 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -24 37 23 setcachedevice
37 0 0 47 0 -24 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 47 def
/ImageMatrix [37 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF800FFFF8FF800FFFF8FE0000FFF8F03FF03FF8E03FF007F8C1FFFC03F883FF
FF81F887FFFFC1F881FFFFE0F8803FFFE0F8801FFFE038801FFFF038801FFFF0
38801FFFF038C01FFFF018C01FFFF018C01FFFF018F03FFFE018FFFFFFC018FF
FFFFC018FFFFFC0018FFFF800038FFFC000038FFE0000038FFC00000F8FFC000
01F8FF800003F8FF80000FF8FF80000FF8FF0000FFF8FF003FFFF8FF007FFFF8
FF00FFF818FF83FFF000FF83FFF000FF83FFF000FF80FFF000FF80FFF000FFC0
FFF800FFE07FFF00FFE07FFF00FFE01FFF00FFF803F808FFFE03F818FFFF8000
F8FFFFF003F8FFFFF003F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
33 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -54 24 45 setcachedevice
24 0 0 99 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 24 def
/Height 99 def
/ImageMatrix [24 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF87FFFF83FFFFC1FFFFE0FFFFF0FFFFF83FFFF81FFFF80FFFFE07FFFF07
FFFF07FFFF83FFFFC0FFFFC0FFFFC07FFFE07FFFE07FFFE03FFFF83FFFF81FFF
F81FFFFC1FFFFC1FFFFC0FFFFE0FFFFE0FFFFE03FFFE03FFFE03FFFE03FFFF01
FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF00FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FF
FF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF01FFFF01FFFF01FFFF01
FFFF01FFFF01FFFF01FFFE03FFFE03FFFE03FFFE03FFFE0FFFFE0FFFFC0FFFFC
0FFFFC1FFFF81FFFF81FFFF83FFFE03FFFE03FFFE07FFFC07FFFC0FFFFC0FFFF
83FFFF03FFFF07FFFE07FFFE0FFFF81FFFF83FFFF03FFFE0FFFFC1FFFFC3FFFF
87FFFF8FFFFF8FFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
24 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
47 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 0 46 67 setcachedevice
46 0 0 67 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 67 def
/ImageMatrix [46 0 0 -67 0 67]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF0FFFCFFFFFFE03FFCFFFFFFE03FFCFFFFFFE03FFCFFFFFFE00FFCFFFF
FFE00FFCFFFFFFE00FFCFFFFFFF00FFCFFFFFFF007FCFFFFFFF007FCFFFFFFF0
07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF803FCFFFFFFF803FCFFFFFFF803FC
FFFFFFFC03FCFFFFFFFC03FCFFFFFFFC01FCFFFFFFFC01FCFC3FFFFC01FCFC3F
FFFE01FCF00FFFFE01FCF007FFFE00FCF007FFFE00FCF807FFFE00FCF807FFFF
80FCF807FFFF80FCF803FFFF803CFC03FFFF803CFC03FFFF803CFC03FFFFC03C
FC01FFFFC01CFC01FFFFC01CFE01FFFFC01CFE01FFFFE01CFE01FFFFE01CFE00
FFFFE00CFE00FFFFE00CFF80FFFFE00CFF80FFFFF00CFF80FFFFF00CFF803FFF
F004FF803FFFF004FFC03FFFF004FFC03FFFF804FFC03FFFF804FFC01FFFF800
FFC01FFFF8001FE01FFFF8001FE01FFFFE001FE01FFFFE001FE00FFFFE000FF0
0FFFFE000FF007FFFE008FF007FFFF0083F003FFFF0083F003FFFF00E3F000FF
FF00E3F0087FFE00E1F0083FFE00E0F00C0FFE00F0601E01F804F8603F81F80C
FC00FFF0001CFE03FFFC01FCFE03FFFC01FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 67 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
0 0 0 -19 42 13 setcachedevice
42 0 0 32 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 32 def
/ImageMatrix [42 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC1FFFC3FFC0FC1FFFC3FFC0F80FFF01FFC0F80FFF01FFC0F807FE01FFC0FC07
FE01FFC0FC07FE01FFC0FF07FE03FFC0FF03FE03FFC0FF83FE03FFC0FF83FE03
FFC0FF83FE07FFC0FFC1FE07FFC0FFC1FE07FFC0FFE1FE07FFC0FFE1FE07FFC0
FFE1FE07FFC0FFE07E07FFC0FFF07F07FFC0FFF07F07FFC0FFFC7F07FFC0FFFC
7F07FFC01FFC3F07FFC01FFC3F07FFC003FE3FC7FFC0C3FE3FC7FFC0E0FE3FC7
FFC0F000000001C0F00000000040F80000000000FC0000000000FF8000000040
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 0 26 99 setcachedevice
26 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 99 def
/ImageMatrix [26 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC40FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000800000000000000000000000
000000008000004080000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
0 0 0 11 61 93 setcachedevice
61 0 0 82 0 11 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 82 def
/ImageMatrix [61 0 0 -82 0 82]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000000000008000000000000000000000000000000000000000000000000
8000000000000008FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFE08FFFFFFFFFFFFF800FFFFFFFFFFFFF800
FFFFFFFFFFFFE000FFFFFFFFFFFF0008FFFFFFFFFFFC0008FFFFFFFFFFE00078
FFFFFFFFFF8001F8FFFFFFFFFF800FF8FFFFFFFFFE003FF8FFFFFFFFF000FFF8
FFFFFFFFC000FFF8FFFFFFFE0007FFF8FFFFFFF8001FFFF8FFFFFFF800FFFFF8
FFFFFFE003FFFFF8FFFFFF000FFFFFF8FFFFFC000FFFFFF8FFFFE0007FFFFFF8
FFFF8001FFFFFFF8FFFF800FFFFFFFF8FFFE003FFFFFFFF8FFF000FFFFFFFFF8
FFC000FFFFFFFFF8FE0007FFFFFFFFF8F8001FFFFFFFFFF8F800FFFFFFFFFFF8
E003FFFFFFFFFFF8800FFFFFFFFFFFF8000FFFFFFFFFFFF8003FFFFFFFFFFFF8
0007FFFFFFFFFFF88007FFFFFFFFFFF8E001FFFFFFFFFFF8FC003FFFFFFFFFF8
FC000FFFFFFFFFF8FF8003FFFFFFFFF8FFE0007FFFFFFFF8FFF8007FFFFFFFF8
FFFF001FFFFFFFF8FFFFC003FFFFFFF8FFFFC000FFFFFFF8FFFFF8003FFFFFF8
FFFFFE0007FFFFF8FFFFFF8007FFFFF8FFFFFFF001FFFFF8FFFFFFFC003FFFF8
FFFFFFFC000FFFF8FFFFFFFF8003FFF8FFFFFFFFE0007FF8FFFFFFFFF8007FF8
FFFFFFFFFF001FF8FFFFFFFFFFC003F8FFFFFFFFFFC000F8FFFFFFFFFFF80038
FFFFFFFFFFFE0008FFFFFFFFFFFF8008FFFFFFFFFFFFF000FFFFFFFFFFFFFC00
FFFFFFFFFFFFFC00FFFFFFFFFFFFFF88>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 82 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
79 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 30 55 97 setcachedevice
55 0 0 67 0 30 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 67 def
/ImageMatrix [55 0 0 -67 0 67]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE007FFFFF
FFFFFE007FFFFFFFFFFE007FFFFFFFFFFE807FFFFFFFFFFE803FFFFFFFFFFE80
3FFFFFFFFFFE803FFFFFFFFFFEE03FFFFFFFFFFEE03FFFFFFFFFFEE00FFFFFFF
FFFEE00FFFFFFFFFFEE00FFFFFFFFFFEF00FFFFFFFFFFEF00FFFFFFFFFFEF007
FFFFFFFFFEF007FFFFFFFFFEF007801FFF80FEF807801FFF80FEF8060003FE00
7EF8000FE0F80C3EF8000FE0700C1EF8001FF8201E0EFC003FFC001F0EFC00FF
FE001F8EFC00FFFF801F8EFC00FFFFC01F82FC00FFFFC01F82FE00FFFFC01FE2
FE00FFFFE00FE0FE00FFFFE00FE0FE00FFFFE00FF0FF80FFFFF00FF0FF80FFFF
F00FF0FF803FFFF007F0FF803FFFF007FEFF803FFFF007FEFFC03FFFF807FEFF
C03FFFF807FEFFC01FFFF803FEFFC01FFFF803FEFFC01FFFF803FEFFE01FFFFE
03FEFFE01FFFFE03FEFFE00FFFFE00FEFFE00FFFFE00FEFFE00FFFFE00FEFFF0
0FFFFF00FEFFF00FFFFF00FEFFF007FFFF007EFFF007FFFF007EFFF007FFFF00
7EFFF807FFFF807EFFF803FFFF803EFFF803FFFF803EFFF803FFFF803EFFFE03
FFFFC03EFFFE03FFFFC03EFFFE00FFFFC03EFFFE00FFFFC03EFFFE00FFFFE03E
FFFF00FFFFF87EFFFF87FFFFFFFEFFFF87FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 67 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
100 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 42 32 105 setcachedevice
32 0 0 63 0 42 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 63 def
/ImageMatrix [32 0 0 -63 0 63]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE07FFFFF000FFFFF000FFFFE1F87FFFE7FC3FFFE7FC3FFFFFFC1FFFFFFC1F
FFFFFC1FFFFFF81FFFFFC01FFFFE001FFFE0001FFF00003FFF00007FFC0000FF
F00007FFE00007FFE0007FFFC007FFFFC01FFFFFC07FFFFF00FFFFFF00FFFFFF
01FFFFFF01FFFFFF01FFFFFF01FFFFFF03FFFFFF01FFFFFF01FFFFFF01FFFFFF
C1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFE0FFFFFFE0FFFFFFE0FFFFFFF07FFFFF
F07FFFFFF07FFFFFF81FFFFFFC0FFFFFFC0FFFFFFF0FFFFFFF87FFFFFF83FFFF
FFC1FFFFFFE07FFFFFF07FFFFFFC3FFFFFFE1FFFFFFE0C01FFFF0000FFFF8000
FFFFF000FFFFF001FFFFF1FFFFFFF1FFFFFFF1FFFFFFF1FFFFFFF1FF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 63 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 -19 132 121 setcachedevice
132 0 0 140 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 132 def
/Height 140 def
/ImageMatrix [132 0 0 -140 0 140]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000000000000FFF0800000000000000000000000000000
FFF08000000000000000000000000000007FF0C0000000000000000000000000
00007FF0C000000000000000000000000000007FF0E000000000000000000000
000000001FF0F000000000000000000000000000001FF0F00000000000000000
0000000000001FF0FC00000000000000000000000000001FF0FE000000000000
00000000000000000FF0FE00000000000000000000000000000FF0FF003FFFFF
FFFFFFFFFFFF0000000007F0FF801FFFFFFFFFFFFFFFFFFFC0000007F0FFC01F
FFFFFFFFFFFFFFFFFFFF000007F0FFC01FFFFFFFFFFFFFFFFFFFFFF00007F0FF
F007FFFFFFFFFFFFFFFFFFFFFE0003F0FFF003FFFFFFFFFFFFFFFFFFFFFE0003
F0FFF801FFFFFFFFFFFFFFFFFFFFFFC003F0FFFC00FFFFFFFFFFFFFFFFFFFFFF
F001F0FFFE00FFFFFFFFFFFFFFFFFFFFFFF801F0FFFF007FFFFFFFFFFFFFFFFF
FFFFFF01F0FFFF007FFFFFFFFFFFFFFFFFFFFFFF81F0FFFF001FFFFFFFFFFFFF
FFFFFFFFFF8070FFFFC00FFFFFFFFFFFFFFFFFFFFFFFC070FFFFE007FFFFFFFF
FFFFFFFFFFFFFFE030FFFFF007FFFFFFFFFFFFFFFFFFFFFFF030FFFFF803FFFF
FFFFFFFFFFFFFFFFFFFC30FFFFFC01FFFFFFFFFFFFFFFFFFFFFFFE30FFFFFC01
FFFFFFFFFFFFFFFFFFFFFFFE10FFFFFF007FFFFFFFFFFFFFFFFFFFFFFE10FFFF
FF003FFFFFFFFFFFFFFFFFFFFFFF10FFFFFF803FFFFFFFFFFFFFFFFFFFFFFF10
FFFFFFC01FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFE00FFFFFFFFFFFFFFFFFFFFF
FFF0FFFFFFE007FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFF001FFFFFFFFFFFFFFFF
FFFFFFF0FFFFFFFC01FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFC01FFFFFFFFFFFF
FFFFFFFFFFF0FFFFFFFE00FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFF007FFFFFFF
FFFFFFFFFFFFFFF0FFFFFFFF003FFFFFFFFFFFFFFFFFFFFFF0FFFFFFFF801FFF
FFFFFFFFFFFFFFFFFFF0FFFFFFFFC007FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF0
07FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF007FFFFFFFFFFFFFFFFFFFFF0FFFFFF
FFF803FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF801FFFFFFFFFFFFFFFFFFFFF0FF
FFFFFFFC00FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFE007FFFFFFFFFFFFFFFFFFF
F0FFFFFFFFFF007FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFC01FFFFFFFFFFFFFFF
FFFFF0FFFFFFFFFFE01FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFE00FFFFFFFFFFF
FFFFFFFFF0FFFFFFFFFFE007FFFFFFFFFFFFFFFFFFF0FFFFFFFFFFF003FFFFFF
FFFFFFFFFFFFF0FFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFC01FF
FFFFFFFFFFFFFFFFF0FFFFFFFFFFFF007FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFF
003FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFF803FFFFFFFFFFFFFFFFFF0FFFFFFFF
FFFF801FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFC01FFFFFFFFFFFFFFFFFF0FFFF
FFFFFFFFE00FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFF007FFFFFFFFFFFFFFFFF0
FFFFFFFFFFFFF001FFFFFFFFFFFFFFFFF0FFFFFFFFFFFFE000FFFFFFFFFFFFFF
FFF0FFFFFFFFFFFFC000FFFFFFFFFFFFFFFFF0FFFFFFFFFFFFC000FFFFFFFFFF
FFFFFFF0FFFFFFFFFFFFC0007FFFFFFFFFFFFFFFF0FFFFFFFFFFFF80003FFFFF
FFFFFFFFFFF0FFFFFFFFFFFF00003FFFFFFFFFFFFFFFF0FFFFFFFFFFFC00003F
FFFFFFFFFFFFFFF0FFFFFFFFFFFC00007FFFFFFFFFFFFFFFF0FFFFFFFFFFFC00
007FFFFFFFFFFFFFFFF0FFFFFFFFFFF80000FFFFFFFFFFFFFFFFF0FFFFFFFFFF
F00001FFFFFFFFFFFFFFFFF0FFFFFFFFFFF00001FFFFFFFFFFFFFFFFF0FFFFFF
FFFFE00007FFFFFFFFFFFFFFFFF0FFFFFFFFFFC00007FFFFFFFFFFFFFFFFF0FF
FFFFFFFFC0000FFFFFFFFFFFFFFFFFF0FFFFFFFFFF00001FFFFFFFFFFFFFFFFF
F0FFFFFFFFFF00003FFFFFFFFFFFFFFFFFF0FFFFFFFFFE00003FFFFFFFFFFFFF
FFFFF0FFFFFFFFFC00003FFFFFFFFFFFFFFFFFF0FFFFFFFFF800007FFFFFFFFF
FFFFFFFFF0FFFFFFFFF80001FFFFFFFFFFFFFFFFFFF0FFFFFFFFF80003FFFFFF
FFFFFFFFFFFFF0FFFFFFFFF00003FFFFFFFFFFFFFFFFFFF0FFFFFFFFC00003FF
FFFFFFFFFFFFFFFFF0FFFFFFFF800007FFFFFFFFFFFFFFFFFFF0FFFFFFFF8000
0FFFFFFFFFFFFFFFFFFFF0FFFFFFFF80000FFFFFFFFFFFFFFFFFFFF0FFFFFFFF
00001FFFFFFFFFFFFFFFFFFFF0FFFFFFFE00007FFFFFFFFFFFFFFFFFFFF0FFFF
FFFC00007FFFFFFFFFFFFFFFFFFFF0FFFFFFFC0000FFFFFFFFFFFFFFFFFFFFF0
FFFFFFF00000FFFFFFFFFFFFFFFFFFFFF0FFFFFFF00001FFFFFFFFFFFFFFFFFF
FFF0FFFFFFE00003FFFFFFFFFFFFFFFFFFFFF0FFFFFFC00007FFFFFFFFFFFFFF
FFFFFFF0FFFFFFC00007FFFFFFFFFFFFFFFFFFFFF0FFFFFF800007FFFFFFFFFF
FFFFFFFFFFF0FFFFFF00001FFFFFFFFFFFFFFFFFFFFFF0FFFFFF00003FFFFFFF
FFFFFFFFFFFFFFF0FFFFFC00007FFFFFFFFFFFFFFFFFFFFFF0FFFFFC00007FFF
FFFFFFFFFFFFFFFFFFF0FFFFF800007FFFFFFFFFFFFFFFFFFFFFF0FFFFF00000
FFFFFFFFFFFFFFFFFFFFFFF0FFFFF00001FFFFFFFFFFFFFFFFFFFFFFF0FFFFF0
0007FFFFFFFFFFFFFFFFFFFFFFF0FFFFE00007FFFFFFFFFFFFFFFFFFFFFFF0FF
FFC0000FFFFFFFFFFFFFFFFFFFFFFF80FFFF00000FFFFFFFFFFFFFFFFFFFFFFF
00FFFF00001FFFFFFFFFFFFFFFFFFFFFFF10FFFE00003FFFFFFFFFFFFFFFFFFF
FFFE10FFFE00003FFFFFFFFFFFFFFFFFFFFFFE10FFFC00007FFFFFFFFFFFFFFF
FFFFFFFC30FFF80001FFFFFFFFFFFFFFFFFFFFFFFC30FFF80001FFFFFFFFFFFF
FFFFFFFFFFF030FFF00001FFFFFFFFFFFFFFFFFFFFFFE070FFC00003FFFFFFFF
>
<FFFFFFFFFFFFFFC070FFC00007FFFFFFFFFFFFFFFFFFFFFFC1F0FF80000FFFFF
FFFFFFFFFFFFFFFFFF81F0FF80000FFFFFFFFFFFFFFFFFFFFFFC01F0FF00000F
FFFFFFFFFFFFFFFFFFFFF801F0FE00001FFFFFFFFFFFFFFFFFFFFFE003F0FC00
007FFFFFFFFFFFFFFFFFFFFF0003F0FC0000FFFFFFFFFFFFFFFFFFFFFF0007F0
FC0000FFFFFFFFFFFFFFFFFFFFFC0007F0F00001FFFFFFFFFFFFFFFFFFFFC000
07F0E00001FFFFFFFFFFFFFFFFFFFE000007F0C00003FFFFFFFFFFFFFFFFFF80
00000FF0C00007FFFFFFFFFFFFFFFE000000000FF0C00007FFFFFFFFFFFFFFFE
000000001FF08000000000000000000000000000001FF0800000000000000000
0000000000007FF08000000000000000000000000000007FF080000000000000
00000000000000007FF08000000000000000000000000000007FF08000000000
00000000000000000000FFF0>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
132 140 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
114 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 0 38 50 setcachedevice
38 0 0 50 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFF81FCC3FFFF81FC81FFFE003C80FFFC0E1C80FFFC0E1C80FFF80F0CC0FF
F80F84C0FFF80FC4C03FF80FC4C03FFC07E0C03FFC07E0E03FFC03E0E01FFE03
E0E01FFE03FCE01FFE03FCF01FFF81FCF01FFF81FCF00FFF81FCF00FFF80FCF0
0FFFC0FCF80FFFC0FCF80FFFC0FCF807FFC0FCF807FFC0FCF803FFE0FCFE03FF
E0FCFE03FFE0FCFE00FFE0FCFE003FC0FCFE000FC0FCFF020001FCFF038003FC
FF00F00FFCFF00FFFFFCFF00FFFFFCFF80FFFFFCFF807FFFFCFF807FFFFCFF80
7FFFFCFFC07FFFFCFFC07FFFFCFFC03FFFFCFFC03FFFFCFFC03FFFFCFFE03FFF
FCFFE03FFFFCFE001FFFFCFE001FFFFCFE001FFFFCFFF81FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 7 39 54 setcachedevice
39 0 0 47 0 7 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 47 def
/ImageMatrix [39 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC00000FFFC000000FFF0000000FFC0000000FF000FFFFEFF00FFFFFEFE03
FFFFFEFC1FFFFFFEF81FFFFFFEF03FFFFFFEF07FFFFFFEF0FFFFFFFEC0FFFFFF
FEC1FFFFFFFE81FFFFFFFE81FFFFFFFE87FFFFFFFE87FFFFFFFE07FFFFFFFE0F
FFFFFFFE0FFFFFFFFE00000000000000000000000000000000000000000FFFFF
FFFE0FFFFFFFFE07FFFFFFFE07FFFFFFFE87FFFFFFFE87FFFFFFFE81FFFFFFFE
81FFFFFFFEC0FFFFFFFEC0FFFFFFFEF0FFFFFFFEF07FFFFFFEF83FFFFFFEF81F
FFFFFEFC03FFFFFEFE00FFFFFEFF00FFFFFEFFC00FFFFEFFF0000000FFF00000
00FFFC000000FFFFC00000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 0 62 52 setcachedevice
62 0 0 52 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 52 def
/ImageMatrix [62 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC00FFCFFE1FFFFFF8000FCFFE0FFFFFF80003CFFE0FFFFFF80003C
FFE03FFFFF807C0CFFF03FFFFF80FC04FFF01FFFFF80FC04FFF01FFFFF80FE00
FFF01FFFFF80FF80FFF81FFFFF80FFFCFFF80FFFFF80FFFCFFF80FFFFFC0FFFC
FFF80FFFFFC07FFCFFFE07FFFFC07FFCFFFE07FFFFC07FFCFFFE07FFFFC07FFC
FFFF07FFFFC07FFCFFFF03FFFFC07FFCFFFF03FFFFC07FFCFFFF03FFFFE03FFC
FFFF80FFFFE03FFCFFFF80FFFFE03FFCFFFF80FFFFE03FFCFFE0000000003FFC
FFE0000000001FFCFFF0000000001FFCFFF8000000001FFCFFFFC07FFFFC1FFC
FFFFE07FFFFC0FFCFFFFE03FFFFC0FFCFFFFE03FFFFC0FFCFFFFE03FFFFC0FFC
FFFFE03FFFFE03FCFFFFF83FFFFE03FCFFFFF81FFFFE03FCFFFFF81FFFFF03FC
FFFFF81FFFFF01FCFFFFF81FFFFF01FC0FFFF81FFFFF01FC0FFFF81FFFFF81FC
81FFFC1FFFFF80FC80FFFC0FFFFF80FC80FFFC0FFFFF80FCE07FFC0FFFFFE07C
F03FFC0FFFFFE07CF83FFC0FFFFFF07CFC0FFC0FFFFFF03CFF81F80FFFFFF03C
FF80000FFFFFF03CFFC0000FFFFFF80CFFF0000FFFFFFC0CFFFF801FFFFFFE0C
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
0 0 0 -140 71 -66 setcachedevice
71 0 0 74 0 -140 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 71 def
/Height 74 def
/ImageMatrix [71 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFEFFC1FFFFFFFFFFFFFEFFC07FFFFFFFFFFFFEFFC01FFFFF
FFFFFFFEFFE01FFFFFFFFFFFFEFFE01FFFFFFFFFFFFEFFE01FFFFFFFFFFFFEFF
E00FFFFFFFFFFFFEFFF00FFFFFFFFFFFFEFFF00FFFFFFFFFFFFEFFF80FFFFFFF
FFFFFEFFF807FFFFFFFFFFFEFFF807FFFFFFFFFFFEFFF803FFFFFFFFFFFEFFFC
03FFFFFFFFFFFEFFFC03FFFFFFFFFFFEFFFC03FFFFFFFFFFFEFFFF01FFFFFFFF
FFFEFFFF01FFFFFFFFFFFEFFFF01FFFFFFFFFFFEFFFF007FFFFFFFFFFEFFFF80
7FFFFFFFFFFEFFFF807FFFFFFFFFFEFFFF807FFFFFFFFFFEFFFFC03FFFFFFFFF
FEFFFFC03007FFFFFFFEFFFFC030007FFFFFFEFFFFC0180007FFFFFEFFFFC01C
0007FFFFFEFFFFE01F0001FFFFFEFFFFE01FFF803FFFFEFFFFE01FFF800FFFFE
FFFFE00FFFFC01FFFEFFFFF00FFFFF00FFFEFFFFF00FFFFFC0FFFEFFFFF00FFF
FFF87FFEFFFFF007FFFFFC1FFEFFFFF007FFFFFC07FEFFFFFC07FFFFFE03FEFF
FFFC07FFFFFF01FEFFFFFC07FFFFFFC1FEFFFFFC01FFFFFFC0FEFFFFFC01FFFF
FFE07EFFFFFC01FFFFFFE01EFFFFFE01FFFFFFF01EFFFFFE01FFFFFFF00EFFFF
FE01FFFFFFF80EFFFFFE00FFFFFFF806FFFFFE00FFFFFFF806FFFFFE00FFFFFF
F802FFFFFF00FFFFFFFC02FFFFFF00FFFFFFFC02FFFFFF00FFFFFFFC02FFFFFF
007FFFFFFC001FFFFF007FFFFFFC0001FFFF007FFFFFFC0080FFFF007FFFFFF8
00807FFF807FFFFFF800C07FFF807FFFFFF800C03FFF807FFFFFF800F03FFF80
3FFFFFF000F01FFF803FFFFFE000F81FFF803FFFFFC002FC07FF803FFFFE0002
FE07FF803FFFFE0002FF03FF803FFFFC0006FFE0FFC03FFFC0000EFFE003C03F
FC00000EFFF00000000000001EFFFC000000000000FEFFFFC00000000001FEFF
FFF0000000001FFEFFFFFFC0000001FFFEFFFFFFC0000001FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
71 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a39 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a40 {{
0 0 0 -49 50 23 setcachedevice
50 0 0 72 0 -49 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 72 def
/ImageMatrix [50 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFC07FC0E1FFFFFFC07FC080FFFFFF001FC0803FFFFE0F0FC0803FFFF8
0F03C0C03FFFF80F81C0C03FFFF80FE1C0C03FFFF80FF1C0C01FFFF80FF0C0E0
1FFFF80FF8C0E01FFFF807F840E01FFFF807F840E00FFFF807FC40E00FFFF807
FC40F00FFFF803FC00F00FFFFE03FE00F00FFFFE00FE00F007FFFE00FE00F007
FFFF00FFC0F807FFFF00FFC0F807FFFF007FC0F807FFFF807FC0F803FFFF807F
C0F803FFFF803FC0FE03FFFF803FC0FE03FFFFC03FC0FE03FFFFC03FC0FE00FF
FFC03FC0FE00FFFFC01FC0FF00FFFFC01FC0FF00FFFFE01FC0FF00FFFFE01FC0
FF007FFFE01FC0FF807FFFE01FC0FF803FFFE01FC0FF803FFFF81FC0FF801FFF
F81FC0FF801FFFF81FC0FFC00FFFF81FC0FFC003FFE01FC0FFC001FFE01FC0FF
C0007FE01FC0FFC0100FC03FC0FFE01C0FC07FC0FFE01F8000FFC0FFE01FE00F
FFC0FFE00FE00FFFC0FFE00FFFFFFFC0FFF80FFFFFFFC0FFF80FFFFFFFC0FFF8
0FFFFFFFC0FFF803FFFFFFC0FFF803FFFFFFC0FFFC03FFFFFFC0FFFC03FFFFFF
C0FFFC03FFFFFFC0FFFC01FFFFFFC0FFFE01FFFFFFC0FFFE01FFFFFFC0FFFE01
FFFFFFC0FFFE00FFFFFFC0FFFE00FFFFFFC0FFFF00FFFFFFC0FFFF00FFFFFFC0
FFFF00FFFFFFC0FFFF007FFFFFC0FF80007FFFFFC0FF80007FFFFFC0FF80007F
FFFFC0FF80007FFFFFC0FF80007FFFFFC0FFFF807FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a41 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -134 63 -101 setcachedevice
63 0 0 33 0 -134 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 33 def
/ImageMatrix [63 0 0 -33 0 33]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFE1FFFFC0FEF87FFFE1FFFFC0FEF01FFFC0FFFF001EF01FFFC0FFFE070E
F00FFFC07FFE070EF80FFFE07FFC0786F80FFFE07FFC07C2F80FFFE07FFC07E2
F80FFFE07FFC07E2FC07FFF01FFE03F0FC07FFF01FFE03F0FC07FFF01FFE01F0
FC07FFF01FFF01F0FC07FFF01FFF01FEFF03FFF80FFF01FEFF03FFF80FFFC0FE
FF03FFF80FFFC0FEFF03FFF80FFFC0FEFF01FFF807FFC07EFF81FFFC07FFE07E
FF81FFFC07FFE07E1F81FFFC07FFE07E1F807FFC07FFE07E07807FFC03FFE07E
C7C03FFF01FFF07EC7C03FFF01FFF07EC7C01FFF01FFF07EE3C00FFC047FF07E
E3C007FC041FE07EE1C1C0F80607E07EF001F0000F0000FEF803F8001FC001FE
FC0FFE00FFF807FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 33 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
0 0 0 19 53 40 setcachedevice
53 0 0 21 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 21 def
/ImageMatrix [53 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000000000000000000000000000FFFFFFFF
FFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FF
FFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFF
FFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8000000000000000000
00000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
53 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a46 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
0 0 0 1 27 47 setcachedevice
27 0 0 46 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 27 def
/Height 46 def
/ImageMatrix [27 0 0 -46 0 46]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FF803FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE087C07FE080007FE0
80007FE0F0007FE0FF807FE0FFF07FE0FFF07FE0FFF87FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
27 46 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a48 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 -46 26 23 setcachedevice
26 0 0 69 0 -46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 69 def
/ImageMatrix [26 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC0FFC0FFC0FFC0FE001FC0FC0F0FC0F80F07C0F80F83C0F80FC3C0F80FE3C0
F80FE0C0F80FF8C0F807F840F807F840F803FC40F803FC40FC03FC00FC03FE00
FC01FE00FC01FE00FE01FFC0FE01FFC0FE00FFC0FF80FFC0FF803FC0FF803FC0
FF803FC0FFC03FC0FFC01FC0FFE01FC0FFE01FC01FE00FC01FE00FC01FF00FC0
0FF00FC08FF007C08FF007C083F807C083F807C0E3FE07C0E1FE07C0F1FE07C0
F0FE07C0F07E07C0F83E07C0FC3E0FC0FE001FC0FFC0FFC0FFC0FFC0FFFFFFC0
FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0
FFFFFFC0FFFFFFC0FFFFFFC0FFFFC3C0FFFF0040FFFF0040FFFF0000FFFF0000
FFFF0000FFFF0000FFFF8000FFFF8000FFFFE0C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
0 0 0 0 35 4 setcachedevice
35 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 4 def
/ImageMatrix [35 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a55 {{
0 0 0 0 50 47 setcachedevice
50 0 0 47 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 47 def
/ImageMatrix [50 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFE03FC0E1FFFFFFE03FC080FFFFFF800FC0803FFFFE0783C0803FFFF8
0781C0803FFFF80FE1C0C03FFFF80FF0C0C03FFFF80FF0C0C01FFFF00FF8C0C0
1FFFF00FF840C01FFFF00FF840E01FFFF00FFC40E00FFFF007FC40E00FFFF007
FC40E00FFFF807FC00F00FFFF807FE00F00FFFF807FE00F007FFF007FE00F007
FFF007FFC0F007FFF007FFC0F807FFE00FFFC0F807FFC01FFFC0F803FE001FFF
C0F803E0003FFFC0F8000000FFFFC0FE000007FFFFC0FE0000FFFFFFC0FE001F
FFFFFFC0FE0003FFFFFFC0FE0001FFFFFFC0FF00E0FFFFFFC0FF00F0FFFFFFC0
FF00783FFFFFC0FF007E0FFFFFC0FF007E07FFFFC0FF807F83FE1FC0FF803FC1
F803C0FF803FE1F803C0FF803FF0F801C0FFC03FF81801C0FFC03FF80801C0FF
C01FFF0001C0FFC01FFF8001C0FFC01FFFE001C0FFE01FFFFE0FC0FFF87FFFFF
FFC0FFF87FFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFF81FFCE1FFFFFFF81FFC80FFFFFFC003FC803FFFFF80E0FC803FFFFF
00E07C803FFFFF03F07CC03FFFFF03F83CC03FFFFF03FC3CC01FFFFF03FC0CC0
1FFFFF03FE0CC01FFFFF00FE04E01FFFFF00FE04E00FFFFF00FF84E00FFFFF00
FF84E00FFFFF007F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF803FC0F007
FFFF803FC0F007FFFFC03FFCF807FFFFC03FFCF807FFFFC01FFCF803FFFFC01F
FCF803FFFFE00FFCF803FFFFE00FFCFE03FFFFE00FFCFE03FFFFF80FFCFE00FF
FFF80FFCFE00FFFFF803FCFE00FFFFF803FCFF00FFFFFC03FCFF00FFFFFC03FC
FF007FFFFC03FCFF007FFFFC01FCFF003FFFFC01FCFF803FFFFE01FCFF801FFF
FE01FCFF801FFFFE01FCFF801FFFFE01FCFFC00FFFFE01FCFFC003FFFE01FCFF
C001FFFE01FCFFC000FFFE01FCFFC000FFFE03FCFFE0107FFE03FCFFE01C3FFC
0FFCFFE00C03F80FFCFFE00E00001FFCFFE00FC0003FFCFFF80FF803FFFCFFF8
0FFFFFFFFCFFF803FFFFFFFCFFF803FFFFFFFCFFF803FFFFFFFCFFFC03FFFFFF
FCFFFC03FFFFFFFCFFFC01FFFFFFFCFFFC01FFFFFFFCFFFC01FFFFFFFCFFFE01
FFFFFFFCFFFE00FFFFFFFCFFFE00FFFFFFFCFFFE00FFFFFFFCFFFF00FFFFFFFC
FFFF00FFFFFFFCFFFF007FFFFFFCFFFF007FFFFFFCFFFF007FFFFFFCFFFF807F
FFFFFCFFFF807FFFFFFCFFFF803FFFFFFCFFFF803FFFFFFCFFC0003FFFFFFCFF
C0003FFFFFFCFFC0003FFFFFFCFFC0000FFFFFFCFFC0000FFFFFFCFFFFE00FFF
FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a57 {{
0 0 0 28 50 99 setcachedevice
50 0 0 71 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 71 def
/ImageMatrix [50 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE000FFFFFFFC0F00001FFFFFFC08000001FFFFFC0007FC00FFFFFC001FFF00F
FFFFC0007FFE01FFFFC0003FFF00FFFFC0003FFF007FFFC0003FFF803FFFC000
3FFFC01FFFC0003FFFC01FFFC0803FFFF01FFFC0F0FFFFF007FFC0F0FFFFF007
FFC0FFFFFFF803FFC0FFFFFFF803FFC0FFFFFFF803FFC0FFFFFFFC03FFC0FFFF
FFFC03FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFE01FF
C0FFFF007E01FFC0FFF8001E00FFC0FFE0000600FFC0FFC01F0000FFC0FF00FF
C000FFC0FF00FFF000FFC0FF01FFF8007FC0FE01FFFC007FC0FC01FFFC007FC0
FC01FFFE007FC0FC03FFFF001FC0FC03FFFFC01FC0FC03FFFFC01FC0F803FFFF
E01FC0F801FFFFE01FC0F801FFFFE00FC0F801FFFFE00FC0F801FFFFE00FC0F8
01FFFFF00FC0F801FFFFF00FC0F800FFFFF007C0F800FFFFF007C0FC00FFFFF0
07C0FC00FFFFF807C0FC00FFFFF807C0FC007FFFF803C0FC007FFFF803C0FE00
7FFFF803C0FE007FFFFC03C0FE007FFFFC03C0FF001FFFFC01C0FF001FFFFC01
C0FF001FFFFC01C0FFC00FFFFF01C0FFC00FFFFF0040FFE00FFFFF0040FFF007
FFFF0040FFF807FFFF0040FFF803FFFF0040FFF801FFFC0000FFFC007FFC0000
FFFF807FFC0000FFFFC03FF84000FFFFE01FF04000FFFFE007E04000FFFFFC00
00F040FFFFFF0003FFC0FFFFFFF01FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -74 91 36 setcachedevice
91 0 0 110 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 91 def
/Height 110 def
/ImageMatrix [91 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000003FFFFFC000000000800000003FFFFFC000000000800000003FFFFFC0
00000000800000003FFFFFC000000000800000003FFFFFC00000000080000000
3FFFFFC000000000FE00000FFFFFFFFF000007E0FF80007FFFFFFFFFE0001FE0
FFC000FFFFFFFFFFF0003FE0FFC000FFFFFFFFFFF0003FE0FFC000FFFFFFFFFF
F0003FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFC001FFFFFFFFFFF8003FE0FFC001FF
FFFFFFFFF8003FE0FF8001FFFFFFFFFFF8001FE0FF8001FFFFFFFFFFF8001FE0
FE0001FFFFFFFFFFF80007E08000000000000000000000008000000000000000
0000000080000000000000000000000080000000000000000000000080000000
0000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
91 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
62 0 0 0 0 0 setcachedevice
} exec } bind def
/a62 {{
0 0 0 -14 56 9 setcachedevice
56 0 0 23 0 -14 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 23 def
/ImageMatrix [56 0 0 -23 0 23]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000000000800000000000008000000000000080000000000000FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF800000000000008000000000000080000000000000800000000000
00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 23 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 30 41 34 setcachedevice
41 0 0 4 0 30 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 4 def
/ImageMatrix [41 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
0 0 0 0 39 53 setcachedevice
39 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 53 def
/ImageMatrix [39 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFF0FFEFFFFFE03FEFFFFFE03FEFFFFFE01FEFFFFFE01FEFFFFFE01FEFFFF
FF01FEFFFFFF01FEFFFFFF00FEFFFFFF00FEFFFFFF00FEFFFFFF80FEFFFFFF80
FEFFFFFF807EFFFFFF807EF87FFF807EF87FFFE07EF03FFFE07EF00FFFE03EF0
0FFFE03EF00FFFE03EF80FFFF03EF80FFFF03EF807FFF00EF807FFF00EF807FF
F00EFC07FFF80EFC03FFF806FC03FFF806FC03FFF806FE03FFFC06FE03FFFC06
FE01FFFC02FE01FFFC02FE01FFFC02FF81FFFE02FF81FFFE02FF80FFFE003F80
FFFE001F80FFFE001FC0FFFF801FC03FFF800FC03FFF800FC01FFF808FC00FFF
8083E00FFF8083E00FFF80E3E087FF80E1E0C0FF82E0C0C03E02F000F80002F8
03FC000EFC07FF807E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a66 {{
0 0 0 -54 54 -1 setcachedevice
54 0 0 53 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 53 def
/ImageMatrix [54 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFC401FFFFFFFFFF0000FFFFFFFFFE00007FFFFFFFFC00C07FFFFF
FFFC00E01FFFFFFFF804F00FFFFFFFF01CF007FFFFFFC01CF803FFFFFF803CFC
01FFFFFF007CFF01FFFFFF00FCFF807FFFFE01FCFFC03FFFFC07FCFFC01FFFF0
07FCFFE00FFFE00FFCFFF007FFC01FFCFFFC07FFC03FFCFFFE01FF807FFCFFFF
00FF01FFFCFFFF007C01FFFCFFFF803803FFFCFFFFC01007FFFCFFFFF0100FFF
FCFFFFF8001FFFFCFFFFFC007FFFFCFFFFFC007FFFFCFFFFFE00FFFFFCFFFFFC
007FFFFCFFFFFC007FFFFCFFFFF8001FFFFCFFFFF0100FFFFCFFFFC01007FFFC
FFFF803803FFFCFFFF007C01FFFCFFFF00FF01FFFCFFFE01FF807FFCFFFC07FF
C03FFCFFF007FFC01FFCFFE00FFFE00FFCFFC01FFFF007FCFFC03FFFFC07FCFF
807FFFFE01FCFF01FFFFFF00FCFC01FFFFFF007CF803FFFFFF803CF007FFFFFF
C01CF00FFFFFFFF01CE01FFFFFFFF804C07FFFFFFFFC00007FFFFFFFFC0000FF
FFFFFFFE0001FFFFFFFFFF00C7FFFFFFFFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
0 0 0 -77 77 3 setcachedevice
77 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 80 def
/ImageMatrix [77 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFF000FFFFFFFFFF8FFFFE000007FFFFFFFF8FFFFE000007FFFFFFFF8FFFF
0000001FFE3FFFF8FFFC001FF803FC3FFFF8FFF0001FF800FC1FFFF8FFC001FF
FF00701FFFF8FF8007FFFFE0001FFFF8FF803FFFFFF8001FFFF8FF007FFFFFFC
001FFFF8FE00FFFFFFFF000FFFF8FC00FFFFFFFF000FFFF8F000FFFFFFFF800F
FFF8F001FFFFFFFFC00FFFF8F007FFFFFFFFC00FFFF8E007FFFFFFFFC007FFF8
E007FFFFFFFFE007FFF8C007FFFFFFFFE007FFF8C00FFFFFFFFFE007FFF8C00F
FFFFFFFFE001FFF8C00FFFFFFFFFE001FFF8801FFFFFFFFFF001FFF8801FFFFF
FFFFF001FFF8801FFFFFFFFFF001FFF8801FFFFFFFFFF000FFF8801FFFFFFFFF
F000FFF8801FFFFFFFFFFC00FFF8801FFFFFFFFFFC00FFF8801FFFFFFFFFFC00
7FF8801FFFFFFFFFF0007FF8801FFFFFFFC0000000F8800FFFFFFFC0000000F8
800FFFFFFFC0000000F8800FFFFFFFC0000000F8800FFFFFFFFFFFFFFFF8800F
FFFFFFFFFFFFFFF8800FFFFFFFFFFFFFFFF88007FFFFFFFFFFFFFFF88007FFFF
FFFFFFFFFFF8C007FFFFFFFFFFFFFFF8C007FFFFFFFFFFFFFFF8C007FFFFFFFF
FFFFFFF8C001FFFFFFFFFFFFFFF8C001FFFFFFFFFFFFFFF8E001FFFFFFFFFFFF
FFF8E001FFFFFFFFFFFFFFF8E000FFFFFFFFFFFFFFF8E000FFFFFFFFFFFFFFF8
F000FFFFFFFFFFFFC3F8F0007FFFFFFFFFFFC3F8FC007FFFFFFFFFFFC3F8FC00
7FFFFFFFFFFFC3F8FE003FFFFFFFFFFFC3F8FE003FFFFFFFFFFFC1F8FE001FFF
FFFFFFFFC1F8FF001FFFFFFFFFFFC1F8FF801FFFFFFFFFFFC1F8FF8007FFFFFF
FFFFC1F8FFC007FFFFFFFFFFC0F8FFC003FFFFFFFFFFC0F8FFF001FFFFFFFFFF
C0F8FFF800FFFFFFFFFF00F8FFF800FFFFFFFFFF00F8FFFC00FFFFFFFFFF0078
FFFE007FFFFFFFFF0078FFFE001FFFFFFFFE0078FFFF000FFFFFFFFE0078FFFF
C003FFFFFFFE0018FFFFF003FFFFFFFE0018FFFFF801FFFFFFFC0018FFFFFC00
7FFFFFF80018FFFFFC001FFFFFF00018FFFFFF8007FFFFC06008FFFFFFC000FF
FF80F008FFFFFFF000FFFF81F808FFFFFFFE0007FC07FC08FFFFFFFF8000000F
FF08FFFFFFFF8000000FFF00FFFFFFFFF800003FFF80FFFFFFFFFFC003FFFF80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a68 {{
0 0 0 1 49 76 setcachedevice
49 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 49 def
/Height 75 def
/ImageMatrix [49 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC000000000FFFFC000000000FFFFC000000000FFFFC000000000FFFFFFF0
01FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FF
FFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803
FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFF
FFF803FF80000000000000000000000000000000000000000000000000000000
000FFFFFFC03FF8083FFFFFC03FF80E1FFFFFC03FF80E1FFFFFC03FF80E0FFFF
FC03FF80F0FFFFFC03FF80F8FFFFFC03FF80F87FFFFC03FF80FC3FFFFC03FF80
FC3FFFFC03FF80FE0FFFFC03FF80FE07FFFC03FF80FF87FFFC03FF80FFC7FFFC
03FF80FFC3FFFC03FF80FFC1FFFC03FF80FFE1FFFC03FF80FFE0FFFC03FF80FF
F0FFFC03FF80FFF83FFC03FF80FFF83FFC03FF80FFF81FFC03FF80FFFE0FFC03
FF80FFFF0FFC03FF80FFFF0FFC03FF80FFFF87FC03FF80FFFFC3FC03FF80FFFF
C3FC03FF80FFFFC0FC03FF80FFFFE07C03FF80FFFFF87C03FF80FFFFF87C03FF
80FFFFFC3C03FF80FFFFFC1C03FF80FFFFFE1C03FF80FFFFFE0C03FF80FFFFFF
0C03FF80FFFFFF8C03FF80FFFFFF8003FF80FFFFFF8003FF80FFFFFFE003FF80
FFFFFFF003FF80FFFFFFF003FF80FFFFFFF803FF80FFFFFFFC03FF80FFFFFFFC
03FF80FFFFFFFC03FF80FFFFFFFE03FF80FFFFFFFE03FF80FFFFFFFF83FF80FF
FFFFFFC3FF80FFFFFFFFC3FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
49 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a69 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/G/N279 -1 TZ
%%BeginResource: font H
10 dict begin
T3Defs
/FontType 3 def
/FontName /N331 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-3 
58 
118 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 8 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 58 22 setcachedevice
58 0 0 70 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 58 def
/Height 70 def
/ImageMatrix [58 0 0 -70 0 70]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000001FFFFFFFFC0000001FFFFFFFFC0000001FFFFFFFFC0000001FFFFFFFFC0
FE00FFFFFFFFFFC0FE00FFFFFFFFFFC0FE00FFFFFFFFFFC0FF00FFFFFFFFFFC0
FF007FFFFFFFFFC0FF007FFFFFFFFFC0FF007FFFFFFFFFC0FFC07FFFFFFFFFC0
FFC07FFFFFFFFFC0FFC01FFFFFFFFFC0FFC01FFFFFFFFFC0FFC01FFFFFFFFFC0
FFE01FFFFFFFFFC0FFE01FFFFFFFFFC0FFE00FFFFFFFFFC0FFE00FFFFFFFFFC0
FFE00FF01FFFFFC0FFF00FF01FFFFFC0FFF00F8001FFFFC0FFF0060FC07FFFC0
FFF0040FC01FFFC0FFF0041FF007FFC0FFF8003FF803FFC0FFF8007FFC03FFC0
FFF8007FFF01FFC0FFF801FFFF807FC0FFF801FFFF803FC0FFFC01FFFF801FC0
FFFC01FFFFC00FC0FFFC01FFFFC00FC0FFFC01FFFFE00FC0FFFF01FFFFE007C0
FFFF01FFFFE007C0FFFF007FFFF001C0FFFF007FFFF001C0FFFF007FFFF001C0
FFFF807FFFFC00C0FFFF807FFFFC00C0FFFF803FFFFC00C0FFFF803FFFFC0040
FFFF803FFFFC0040FFFFC03FFFFE0040FFFFC03FFFFE0040FFFFC01FFFFE0040
FFFFC01FFFFE0000FFFFC01FFFFE0000FFFFE01FFFFF0000FFFFE01FFFFF0000
FE07E00FFFFF0000FE07E00FFFFF0000FE07E00FFFFF0000FF07F00FFFFF0000
FF07F007FFFF8040FF07F007FFFF8040FF03F001FFFF8040FFC3FC01FFFF0040
FFC3FC00FFFF0040FFC1FC007FFF00C0FFC1FC003FFF00C0FFE1FC083FFF01C0
FFE0FC0C1FFE01C0FFF0FC1F07FC07C0FFF0701F01F007C0FFF8001FC0000FC0
FFFC007FF0003FC0FFFF03FFFC01FFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
58 70 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF801FFFFF0FF80003FFFF0FF80003FFFF0FF000007FFF0F807F803FFF0F007
F800FFF0F01FFE003FF0E00FFF801FF0E00FFFC01FF0E007FFE01FF0E003FFF0
0FF0E003FFF007F0E003FFF003F0E003FFF803F0E003FFF803F0F007FFFE00F0
F80FFFFE00F0F80FFFFE0070FFFFFFFE0070FFFFFFFF0030FFFFFFFF0030FFFF
FFFF0030FFFFFFFF0030FFFFFFFF0030FFFFFFFF0010FFFFFFFF8010FFFFFFFF
8010FFFF007F8010FFFC00078010FFE000038000FFC01F818000FF007FE08000
FF00FFF08000FE00FFF88000FE03FFF80000F803FFF80000F007FFFE0000E007
FFFE0000E007FFFF0000E007FFFF0000C00FFFFF0000C00FFFFF0000C00FFFFF
0000C00FFFFF0000C00FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000
800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8010800FFFFF8010800F
FFFF8010800FFFFF8010800FFFFF8010800FFFFF8010800FFFFF8030C00FFFFF
8030C00FFFFF0030C00FFFFF0030C00FFFFF0030E00FFFFF0070E007FFFF0070
F007FFFF00F0F007FFFE00F0F003FFFE00F0F803FFFE03F0FE03FFFE07F0FF00
FFF807F0FF807FF00FF0FF803FE00FF0FFC01FC01FF0FFE00000FFF0FFFC0003
FFF0FFFF800FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
26 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80003FFF0FFF80003FFF0FFC00000FFF0FF007F803FF0FE00
7F800FF0F807FFE007F0F00FFFF003F0F01FFFF803F0F03FFFFE00F0E0FFFFFF
0070E0FFFFFF0070C1FFFFFF0030C1FFFFFF8030C3FFFFFF803080FFFFFF8010
801FFFFF8010800FFFFF8010800FFFFFC000800FFFFFC000800FFFFFC000800F
FFFFC000800FFFFFC000800FFFFFC000C00FFFFFC000C01FFFFFC000F8FFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC010
FFFFFFFFC010FFFFFFFFC010FFFFFFFF8010FFFFFFFF8010FFFFFFFF8030FE3F
FFFF8030FE3FFFFF8070FE1FFFFF0070FE0FFFFF00F0FE07FFFE00F0FE03FFF8
03F0FE00FFF007F0FE00FFF00FF0FE181FE03FF0FE1E0001FFF0FE1E0001FFF0
FE1FE007FFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1F
FFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFF
FFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1800FFFFF0
FE00000FFFF0FE000003FFF0FE000000FFF0FE0000001FF0FE0000001FF0FE00
00000FF0FE00000007F0FE00000003F0FE00000003F0FE007FF800F0FE0FFFFF
80F0FE3FFFFFF8F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF800FFFF0FFFE0001FFF0FFFE0001FFF0FFF800003FF0FFE01FC01FF0FFC0
1FC00FF0FF803FF007F0FF007FF803F0FF00FFFE03F0FE03FFFE00F0F803FFFF
0070F803FFFF0070F003FFFF0030F007FFFF0030F007FFFF0030F007FFFF8010
E007FFFF8010E007FFFF8010E007FFFF8000C00FFFFF8000C00FFFFF8000C00F
FFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF
8000800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000
800FFFFF80008007FFFF80108007FFFF80108007FFFF80108007FFFF00108007
FFFF00308007FFFF00308003FFFF00708003FFFF00F08000FFFE00F08000FFFE
03F080087FF803F080087FF807F0800C3FF01FF0800E0FC03FF0800E00003FF0
C00F0001FFF0C00FF007FFF0C00FFFFFFFF0C00FFFFFFFF0E007FFFFFFF0E007
FFFFFFF0E007FFFFFFF0E007FFFFFFF0F007FFFFFFF0F007FFFFFFF0F003FFFF
FFF0F003FFFF80F0F803FFFF0070F800FFFE0030FE00FFFE0030FF00FFFE0030
FF007FFE0030FF007FFE0030FF803FFE0030FFC01FFF0030FFE01FFF8030FFF8
1FFFE070FFFC0FFFE070FFFC01FFC070FFFE007F00F0FFFF800003F0FFFFF000
0FF0FFFFFE003FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF800FFFF0FFFC0001FFF0FFFC0001FFF0FFC000003FF0FF803FE00FF0FE00
3FE007F0F800FFFE03F0F007FFFF00F0F00FFFFF80F0F01FFFFFC070E01FFFFF
E030C01FFFFFE030C03FFFFFF810C0FFFFFFF810C0FFFFFFF81080FFFFFFFC10
81FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FF
FFFFF80081FFFFFFF80081FFFFFFF80080FFFFFFE000C0FFFFFFC000C0FFFFFF
C000C03FFFFF8010E03FFFFF0010E01FFFFE0010E01FFFF00010F00FFFE00030
F80FFFE00030FE07FF800070FF03FE0000F0FF00F80000F0FF80700003F0FFE0
000007F0FFF800000FF0FFFE00003FF0FFFC0000FFF0FFF80000FFF0FFC00003
FFF0FF800001FFF0FF800001FFF0FF0000603FF0FE0001F81FF0F80001F80FF0
F80003FE07F0F0001FFE03F0F0003FFF03F0F000FFFF80F0F003FFFF8070E003
FFFF8070E007FFFFC070E00FFFFFC030E01FFFFFE030E01FFFFFE030E03FFFFF
E030E03FFFFFE030E03FFFFFE030E03FFFFFE030E03FFFFFE030F03FFFFFC030
F03FFFFFC070F01FFFFFC070F81FFFFF8070F80FFFFF80F0FE0FFFFF80F0FF07
FFFF03F0FF83FFFE07F0FF80FFF007F0FFC03FC00FF0FFE000003FF0FFFC0001
FFF0FFFF800FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/H/N331 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.6 672.12 m
/N22 10.9091 Tf
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
115.516 672.12 m
(is)
[2.98911 4.18912 ] pdfxs
126.054 672.12 m
(to)
[2.98911 5.38913 ] pdfxs
137.673 672.12 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
160.178 672.12 m
(v) show
165.447 672.12 m
(e) show
173.716 672.12 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
187.723 672.12 m
(of)
[5.38913 3.58903 ] pdfxs
200.062 672.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
216.589 672.12 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
257.782 672.12 m
(by)
[5.38913 5.38913 ] pdfxs
271.92 672.12 m
(focusing)
[3.58903 5.38913 4.78904 5.38913 4.18912 2.98911 5.38913 5.38913 ] pdfxs
312.632 672.12 m
(on)
[5.38913 5.38913 ] pdfxs
326.651 672.12 m
(superior)
[4.18912 5.38913 5.38913 4.78904 3.58903 2.98911 5.38913 3.58903 ] pdfxs
365.563 672.12 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
406.876 672.12 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
425.803 672.12 m
(coarticulating)
[4.78904 5.38913 4.78904 3.58903 2.98911 2.98911 4.78904 5.38913 2.98911 4.78904 2.98911 
2.98911 5.38913 5.38913 ] pdfxs
488.891 672.12 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
511.407 672.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5998 658.68 m
(subordinate)
[4.18912 5.38913 5.38913 5.38913 3.58903 5.38913 2.98911 5.38913 4.78904 2.98911 4.78904 
] pdfxs
147.12 658.68 m
(ones.)
[5.38913 5.38913 4.78904 4.18912 2.74908 ] pdfxs
173.225 658.68 m
(Intuiti)
[3.58903 5.38913 2.98911 5.38913 2.98911 2.98911 2.98911 ] pdfxs
199.309 658.68 m
(v) show
204.578 658.68 m
(ely)
[4.78904 2.98911 5.38913 ] pdfxs
217.025 658.68 m
(,) show
222.894 658.68 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
249.25 658.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
265.298 658.68 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
291.643 658.68 m
(is)
[2.98911 4.18912 ] pdfxs
301.581 658.68 m
(na)
[5.38913 4.78904 ] pdfxs
311.519 658.68 m
(vigating)
[5.38913 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
350.072 658.68 m
(to)
[2.98911 5.38913 ] pdfxs
361.21 658.68 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
386.966 658.68 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
424.1 658.7 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
432.999 658.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
438.96 658.68 m
/N22 10.9091 Tf
(of)
[5.38913 3.58903 ] pdfxs
450.818 658.68 m
(higher)
[5.38913 2.98911 5.38913 5.38913 4.78904 3.58903 ] pdfxs
481.353 658.68 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
512.945 658.68 m
(,) show
518.694 658.68 m
(if)
[2.98911 3.58903 ] pdfxs
93.6003 645.12 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
119.477 645.12 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
156.12 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
168.098 645.12 m
(lo)
[2.98911 5.38913 ] pdfxs
176.236 645.12 m
(wer)
[7.90916 4.78904 3.58903 ] pdfxs
195.404 645.12 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
231.5 645.1 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
239.599 652.599 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
246.96 645.12 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
257.138 645.12 m
(en)
[4.78904 5.38913 ] pdfxs
270.196 645.12 m
(route)
[3.58903 5.38913 5.38913 2.98911 4.78904 ] pdfxs
295.462 645.12 m
(to)
[2.98911 5.38913 ] pdfxs
307.3 645.1 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
315.699 645.1 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
318.84 645.12 m
/N22 10.9091 Tf
(,) show
324.469 645.12 m
(or)
[5.38913 3.58903 ] pdfxs
336.327 645.12 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
353.094 645.12 m
(too)
[2.98911 5.38913 5.38913 ] pdfxs
369.862 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
378.6 645.12 m
(f) show
385.189 645.12 m
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
409.145 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
425.312 645.12 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
461.476 645.12 m
(path)
[5.38913 4.78904 2.98911 5.38913 ] pdfxs
483.032 645.12 m
(to)
[2.98911 5.38913 ] pdfxs
494.9 645.1 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
503.499 645.1 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
506.64 645.12 m
/N22 10.9091 Tf
(,) show
512.269 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.6001 631.56 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
119.945 631.56 m
(may)
[8.50908 4.78904 5.38913 ] pdfxs
141.393 631.56 m
(choose)
[4.78904 5.38913 5.38913 5.38913 4.18912 4.78904 ] pdfxs
174.327 631.56 m
(to)
[2.98911 5.38913 ] pdfxs
185.585 631.56 m
(visit)
[5.38913 2.98911 4.18912 2.98911 2.98911 ] pdfxs
207.5 631.6 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
215.599 639.099 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\013) show
220.2 631.56 m
/N22 10.9091 Tf
(.) show
99.36 618 m
(W) show
108.829 618 m
(e) show
117.098 618 m
(model)
[8.50908 5.38913 5.38913 4.78904 2.98911 ] pdfxs
147.883 618 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
167.16 618 m
(problem)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 ] pdfxs
206.923 618 m
(by)
[5.38913 5.38913 ] pdfxs
221.422 618 m
(an)
[4.78904 5.38913 ] pdfxs
235.2 618 m
(MDP)
[9.70908 7.90916 6.10906 ] pdfxs
262.6 625.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
280.398 625.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
293.897 625.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\005\004)
[0 3.39969 0 ] pdfxs
305.296 625.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
305.296 625.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\006)
[4.19962 0 ] pdfxs
318.895 625.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
318.895 625.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\t)
[4.19962 0 ] pdfxs
332.894 625.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
332.894 625.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\b\027\n)
[4.19962 0 8.6992 0 ] pdfxs
349.527 618 m
/N22 10.9091 Tf
(,) show
356.236 618 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
386.6 625.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\004) show
397.341 618 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
408.119 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
424.886 618 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
440.574 618 m
(of)
[5.38913 3.58903 ] pdfxs
453.152 618 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
480.806 618 m
(consisting)
[4.78904 5.38913 5.38913 4.18912 2.98911 4.18912 2.98911 2.98911 5.38913 5.38913 ] pdfxs
93.5993 604.44 m
(of)
[5.38913 3.58903 ] pdfxs
107 612 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
111.8 604.401 m
(3d3)
[0 5.39951 0 ] pdfxs
125.858 604.44 m
/N22 10.9091 Tf
(locations)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
168.6 604.44 m
(in)
[2.98911 5.38913 ] pdfxs
180.458 604.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
197.225 604.44 m
(room,)
[3.58903 5.38913 5.38913 8.50908 2.74908 ] pdfxs
226.571 604.44 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
245.8 612 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006) show
257.858 604.44 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
268.516 604.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
285.163 604.44 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
300.731 604.44 m
(of)
[5.38913 3.58903 ] pdfxs
313.189 604.44 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
347.432 604.44 m
(consisting)
[4.78904 5.38913 5.38913 4.18912 2.98911 4.18912 2.98911 2.98911 5.38913 5.38913 ] pdfxs
395.083 604.44 m
(of)
[5.38913 3.58903 ] pdfxs
407.541 604.44 m
(eight)
[4.78904 2.98911 5.38913 5.38913 2.98911 ] pdfxs
432.687 604.44 m
(stochastic)
[4.18912 2.98911 5.38913 4.78904 5.38913 4.78904 4.18912 2.98911 2.98911 4.78904 ] pdfxs
479.018 604.44 m
(na)
[5.38913 4.78904 ] pdfxs
488.956 604.44 m
(vigation)
[5.38913 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
93.5998 590.88 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
127.723 590.88 m
(\(four)
[3.58903 3.58903 5.38913 5.38913 3.58903 ] pdfxs
152.869 590.88 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
186.992 590.88 m
(in)
[2.98911 5.38913 ] pdfxs
198.851 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
215.498 590.88 m
(compass)
[4.78904 5.38913 8.50908 5.38913 4.78904 4.18912 4.18912 ] pdfxs
256.341 590.88 m
(direction,)
[5.38913 2.98911 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
301.232 590.88 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
320.279 590.88 m
(four)
[3.58903 5.38913 5.38913 3.58903 ] pdfxs
341.716 590.88 m
(diagonal)
[5.38913 2.98911 4.78904 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
382.548 590.88 m
(actions\).)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 3.58903 2.74908 ] pdfxs
424.93 590.88 m
(Each)
[6.70915 4.78904 4.78904 5.38913 ] pdfxs
449.966 590.88 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
479.901 590.88 m
(mo)
[8.50908 5.38913 ] pdfxs
493.679 590.88 m
(v) show
498.948 590.88 m
(es)
[4.78904 4.18912 ] pdfxs
511.406 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5993 577.32 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
120.185 577.32 m
(in)
[2.98911 5.38913 ] pdfxs
131.683 577.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
148.09 577.32 m
(corresponding)
[4.78904 5.38913 3.58903 3.58903 4.78904 4.18912 5.38913 5.38913 5.38913 5.38913 2.98911 
5.38913 5.38913 ] pdfxs
213.348 577.32 m
(direction)
[5.38913 2.98911 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
255.13 577.32 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
277.406 577.32 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
327.8 577.3 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
336.807 577.32 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
355.494 577.32 m
(f) show
358.963 577.32 m
(ails)
[4.78904 2.98911 2.98911 4.18912 ] pdfxs
377.16 577.32 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
399.556 577.32 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
451.4 577.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025) show
455.5 584.899 m
(Z.\006)
[0 8.19925 0 ] pdfxs
473.298 577.3 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
473.298 577.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(H\027)
[6.5994 0 ] pdfxs
486.676 577.32 m
/N22 10.9091 Tf
(\(in)
[3.58903 2.98911 5.38913 ] pdfxs
501.763 577.32 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
515.651 577.32 m
(of)
[5.38913 3.58903 ] pdfxs
93.6006 563.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
109.408 563.76 m
(e) show
114.077 563.76 m
(xperiments)
[5.38913 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 4.18912 ] pdfxs
164.968 563.76 m
(we)
[7.90916 4.78904 ] pdfxs
180.186 563.76 m
(used)
[5.38913 4.18912 4.78904 5.38913 ] pdfxs
202.702 563.76 m
(success)
[4.18912 5.38913 4.78904 4.78904 4.78904 4.18912 4.18912 ] pdfxs
237.906 563.76 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
287.7 563.8 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
297.199 571.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
308.498 563.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
314.398 571.399 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
314.398 571.399 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\001)
[2.59976 0 ] pdfxs
322.025 563.76 m
/N22 10.9091 Tf
(\).)
[3.58903 2.74908 ] pdfxs
331.843 563.76 m
(Upon)
[7.90916 5.38913 5.38913 5.38913 ] pdfxs
358.559 563.76 m
(f) show
362.028 563.76 m
(ailure)
[4.78904 2.98911 2.98911 5.38913 3.58903 4.78904 ] pdfxs
389.323 563.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
405.25 563.76 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
431.355 563.76 m
(is)
[2.98911 4.18912 ] pdfxs
441.054 563.76 m
(randomly)
[3.58903 4.78904 5.38913 5.38913 5.38913 8.50908 2.98911 5.38913 ] pdfxs
485.366 563.76 m
(placed)
[5.38913 2.98911 4.78904 4.78904 4.78904 5.38913 ] pdfxs
516.261 563.76 m
(in)
[2.98911 5.38913 ] pdfxs
93.5997 550.2 m
(one)
[5.38913 5.38913 4.78904 ] pdfxs
112.287 550.2 m
(of)
[5.38913 3.58903 ] pdfxs
124.385 550.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
140.672 550.2 m
(eight-neighboring)
[4.78904 2.98911 5.38913 5.38913 2.98911 3.58903 5.38913 4.78904 2.98911 5.38913 5.38913 
5.38913 5.38913 3.58903 2.98911 5.38913 5.38913 ] pdfxs
221.727 550.2 m
(locations)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
263.989 550.2 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
286.385 550.2 m
(equal)
[4.78904 5.38913 5.38913 4.78904 2.98911 ] pdfxs
312.97 550.2 m
(probability)
[5.38913 3.58903 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 
] pdfxs
359.53 550.2 m
(.) show
366.959 550.2 m
(If)
[3.58903 3.58903 ] pdfxs
377.138 550.2 m
(a) show
385.047 550.2 m
(mo)
[8.50908 5.38913 ] pdfxs
398.825 550.2 m
(v) show
404.094 550.2 m
(ement)
[4.78904 8.50908 4.78904 5.38913 2.98911 ] pdfxs
433.679 550.2 m
(w) show
441.468 550.2 m
(ould)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
463.745 550.2 m
(tak)
[2.98911 4.78904 5.38913 ] pdfxs
476.792 550.2 m
(e) show
484.821 550.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
501.108 550.2 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
93.5993 536.64 m
(into)
[2.98911 5.38913 2.98911 5.38913 ] pdfxs
113.236 536.64 m
(a) show
120.785 536.64 m
(w) show
128.574 536.64 m
(all,)
[4.78904 2.98911 2.98911 2.74908 ] pdfxs
144.85 536.64 m
(then)
[2.98911 5.38913 4.78904 5.38913 ] pdfxs
166.406 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
182.333 536.64 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
208.679 536.64 m
(will)
[7.90916 2.98911 2.98911 2.98911 ] pdfxs
228.315 536.64 m
(remain)
[3.58903 4.78904 8.50908 4.78904 2.98911 5.38913 ] pdfxs
261.25 536.64 m
(in)
[2.98911 5.38913 ] pdfxs
272.508 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
288.435 536.64 m
(same)
[4.18912 4.78904 8.50908 4.78904 ] pdfxs
313.591 536.64 m
(location.)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
354.773 536.64 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
374.42 536.64 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
400.646 536.64 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
421.002 536.64 m
(recei)
[3.58903 4.78904 4.78904 4.78904 2.98911 ] pdfxs
441.707 536.64 m
(v) show
446.976 536.64 m
(es)
[4.78904 4.18912 ] pdfxs
458.835 536.64 m
(a) show
466.504 536.64 m
(re)
[3.58903 4.78904 ] pdfxs
474.642 536.64 m
(w) show
482.431 536.64 m
(ard)
[4.78904 3.58903 5.38913 ] pdfxs
498.958 536.64 m
(of)
[5.38913 3.58903 ] pdfxs
511.7 544.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(\006^Z)
[0 8.49922 0 ] pdfxs
93.6 523.08 m
/N22 10.9091 Tf
(for)
[3.58903 5.38913 3.58903 ] pdfxs
109.047 523.08 m
(e) show
113.596 523.08 m
(v) show
118.865 523.08 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
135.513 523.08 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
164.847 523.08 m
(e) show
169.516 523.08 m
(x) show
174.785 523.08 m
(ecuted.)
[4.78904 4.78904 5.38913 2.98911 4.78904 5.38913 2.74908 ] pdfxs
93.5997 509.64 m
(W) show
103.069 509.64 m
(e) show
111.578 509.64 m
(assume)
[4.78904 4.18912 4.18912 5.38913 8.50908 4.78904 ] pdfxs
147.392 509.64 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
167.389 509.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
184.396 509.64 m
(gent)
[5.38913 4.78904 5.38913 2.98911 ] pdfxs
206.912 509.64 m
(has)
[5.38913 4.78904 4.18912 ] pdfxs
225.119 509.64 m
(access)
[4.78904 4.78904 4.78904 4.78904 4.18912 4.18912 ] pdfxs
256.614 509.64 m
(to)
[2.98911 5.38913 ] pdfxs
268.832 509.64 m
(a) show
277.341 509.64 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
293.148 509.64 m
(of)
[5.38913 3.58903 ] pdfxs
305.967 509.64 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
356.3 517.2 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
363.199 517.3 m
(\007) show
367.999 517.2 m
(\t\006\017\006\017\006\017\020\t\013\005)
[0 4.79956 0 4.79956 0 4.79956 0 4.99954 0 4.09962 0 
] pdfxs
391.497 517.2 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\025\026)
[5.89946 0 ] pdfxs
405.24 509.64 m
/N22 10.9091 Tf
(,) show
411.949 509.64 m
(associated)
[4.78904 4.18912 4.18912 5.38913 4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
460.32 509.64 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
483.436 509.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
500.443 509.64 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
516.251 509.64 m
(of)
[5.38913 3.58903 ] pdfxs
93.5997 496.08 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
131.443 496.08 m
(locations)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
175.2 496.1 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
184.099 503.699 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\n\t\006\017\006\017\006\017\020\t)
[0 4.89955 0 4.79956 0 4.79956 0 4.79956 0 4.99954 0 
] pdfxs
212.897 496.1 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
221.096 503.599 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\026) show
228.96 496.08 m
/N22 10.9091 Tf
(.) show
238.909 496.08 m
(A) show
250.778 496.08 m
(controller)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
297.1 503.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
303.099 496.101 m
(\026) show
310.2 496.08 m
/N22 10.9091 Tf
(is)
[2.98911 4.18912 ] pdfxs
321.458 496.08 m
(a) show
330.327 496.08 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
376.691 496.08 m
(cost-to-goal)
[4.78904 5.38913 4.18912 2.98911 3.58903 2.98911 5.38913 3.58903 5.38913 5.38913 4.78904 
2.98911 ] pdfxs
432.6 496.08 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
470.443 496.08 m
(option)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
502.4 503.7 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
508.599 496.101 m
(\026) show
517.599 503.7 m
(\001) show
94.6374 490.101 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\016\r\020\017)
[0 3.49968 0 12.8988 0 ] pdfxs
115.635 484.302 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
119.835 490.101 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
119.835 490.101 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\022\021)
[3.59967 0 ] pdfxs
131.534 490.101 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\t) show
131.534 490.101 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007\023\024\n)
[4.19962 0 6.99936 0 ] pdfxs
146.4 482.52 m
/N22 10.9091 Tf
(,) show
152.749 482.52 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
183.1 490.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r\025\017)
[0 12.9988 0 ] pdfxs
200.698 484.301 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\030) show
208.798 490.1 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
221.296 490.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\r) show
234.12 482.52 m
/N22 10.9091 Tf
(,) show
240.469 482.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
257.116 482.52 m
(initiation)
[2.98911 5.38913 2.98911 2.98911 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
299.847 482.52 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
314.9 490.1 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\021) show
325.494 482.52 m
/N22 10.9091 Tf
(includes)
[2.98911 5.38913 4.78904 2.98911 5.38913 5.38913 4.78904 4.18912 ] pdfxs
365.127 482.52 m
(an)
[4.78904 5.38913 ] pdfxs
375.185 482.52 m
(y) show
384.054 482.52 m
(locations)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
426.676 482.52 m
(e) show
431.345 482.52 m
(xcept)
[5.38913 4.78904 4.78904 5.38913 2.98911 ] pdfxs
458.41 482.52 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
474.457 482.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
491.105 482.52 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
93.5996 468.96 m
(location,)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
134.781 468.96 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
154 476.6 m
/N68 [0.0999908 0 0 -0.0999908 0 0] Tf
(\023) show
163.789 468.96 m
/N22 10.9091 Tf
(forces)
[3.58903 5.38913 3.58903 4.78904 4.78904 4.18912 ] pdfxs
193.723 468.96 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
210.251 468.96 m
(option)
[5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
241.385 468.96 m
(to)
[2.98911 5.38913 ] pdfxs
253.123 468.96 m
(terminate)
[2.98911 4.78904 3.58903 8.50908 2.98911 5.38913 4.78904 2.98911 4.78904 ] pdfxs
297.425 468.96 m
(only)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
320.061 468.96 m
(in)
[2.98911 5.38913 ] pdfxs
331.8 468.96 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
348.447 468.96 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
385.57 468.96 m
(location.)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
428.312 468.96 m
(Figures)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 4.18912 ] pdfxs
464.236 468.96 m
(2\(b\)-\(d\))
[5.38913 3.58903 5.38913 3.58903 3.58903 3.58903 5.38913 3.58903 ] pdfxs
501.948 468.96 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
516.676 468.96 m
(w) show
93.5998 455.4 m
(e) show
98.2688 455.4 m
(xamples)
[5.38913 4.78904 8.50908 5.38913 2.98911 4.78904 4.18912 ] pdfxs
137.792 455.4 m
(of)
[5.38913 3.58903 ] pdfxs
150.011 455.4 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
199.701 455.4 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
236.814 455.4 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
252.741 455.4 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
290.2 455.4 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
299.399 462.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
303.48 455.4 m
/N22 10.9091 Tf
(:) show
310.789 455.4 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
342.404 455.4 m
(2\(b\))
[5.38913 3.58903 5.38913 3.58903 ] pdfxs
363.72 455.4 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
378.447 455.4 m
(ws)
[7.90916 4.18912 ] pdfxs
393.905 455.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
410.313 455.4 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
446.836 455.4 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
468.262 455.4 m
(y) show
477.011 455.4 m
(of)
[5.38913 3.58903 ] pdfxs
489.349 455.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
505.756 455.4 m
(con-)
[4.78904 5.38913 5.38913 3.58903 ] pdfxs
93.5999 441.84 m
(troller)
[2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 ] pdfxs
124.1 449.4 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\005) show
130.499 449.5 m
(\007) show
138.36 441.84 m
/N22 10.9091 Tf
(\(na)
[3.58903 5.38913 4.78904 ] pdfxs
151.887 441.84 m
(vigating)
[5.38913 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
191.4 441.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
208.527 441.84 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
235.953 441.84 m
(to)
[2.98911 5.38913 ] pdfxs
248.171 441.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
265.298 441.84 m
(location)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
304.7 441.8 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(C) show
313.799 449.499 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\007) show
317.76 441.84 m
/N22 10.9091 Tf
(\).)
[3.58903 2.74908 ] pdfxs
330.818 441.84 m
(Figures)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 4.18912 ] pdfxs
367.222 441.84 m
(2\(c\))
[5.38913 3.58903 4.78904 3.58903 ] pdfxs
388.538 441.84 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
408.065 441.84 m
(2\(d\))
[5.38913 3.58903 5.38913 3.58903 ] pdfxs
429.982 441.84 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
444.709 441.84 m
(w) show
456.578 441.84 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
474 441.8 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
478.025 441.84 m
/N22 10.9091 Tf
(-redundant)
[3.58903 3.58903 4.78904 5.38913 5.38913 5.38913 5.38913 4.78904 5.38913 2.98911 ] pdfxs
93.6 428.28 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
130.593 428.28 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
146.7 428.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
154.899 435.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
166.898 428.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
172.798 435.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
172.798 435.899 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\001\004\003)
[2.59976 0 5.39951 0 ] pdfxs
189.12 428.28 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
208.3 428.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
216.499 435.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
228.498 428.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
234.398 435.899 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
234.398 435.899 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\001)
[2.59976 0 ] pdfxs
242.297 428.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
250.647 428.28 m
/N22 10.9091 Tf
(respecti)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 2.98911 ] pdfxs
283.92 428.28 m
(v) show
289.189 428.28 m
(ely)
[4.78904 2.98911 5.38913 ] pdfxs
301.636 428.28 m
(.) show
309.305 428.28 m
(Note)
[7.90916 5.38913 2.98911 4.78904 ] pdfxs
333.501 428.28 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
352.898 428.28 m
(by)
[5.38913 5.38913 ] pdfxs
366.916 428.28 m
(reducing)
[3.58903 4.78904 5.38913 5.38913 4.78904 2.98911 5.38913 5.38913 ] pdfxs
408.5 428.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
412.549 428.28 m
/N22 10.9091 Tf
(,) show
418.418 428.28 m
(we)
[7.90916 4.78904 ] pdfxs
434.116 428.28 m
(obtain)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 ] pdfxs
464.411 428.28 m
(a) show
472.32 428.28 m
(lar)
[2.98911 4.78904 3.58903 ] pdfxs
483.447 428.28 m
(ger)
[5.38913 4.78904 3.58903 ] pdfxs
500.694 428.28 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
515.781 428.28 m
(of)
[5.38913 3.58903 ] pdfxs
93.6004 414.72 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
142.931 414.72 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
179.444 414.72 m
(although)
[4.78904 2.98911 2.98911 5.38913 5.38913 5.38913 5.38913 5.38913 ] pdfxs
220.277 414.72 m
(less)
[2.98911 4.78904 4.18912 4.18912 ] pdfxs
239.313 414.72 m
(optimal.)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 2.74908 ] pdfxs
93.5999 401.16 m
(W) show
103.069 401.16 m
(e) show
111.578 401.16 m
(use)
[5.38913 4.18912 4.78904 ] pdfxs
129.785 401.16 m
(tw)
[2.98911 7.90916 ] pdfxs
140.563 401.16 m
(o) show
149.673 401.16 m
(dif)
[5.38913 2.98911 3.58903 ] pdfxs
161.4 401.16 m
(ferent)
[3.58903 4.78904 3.58903 4.78904 5.38913 2.98911 ] pdfxs
190.494 401.16 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
232.287 401.16 m
(methods:)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 4.18912 2.98911 ] pdfxs
277.56 401.16 m
(\(1\))
[3.58903 5.38913 3.58903 ] pdfxs
293.967 401.16 m
(sequential)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 ] pdfxs
341.738 401.16 m
(planning,)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
386.52 401.16 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
416.705 401.16 m
(we)
[7.90916 4.78904 ] pdfxs
433.123 401.16 m
(achie)
[4.78904 4.78904 5.38913 2.98911 4.78904 ] pdfxs
455.629 401.16 m
(v) show
460.898 401.16 m
(e) show
469.647 401.16 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
486.654 401.16 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
93.6001 387.6 m
(sequentially)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 2.98911 
5.38913 ] pdfxs
148.669 387.6 m
(by)
[5.38913 5.38913 ] pdfxs
161.967 387.6 m
(e) show
166.636 387.6 m
(x) show
171.905 387.6 m
(ecuting)
[4.78904 4.78904 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
206.389 387.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
222.076 387.6 m
(controllers)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
] pdfxs
271.036 387.6 m
(one)
[5.38913 5.38913 4.78904 ] pdfxs
289.124 387.6 m
(at)
[4.78904 2.98911 ] pdfxs
299.422 387.6 m
(a) show
306.731 387.6 m
(time)
[2.98911 2.98911 8.50908 4.78904 ] pdfxs
328.527 387.6 m
(according)
[4.78904 4.78904 4.78904 5.38913 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
373.789 387.6 m
(to)
[2.98911 5.38913 ] pdfxs
384.687 387.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
400.374 387.6 m
(order)
[5.38913 3.58903 5.38913 4.78904 3.58903 ] pdfxs
425.76 387.6 m
(of)
[5.38913 3.58903 ] pdfxs
437.258 387.6 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
472.331 387.6 m
(of)
[5.38913 3.58903 ] pdfxs
483.829 387.6 m
(subgoals,)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
93.5999 374.04 m
(\(2\))
[3.58903 5.38913 3.58903 ] pdfxs
109.647 374.04 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
159.458 374.04 m
(planning,)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
203.76 374.04 m
(where)
[7.90916 5.38913 4.78904 3.58903 4.78904 ] pdfxs
233.705 374.04 m
(we)
[7.90916 4.78904 ] pdfxs
249.763 374.04 m
(use)
[5.38913 4.18912 4.78904 ] pdfxs
267.611 374.04 m
(Algorithm)
[7.90916 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
316.352 374.04 m
/N24 10.9091 Tf
(Mer)
[9.10916 4.78904 4.18912 ] pdfxs
334.08 374.04 m
(g) show
339.349 374.04 m
(eContr)
[4.78904 7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
368.923 374.04 m
(oller)
[5.38913 2.98911 2.98911 4.78904 4.18912 ] pdfxs
393.109 374.04 m
/N22 10.9091 Tf
(for)
[3.58903 5.38913 3.58903 ] pdfxs
409.036 374.04 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
425.683 374.04 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
448.56 374.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
465.207 374.04 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
502.319 374.04 m
(asso-)
[4.78904 4.18912 4.18912 5.38913 3.58903 ] pdfxs
93.5995 360.6 m
(ciated)
[4.78904 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
123.054 360.6 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
145.81 360.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
162.457 360.6 m
(controllers.)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 2.98911 4.78904 3.58903 4.18912 
2.74908 ] pdfxs
217.167 360.6 m
(In)
[3.58903 5.38913 ] pdfxs
229.625 360.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
246.392 360.6 m
(\002rst)
[6.10906 3.58903 4.18912 2.98911 ] pdfxs
266.748 360.6 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
282.195 360.6 m
(of)
[5.38913 3.58903 ] pdfxs
294.654 360.6 m
(e) show
299.323 360.6 m
(xperiments,)
[5.38913 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 4.18912 2.74908 
] pdfxs
354.043 360.6 m
(we)
[7.90916 4.78904 ] pdfxs
370.101 360.6 m
(\002x)
[6.10906 5.38913 ] pdfxs
385.079 360.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
401.726 360.6 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
438.381 360.6 m
(of)
[5.38913 3.58903 ] pdfxs
450.839 360.6 m
(subgoals.)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
497.181 360.6 m
(At)
[7.90916 2.98911 ] pdfxs
511.439 360.6 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5996 347.04 m
(be)
[5.38913 4.78904 ] pdfxs
103.658 347.04 m
(ginning)
[5.38913 2.98911 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
139.701 347.04 m
(of)
[5.38913 3.58903 ] pdfxs
151.44 347.04 m
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
174.076 347.04 m
(episode)
[4.78904 5.38913 2.98911 4.18912 5.38913 5.38913 4.78904 ] pdfxs
210.12 347.04 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
226.047 347.04 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
252.392 347.04 m
(is)
[2.98911 4.18912 ] pdfxs
262.33 347.04 m
(placed)
[5.38913 2.98911 4.78904 4.78904 4.78904 5.38913 ] pdfxs
293.465 347.04 m
(in)
[2.98911 5.38913 ] pdfxs
304.603 347.04 m
(a) show
312.152 347.04 m
(random)
[3.58903 4.78904 5.38913 5.38913 5.38913 8.50908 ] pdfxs
348.086 347.04 m
(location,)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 2.74908 ] pdfxs
388.548 347.04 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
406.995 347.04 m
(a) show
414.544 347.04 m
(\002x)
[6.10906 5.38913 ] pdfxs
425.923 347.04 m
(ed)
[4.78904 5.38913 ] pdfxs
438.861 347.04 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
474.915 347.04 m
(of)
[5.38913 3.58903 ] pdfxs
486.653 347.04 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
93.5994 333.48 m
(\(in)
[3.58903 2.98911 5.38913 ] pdfxs
109.647 333.48 m
(our)
[5.38913 5.38913 3.58903 ] pdfxs
128.094 333.48 m
(e) show
132.763 333.48 m
(xperiments)
[5.38913 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 4.18912 ] pdfxs
185.4 333.5 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
200.599 341.099 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
214.097 341.099 m
/N279 [0.0999908 0 0 -0.0999908 0 0] Tf
(D) show
219.294 333.48 m
/N22 10.9091 Tf
(\)) show
226.963 333.48 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
244.21 333.48 m
(randomly)
[3.58903 4.78904 5.38913 5.38913 5.38913 8.50908 2.98911 5.38913 ] pdfxs
289.963 333.48 m
(selected.)
[4.18912 4.78904 2.98911 4.78904 4.78904 2.98911 4.78904 5.38913 2.74908 ] pdfxs
334.865 333.48 m
(Ne)
[7.90916 4.78904 ] pdfxs
347.443 333.48 m
(xt,)
[5.38913 2.98911 2.74908 ] pdfxs
362.89 333.48 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
380.137 333.48 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
396.185 333.48 m
(of)
[5.38913 3.58903 ] pdfxs
409.243 333.48 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
459.774 333.48 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
497.606 333.48 m
(\(using)
[3.58903 5.38913 4.18912 2.98911 5.38913 5.38913 ] pdfxs
94 319.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
102.599 327.499 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
114.998 319.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
120.898 327.499 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
120.898 327.499 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\001)
[2.59976 0 ] pdfxs
128.52 319.92 m
/N22 10.9091 Tf
(\)) show
135.589 319.92 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
151.636 319.92 m
(e) show
156.185 319.92 m
(v) show
161.454 319.92 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
178.702 319.92 m
(subgoal)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 ] pdfxs
215.825 319.92 m
(is)
[2.98911 4.18912 ] pdfxs
226.483 319.92 m
(computed.)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 4.78904 5.38913 2.74908 ] pdfxs
277.265 319.92 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
309 319.92 m
(3) show
317.749 319.92 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
332.476 319.92 m
(ws)
[7.90916 4.18912 ] pdfxs
348.054 319.92 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
364.581 319.92 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
422.901 319.92 m
(of)
[5.38913 3.58903 ] pdfxs
435.359 319.92 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
457.996 319.92 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
499.428 319.92 m
(meth-)
[8.50908 4.78904 2.98911 5.38913 3.58903 ] pdfxs
93.5994 306.36 m
(ods,)
[5.38913 5.38913 4.18912 2.74908 ] pdfxs
115.276 306.36 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
131.683 306.36 m
(e) show
136.232 306.36 m
(v) show
141.501 306.36 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
159.108 306.36 m
(starting)
[4.18912 2.98911 4.78904 3.58903 2.98911 2.98911 5.38913 5.38913 ] pdfxs
195.381 306.36 m
(location)
[2.98911 5.38913 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
234.054 306.36 m
(in)
[2.98911 5.38913 ] pdfxs
246.272 306.36 m
(terms)
[2.98911 4.78904 3.58903 8.50908 4.18912 ] pdfxs
274.057 306.36 m
(of)
[5.38913 3.58903 ] pdfxs
286.756 306.36 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
323.77 306.36 m
(of)
[5.38913 3.58903 ] pdfxs
336.468 306.36 m
(steps)
[4.18912 2.98911 4.78904 5.38913 4.18912 ] pdfxs
361.854 306.36 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
378.261 306.36 m
(completing)
[4.78904 5.38913 8.50908 5.38913 2.98911 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
430.832 306.36 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
447.839 306.36 m
(o) show
453.108 306.36 m
(v) show
458.377 306.36 m
(erall)
[4.78904 3.58903 4.78904 2.98911 2.98911 ] pdfxs
481.363 306.36 m
(task.)
[2.98911 4.78904 4.18912 5.38913 2.74908 ] pdfxs
507.828 306.36 m
(The)
[6.70915 5.38913 4.78904 ] pdfxs
93.5991 292.8 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
143.77 292.8 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
185.323 292.8 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
221.617 292.8 m
(consistently)
[4.78904 5.38913 5.38913 4.18912 2.98911 4.18912 2.98911 4.78904 5.38913 2.98911 2.98911 
5.38913 ] pdfxs
277.166 292.8 m
(outperforms)
[5.38913 5.38913 2.98911 5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.18912 
] pdfxs
333.926 292.8 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
350.814 292.8 m
(sequential)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 ] pdfxs
398.584 292.8 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
440.257 292.8 m
(in)
[2.98911 5.38913 ] pdfxs
452.235 292.8 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
466.723 292.8 m
(starting)
[4.18912 2.98911 4.78904 3.58903 2.98911 2.98911 5.38913 5.38913 ] pdfxs
502.875 292.8 m
(loca-)
[2.98911 5.38913 4.78904 4.78904 3.58903 ] pdfxs
93.5992 279.24 m
(tions.)
[2.98911 2.98911 5.38913 5.38913 4.18912 2.74908 ] pdfxs
122.694 279.24 m
(Ne)
[7.90916 4.78904 ] pdfxs
135.272 279.24 m
(xt,)
[5.38913 2.98911 2.74908 ] pdfxs
149.759 279.24 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
165.806 279.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
182.454 279.24 m
(same)
[4.18912 4.78904 8.50908 4.78904 ] pdfxs
208.09 279.24 m
(task,)
[2.98911 4.78904 4.18912 5.38913 2.74908 ] pdfxs
231.795 279.24 m
(we)
[7.90916 4.78904 ] pdfxs
247.853 279.24 m
(measure)
[8.50908 4.78904 4.78904 4.18912 5.38913 3.58903 4.78904 ] pdfxs
287.497 279.24 m
(ho)
[5.38913 5.38913 ] pdfxs
298.035 279.24 m
(w) show
309.304 279.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
325.832 279.24 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
384.152 279.24 m
(of)
[5.38913 3.58903 ] pdfxs
396.61 279.24 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
413.137 279.24 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
463.068 279.24 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
499.002 279.24 m
(v) show
504.151 279.24 m
(aries)
[4.78904 3.58903 2.98911 4.78904 4.18912 ] pdfxs
93.5994 265.68 m
(by)
[5.38913 5.38913 ] pdfxs
107.138 265.68 m
(v) show
112.287 265.68 m
(arying)
[4.78904 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
143.1 265.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
147.142 265.68 m
/N22 10.9091 Tf
(,) show
152.531 265.68 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
178.767 265.68 m
(computing)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
227.989 265.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
243.916 265.68 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
258.643 265.68 m
(of)
[5.38913 3.58903 ] pdfxs
270.8 265.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
274.822 265.68 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
324.633 265.68 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
361.026 265.68 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
376.353 265.68 m
(e) show
380.902 265.68 m
(v) show
386.171 265.68 m
(ery)
[4.78904 3.58903 5.38913 ] pdfxs
402.818 265.68 m
(subgoal.)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 2.74908 ] pdfxs
442.691 265.68 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
473.705 265.68 m
(4) show
481.854 265.68 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
496.582 265.68 m
(ws)
[7.90916 4.18912 ] pdfxs
511.44 265.68 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5999 252.12 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
151.32 252.12 m
(of)
[5.38913 3.58903 ] pdfxs
163.058 252.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
178.985 252.12 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
228.196 252.12 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
263.651 252.12 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
281.978 252.12 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
313.112 252.12 m
(5) show
321.261 252.12 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
335.989 252.12 m
(ws)
[7.90916 4.18912 ] pdfxs
350.847 252.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
366.894 252.12 m
(a) show
371.443 252.12 m
(v) show
376.712 252.12 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
403.057 252.12 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
438.992 252.12 m
(of)
[5.38913 3.58903 ] pdfxs
450.73 252.12 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
491.443 252.12 m
(coartic-)
[4.78904 5.38913 4.78904 3.58903 2.98911 2.98911 4.78904 3.58903 ] pdfxs
93.5999 238.56 m
(ulated)
[5.38913 2.98911 4.78904 2.98911 4.78904 5.38913 ] pdfxs
123.654 238.56 m
(by)
[5.38913 5.38913 ] pdfxs
137.913 238.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
154.56 238.56 m
(agent)
[4.78904 5.38913 4.78904 5.38913 2.98911 ] pdfxs
181.625 238.56 m
(\226) show
190.494 238.56 m
(a) show
195.043 238.56 m
(v) show
200.312 238.56 m
(eraged)
[4.78904 3.58903 4.78904 5.38913 4.78904 5.38913 ] pdfxs
232.767 238.56 m
(o) show
238.036 238.56 m
(v) show
243.305 238.56 m
(er)
[4.78904 3.58903 ] pdfxs
255.163 238.56 m
(all)
[4.78904 2.98911 2.98911 ] pdfxs
269.41 238.56 m
(states)
[4.18912 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
297.065 238.56 m
(\226) show
305.934 238.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
321.981 238.56 m
(dif)
[5.38913 2.98911 3.58903 ] pdfxs
333.708 238.56 m
(ferent)
[3.58903 4.78904 3.58903 4.78904 5.38913 2.98911 ] pdfxs
362.563 238.56 m
(v) show
367.712 238.56 m
(alues)
[4.78904 2.98911 5.38913 4.78904 4.18912 ] pdfxs
393.577 238.56 m
(of)
[5.38913 3.58903 ] pdfxs
406.4 238.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
410.476 238.56 m
/N22 10.9091 Tf
(.) show
418.625 238.56 m
(W) show
428.094 238.56 m
(e) show
436.243 238.56 m
(v) show
441.392 238.56 m
(aried)
[4.78904 3.58903 2.98911 4.78904 5.38913 ] pdfxs
466.9 238.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
474.458 238.56 m
/N22 10.9091 Tf
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
499.3 238.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
505.199 246.199 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
505.199 246.199 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\005)
[2.59976 0 ] pdfxs
516.294 238.56 m
/N22 10.9091 Tf
(to)
[2.98911 5.38913 ] pdfxs
94.5 232.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
94.5 232.6 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\016\017)
[5.29951 0 ] pdfxs
102.299 225.001 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
110.88 225 m
/N22 10.9091 Tf
(using)
[5.38913 4.18912 2.98911 5.38913 5.38913 ] pdfxs
138 225 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
143.899 232.599 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
146.399 225 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
151.899 232.599 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
160.385 225 m
/N22 10.9091 Tf
(interv)
[2.98911 5.38913 2.98911 4.78904 3.58903 5.38913 ] pdfxs
185.28 225 m
(als.)
[4.78904 2.98911 4.18912 2.74908 ] pdfxs
205.396 225 m
(All)
[7.90916 2.98911 2.98911 ] pdfxs
222.523 225 m
(of)
[5.38913 3.58903 ] pdfxs
234.861 225 m
(these)
[2.98911 5.38913 4.78904 4.18912 4.78904 ] pdfxs
260.607 225 m
(results)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 4.18912 ] pdfxs
292.21 225 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
308.857 225 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
329.694 225 m
(a) show
334.243 225 m
(v) show
339.512 225 m
(eraged)
[4.78904 3.58903 4.78904 5.38913 4.78904 5.38913 ] pdfxs
371.846 225 m
(o) show
377.115 225 m
(v) show
382.384 225 m
(er)
[4.78904 3.58903 ] pdfxs
394.123 225 m
(100)
[5.38913 5.38913 5.38913 ] pdfxs
413.77 225 m
(episodes,)
[4.78904 5.38913 2.98911 4.18912 5.38913 5.38913 4.78904 4.18912 2.74908 ] pdfxs
457.352 225 m
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
480.588 225 m
(consisting)
[4.78904 5.38913 5.38913 4.18912 2.98911 4.18912 2.98911 2.98911 5.38913 5.38913 ] pdfxs
93.5988 211.56 m
(of)
[5.38913 3.58903 ] pdfxs
105.937 211.56 m
(10)
[5.38913 5.38913 ] pdfxs
120.075 211.56 m
(trials.)
[2.98911 3.58903 2.98911 4.78904 2.98911 4.18912 2.74908 ] pdfxs
149.519 211.56 m
(Note)
[7.90916 5.38913 2.98911 4.78904 ] pdfxs
173.955 211.56 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
193.471 211.56 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
209.8 211.6 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
218.399 219.199 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
231.298 219.199 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
235.8 211.56 m
/N22 10.9091 Tf
(,) show
241.909 211.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
258.556 211.56 m
(only)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
281.073 211.56 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
330.883 211.56 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
352.309 211.56 m
(y) show
361.298 211.56 m
(is)
[2.98911 4.18912 ] pdfxs
371.716 211.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
388.363 211.56 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
424.887 211.56 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
446.312 211.56 m
(y) show
455.181 211.56 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
474.108 211.56 m
(thus)
[2.98911 5.38913 5.38913 4.18912 ] pdfxs
495.545 211.56 m
(it)
[2.98911 2.98911 ] pdfxs
504.763 211.56 m
(does)
[5.38913 5.38913 4.78904 4.18912 ] pdfxs
93.5998 198 m
(not)
[5.38913 5.38913 2.98911 ] pdfxs
110.847 198 m
(of)
[5.38913 3.58903 ] pdfxs
119.585 198 m
(fer)
[3.58903 4.78904 3.58903 ] pdfxs
135.152 198 m
(much)
[8.50908 5.38913 4.78904 5.38913 ] pdfxs
162.709 198 m
(\003e)
[6.10906 4.78904 ] pdfxs
173.487 198 m
(xibility)
[5.38913 2.98911 5.38913 2.98911 2.98911 2.98911 2.98911 5.38913 ] pdfxs
208.199 198 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
230.956 198 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
265.079 198 m
(to)
[2.98911 5.38913 ] pdfxs
276.938 198 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
293.585 198 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
319.33 198 m
(subgoals.)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
365.432 198 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
388.188 198 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
406.635 198 m
(be)
[5.38913 4.78904 ] pdfxs
420.294 198 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
441.13 198 m
(seen)
[4.18912 4.78904 4.78904 5.38913 ] pdfxs
463.886 198 m
(in)
[2.98911 5.38913 ] pdfxs
475.624 198 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
507.479 198 m
(5) show
516.228 198 m
(in)
[2.98911 5.38913 ] pdfxs
93.5989 184.44 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
123.664 184.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
140.552 184.44 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
161.977 184.44 m
(y) show
171.086 184.44 m
(generated)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 5.38913 ] pdfxs
216.948 184.44 m
(by)
[5.38913 5.38913 ] pdfxs
231.326 184.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
248.093 184.44 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
264.74 184.44 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
287.737 184.44 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
333.599 184.44 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
350.2 184.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
359.099 191.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
372.498 191.999 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(Z) show
372.498 191.999 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\016\017)
[5.29951 0 ] pdfxs
380.297 184.4 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
389.127 184.44 m
/N22 10.9091 Tf
(has)
[5.38913 4.78904 4.18912 ] pdfxs
407.094 184.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
423.861 184.44 m
(minimum)
[8.50908 2.98911 5.38913 2.98911 8.50908 5.38913 8.50908 ] pdfxs
469.745 184.44 m
(commitment)
[4.78904 5.38913 8.50908 8.50908 2.98911 2.98911 8.50908 4.78904 5.38913 2.98911 ] pdfxs
93.6 170.88 m
(to)
[2.98911 5.38913 ] pdfxs
105.578 170.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
122.345 170.88 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
148.211 170.88 m
(subgoals.)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
194.792 170.88 m
(As)
[7.90916 4.18912 ] pdfxs
210.371 170.88 m
(we)
[7.90916 4.78904 ] pdfxs
226.549 170.88 m
(reduce)
[3.58903 4.78904 5.38913 5.38913 4.78904 4.78904 ] pdfxs
259.5 170.9 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
263.563 170.88 m
/N22 10.9091 Tf
(,) show
269.912 170.88 m
(we)
[7.90916 4.78904 ] pdfxs
286.09 170.88 m
(obtain)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 ] pdfxs
316.865 170.88 m
(a) show
325.254 170.88 m
(lar)
[2.98911 4.78904 3.58903 ] pdfxs
336.381 170.88 m
(ger)
[5.38913 4.78904 3.58903 ] pdfxs
353.868 170.88 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
369.435 170.88 m
(of)
[5.38913 3.58903 ] pdfxs
382.013 170.88 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
432.064 170.88 m
(policies,)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 2.74908 ] pdfxs
472.406 170.88 m
(thus)
[2.98911 5.38913 5.38913 4.18912 ] pdfxs
494.083 170.88 m
(we)
[7.90916 4.78904 ] pdfxs
510.261 170.88 m
(ob-)
[5.38913 5.38913 3.58903 ] pdfxs
93.5996 157.32 m
(serv)
[4.18912 4.78904 3.58903 5.38913 ] pdfxs
111.436 157.32 m
(e) show
118.865 157.32 m
(impro)
[2.98911 8.50908 5.38913 3.58903 5.38913 ] pdfxs
144.611 157.32 m
(v) show
149.88 157.32 m
(ement)
[4.78904 8.50908 4.78904 5.38913 2.98911 ] pdfxs
179.105 157.32 m
(in)
[2.98911 5.38913 ] pdfxs
190.003 157.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
205.81 157.32 m
(performance.)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
2.74908 ] pdfxs
266.88 157.32 m
(Ho)
[7.90916 5.38913 ] pdfxs
279.938 157.32 m
(we)
[7.90916 4.78904 ] pdfxs
292.396 157.32 m
(v) show
297.665 157.32 m
(er)
[4.78904 3.58903 ] pdfxs
305.563 157.32 m
(,) show
310.832 157.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
326.639 157.32 m
(more)
[8.50908 5.38913 3.58903 4.78904 ] pdfxs
351.436 157.32 m
(we)
[7.90916 4.78904 ] pdfxs
366.654 157.32 m
(reduce)
[3.58903 4.78904 5.38913 5.38913 4.78904 4.78904 ] pdfxs
398.5 157.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
402.589 157.32 m
/N22 10.9091 Tf
(,) show
407.858 157.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
423.665 157.32 m
(less)
[2.98911 4.78904 4.18912 4.18912 ] pdfxs
442.462 157.32 m
(optimal)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 ] pdfxs
478.145 157.32 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
93.6003 143.76 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
131.073 143.76 m
(we)
[7.90916 4.78904 ] pdfxs
147.371 143.76 m
(obtain.)
[5.38913 5.38913 2.98911 4.78904 2.98911 5.38913 2.74908 ] pdfxs
183.295 143.76 m
(Thus)
[6.70915 5.38913 5.38913 4.18912 ] pdfxs
208.571 143.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
225.458 143.76 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
284.138 143.76 m
(de)
[5.38913 4.78904 ] pdfxs
294.196 143.76 m
(grades)
[5.38913 3.58903 4.78904 5.38913 4.78904 4.18912 ] pdfxs
326.171 143.76 m
(\(here)
[3.58903 5.38913 4.78904 3.58903 4.78904 ] pdfxs
352.156 143.76 m
(we)
[7.90916 4.78904 ] pdfxs
368.454 143.76 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
387.142 143.76 m
(observ)
[5.38913 5.38913 4.18912 4.78904 3.58903 5.38913 ] pdfxs
415.756 143.76 m
(e) show
424.505 143.76 m
(it)
[2.98911 2.98911 ] pdfxs
434.083 143.76 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
450.371 143.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
467.258 143.76 m
(v) show
472.407 143.76 m
(alues)
[4.78904 2.98911 5.38913 4.78904 4.18912 ] pdfxs
498.392 143.76 m
(belo)
[5.38913 4.78904 2.98911 5.38913 ] pdfxs
516.709 143.76 m
(w) show
94 130.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
103.299 137.799 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
116.298 130.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
122.197 137.799 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
122.197 137.799 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\006\004\003)
[2.59976 0 5.39951 0 ] pdfxs
135.24 130.2 m
/N22 10.9091 Tf
(\).)
[3.58903 2.74908 ] pdfxs
147.938 130.2 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
180.033 130.2 m
(5) show
189.142 130.2 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
210.338 130.2 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
225.065 130.2 m
(ws)
[7.90916 4.18912 ] pdfxs
241.003 130.2 m
(by)
[5.38913 5.38913 ] pdfxs
255.502 130.2 m
(relaxing)
[3.58903 4.78904 2.98911 4.78904 5.38913 2.98911 5.38913 5.38913 ] pdfxs
294.894 130.2 m
(optimality)
[5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
343.265 130.2 m
(\(reducing)
[3.58903 3.58903 4.78904 5.38913 5.38913 4.78904 2.98911 5.38913 5.38913 ] pdfxs
389 130.2 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
393.087 130.2 m
/N22 10.9091 Tf
(\),)
[3.58903 2.74908 ] pdfxs
403.265 130.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
420.272 130.2 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
441.698 130.2 m
(y) show
451.047 130.2 m
(generated)
[5.38913 4.78904 5.38913 4.78904 3.58903 4.78904 2.98911 4.78904 5.38913 ] pdfxs
496.909 130.2 m
(by)
[5.38913 5.38913 ] pdfxs
511.527 130.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5997 116.64 m
(mer)
[8.50908 4.78904 3.58903 ] pdfxs
110.247 116.64 m
(ging)
[5.38913 2.98911 5.38913 5.38913 ] pdfxs
132.403 116.64 m
(algorithm)
[4.78904 2.98911 5.38913 5.38913 3.58903 2.98911 2.98911 5.38913 8.50908 ] pdfxs
177.425 116.64 m
(commits)
[4.78904 5.38913 8.50908 8.50908 2.98911 2.98911 4.18912 ] pdfxs
217.669 116.64 m
(to)
[2.98911 5.38913 ] pdfxs
228.927 116.64 m
(more)
[8.50908 5.38913 3.58903 4.78904 ] pdfxs
253.963 116.64 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
294.796 116.64 m
(simultaneously)
[4.18912 2.98911 8.50908 5.38913 2.98911 2.98911 4.78904 5.38913 4.78904 5.38913 5.38913 
4.18912 2.98911 5.38913 ] pdfxs
359.443 116.64 m
(.) show
306.84 77.28 m
(9) show
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 10 10
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%BeginResource: font D
10 dict begin
T3Defs
/FontType 3 def
/FontName /N196 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-56 
76 
179 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 60 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 63 23 setcachedevice
63 0 0 71 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 71 def
/ImageMatrix [63 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFC03FE8FFFFFFFFFC000FE03FFFFFFFF00007E01FFFFFFFE00703E
81FFFFFFFE00783EE0FFFFFFF800FC3EF07FFFFFF803FC0EF03FFFFFF003FC0E
F03FFFFFF003FE3EF80FFFFFF007FFFEFC0FFFFFF007FFFEFE07FFFFE00FFFFE
FF83FFFFE00FFFFEFF81FFFFC00FFFFEFFC0FFFFC00FFFFEFFE03FFFC01FFFFE
FFF03FFFC01FFFFEFFF81FFF803FFFFEFFFE0FFF803FFFFEFFFE0FFF803FFFFE
FFFE07FE003FFFFEFFFF03FE00FFFFFEFFFF83FE00FFFFFEFFFFC0FE00FFFFFE
FFFFE07C01FFFFFEFFFFE03C01FFFFFEFFFFF81C01FFFFFEFFFFFC0801FFFFFE
FFFFFE0803FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFEFFFFFF0003FFFFFE
FFFFFF8007FFFFFEFFFFFFE007FFFFFEFFFFFFF007FFFFFEFFFFFFF007FFFFFE
FFFFFFE00FFFFFFEFFFFFFE007FFFFFEFFFFFFE003FFFFFEFFFFFFE001FFFFFE
FFFFFFE001FFFFFEFFFFFF8020FFFFFEFFFFFF80203FFFFEFFFFFF80203FFFFE
FFFFFF00701FFFFEFFFFFF00780FFFFEFFFFFF007E0FFFFEFFFFFF007F07FFFE
FFFFFE00FF83FFFEFFFFFE00FF80FFFEFFFFFE00FFC07FFEFFFFFC00FFE03FFE
FFFFFC01FFF83FFEFFFFFC01FFFC1FFEFFFFFC01FFFC0FFEFFFFF801FFFC0FFE
FFFFF803FFFE03FEFFFFE003FFFF01FEFFFFE00FFFFF81FEFFFFE00FFFFFE0FE
FFFFC00FFFFFF07EFFFFC00FFFFFF03EF8FF801FFFFFF80EF87F801FFFFFFC06
F87F803FFFFFFE06F87F003FFFFFFF82F83F007FFFFFFF80F80E007FFFFFFF80
FC0000FFFFFFFFC0FE0007FFFFFFFFE0FFC01FFFFFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 0 46 53 setcachedevice
46 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 53 def
/ImageMatrix [46 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFF80FC1FFFFFFC001C0FFFFFF8000C0FFFFFF0070C8FFFFFF00F8C83FF
FFE00F84E1FFFFE03FCCE0FFFFE03FCCF07FFF803FFCF83FFF807FFCFC3FFF80
7FFCFE0FFF00FFFCFF87FF00FFFCFF83FF00FFFCFFC1FE01FFFCFFE0FE01FFFC
FFF0FE01FFFCFFF83E03FFFCFFFE3C03FFFCFFFE1C03FFFCFFFE0C03FFFCFFFF
000FFFFCFFFF800FFFFCFFFFC00FFFFCFFFFE01FFFFCFFFFE01FFFFCFFFFE01F
FFFCFFFFE01FFFFCFFFFE01FFFFCFFFFC00FFFFCFFFFC003FFFCFFFFC001FFFC
FFFF8060FFFCFFFF8070FFFCFFFF8078FFFCFFFF80F87FFCFFFF00FC3FFCFFFF
00FC0FFCFFFF00FE07FCFFFE03FF83FCFFFE03FFC3FCFFFE03FFE1FCFFF807FF
F0FCFFF807FFF03CFFF007FFF81CEFF00FFFFE0CEFF00FFFFF0C83E00FFFFF84
E3E01FFFFFC4E1C01FFFFFC0E0003FFFFFC0F000FFFFFFE0FC03FFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 -16 23 11 setcachedevice
23 0 0 27 0 -16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 23 def
/Height 27 def
/ImageMatrix [23 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF803EFF803EFC000EF01F86E01F86C0FFF6C1FFFEC1FFFE01FFFE03FFFE03FF
FE03FFFE03FFFE03FFFE01FFFE00000E00000E00000EC0FFFEC0FFFEE0FFFEF0
7FFEF01FFEF803FEFC0000FF8000FFF000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
23 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 34 44 setcachedevice
34 0 0 44 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 44 def
/ImageMatrix [34 0 0 -44 0 44]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE001FFFC0FE001FFFC0F80003FFC0F000007FC0E000003FC0E003F80FC0800F
FE03C0803FFF03C0807FFF81C0007FFFE0C0007FFFE04000FFFFF04000FFFFFF
C001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001FFFFFFC001
FFFFFFC001FFFFFFC081FFFFFFC080FFFFFFC080FFFFFFC080FFFFFFC080FFFF
FFC0E0FFFFFFC0E07FFFFFC0E07FFF1FC0F03FFF03C0F03FFF01C0F83FFF81C0
F80FFF80C0FC0FFFE0C0FC07FFE040FE03FFE040FF81FFF000FFC1FFF000FFF0
3FF000FFF80FE000FFF8000000FFFF000000FFFFC00000FFFFFC0040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 44 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 -77 65 3 setcachedevice
65 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 65 def
/Height 80 def
/ImageMatrix [65 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF8007FFFFFFF8087FF00000FFFFFFF8087FF00000FFFFFFF8083FC000001
FFFFFF8081F803FF007FFFFF8081C003FF001FFFFF8080003FFFC007FFFF80C0
00FFFFF803FFFF80C001FFFFFC03FFFF80C007FFFFFE01FFFF80C00FFFFFFF00
FFFF80C00FFFFFFF007FFF80E00FFFFFFFC01FFF80E01FFFFFFFE01FFF80E01F
FFFFFFE01FFF80E03FFFFFFFF00FFF80F03FFFFFFFF00FFF80F03FFFFFFFF007
FF80F03FFFFFFFF807FF80F03FFFFFFFF803FF80F03FFFFFFFF803FF80FC3FFF
FFFFFC03FF80FC3FFFFFFFFC03FF80FC1FFFFFFFFC03FF80FC1FFFFFFFFC01FF
80FC1FFFFFFFFC01FF80FE1FFFFFFFFC01FF80FFFFFFFFFFFC01FF80FFFFFFFF
FFF801FF80FFFFFFFFFFF801FF80FFFFFFFFFFF001FF80FFFFFFFFFFE001FF80
FFFFFFFFFFE001FF80FFFFFFFFFFC003FF80FFFFFFFFFE0003FF80FFFFFFFFC0
0003FF80FFFFFFFC000003FF80FFFFFFC0000007FF80FFFFFFC0000007FF80FF
FFFC0000000FFF80FFFFF00000001FFF80FFFFE00000001FFF80FFFFC0000000
7FFF80FFFF00000000FFFF80FFFF00000003FFFF80FFFF0000003FFFFF80FFFE
000007FFFFFF80FFFE000007FFFFFF80FFFC00007FFFFFFF80FFFC0007FFFFFF
FF80FFFC001FFFFFFFFF80FFFC007FFFFFFFFF80FFFC00FFFFFFFFFF80FFFC00
FFFFFFFE1F80FFFC00FFFFFFFE1F80FFFC01FFFFFFFE1F80FFFC01FFFFFFFE1F
80FFFC01FFFFFFFE1F80FFFE01FFFFFFFE0F80FFFE01FFFFFFFE0F80FFFE01FF
FFFFFE0F80FFFE00FFFFFFFE0F80FFFE00FFFFFFFE0F80FFFF00FFFFFFFE0780
FFFF00FFFFFFFE0780FFFF007FFFFFFE0780FFFFC07FFFFFFC0780FFFFE01FFF
FFFC0180FFFFE01FFFFFFC0180FFFFF00FFFFFF00180FFFFF807FFFFF00180FF
FFF803FFFFE00180FFFFFC01FFFFC00080FFFFFF003FFF800080FFFFFF803FFF
818080FFFFFFE00FF803C080FFFFFFFC00000FF080FFFFFFFC00000FF000FFFF
FFFF00007FF800FFFFFFFFF001FFF800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
65 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
105 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -6 6 104 setcachedevice
6 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 6 def
/Height 110 def
/ImageMatrix [6 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C480808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
80808080808080808080808080C4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
6 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
104 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
98 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 38 35 109 setcachedevice
35 0 0 71 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 71 def
/ImageMatrix [35 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00FFFFFE0C000FFFFE080007FFFE081C01FFFE081F81FFFE080FC0FFFE080FE
03FFE080FE01FFE080FE01FFE0E1FF00FFE0FFFF00FFE0FFFF80FFE0FFFF80FF
E0FFFF807FE0FFFF807FE0FFFF807FE0FFFFE07FE0FFFFE07FE0FFFFE03FE0FF
FFE03FE0FFFFE03FE0FFFFF03FE0FFFFF03FE0FFFFF00FE0FFFFF00FE0FFFFF0
0FE0FFFFF80FE0FFFFF807E0FFFFF807E0FFFFF807E0FFFFFC07E0FFFFFC07E0
FFFFFC03E0FFFFFC03E0FFFFFC03E0FFFFFE03E0FFFFFE03E0FFFFFE01E0FFCF
FE01E0FFC7FE01E0FFC7FF81E0FFC3FF81E0FFE3FF81E0FFE0FF80E0FFE0FF80
E0FFF87FC0E0FFF87FC0E0FFFC3FC1E0FFFE1FC1E0FFFE0381E0FFFF0001E0FF
FF8007E0FFFFF80FE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFF
FFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFFFE0FFFFFFF0E0
FFFFFFF0E0FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFF000FFFF
FFF820>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 22 47 75 setcachedevice
47 0 0 53 0 22 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 53 def
/ImageMatrix [47 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC6FFFFFFFFFF00FFFFFFFFFC00FFFFFFFFF000FFFFFFFFF000FFFF
FFFFC000FFFFFFFF0000FFFFFFF80000FFFFFFF00180FFFFFFC00380FFFFFFC0
0F80FFFFFE007F80FFFFFC01FF80FFFFF001FF80FFFF8003FF80FFFF001FFF80
FFFF007FFF80FFFC00FFFF80FFE007FFFF80FF8007FFFF80FF001FFFFF80F800
3FFFFF80F801FFFFFF80E007FFFFFF80C01FFFFFFF80001FFFFFFF80007FFFFF
FF80001FFFFFFF80C01FFFFFFF80E007FFFFFF80F801FFFFFF80F8003FFFFF80
FF001FFFFF80FF8007FFFF80FFE007FFFF80FFFC00FFFF80FFFF007FFF80FFFF
001FFF80FFFF8003FF80FFFFF001FF80FFFFFC01FF80FFFFFE007F80FFFFFFC0
0F80FFFFFFC00380FFFFFFF00180FFFFFFF80000FFFFFFFF0000FFFFFFFFC000
FFFFFFFFF000FFFFFFFFF000FFFFFFFFFC00FFFFFFFFFF00FFFFFFFFFFC6>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 3 28 78 setcachedevice
28 0 0 75 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 75 def
/ImageMatrix [28 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE03FF0FFE03FF0FF800FF0FE0383F0FC0380F0FC07C0F0FC07E070FC07F870
FC07F830FC07FC30FC03FC10FC03FC10FC03FE10FC03FE10FC01FE00FE01FF00
FE01FF00FE00FF00FE00FF00FF80FFF0FF803FF0FFC03FF0FFC03FF0FFC01FF0
FFC01FF0FFE01FF0FFE01FF0FFE00FF0FFE00FF0FFF007F0FFF007F0FFF807F0
03F807F003F803F003F803F083FE03F081FE00F081FE00F0E1FF00F0E1FF00F0
E0FF00F0F0FF00F0F07F80F0F87F80F0F83F80F0FC3F83F0FC0703F0FE0003F0
FF8007F0FFE01FF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFFF0FFFFF870FFFFC010FFFFC010FFFFC000FFFFC000FFFFC000FFFFC000
FFFFE000FFFFE000FFFFFC10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 -73 44 23 setcachedevice
44 0 0 96 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 96 def
/ImageMatrix [44 0 0 -96 0 96]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F803FFFFFFF0E0007FFFFFF0C0001FFFFFF081F803FFFFF081FC03FFFFF0803E
01FFFFF0801F00FFFFF0801F007FFFF0801F803FFFF0801FE00FFFF0801FE00F
FFF0C01FF00FFFF0F0FFF007FFF0F0FFF007FFF0FFFFF807FFF0FFFFF803FFF0
FFFFF803FFF0FFFFFC03FFF0FFFFFC03FFF0FFFFFC01FFF0FFFFFC01FFF0FFFF
FC01FFF0FFFFFE01FFF0FFFFFE01FFF0FFFFFE00FFF0FFFFFE00FFF0FFFFFE00
FFF0FFFFFF80FFF0FFFFFF80FFF0FFFFFF803FF0FFFFFF803FF0FFFFFF803FF0
FFFFFFC03FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFC01FF0FFFFFFE01FF0FFFF
FFE01FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFE00FF0FFFFFFF00FF0FFFFFFF0
0FF0FFFFFFF007F0FFFFFFF007F0FFFFFFF007F0FFFFFFF807F0FFFFFFF807F0
FFFFFFF803F0FFFFFFF803F0FFFFFFF803F0FFFFFFFE03F0FFFFFFFE03F0FFF8
3FFE00F0FFF83FFE00F0FFF83FFE00F0FFFC1FFF00F0FFFC1FFF00F0FFFE1FFF
00F0FFFE0FFF0070FFFF0FFF8070FFFF03FF8070FFFF01FF8070FFFF81FF8070
FFFFE1FF80F0FFFFF0FF80F0FFFFF87F83F0FFFFF80F03F0FFFFFC0003F0FFFF
FF800FF0FFFFFFE03FF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFF
FFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0
FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFFFFFFFFF0FFFF
FFFFFFF0FFFFFFFFF870FFFFFFFFC010FFFFFFFFC010FFFFFFFFC000FFFFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFE000FFFFFFFFE000FFFFFFFFFC30
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 96 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -78 68 0 setcachedevice
68 0 0 78 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 68 def
/Height 78 def
/ImageMatrix [68 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000FFFE00000000000000FFFE00000000000000FFFE00000000000000FFFE
00000000F8001FFFFFF80007F0FF007FFFFFFE000FF0FF81FFFFFFFF001FF0FF
C1FFFFFFFF001FF0FFC1FFFFFFFE001FF0FFC1FFFFFFFE001FF0FFE1FFFFFFFE
007FF0FFE1FFFFFFFE007FF0FFE1FFFFFFFC007FF0FFF07FFFFFFC00FFF0FFF0
7FFFFFFC00FFF0FFF07FFFFFF800FFF0FFF03FFFFFF800FFF0FFFC3FFFFFF801
FFF0FFFC3FFFFFF801FFF0FFFC3FFFFFF001FFF0FFFC1FFFFFF001FFF0FFFC1F
FFFFF001FFF0FFFE1FFFFFF003FFF0FFFE1FFFFFF003FFF0FFFE0FFFFFC003FF
F0FFFF0FFFFFC007FFF0FFFF0FFFFFC007FFF0FFFF07FFFF8007FFF0FFFF07FF
FF8007FFF0FFFF87FFFF801FFFF0FFFF87FFFF801FFFF0FFFF87FFFF001FFFF0
FFFF81FFFF001FFFF0FFFFC1FFFF003FFFF0FFFFC1FFFE003FFFF0FFFFC1FFFE
003FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFE007FFFF0FFFFF0FFFC007FFFF0FF
FFF07FFC007FFFF0FFFFF87FFC00FFFFF0FFFFF87FFC00FFFFF0FFFFF87FF000
FFFFF0FFFFF83FF000FFFFF0FFFFF83FF000FFFFF0FFFFFC3FF001FFFFF0FFFF
FC1FE001FFFFF0FFFFFC1FE001FFFFF0FFFFFE1FE007FFFFF0FFFFFE1FE007FF
FFF0FFFFFE1FC007FFFFF0FFFFFE07C007FFFFF0FFFFFF07C00FFFFFF0FFFFFF
07C00FFFFFF0FFFFFF07800FFFFFF0FFFFFFC3801FFFFFF0FFFFFFC3801FFFFF
F0FFFFFFC3001FFFFFF0FFFFFFC1001FFFFFF0FFFFFFE1003FFFFFF0FFFFFFE1
003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0FFFFFFE0003FFFFFF0
FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF0007FFFFFF0FFFFFFF801
FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FFFFFFF801FFFFFFF0FF
FFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FFFFFFF0FFFFFFFC03FF
FFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0FFFFFFFF07FFFFFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
68 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
0 0 0 39 35 94 setcachedevice
35 0 0 55 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 55 def
/ImageMatrix [35 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE001FFE0FFE001FFE0FF80007FE0FC0FF01FE0F00FF003E0E07FFC01E0C1FF
FE00E0C3FFFE00E0C7FFFF00E001FFFF0060007FFF0060007FFF0000007FFFC0
00007FFFC000007FFFC000C0FFFFC000C0FFFFC000E1FFFFC000FFFFFFC000FF
FFFFC000FFFFFF0060FFFFFF0060FFFFFF0060FFFFFE00E0FFFFFE00E0FFFFFE
01E0FFFFFC03E0FFFFF01FE0FFC0001FE0FFC0007FE0FFC0007FE0FFFF807FE0
FFFFF03FE0FFFFF81FE0FFFFF807E0FFFFFC03E0FFFFFC01E0FFFFFE01E0FFFF
FE01E0FFFFFE00E0F8FFFE00E0E01FFE00E0E01FFF00E0E01FFF00E0E00FFF00
E0E01FFE00E0E01FFE00E0E01FFE00E0F0FFFC01E0F0FFFC03E0F87FF807E0FC
07F01FE0FC00001FE0FF80007FE0FFF001FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 56 69 94 setcachedevice
69 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 38 def
/ImageMatrix [69 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFF87FFFFE03F8F87FFFF87FFFFE03F8F03FFFF03FFFF801F8F00FFFF00F
FFF07038F00FFFF00FFFF07038F00FFFF00FFFE07E18F80FFFF80FFFE07E08F8
0FFFF80FFFE07F08F807FFF807FFE07F88F807FFF807FFE03F80F807FFF807FF
E03F80FC07FFFC07FFF00FC0FC03FFFC03FFF00FC0FC03FFFC03FFF80FC0FC03
FFFC03FFF80FE0FE03FFFE03FFF807F8FE03FFFE03FFF807F8FE01FFFE01FFFC
07F8FE01FFFE01FFFC03F8FE01FFFE01FFFC03F8FF81FFFF81FFFE03F8FF81FF
FF81FFFE03F8FF80FFFF80FFFE03F83F80FFFF80FFFE01F81F80FFFF80FFFE01
F81FC0FFFFC0FFFF81F81FC03FFFC03FFF81F80FC01FFFC03FFF81F80FC01FFF
C01FFF81F88FC00FFFC00FFF81F883E007FFC00FFF81F883E007FFC08FFF81F8
E3E0C3FFC087FF81F8E1E0E0FFC1C0FF83F8E1C0E03F81C03E03F8F001F80001
F80003F8F003FE0007FC000FF8FC0FFF803FFF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
58 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 6 19 49 setcachedevice
19 0 0 43 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 43 def
/ImageMatrix [19 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC0FE0FC0FE0F803E0F061E0F06060F07C60F07C20F07E20F07E20F81F00F81F
00F81F20F80FE0FC0FE0FC0FE0FF07E0FF07E0FF07E01F03E01F83E01F83E01F
83E00781E0C3C1E0E1C3E0E1C3E0F007E0FC0FE0FC0FE0FFFFE0FFFFE0FFFFE0
FFFFE0FFFFE0FFFFE0FFFFE0FFE1E0FFE1E0FFE060FFE020FFE020FFE020FFF0
60>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
0 0 0 6 22 46 setcachedevice
22 0 0 40 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 40 def
/ImageMatrix [22 0 0 -40 0 40]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000FE01FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03
FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF
03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FCFF03FC
FF03FC0103FC0003FC0003FCFC03FCFF03FCFF03FCFFC3FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 40 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
39 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 3 44 76 setcachedevice
44 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 73 def
/ImageMatrix [44 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000030800000000030800000000030800000000030C00000000010E000
00000010F00000000010F00000000010F00000000010F80FFFFFFC10FE07FFFF
FE10FF07FFFFFE10FF83FFFFFE10FFC0FFFFFE10FFC07FFFFE00FFE03FFFFF00
FFF81FFFFF00FFF81FFFFF00FFFC0FFFFF00FFFE03FFFFF0FFFE01FFFFF0FFFF
00FFFFF0FFFF807FFFF0FFFFE07FFFF0FFFFF03FFFF0FFFFF80FFFF0FFFFF807
FFF0FFFFF803FFF0FFFFFC01FFF0FFFFFE01FFF0FFFFFF80FFF0FFFFFFC03FF0
FFFFFFC01FF0FFFFFFC00FF0FFFFFFE007F0FFFFFFF007F0FFFFFFF003F0FFFF
FFF800F0FFFFFFF80070FFFFFFF80070FFFFFFFE0030FFFFFFFE0030FFFFFFFF
0030FFFFFFFF0010FFFFFFFF0010FFFFFFFF0010F8FFFFFF8000F8FFFFFF8000
E01FFFFF8000C00FFFFF80008007FFFF80008007FFFF80008007FFFF80008007
FFFF80008007FFFF80008007FFFF80008007FFFF8000800FFFFF0000801FFFFF
0010C3FFFFFF0010C1FFFFFF0010C1FFFFFE0030C0FFFFFE0030E0FFFFF80030
F03FFFF80070F03FFFF800F0F81FFFF003F0FE07FFC007F0FE00FE0007F0FF00
00000FF0FFC000003FF0FFF80001FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80001FFF0FFF80001FFF0FFC000003FF0FF007F801FF0FE00
7F8007F0F807FFC003F0F01FFFE000F0F03FFFF000F0E0FFFFF80070C1FFFFF8
0070C1FFFFF80030C01FFFFE0030800FFFFE0010800FFFFE00108007FFFF0010
8007FFFF00108007FFFF00008007FFFF00008007FFFF00008007FFFF0000C00F
FFFF0000E01FFFFF0000E01FFFFF0000F8FFFFFF0000FFFFFFFF0000FFFFFFFF
0000FFFFFFFF0010FFFFFFFF0010FFFFFFFE0010FFFFFFFE0010FFFFFFFE0030
FFFFFFFE0030FFFFFFF80070FFFFFFF800F0FFFFFFF000F0FFFFFFE003F0FFFF
FFC007F0FFFFFFC00FF0FFFFFF803FF0FFFC0001FFF0FFFC0001FFF0FFFC0003
FFF0FFFFFC00FFF0FFFFFF80FFF0FFFFFFC03FF0FFFFFFE00FF0FFFFFFE007F0
FFFFFFE003F0FFFFFFF003F0FFFFFFF003F0FFFFFFF800F0FFFFFFF800F0FFFF
FFF80070FFFFFFF80070F807FFFE0030F807FFFE0030F003FFFE0030E003FFFE
0030E003FFFE0030E000FFFE0030E000FFFE0030E003FFFE0030E003FFFE0030
E007FFFE0030E007FFFE0030F00FFFF80070F03FFFF80070F83FFFF800F0F81F
FFF003F0FE0FFFF007F0FE03FFE007F0FF807F800FF0FFC000003FF0FFF80001
FFF0FFFF000FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 28 60 78 setcachedevice
60 0 0 50 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 50 def
/ImageMatrix [60 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFF807FF0FF87FFFFFF807FF0FC03FFFFFE001FF0FC01FFFFF80E0FF0
FC01FFFFF00E03F0FE01FFFFF01F81F0FE01FFFFF01FE0F0FE01FFFFF01FE0F0
FE00FFFFF01FF0F0FF80FFFFF01FF870FF80FFFFF00FF870FF80FFFFF00FF830
FF803FFFF00FFC30FF803FFFF00FFC30FFC03FFFF007FC00FFC03FFFF807FE00
FFC03FFFF807FE00FFC01FFFF803FE00FFC01FFFF803FE00FFE01FFFFE03FFF0
FFE01FFFFE03FFF0FFE01FFFFE00FFF0FFE00FFFFE00FFF0FFE00FFFFF00FFF0
FFF00FFFFF007FF0FFF00FFFFF007FF0FFF00FFFFF807FF0FFF007FFFF807FF0
FFF007FFFF803FF0FFF807FFFF803FF0FFF807FFFFC03FF0FFF807FFFFC03FF0
03F803FFFFC03FF003FE03FFFFC01FF003FE00FFFFC01FF083FE00FFFFE01FF0
81FE007FFFE01FF081FE007FFFE01FF0E1FE007FFFE01FF0E1FF003FFFE01FF0
E0FF001FFFE01FF0E0FF000FFFE01FF0F0FF0003FFE01FF0F0FF0303FFE03FF0
F87F0381FFE03FF0F83E07E0FFC07FF0F80E07E03F807FF0FC0007F80000FFF0
FE001FFE0003FFF0FFC0FFFFC00FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 -66 61 3 setcachedevice
61 0 0 69 0 -66 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 69 def
/ImageMatrix [61 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFF8883FFFFFFFFFFFF0083FFFFFFFFFFFF0081FFFFFFFFFFFE00
81FFFFFFFFFFFE00807FFFFFFFFFFC00C07FFFFFFFFFFC08C07FFFFFFFFFFC08
E07FFFFFFFFFFC18E03FFFFFFFFFF018E03FFFFFFFFFF018E01FFFFFFFFFE018
F01FFFFFFFFFE038F00FFFFFFFFFC038FC0FFFFFFFFFC078FC0FFFFFFFFFC078
FE0FFFFFFFFFC1F8FE07FFFFFFFF81F8FE07FFFFFFFF81F8FE01FFFFFFFF01F8
FF01FFFFFFFF03F8FF01FFFFFFFF03F8FF80FFFFFFFC07F8FF80FFFFFFFC07F8
FF80FFFFFFFC07F8FFC07FFFFFF80FF8FFC07FFFFFF80FF8FFC07FFFFFF80FF8
FFF03FFFFFF01FF8FFF03FFFFFF01FF8FFF01FFFFFE01FF8FFF81FFFFFE07FF8
FFF81FFFFFE07FF8FFFC1FFFFFE0FFF8FFFC07FFFFC0FFF8FFFC07FFFFC0FFF8
FFFC03FFFF00FFF8FFFE03FFFF01FFF8FFFE03FFFF01FFF8FFFF01FFFE03FFF8
FFFF01FFFE03FFF8FFFF00FFFC03FFF8FFFFC0FFFC07FFF8FFFFC0FFFC07FFF8
FFFFE0FFFC1FFFF8FFFFE07FF81FFFF8FFFFE07FF81FFFF8FFFFE01FF01FFFF8
FFFFF01FF03FFFF8FFFFF00FC03FFFF8FFFFF80FC07FFFF8FFFFF80FC07FFFF8
FFFFFC0FC0FFFFF8FFFFFC0780FFFFF8FFFFFC0780FFFFF8FFFFFC0300FFFFF8
FFFFFF0301FFFFF8FFFFFF0301FFFFF8FFFFFF8007FFFFF8FFFFFF8007FFFFF8
FFFFFF8007FFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8FFFFFFC00FFFFFF8
FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFE01FFFFFF8FFFFFFF03FFFFFF8
FFFFFFFC7FFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a36 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 -35 41 39 setcachedevice
41 0 0 74 0 -35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 74 def
/ImageMatrix [41 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFFFFF80C007FFFFFF808003FFFFFF808380FFFFFF8083C0FFFFFF8080C0
FFFFFF8080E07FFFFF8080E07FFFFF8080E03FFFFF8080F83FFFFF80E1F83FFF
FF80FFF81FFFFF80FFF81FFFFF80FFF81FFFFF80FFF80FFFFF80FFFC0FFFFF80
FFFC0FFFFF80FFFC0FFFFF80FFFC0FFFFF80FFFC03FFFF80FFFC03FFFF80FFFE
03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE03FFFF80FFFE01FFFF80FFFE01FF
FF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80FFFF01FFFF80
FFFF00FFFF80FFFF00FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF807FFF80FFFF807FFF80FFFFE07FFF80FFFFE07FFF80FFFFE07F
FF80FFFFE07FFF80FFFFE03FFF80FFFFE03FFF80FFFFF03FFF80FFFFF03FFF80
FFFFF03FFF80FFF800000F80FFF800000F80FFF800000F80FFFFF00FFF80FFFF
F80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF80FFF80FFFFF807FF80FFFFF807
FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07FF80FFFFFC07C380FFFFFC038000
FFFFFE038000FFFFFE038000FFFFFE038000FFFFFE038000FFFFFF81C000FFFF
FF80E000FFFFFFC0F800FFFFFFF00080FFFFFFFE0780FFFFFFFE0780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 -38 20 43 setcachedevice
20 0 0 81 0 -38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF80FFFF00FFFF00FFFC10FFF870FFF070FFE0F0FFC1F0FFC1F0FF03F0FF07
F0FE07F0FC07F0FC1FF0FC1FF0F83FF0F83FF0F03FF0F07FF0F07FF0F07FF0C0
FFF0C0FFF0C0FFF0C0FFF080FFF081FFF081FFF081FFF081FFF081FFF001FFF0
01FFF001FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FFF007FF
F007FFF007FFF007FFF007FFF001FFF001FFF001FFF081FFF081FFF081FFF081
FFF081FFF080FFF0C0FFF0C0FFF0C0FFF0C0FFF0C07FF0F07FF0F07FF0F07FF0
F83FF0F83FF0F81FF0FC1FF0FC1FF0FE07F0FF07F0FF03F0FF01F0FFC1F0FFE1
F0FFF0F0FFF870FFF810FFFC00FFFF00FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
0 0 0 -43 20 38 setcachedevice
20 0 0 81 0 -43 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 20 def
/Height 81 def
/ImageMatrix [20 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFF087FFF087FFF0C3FFF0E1FFF0E0FFF0F03FF0F81FF0F81FF0FE0FF0FF0F
F0FF07F0FF03F0FF83F0FF83F0FFC0F0FFC0F0FFC070FFE070FFE070FFE070FF
F830FFF830FFF830FFF830FFF810FFFC10FFFC10FFFC10FFFC10FFFC10FFFC00
FFFC00FFFC00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE00FFFE
00FFFE00FFFE00FFFE00FFFE00FFFC00FFFC00FFFC00FFFC10FFFC10FFFC10FF
FC10FFFC10FFF810FFF830FFF830FFF830FFF830FFE030FFE070FFE070FFE070
FFC0F0FFC0F0FF80F0FF83F0FF83F0FF07F0FF0FF0FE0FF0F80FF0F81FF0F83F
F0F0FFF0E1FFF0C1FFF083FFF087FFF08FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
20 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a42 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -77 54 23 setcachedevice
54 0 0 100 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 100 def
/ImageMatrix [54 0 0 -100 0 100]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE07FFFFFFFFFCF000FFFFFFFFFCC0007FFFFFFFFCC1E01FFFFFFFFCC3F81FFF
FFFFFC81FC1FFFFFFFFC803E0FFFFFFFFC801E03FFFFFFFC801E03FFFFFFFC80
1E01FFFFFFFC801F01FFFFFFFCC01F01FFFFFFFCC01F00FFFFFFFCC01F00FFFF
FFFCF03F00FFFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF807FFFFFFCFFFF
807FFFFFFCFFFF803FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFFFCFFFFE03FFFFF
FCFFFFE03FFFFFFCFFFFE00FFFFFFCFFFFE00FFFFFFCFFFFF00FFFFFFCFFFFF0
0FFFFFFCFFFFF00FFFFFFCFFFFF00FFFFFFCFFFFF007FFFFFCFFFFF007FFFFFC
FFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF807FFFFFCFFFFF803
FFFFFCFFFFF803FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFFFFFC03FFFFFCFF
FFFC03FFFFFCFFFFFC01FFFFFCFFFFFC01FFFFFCFFFFFE01FFFFFCFFFFFE01FF
FFFCFFFFFE01FFFFFCFFFFFE01FFFFFCFFFFFE00FFFFFCFFFFFE00FFFFFCFFFF
FF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFFFCFFFFFF80FFFF
FCFFFFFF803FFFFCFFFFFF803FFFFCFFFFFFC03FFFFCFFFFFFC03FFFFCFFFFFF
C03FFFFCFFFFFFC03FFFFCFFFFFFC01FFFFCFFFFFFC01FFFFCFFFFFFE01FFFFC
FFFFFFE01FFFFCFFFFFFE01FFFFCFFFF80000001FCFFFF80000001FCFFFF8000
0001FCFFFF80000001FCFFFFFFF00FFFFCFFFFFFF00FFFFCFFFFFFF00FFFFCFF
FFFFF007FFFCFFFFFFF007FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF807
FFFCFFFFFFF807FFFCFFFFFFF807FFFCFFFFFFF803FFFCFFFFFFFE03FFFCFFFF
FFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FFFCFFFFFFFE03FC3CFFFFFFFE00F0
04FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF00F000FFFFFFFF80F000FFFFFF
FF807000FFFFFFFF807000FFFFFFFFC07800FFFFFFFFC07E00FFFFFFFFE03F80
FFFFFFFFF81E04FFFFFFFFF80004FFFFFFFFFE000CFFFFFFFFFF80FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 100 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
0 0 0 -78 54 23 setcachedevice
54 0 0 101 0 -78 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 101 def
/ImageMatrix [54 0 0 -101 0 101]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFFC03FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFF
FFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFFFFFCE0
1FFFFFFFFFFCF01FFFFFFFFFFCF01FFFFFFFFFFCF80FFFFFFFFFFCF80FFFFFFF
FFFCF807FFFFFFFFFCFC07FFFFFFFFFCFC07FFFFFFFFFCFF03FFFFFFFFFCFF03
FFFFFFFFFCFF01FFFFFFFFFCFF81FFFFFFFFFCFF807FFFFFFFFCFFC07FFFFFFF
FCFFC07FFFFFFFFCFFE03FFFFFFFFCFFE03FFFFFFFFCFFE01FFFFFFFFCFFF01F
FFFFFFFCFFF01FFFFFFFFCFFFC0FFFFFFFFCFFFC0FFFFFFFFCFFFC07FFFFFFFC
FFFE07FFFFFFFCFFFE01FFFFFFFCFFFF01FFFFFFFCFFFF01FFFFFFFCFFFF80FF
FFFFFCFFFF80FFFFFFFCFFFF807FFFFFFCFFFFC07FFFFFFCFFFFC07FFFFFFCFF
FFF03FFFFFFCFFFFF03FFFFFFCFFFFF01FFFFFFCFFFFF81FFFFFFCFFFFF807FF
FFFCFFFFFC07FFFFFCFFFFFC07FFFFFCFFFFFE03FFFFFCFFFFFE03FFFFFCFFFF
FE01FFFFFCFFFFFF01FFFFFCFFFFFF01FFFFFCFFFFFFC0FFFFFCFFFFFFC0FFFF
FCFFFFFFC07FFFFCFFFFFFE07FFFFCFFFFFFE01FFFFCFFFFFFF01FFFFCFFFFFF
F01FFFFCFFFFFFF80FFFFCFFFFFFF80FFFFCFFFFFFF807FFFCFFFFFFFC07FFFC
FFFFFFFC07FFFCFFFFFFFF03FFFCFFFFFFFF03FFFCFFFFFFFF01FFFCFFFFFFFF
81FFFCFFFFFFFF807FFCFFFFFFFFC07FFCFFFFFFFFC07FFCFFFFFFFFE03FFCFF
FFFFFFE03FFCFFFFFFFFE01FFCFFFFFFFFF01FFCFFFFFFFFF01FFCFFFFFFFFFC
0FFCFFFFFFFFFC0FFCFFFFFFFFFC07FCFFFFFFFFFE07FCFFFFFFFFFE01FCFFFF
FFFFFF01FCFFFFFFFFFF01FCFFFFFFFFFF80FCFFFFFFFFFF80FCFFFFFFFFFF80
7CFFFFFFFFFFC07CFFFFFFFFFFC07CFFFFFFFFFFF03CFFFFFFFFFFF03CFFFFFF
FFFFF01CFFFFFFFFFFF81CFFFFFFFFFFF804FFFFFFFFFFFC04FFFFFFFFFFFC04
FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFF00FFFFFFFF
FFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 101 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a45 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
0 0 0 -8 44 85 setcachedevice
44 0 0 93 0 -8 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 93 def
/ImageMatrix [44 0 0 -93 0 93]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF07FFFFFFF0FF03FFFFFFF0FF03
FFFFFFF0FF03800FFFF0FF800003FFF0FF800003FFF0FF801FC0FFF0FFC07FF0
3FF0FF807FF00FF0FF807FF80FF0FF007FFE07F0FF007FFF07F0FE007FFF83F0
F8007FFF80F0F8003FFF80F0F8003FFFC0F0F0003FFFC070F0183FFFC070F018
1FFFC070E0381FFFE030E0381FFFE030E03C1FFFE030C03C0FFFE010C03C0FFF
E010C03C0FFFE010C03E0FFFE010C03E0FFFE010C0FE03FFF810C0FE03FFF810
C0FE03FFF81080FF03FFF80080FF01FFF80080FF01FFF80080FF01FFF80080FF
81FFF80080FF81FFF80080FF80FFF80080FF80FFF80080FF80FFF80080FFE0FF
F80080FFE07FF80080FFE07FF80080FFE07FF80080FFF07FF80080FFF03FF800
80FFF03FF80080FFF03FF80080FFF83FF80080FFF83FF80080FFF80FF80080FF
F80FF80080FFF80FF80080FFFC0FF80080FFFC0FF80080FFFC07F80080FFFC07
F80080FFFC07F800C0FFFE03F810C0FFFE03F810C0FFFE03F810C0FFFF83F810
C0FFFF83F810C03FFF81E010C03FFF81E010E03FFF81E030E03FFFC1E030E03F
FFC1E030E03FFFC0E030E03FFFC0E030F01FFFC0C070F01FFFE00070F81FFFE0
00F0F81FFFE000F0FE0FFFF003F0FE0FFFF003F0FE07FFF003F0FF03FFF007F0
FF83FFF00FF0FFC0FFF81FF0FFE07FF01FF0FFE01FC00FF0FFF800000FF0FFFE
00000FF0FFFF800E0FF0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFE07F0FFFFFFFF
07F0FFFFFFFF07F0FFFFFFFF8FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 93 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a47 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
97 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 6 28 61 setcachedevice
28 0 0 55 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 55 def
/ImageMatrix [28 0 0 -55 0 55]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F01FFFF0F01FFFF0C007FFF0C3C0FFF081C07FF081E07FF081F83FF0C1F83FF0
E1FC1FF0FFFC1FF0FFFC1FF0FFFC0FF0FFFE0FF0FFFE0FF0FFFE0FF0FFFE0FF0
FFFE03F0FFFF03F0FFFF03F0FFFF03F0FFFF03F0FFFF81F0FFFF81F0FFFF81F0
FFFF81F0FFFF81F0FFFFE0F0FFFFE0F0FFFFE0F0FFFFE0F0FF8FE070FF8FF070
FF8FF070FFC7F070FFC7F070FFC3F070FFE07070FFF870F0FFFC00F0FFFF03F0
FFFF03F0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0FFFFFFF0
FFFFFC30FFFFFC30FFFFF800FFFFF800FFFFF800FFFFFC00FFFFFE30>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 55 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
0 0 0 6 66 93 setcachedevice
66 0 0 87 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
FFFFFFFFF040FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF00
00FFFFFFFFFFFFF80000FFFFFFFFFFFFE00040FFFFFFFFFFFF0003C0FFFFFFFF
FFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFFFFF001FFC0FFFFFFFFFF8001FFC0
FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC0
07FFFFC0FFFFFFFF001FFFFFC0FFFFFFF8001FFFFFC0FFFFFFE0007FFFFFC0FF
FFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FFFFFC007FFFFFFFC0FFFFF001FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFFFFFFC0FFF0003FFFFFFFFFC0FFF0
00FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF001FFFFFFFFFFFC0F8001FFFFFFFFF
FFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0007FFF
FFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFFFFFFFFC0C001FFFFFFFFFFFF
C0F0003FFFFFFFFFFFC0FC003FFFFFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FF
FFFFFFFFC0FFE0007FFFFFFFFFC0FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0
FFFFC003FFFFFFFFC0FFFFF800FFFFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007
FFFFFFC0FFFFFFC001FFFFFFC0FFFFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FF
FFFFFF800FFFFFC0FFFFFFFFE001FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC00
1FFFC0FFFFFFFFFF0003FFC0FFFFFFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFF
FFFFFFFE001FC0FFFFFFFFFFFE0007C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF0
0040FFFFFFFFFFFFFC0040FFFFFFFFFFFFFF8000FFFFFFFFFFFFFFE000FFFFFF
FFFFFFFFE000FFFFFFFFFFFFFFFC40>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a53 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -77 76 3 setcachedevice
76 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 76 def
/Height 80 def
/ImageMatrix [76 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8001FFFFFFFFFF0FFFFC00000FFFFFFFFF0FFFFC00000FFFFFFFFF0FFFE
00FF801FFFFFFFF0FFF803FFF803FFFFFFF0FFC003FFF800FFFFFFF0FF801FFF
FE001FFFFFF0FF003FFFFFC00FFFFFF0FF007FFFFFE00FFFFFF0FE00FFFFFFF8
07FFFFF0FC01FFFFFFFC01FFFFF0FC01FFFFFFFC007FFFF0F001FFFFFFFF003F
FFF0F007FFFFFFFF801FFFF0F007FFFFFFFFC01FFFF0E00FFFFFFFFFE00FFFF0
E00FFFFFFFFFF007FFF0C00FFFFFFFFFF001FFF0C00FFFFFFFFFF000FFF0C00F
FFFFFFFFFC007FF0C00FFFFFFFFFFE007FF0801FFFFFFFFFFE007FF0801FFFFF
FFFFFF003FF0801FFFFFFFFFFF001FF0801FFFFFFFFFFF001FF0801FFFFFFFFF
FF8007F0801FFFFFFFFFFFC007F0801FFFFFFFFFFFC003F0801FFFFFFFFFFFC0
03F0801FFFFFFFFFFFC001F0801FFFFFFFFFFFF001F0800FFFFFFFFFFFF000F0
800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800FFFFFFFFFFFF800F0800F
FFFFFFFFFFF80070800FFFFFFFFFFFFC0070800FFFFFFFFFFFFC0070800FFFFF
FFFFFFFC0070C007FFFFFFFFFFFE0010C007FFFFFFFFFFFE0010C007FFFFFFFF
FFFE0010C007FFFFFFFFFFFE0010C001FFFFFFFFFFFE0010E001FFFFFFFFFFFF
0010E001FFFFFFFFFFFF0000F001FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000
F000FFFFFFFFFFFF0000F000FFFFFFFFFFFF0000FC00FFFFFFFFFFFF0000FC00
7FFFFFFFFFFF0000FE007FFFFFFFFFFFC000FE003FFFFFFFFFFFC000FF003FFF
FFFFFFFFC000FF001FFFFFFFFFFFC000FF801FFFFFFFFFFFC010FF801FFFFFFF
FFFFC010FFC007FFFFFFFFFF0010FFC007FFFFFFFFFF0010FFF003FFFFFFFFFF
0010FFF801FFFFFFFFFF0010FFFC01FFFFFFFFFF0070FFFC01FFFFFFFFFF0070
FFFE00FFFFFFFFFE00F0FFFE007FFFFFFFFE00F0FFFF001FFFFFFFFE00F0FFFF
C00FFFFFFFFC01F0FFFFF00FFFFFFFFC01F0FFFFF807FFFFFFFC03F0FFFFFC03
FFFFFFF807F0FFFFFC007FFFFFF007F0FFFFFF803FFFFFC01FF0FFFFFFC00FFF
FF803FF0FFFFFFF00FFFFF807FF0FFFFFFFE01FFFE01FFF0FFFFFFFF803FE007
FFF0FFFFFFFF80000007FFF0FFFFFFFFF800001FFFF0FFFFFFFFFFC003FFFFF0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
76 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -2 75 76 setcachedevice
75 0 0 78 0 -2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 75 def
/Height 78 def
/ImageMatrix [75 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000007FFFF8000000200000007FFFF8000000000000007FFFF8000000000000
007FFFF800000000FC000FFFFFFFF0001FE0FFC01FFFFFFFFC003FE0FFE03FFF
FFFFFC003FE0FFF03FFFFFFFFC003FE0FFF01FFFFFFFFC003FE0FFFC1FFFFFFF
FC007FE0FFFE0FFFFFFFFC007FE0FFFE0FFFFFFFFC007FE0FFFF0FFFFFFFFC00
7FE0FFFF87FFFFFFFC007FE0FFFF87FFFFFFFC007FE0FFFF81FFFFFFFC007FE0
FFFFC0FFFFFFFC007FE0FFFFC0FFFFFFFC007FE0FFFFF0FFFFFFFC007FE0FFFF
F87FFFFFF8007FE0FFFFF87FFFFFF8007FE0FFFFF83FFFFFF8007FE0FFFFFC1F
FFFFF801FFE0FFFFFC1FFFFFF801FFE0FFFFFE1FFFFFF801FFE0FFFFFF000000
0001FFE0FFFFFF0000000001FFE0FFFFFF0000000001FFE0FFFFFFC000000001
FFE0FFFFFFC3FFFFF801FFE0FFFFFFE1FFFFF801FFE0FFFFFFF0FFFFF801FFE0
FFFFFFF0FFFFF001FFE0FFFFFFF07FFFF001FFE0FFFFFFF87FFFF001FFE0FFFF
FFF87FFFF003FFE0FFFFFFFC1FFFF003FFE0FFFFFFFC0FFFF003FFE0FFFFFFFC
0FFFF003FFE0FFFFFFFF07FFF003FFE0FFFFFFFF87FFF003FFE0FFFFFFFF87FF
F003FFE0FFFFFFFFC3FFF003FFE0FFFFFFFFC1FFF003FFE0FFFFFFFFC1FFF003
FFE0FFFFFFFFE07FF003FFE0FFFFFFFFF07FE003FFE0FFFFFFFFF07FE003FFE0
FFFFFFFFFC3FE003FFE0FFFFFFFFFC3FE007FFE0FFFFFFFFFC1FE007FFE0FFFF
FFFFFE0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFFFF0FE007FFE0FFFFFFFF
FF87E007FFE0FFFFFFFFFF87E007FFE0FFFFFFFFFF81E007FFE0FFFFFFFFFFC0
E007FFE0FFFFFFFFFFC0E007FFE0FFFFFFFFFFF0E007FFE0FFFFFFFFFFF84007
FFE0FFFFFFFFFFF84007FFE0FFFFFFFFFFF80007FFE0FFFFFFFFFFFC000FFFE0
FFFFFFFFFFFC000FFFE0FFFFFFFFFFFE000FFFE0FFFFFFFFFFFF000FFFE0FFFF
FFFFFFFF000FFFE0FFFFFFFFFFFF000FFFE0FFFFFFFFFFFFC00FFFE0FFFFFFFF
FFFFC00FFFE0FFFFFFFFFFFFE00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFF
F00FFFE0FFFFFFFFFFFFF00FFFE0FFFFFFFFFFFFF80FFFE0FFFFFFFFFFFFF81F
FFE0FFFFFFFFFFFFFC1FFFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
75 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
90 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/D/N196 -1 TZ
%%BeginResource: font E
10 dict begin
T3Defs
/FontType 3 def
/FontName /N241 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-72 
103 
195 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 25 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 90 2 setcachedevice
90 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 90 def
/Height 50 def
/ImageMatrix [90 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF87FFFFFE1FFFFFFE01FFC0FF87FFFFFE1FFFFFFE01FFC0FC03FFFFF00FFFFF
F8007FC0FC01FFFFF007FFFFE0383FC0FC01FFFFF007FFFFC0380FC0FE01FFFF
F007FFFFC07E07C0FE01FFFFF807FFFFC07F83C0FE01FFFFF807FFFFC07F83C0
FE00FFFFF803FFFFC07FC3C0FF80FFFFF803FFFFC07FE1C0FF80FFFFF803FFFF
C03FE1C0FF80FFFFFE03FFFFC03FE0C0FF803FFFFE00FFFFC03FF0C0FF803FFF
FE00FFFFC03FF0C0FFC03FFFFE00FFFFC01FF000FFC03FFFFF00FFFFE01FF800
FFC03FFFFF00FFFFE01FF800FFC01FFFFF007FFFE00FF800FFC01FFFFF007FFF
E00FF800FFE01FFFFF007FFFF80FFFC0FFE01FFFFF807FFFF80FFFC0FFE01FFF
FF807FFFF803FFC0FFE00FFFFF803FFFF803FFC0FFE00FFFFF803FFFFC03FFC0
FFF00FFFFF803FFFFC01FFC0FFF00FFFFFC03FFFFC01FFC0FFF00FFFFFC03FFF
FE01FFC0FFF007FFFFC01FFFFE01FFC0FFF007FFFFC01FFFFE00FFC0FFF807FF
FFC01FFFFE00FFC0FFF807FFFFE01FFFFF00FFC0FFF807FFFFE01FFFFF00FFC0
03F803FFFFE00FFFFF00FFC003FE03FFFFE00FFFFF007FC003FE00FFFFE003FF
FF007FC083FE00FFFFF803FFFF807FC081FE007FFFF801FFFF807FC081FE007F
FFF801FFFF807FC0E1FE007FFFF801FFFF807FC0E1FF003FFFF800FFFF807FC0
E0FF001FFFF8007FFF807FC0E0FF000FFFF8003FFF807FC0F0FF0003FFF8080F
FF807FC0F0FF0303FFF81C0FFF80FFC0F87F0381FFF81E07FF80FFC0F83E07F0
FFE03F83FF01FFC0F80E07F00FC03F80FE01FFC0FC0007F800007FE00003FFC0
FE001FFE0000FFF8000FFFC0FFC0FFFFE00FFFFF003FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
90 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 0 4 81 setcachedevice
4 0 0 81 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 4 def
/Height 81 def
/ImageMatrix [4 0 0 -81 0 81]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080808080808080808080808080808080
8080808080808080808080808080808080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
4 81 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
0 0 0 6 52 64 setcachedevice
52 0 0 58 0 6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 52 def
/Height 58 def
/ImageMatrix [52 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF8FFFFFFFFF0FFF83FFFFFFFF0FFF80FFFFFFFF0FFF80FFFFFFFF0FFF807FF
FFFFF0FFF803FFFFFFF0FFF800FFFFFFF0FFFE003FFFFFF0FFFE001FFFFFF0FF
FE001FFFFFF0FFFE000FFFFFF0FFFE0403FFFFF0FFFE0401FFFFF0FFFE0600FF
FFF0FFFE07007FFFF0FFFF07807FFFF0FFFF03F03FFFF0FFFF03F80FFFF0FFFF
03F807FFF0FFFF03FC03FFF0FFFF03FE01FFF0FFFF03FF81FFF0FFFF03FFC0FF
F0FFFF03FFE0FFF0FFFF03FFE03FF0FFFF03FFF01FF0FFFF03FFF80FF0FFFF03
FFFE0FF0FFFF03FFFF0FF0FFFF03FFFF87F0FFFF03FFFF83F0FFFF03FFFF83F0
FFFF03FFFFC0F0FFFF03FFFFE0F0FFFF03FFFFF8F0FFFE03FFFFF870FFFE03FF
FFF870FFFE03FFFFFC30FFFE03FFFFFC30FFFE07FFFFFE30FFFE07FFFFFE10FF
F807FFFFFF10FFF807FFFFFF10FFF807FFFFFF00FFF007FFFFFE00FFF00FFFFF
FE00FFF00FFFFFFE00FFE00FFFFFFC00FFE00FFFFFE000FFC01FFFFF8000FF80
1FFFFF8000FF803FFFFF8000FE003FFFFF8010F800FFFFFF80100000FFFFFF80
100001FFFFFFC0308003FFFFFFC070E00FFFFFFFE3F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
52 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
0 0 0 5 25 31 setcachedevice
25 0 0 26 0 5 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 26 def
/ImageMatrix [25 0 0 -26 0 26]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF1FF80FFF0FF80FFF0FF80FFF1FF80FFF1FF80CFF1FC8087F1F80081F1E000
80310000C0310080F0000380FE001F80FE001F80FE001F80F0000380F0000380
C031008081F1E00081F1E00087F1F800CFF1FC80FFF1FF80FFF1FF80FFF0FF80
FFF0FF80FFF1FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 26 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 0 57 29 setcachedevice
57 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 29 def
/ImageMatrix [57 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFF1FFFF83F80F8FFFF1FFFF83F80F07FFE07FFC00780F07FFE07FFC1C380
F01FFE03FF81C180F81FFF03FF81F180F81FFF03FF81F080F81FFF03FF81F880
F81FFF03FFC0F880FC0FFFC1FFC0FC00FC0FFFC1FFC0FC00FC0FFFC1FFC07C80
FC0FFFC1FFF07F80FC0FFFC1FFF07F80FF07FFE0FFF07F80FF07FFE0FFF83F80
FF07FFE0FFF83F80FF03FFE0FFF83F801F03FFE07FF81F801F83FFF07FFC1F80
1F81FFF01FFC1F801F807FF01FFC1F8007803FF00FFC1F80C7821FE007FC1F80
C38207E0C1F83F80E38787E0E1F83F80F00FC001F0007F80F81FF807FE01FF80
F81FF807FE01FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
0 0 0 0 33 29 setcachedevice
33 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 33 def
/Height 29 def
/ImageMatrix [33 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC03FC1F80FC03FC1F80F800F80380F0F8206380E0F800618081FF00F08081FF
80F88081FFC0F88001FFC0F88001FFE07C0001FFE07C0001FFE07C8001FFE07F
8001FFE07F8080FFF83F8080FFF83F8080FFF83F8080FFF83F80E07FF81F80E0
7FFC1F80F07FFC1F80F83FFC1F80F83FF81F80FC0FF80F80FE03E00F80FF83E2
0F80FFC0071F80FFF80FFF80FFF80FFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
33 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
0 0 0 0 32 29 setcachedevice
32 0 0 29 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 29 def
/ImageMatrix [32 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F07F80FFF07F80FFC01E003F078C3E1F03803E0701C03FC301E07FE101E07FF1
C1E07FF1E3F03FF8E3F03FF8FFF03FF9FFF03FFFFFF03FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFC7FC0FE1C7FE0FE1C7FE0FC0C3FE0FC0C3FE07C0E1FE07E0
F07C00F0F87C30F0FC003801FF81FE07FF81FE07>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a10 {{
0 0 0 20 38 49 setcachedevice
38 0 0 29 0 20 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 29 def
/ImageMatrix [38 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F8FFFFC1FCF8FFFFC1FCF07FFE007CF07FFE1C1CF01FFC1C0CF81FFC1F0CF81F
FC1F84F81FFC1FC4F81FFE07C4FC0FFE07E0FC0FFE07E0FC0FFE03E4FC0FFF03
FCFC0FFF03FCFF07FF03FCFF07FFC1FCFF07FFC1FCFF07FFC1FC1F03FFC0FC1F
83FFE0FC1F81FFE0FC1F81FFE0FC07807FE0FCC7803FE0FCC3820FC1FCE3870F
C1FCF0078003FCF81FF01FFCF81FF01FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 56 38 94 setcachedevice
38 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 38 def
/ImageMatrix [38 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF01FFE0FCFF01FFE0FCF8003F001CF01E1E070CE01E04070CC07F000784C0FF
C01F84C0FFF01FC4C0FFF007C401FFF807C001FFF807C000FFFC07E000FFFC07
E000FFFC07E000FFFC03F000FFFE03FC00FFFE03FC007FFE03FC007FFE01FCC0
7FFE01FCC07FFF01FCC07FFF01FCC01FFF01FCC01FFF00FCE01FFF00FCE01FFF
C0FCF00FFFC0FCF00FFFC0FCF007FFC07CF807FFC07CFC03FFC07CFF03FFC07C
FF81FF007CFFC07F107CFFC03E107CFFE000187CFFFC003FFCFFFF00FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
76 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 56 42 94 setcachedevice
42 0 0 38 0 56 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 38 def
/ImageMatrix [42 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F80FFC03FFC0F80FFC03FFC0E003E000FFC083E1C0F83FC003E080F80FC000F0
80FE07C000F803FF87C000F803FFC7C000FE03FFC3C080FE03FFE3C080FE03FF
E1C0E1FF03FFE1C0FFFF00FFF1C0FFFF00FFF1C0FFFF00FFF9C0FFFF80FFFFC0
FFFF80FFFFC0FFFF80FFFFC0FFFF807FFFC0FFFF807FFFC0FFFFC07FFFC0FFFF
C07FFFC0FFFFC07FFFC0EFFFC03FFFC0E3FFC03FFFC0E3FFE03FFFC0E3FFE03F
FFC0E1FFE01FE1C0E1FFE01FC000F0FFE01FC000F07FE00FC000F87FE00FC000
FC3FE00FC000FE0FE003F000FE07C001F000FF8000E000C0FFC003F001C0FFF0
0FFC07C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -85 103 25 setcachedevice
103 0 0 110 0 -85 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 103 def
/Height 110 def
/ImageMatrix [103 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000003FE800000000000000000000003FE800000000000
000000000001FEC00000000000000000000001FEC00000000000000000000001
FEE00000000000000000000000FEE00000000000000000000000FEF00FFFFFFF
FFFFFFE0000000FEFC0FFFFFFFFFFFFFFFE00000FEFE07FFFFFFFFFFFFFFFE00
007EFE01FFFFFFFFFFFFFFFE00007EFF00FFFFFFFFFFFFFFFFC0007EFF007FFF
FFFFFFFFFFFFF8001EFF807FFFFFFFFFFFFFFFFE001EFFC07FFFFFFFFFFFFFFF
FF001EFFF03FFFFFFFFFFFFFFFFFE01EFFF01FFFFFFFFFFFFFFFFFE00EFFF807
FFFFFFFFFFFFFFFFF00EFFF803FFFFFFFFFFFFFFFFF80EFFFC03FFFFFFFFFFFF
FFFFFC0EFFFE03FFFFFFFFFFFFFFFFFC06FFFF01FFFFFFFFFFFFFFFFFF06FFFF
00FFFFFFFFFFFFFFFFFF06FFFFC07FFFFFFFFFFFFFFFFF82FFFFC01FFFFFFFFF
FFFFFFFF82FFFFE01FFFFFFFFFFFFFFFFFC2FFFFF01FFFFFFFFFFFFFFFFFC2FF
FFF80FFFFFFFFFFFFFFFFFE0FFFFF807FFFFFFFFFFFFFFFFE0FFFFFC03FFFFFF
FFFFFFFFFFFEFFFFFC01FFFFFFFFFFFFFFFFFEFFFFFF01FFFFFFFFFFFFFFFFFE
FFFFFF81FFFFFFFFFFFFFFFFFEFFFFFFC07FFFFFFFFFFFFFFFFEFFFFFFC03FFF
FFFFFFFFFFFFFEFFFFFFE01FFFFFFFFFFFFFFFFEFFFFFFF00FFFFFFFFFFFFFFF
FEFFFFFFF00FFFFFFFFFFFFFFFFEFFFFFFFC0FFFFFFFFFFFFFFFFEFFFFFFFE07
FFFFFFFFFFFFFFFEFFFFFFFE01FFFFFFFFFFFFFFFEFFFFFFFF00FFFFFFFFFFFF
FFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF807FFFFFFFFFFFFFFEFFFFFFFF
C07FFFFFFFFFFFFFFEFFFFFFFFF03FFFFFFFFFFFFFFEFFFFFFFFF01FFFFFFFFF
FFFFFEFFFFFFFFF807FFFFFFFFFFFFFEFFFFFFFFFC03FFFFFFFFFFFFFEFFFFFF
FFFC03FFFFFFFFFFFFFEFFFFFFFFFE01FFFFFFFFFFFFFEFFFFFFFFFF01FFFFFF
FFFFFFFEFFFFFFFFFE00FFFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFF
FFFFFC007FFFFFFFFFFFFEFFFFFFFFFC007FFFFFFFFFFFFEFFFFFFFFF8007FFF
FFFFFFFFFEFFFFFFFFF000FFFFFFFFFFFFFEFFFFFFFFC000FFFFFFFFFFFFFEFF
FFFFFFC000FFFFFFFFFFFFFEFFFFFFFF8001FFFFFFFFFFFFFEFFFFFFFF8003FF
FFFFFFFFFFFEFFFFFFFF0007FFFFFFFFFFFFFEFFFFFFFE0007FFFFFFFFFFFFFE
FFFFFFFE0007FFFFFFFFFFFFFEFFFFFFFC001FFFFFFFFFFFFFFEFFFFFFF0003F
FFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFFFEFFFFFFF0007FFFFFFFFFFFFF
FEFFFFFFE000FFFFFFFFFFFFFFFEFFFFFFC000FFFFFFFFFFFFFFFEFFFFFF8001
FFFFFFFFFFFFFFFEFFFFFF8001FFFFFFFFFFFFFFFEFFFFFF8007FFFFFFFFFFFF
FFFEFFFFFF000FFFFFFFFFFFFFFFFEFFFFFC001FFFFFFFFFFFFFFFFEFFFFF800
1FFFFFFFFFFFFFFFFEFFFFF8001FFFFFFFFFFFFFFFFEFFFFF0003FFFFFFFFFFF
FFFFFEFFFFF0007FFFFFFFFFFFFFFFFEFFFFE001FFFFFFFFFFFFFFFFFEFFFFE0
01FFFFFFFFFFFFFFFFFEFFFFC001FFFFFFFFFFFFFFFFFEFFFF0003FFFFFFFFFF
FFFFFFE0FFFE0007FFFFFFFFFFFFFFFFC0FFFE0007FFFFFFFFFFFFFFFFC2FFFE
000FFFFFFFFFFFFFFFFFC2FFFC001FFFFFFFFFFFFFFFFF82FFF8001FFFFFFFFF
FFFFFFFF82FFF0007FFFFFFFFFFFFFFFFF06FFF0007FFFFFFFFFFFFFFFFC06FF
F000FFFFFFFFFFFFFFFFFC06FFC001FFFFFFFFFFFFFFFFFC0EFF8003FFFFFFFF
FFFFFFFFF80EFF8003FFFFFFFFFFFFFFFFF00EFF0003FFFFFFFFFFFFFFFFC00E
FE0007FFFFFFFFFFFFFFFF001EFE001FFFFFFFFFFFFFFFFF001EFC001FFFFFFF
FFFFFFFFFE007EFC003FFFFFFFFFFFFFFFF8007EF0003FFFFFFFFFFFFFFFC000
7EE0007FFFFFFFFFFFFFFE00007EC000FFFFFFFFFFFFFFC00000FEC000FFFFFF
FFFFFFFFC00000FEC001FFFFFFFFFFFFE0000000FE8000000000000000000000
01FE800000000000000000000001FE800000000000000000000001FE80000000
0000000000000001FE800000000000000000000003FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
103 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
75 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
44 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -75 85 5 setcachedevice
85 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 85 def
/Height 80 def
/ImageMatrix [85 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF0FFFFFFFFFFC007FFF8FFF01FFFFFFFFF80007FF8FFF00FFFFFFFFE00000F
F8FFF807FFFFFFFE000003F8FFF807FFFFFFFE000003F8FFFE03FFFFFFFE0000
00F8FFFE03FFFFFFFE001F8078FFFE00FFFFFFFE001F8038FFFE00FFFFFFFE00
3FE008FFFF007FFFFFFE003FF008FFFF007FFFFFFE003FF808FFFF007FFFFFFE
003FFC00FFFF807FFFFFFF803FFFC0FFFF803FFFFFFF803FFFC0FFFF803FFFFF
FF803FFFF8FFFF803FFFFFFF803FFFF8FFFFC03FFFFFFF803FFFF8FFFFC01FFF
FFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFC01FFFFFFF801FFFF8FFFFE00F
FFFFFF801FFFF8FFFFE00FFFFFFFC01FFFF8FFFFE00FFFFFFFC01FFFF8FFFFF8
0FFFFFFFC01FFFF8FFFFF803FFFFFFC01FFFF8FFFFF803FFFFFFC00FFFF8FFFF
F803FFFFFFC00FFFF8FFFFFC01FFFFFFE00FFFF8FFFFFC01FFFFFFE00FFFF8FF
FFFC01FFFFFFE00FFFF8FFFFFE01FFFFFFE00FFFF8FFFFFE00FFFFFFE007FFF8
FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FFF8FFFFFE00FFFFFFF007FF
F8FFF800000000000007FFF8FFF800000000000003FFF8FFF800000000000003
FFF8FFFE00000000000003FFF8FFFF80000000000003FFF8FFFFE00000000000
03FFF8FFFFFF803FFFFFFE00FFF8FFFFFF803FFFFFFE00FFF8FFFFFF800FFFFF
FE00FFF8FFFFFFE00FFFFFFE00FFF8FFFFFFE00FFFFFFF007FF8FFFFFFE00FFF
FFFF007FF8FFFFFFE00FFFFFFF007FF8FFFFFFF007FFFFFF807FF8FFFFFFF007
FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF007FFFFFF803FF8FFFFFFF0
07FFFFFF803FF8FFFFFFF003FFFFFFC01FF8FFFFFFF803FFFFFFC01FF8FFFFFF
F803FFFFFFC01FF8FFFFFFF803FFFFFFC01FF81FFFFFF803FFFFFFE00FF81FFF
FFF803FFFFFFE00FF803FFFFF801FFFFFFE00FF800FFFFF801FFFFFFF80FF800
7FFFF801FFFFFFF803F8807FFFF801FFFFFFF803F8E03FFFFC01FFFFFFF803F8
E03FFFFC01FFFFFFFC03F8F00FFFFC01FFFFFFFC01F8F80FFFFC01FFFFFFFC01
F8F807FFFC00FFFFFFFC01F8FC03FFFC00FFFFFFFE00F8FE01FFFC00FFFFFFFE
00F8FF81FFFC00FFFFFFFF00F8FFC03FF800FFFFFFFF00F8FFF007F000FFFFFF
FF0078FFF0000000FFFFFFFF0078FFF8000000FFFFFFFF8038FFFF000000FFFF
FFFF8038FFFFC00001FFFFFFFFE038FFFFFC0003FFFFFFFFF038FFFFFF8007FF
FFFFFFFC08FFFFFF8007FFFFFFFFFC08>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
85 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
0 0 0 72 67 130 setcachedevice
67 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 67 def
/Height 58 def
/ImageMatrix [67 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE7FFFFFFF801FFE0FFE1FFFFFFE0003FE0FFE03FFFFFE00007E0FFE03FFFFF
E00007E0FFF01FFFFFE00001E0FFF01FFFFFE00FE0E0FFF01FFFFFE00FE020FF
F80FFFFFE01FE020FFF80FFFFFE01FF000FFF80FFFFFE01FFE00FFFE07FFFFE0
1FFF80FFFE07FFFFF81FFFE0FFFE07FFFFF81FFFE0FFFF03FFFFF81FFFE0FFFF
03FFFFF80FFFE0FFFF03FFFFF80FFFE0FFFF80FFFFF80FFFE0FFFF80FFFFF80F
FFE0FFFF80FFFFF80FFFE0FFFF807FFFFC0FFFE0FFFFC07FFFFC0FFFE0FFFFC0
7FFFFC0FFFE0FFFFC07FFFFC03FFE0FFFFE03FFFFE03FFE0FFFFE03FFFFE03FF
E0FFE00000000003FFE0FFE00000000001FFE0FFE00000000001FFE0FFF80000
000001FFE0FFFE0000000001FFE0FFFE0000000001FFE0FFFFF80FFFFF00FFE0
FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC0FFFFF80FFE0FFFFFC03FF
FFE07FE0FFFFFC03FFFFE07FE0FFFFFC03FFFFE07FE0FFFFFE03FFFFE03FE0FF
FFFE03FFFFF03FE0FFFFFE03FFFFF03FE0FFFFFE01FFFFF03FE00FFFFE01FFFF
F00FE003FFFE01FFFFF80FE001FFFF01FFFFF80FE081FFFF01FFFFF80FE080FF
FF01FFFFFC07E0E0FFFF00FFFFFC07E0E07FFF00FFFFFC07E0F03FFF00FFFFFC
03E0F80FFE00FFFFFE03E0FC0FFE00FFFFFE03E0FF81FC00FFFFFF83E0FFC000
00FFFFFF81E0FFC00000FFFFFF81E0FFF00000FFFFFFC0E0FFFF0001FFFFFFE0
E0FFFFF803FFFFFFF8E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
67 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/E/N241 -1 TZ
%%BeginResource: font H
10 dict begin
T3Defs
/FontType 3 def
/FontName /N331 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-3 
58 
118 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 8 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 58 22 setcachedevice
58 0 0 70 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 58 def
/Height 70 def
/ImageMatrix [58 0 0 -70 0 70]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000001FFFFFFFFC0000001FFFFFFFFC0000001FFFFFFFFC0000001FFFFFFFFC0
FE00FFFFFFFFFFC0FE00FFFFFFFFFFC0FE00FFFFFFFFFFC0FF00FFFFFFFFFFC0
FF007FFFFFFFFFC0FF007FFFFFFFFFC0FF007FFFFFFFFFC0FFC07FFFFFFFFFC0
FFC07FFFFFFFFFC0FFC01FFFFFFFFFC0FFC01FFFFFFFFFC0FFC01FFFFFFFFFC0
FFE01FFFFFFFFFC0FFE01FFFFFFFFFC0FFE00FFFFFFFFFC0FFE00FFFFFFFFFC0
FFE00FF01FFFFFC0FFF00FF01FFFFFC0FFF00F8001FFFFC0FFF0060FC07FFFC0
FFF0040FC01FFFC0FFF0041FF007FFC0FFF8003FF803FFC0FFF8007FFC03FFC0
FFF8007FFF01FFC0FFF801FFFF807FC0FFF801FFFF803FC0FFFC01FFFF801FC0
FFFC01FFFFC00FC0FFFC01FFFFC00FC0FFFC01FFFFE00FC0FFFF01FFFFE007C0
FFFF01FFFFE007C0FFFF007FFFF001C0FFFF007FFFF001C0FFFF007FFFF001C0
FFFF807FFFFC00C0FFFF807FFFFC00C0FFFF803FFFFC00C0FFFF803FFFFC0040
FFFF803FFFFC0040FFFFC03FFFFE0040FFFFC03FFFFE0040FFFFC01FFFFE0040
FFFFC01FFFFE0000FFFFC01FFFFE0000FFFFE01FFFFF0000FFFFE01FFFFF0000
FE07E00FFFFF0000FE07E00FFFFF0000FE07E00FFFFF0000FF07F00FFFFF0000
FF07F007FFFF8040FF07F007FFFF8040FF03F001FFFF8040FFC3FC01FFFF0040
FFC3FC00FFFF0040FFC1FC007FFF00C0FFC1FC003FFF00C0FFE1FC083FFF01C0
FFE0FC0C1FFE01C0FFF0FC1F07FC07C0FFF0701F01F007C0FFF8001FC0000FC0
FFFC007FF0003FC0FFFF03FFFC01FFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
58 70 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF801FFFFF0FF80003FFFF0FF80003FFFF0FF000007FFF0F807F803FFF0F007
F800FFF0F01FFE003FF0E00FFF801FF0E00FFFC01FF0E007FFE01FF0E003FFF0
0FF0E003FFF007F0E003FFF003F0E003FFF803F0E003FFF803F0F007FFFE00F0
F80FFFFE00F0F80FFFFE0070FFFFFFFE0070FFFFFFFF0030FFFFFFFF0030FFFF
FFFF0030FFFFFFFF0030FFFFFFFF0030FFFFFFFF0010FFFFFFFF8010FFFFFFFF
8010FFFF007F8010FFFC00078010FFE000038000FFC01F818000FF007FE08000
FF00FFF08000FE00FFF88000FE03FFF80000F803FFF80000F007FFFE0000E007
FFFE0000E007FFFF0000E007FFFF0000C00FFFFF0000C00FFFFF0000C00FFFFF
0000C00FFFFF0000C00FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000
800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8010800FFFFF8010800F
FFFF8010800FFFFF8010800FFFFF8010800FFFFF8010800FFFFF8030C00FFFFF
8030C00FFFFF0030C00FFFFF0030C00FFFFF0030E00FFFFF0070E007FFFF0070
F007FFFF00F0F007FFFE00F0F003FFFE00F0F803FFFE03F0FE03FFFE07F0FF00
FFF807F0FF807FF00FF0FF803FE00FF0FFC01FC01FF0FFE00000FFF0FFFC0003
FFF0FFFF800FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
26 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80003FFF0FFF80003FFF0FFC00000FFF0FF007F803FF0FE00
7F800FF0F807FFE007F0F00FFFF003F0F01FFFF803F0F03FFFFE00F0E0FFFFFF
0070E0FFFFFF0070C1FFFFFF0030C1FFFFFF8030C3FFFFFF803080FFFFFF8010
801FFFFF8010800FFFFF8010800FFFFFC000800FFFFFC000800FFFFFC000800F
FFFFC000800FFFFFC000800FFFFFC000C00FFFFFC000C01FFFFFC000F8FFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC010
FFFFFFFFC010FFFFFFFFC010FFFFFFFF8010FFFFFFFF8010FFFFFFFF8030FE3F
FFFF8030FE3FFFFF8070FE1FFFFF0070FE0FFFFF00F0FE07FFFE00F0FE03FFF8
03F0FE00FFF007F0FE00FFF00FF0FE181FE03FF0FE1E0001FFF0FE1E0001FFF0
FE1FE007FFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1F
FFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFF
FFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1800FFFFF0
FE00000FFFF0FE000003FFF0FE000000FFF0FE0000001FF0FE0000001FF0FE00
00000FF0FE00000007F0FE00000003F0FE00000003F0FE007FF800F0FE0FFFFF
80F0FE3FFFFFF8F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF800FFFF0FFFE0001FFF0FFFE0001FFF0FFF800003FF0FFE01FC01FF0FFC0
1FC00FF0FF803FF007F0FF007FF803F0FF00FFFE03F0FE03FFFE00F0F803FFFF
0070F803FFFF0070F003FFFF0030F007FFFF0030F007FFFF0030F007FFFF8010
E007FFFF8010E007FFFF8010E007FFFF8000C00FFFFF8000C00FFFFF8000C00F
FFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF
8000800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000
800FFFFF80008007FFFF80108007FFFF80108007FFFF80108007FFFF00108007
FFFF00308007FFFF00308003FFFF00708003FFFF00F08000FFFE00F08000FFFE
03F080087FF803F080087FF807F0800C3FF01FF0800E0FC03FF0800E00003FF0
C00F0001FFF0C00FF007FFF0C00FFFFFFFF0C00FFFFFFFF0E007FFFFFFF0E007
FFFFFFF0E007FFFFFFF0E007FFFFFFF0F007FFFFFFF0F007FFFFFFF0F003FFFF
FFF0F003FFFF80F0F803FFFF0070F800FFFE0030FE00FFFE0030FF00FFFE0030
FF007FFE0030FF007FFE0030FF803FFE0030FFC01FFF0030FFE01FFF8030FFF8
1FFFE070FFFC0FFFE070FFFC01FFC070FFFE007F00F0FFFF800003F0FFFFF000
0FF0FFFFFE003FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF800FFFF0FFFC0001FFF0FFFC0001FFF0FFC000003FF0FF803FE00FF0FE00
3FE007F0F800FFFE03F0F007FFFF00F0F00FFFFF80F0F01FFFFFC070E01FFFFF
E030C01FFFFFE030C03FFFFFF810C0FFFFFFF810C0FFFFFFF81080FFFFFFFC10
81FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FF
FFFFF80081FFFFFFF80081FFFFFFF80080FFFFFFE000C0FFFFFFC000C0FFFFFF
C000C03FFFFF8010E03FFFFF0010E01FFFFE0010E01FFFF00010F00FFFE00030
F80FFFE00030FE07FF800070FF03FE0000F0FF00F80000F0FF80700003F0FFE0
000007F0FFF800000FF0FFFE00003FF0FFFC0000FFF0FFF80000FFF0FFC00003
FFF0FF800001FFF0FF800001FFF0FF0000603FF0FE0001F81FF0F80001F80FF0
F80003FE07F0F0001FFE03F0F0003FFF03F0F000FFFF80F0F003FFFF8070E003
FFFF8070E007FFFFC070E00FFFFFC030E01FFFFFE030E01FFFFFE030E03FFFFF
E030E03FFFFFE030E03FFFFFE030E03FFFFFE030E03FFFFFE030F03FFFFFC030
F03FFFFFC070F01FFFFFC070F81FFFFF8070F80FFFFF80F0FE0FFFFF80F0FF07
FFFF03F0FF83FFFE07F0FF80FFF007F0FFC03FC00FF0FFE000003FF0FFFC0001
FFF0FFFF800FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/H/N331 -1 TZ
%%BeginResource: font I
%%EndResource
[/I/N342 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
98.4 672.12 m
/N22 10.9091 Tf
(In)
[3.58903 5.38913 ] pdfxs
110.738 672.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
127.145 672.12 m
(\002nal)
[6.10906 5.38913 4.78904 2.98911 ] pdfxs
149.782 672.12 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
164.989 672.12 m
(of)
[5.38913 3.58903 ] pdfxs
177.327 672.12 m
(e) show
181.996 672.12 m
(xperiments,)
[5.38913 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 4.18912 2.74908 
] pdfxs
236.356 672.12 m
(we)
[7.90916 4.78904 ] pdfxs
252.294 672.12 m
(\002x)
[6.10906 5.38913 ] pdfxs
263.673 672.12 m
(ed)
[4.78904 5.38913 ] pdfxs
277.5 672.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
284.771 672.12 m
/N22 10.9091 Tf
(to)
[2.98911 5.38913 ] pdfxs
296.7 672.1 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
302.599 679.699 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\017) show
302.599 679.699 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\002\001)
[2.59976 0 ] pdfxs
313.549 672.12 m
/N22 10.9091 Tf
(and)
[4.78904 5.38913 5.38913 ] pdfxs
332.476 672.12 m
(v) show
337.625 672.12 m
(aried)
[4.78904 3.58903 2.98911 4.78904 5.38913 ] pdfxs
362.651 672.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
379.178 672.12 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
415.592 672.12 m
(of)
[5.38913 3.58903 ] pdfxs
427.811 672.12 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
469.123 672.12 m
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
493.8 672.1 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
507.499 679.699 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
519.898 679.699 m
/N196 [0.0999908 0 0 -0.0999908 0 0] Tf
(\034) show
93.6 658.68 m
/N22 10.9091 Tf
(to)
[2.98911 5.38913 ] pdfxs
105.5 658.7 m
/N241 [0.0999908 0 0 -0.0999908 0 0] Tf
(\000) show
119.299 666.299 m
/N26 [0.0999908 0 0 -0.0999908 0 0] Tf
(\001) show
131.698 666.299 m
/N331 [0.0999908 0 0 -0.0999908 0 0] Tf
(\003) show
136.997 658.7 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(3) show
145.418 658.68 m
/N22 10.9091 Tf
(\(all)
[3.58903 4.78904 2.98911 2.98911 ] pdfxs
163.134 658.68 m
(of)
[5.38913 3.58903 ] pdfxs
175.472 658.68 m
(these)
[2.98911 5.38913 4.78904 4.18912 4.78904 ] pdfxs
201.098 658.68 m
(results)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 4.18912 ] pdfxs
232.701 658.68 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
249.229 658.68 m
(a) show
253.778 658.68 m
(v) show
259.047 658.68 m
(eraged)
[4.78904 3.58903 4.78904 5.38913 4.78904 5.38913 ] pdfxs
291.381 658.68 m
(o) show
296.65 658.68 m
(v) show
301.919 658.68 m
(er)
[4.78904 3.58903 ] pdfxs
313.538 658.68 m
(100)
[5.38913 5.38913 5.38913 ] pdfxs
333.185 658.68 m
(episodes,)
[4.78904 5.38913 2.98911 4.18912 5.38913 5.38913 4.78904 4.18912 2.74908 ] pdfxs
376.647 658.68 m
(each)
[4.78904 4.78904 4.78904 5.38913 ] pdfxs
399.883 658.68 m
(consisting)
[4.78904 5.38913 5.38913 4.18912 2.98911 4.18912 2.98911 2.98911 5.38913 5.38913 ] pdfxs
447.174 658.68 m
(of)
[5.38913 3.58903 ] pdfxs
459.512 658.68 m
(10)
[5.38913 5.38913 ] pdfxs
473.65 658.68 m
(trials\).)
[2.98911 3.58903 2.98911 4.78904 2.98911 4.18912 3.58903 2.74908 ] pdfxs
506.563 658.68 m
(Fig-)
[6.10906 2.98911 5.38913 3.58903 ] pdfxs
93.5997 645.12 m
(ure)
[5.38913 3.58903 4.78904 ] pdfxs
111.447 645.12 m
(6) show
120.916 645.12 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
135.643 645.12 m
(ws)
[7.90916 4.18912 ] pdfxs
151.821 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
169.188 645.12 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
228.108 645.12 m
(of)
[5.38913 3.58903 ] pdfxs
241.287 645.12 m
(both)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
264.523 645.12 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
306.676 645.12 m
(methods.)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 4.18912 2.74908 ] pdfxs
353.508 645.12 m
(It)
[3.58903 2.98911 ] pdfxs
364.167 645.12 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
383.214 645.12 m
(be)
[5.38913 4.78904 ] pdfxs
397.472 645.12 m
(observ)
[5.38913 5.38913 4.18912 4.78904 3.58903 5.38913 ] pdfxs
426.086 645.12 m
(ed)
[4.78904 5.38913 ] pdfxs
440.585 645.12 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
460.941 645.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
478.188 645.12 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
93.5992 631.56 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
129.294 631.56 m
(consistently)
[4.78904 5.38913 5.38913 4.18912 2.98911 4.18912 2.98911 4.78904 5.38913 2.98911 2.98911 
5.38913 ] pdfxs
184.243 631.56 m
(outperforms)
[5.38913 5.38913 2.98911 5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.18912 
] pdfxs
240.523 631.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
256.81 631.56 m
(sequential)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 ] pdfxs
303.981 631.56 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
339.675 631.56 m
(by)
[5.38913 5.38913 ] pdfxs
353.574 631.56 m
(increasing)
[2.98911 5.38913 4.78904 3.58903 4.78904 4.78904 4.18912 2.98911 5.38913 5.38913 ] pdfxs
401.345 631.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
417.632 631.56 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
453.926 631.56 m
(of)
[5.38913 3.58903 ] pdfxs
466.024 631.56 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
507.217 631.56 m
(\(top)
[3.58903 2.98911 5.38913 5.38913 ] pdfxs
93.5991 618 m
(curv)
[4.78904 5.38913 3.58903 5.38913 ] pdfxs
112.636 618 m
(e) show
120.665 618 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
135.392 618 m
(ws)
[7.90916 4.18912 ] pdfxs
150.73 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
167.137 618 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
225.217 618 m
(of)
[5.38913 3.58903 ] pdfxs
237.316 618 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
253.723 618 m
(sequential)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 ] pdfxs
301.014 618 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
336.708 618 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
355.516 618 m
(bottom)
[5.38913 5.38913 2.98911 2.98911 5.38913 8.50908 ] pdfxs
389.53 618 m
(curv)
[4.78904 5.38913 3.58903 5.38913 ] pdfxs
408.566 618 m
(e) show
416.595 618 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
431.323 618 m
(ws)
[7.90916 4.18912 ] pdfxs
446.661 618 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
466.057 618 m
(of)
[5.38913 3.58903 ] pdfxs
478.155 618 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
93.5994 604.44 m
(method\).)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
137.072 604.44 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
168.567 604.44 m
(7) show
177.076 604.44 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
191.803 604.44 m
(ws)
[7.90916 4.18912 ] pdfxs
207.141 604.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
223.428 604.44 m
(dif)
[5.38913 2.98911 3.58903 ] pdfxs
235.156 604.44 m
(ference)
[3.58903 4.78904 3.58903 4.78904 5.38913 4.78904 4.78904 ] pdfxs
270.359 604.44 m
(between)
[5.38913 4.78904 2.98911 7.90916 4.78904 4.78904 5.38913 ] pdfxs
309.763 604.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
326.17 604.44 m
(tw)
[2.98911 7.90916 ] pdfxs
336.948 604.44 m
(o) show
345.457 604.44 m
(plots)
[5.38913 2.98911 5.38913 2.98911 4.18912 ] pdfxs
369.643 604.44 m
(in)
[2.98911 5.38913 ] pdfxs
381.261 604.44 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
397.548 604.44 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
429.043 604.44 m
(6) show
437.552 604.44 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
467.257 604.44 m
(demonstrates)
[5.38913 4.78904 8.50908 5.38913 5.38913 4.18912 2.98911 3.58903 4.78904 2.98911 4.78904 
4.18912 ] pdfxs
93.5993 590.88 m
(by)
[5.38913 5.38913 ] pdfxs
107.138 590.88 m
(increasing)
[2.98911 5.38913 4.78904 3.58903 4.78904 4.78904 4.18912 2.98911 5.38913 5.38913 ] pdfxs
154.428 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
170.356 590.88 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
206.29 590.88 m
(of)
[5.38913 3.58903 ] pdfxs
217.908 590.88 m
(subgoals,)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
261.37 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
277.297 590.88 m
(performance)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
] pdfxs
334.897 590.88 m
(of)
[5.38913 3.58903 ] pdfxs
346.635 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
362.563 590.88 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
411.653 590.88 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
446.988 590.88 m
(impro)
[2.98911 8.50908 5.38913 3.58903 5.38913 ] pdfxs
472.733 590.88 m
(v) show
478.003 590.88 m
(es)
[4.78904 4.18912 ] pdfxs
489.741 590.88 m
(o) show
495.01 590.88 m
(v) show
500.279 590.88 m
(er)
[4.78904 3.58903 ] pdfxs
511.417 590.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5988 577.32 m
(sequential)
[4.18912 4.78904 5.38913 5.38913 4.78904 5.38913 2.98911 2.98911 4.78904 2.98911 ] pdfxs
140.53 577.32 m
(method.)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 2.74908 ] pdfxs
179.333 577.32 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
201.37 577.32 m
(is)
[2.98911 4.18912 ] pdfxs
211.428 577.32 m
(because)
[5.38913 4.78904 4.78904 4.78904 5.38913 4.18912 4.78904 ] pdfxs
248.671 577.32 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
274.908 577.32 m
(there)
[2.98911 5.38913 4.78904 3.58903 4.78904 ] pdfxs
299.453 577.32 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
315.5 577.32 m
(man)
[8.50908 4.78904 5.38913 ] pdfxs
334.068 577.32 m
(y) show
342.337 577.32 m
(subgoals,)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
385.798 577.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
401.966 577.32 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
451.177 577.32 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
492.009 577.32 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
93.5982 563.76 m
(is)
[2.98911 4.18912 ] pdfxs
104.256 563.76 m
(able)
[4.78904 5.38913 2.98911 4.78904 ] pdfxs
125.813 563.76 m
(to)
[2.98911 5.38913 ] pdfxs
137.791 563.76 m
(visit)
[5.38913 2.98911 4.18912 2.98911 2.98911 ] pdfxs
159.936 563.76 m
(multiple)
[8.50908 5.38913 2.98911 2.98911 2.98911 5.38913 2.98911 4.78904 ] pdfxs
199.569 563.76 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
241.122 563.76 m
(of)
[5.38913 3.58903 ] pdfxs
253.58 563.76 m
(lo)
[2.98911 5.38913 ] pdfxs
261.718 563.76 m
(wer)
[7.90916 4.78904 3.58903 ] pdfxs
281.605 563.76 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
317.638 563.76 m
(en)
[4.78904 5.38913 ] pdfxs
331.296 563.76 m
(route)
[3.58903 5.38913 5.38913 2.98911 4.78904 ] pdfxs
357.161 563.76 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
373.809 563.76 m
(primary)
[5.38913 3.58903 2.98911 8.50908 4.78904 3.58903 5.38913 ] pdfxs
411.772 563.76 m
(subgoals,)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 2.74908 ] pdfxs
456.194 563.76 m
(thus)
[2.98911 5.38913 5.38913 4.18912 ] pdfxs
477.75 563.76 m
(it)
[2.98911 2.98911 ] pdfxs
487.208 563.76 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
505.776 563.76 m
(sa)
[4.18912 4.78904 ] pdfxs
514.514 563.76 m
(v) show
519.783 563.76 m
(e) show
93.5978 550.2 m
(more)
[8.50908 5.38913 3.58903 4.78904 ] pdfxs
118.634 550.2 m
(time.)
[2.98911 2.98911 8.50908 4.78904 2.74908 ] pdfxs
144.14 550.2 m
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
166.176 550.2 m
(result)
[3.58903 4.78904 4.18912 5.38913 2.98911 2.98911 ] pdfxs
193.11 550.2 m
(is)
[2.98911 4.18912 ] pdfxs
203.048 550.2 m
(con\002rmed)
[4.78904 5.38913 5.38913 6.10906 3.58903 8.50908 4.78904 5.38913 ] pdfxs
249.881 550.2 m
(by)
[5.38913 5.38913 ] pdfxs
263.539 550.2 m
(Figure)
[6.10906 2.98911 5.38913 5.38913 3.58903 4.78904 ] pdfxs
294.674 550.2 m
(8) show
302.823 550.2 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
332.168 550.2 m
(sho)
[4.18912 5.38913 5.38913 ] pdfxs
346.895 550.2 m
(ws)
[7.90916 4.18912 ] pdfxs
361.874 550.2 m
(by)
[5.38913 5.38913 ] pdfxs
375.412 550.2 m
(increasing)
[2.98911 5.38913 4.78904 3.58903 4.78904 4.78904 4.18912 2.98911 5.38913 5.38913 ] pdfxs
422.823 550.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
438.87 550.2 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
474.804 550.2 m
(of)
[5.38913 3.58903 ] pdfxs
486.663 550.2 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
93.5975 536.64 m
(introduced)
[2.98911 5.38913 2.98911 3.58903 5.38913 5.38913 5.38913 4.78904 4.78904 5.38913 ] pdfxs
143.048 536.64 m
(in)
[2.98911 5.38913 ] pdfxs
154.307 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
170.474 536.64 m
(problem,)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 2.74908 ] pdfxs
212.266 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
228.434 536.64 m
(a) show
232.983 536.64 m
(v) show
238.252 536.64 m
(erage)
[4.78904 3.58903 4.78904 5.38913 4.78904 ] pdfxs
264.717 536.64 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
300.892 536.64 m
(of)
[5.38913 3.58903 ] pdfxs
312.75 536.64 m
(subgoals)
[4.18912 5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 4.18912 ] pdfxs
353.703 536.64 m
(coarticulated)
[4.78904 5.38913 4.78904 3.58903 2.98911 2.98911 4.78904 5.38913 2.98911 4.78904 2.98911 
4.78904 5.38913 ] pdfxs
412.721 536.64 m
(by)
[5.38913 5.38913 ] pdfxs
426.499 536.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
442.666 536.64 m
(concurrent)
[4.78904 5.38913 5.38913 4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 ] pdfxs
491.997 536.64 m
(method)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 ] pdfxs
93.597 523.08 m
(also)
[4.78904 2.98911 4.18912 5.38913 ] pdfxs
113.833 523.08 m
(increases.)
[2.98911 5.38913 4.78904 3.58903 4.78904 4.78904 4.18912 4.78904 4.18912 2.74908 ] pdfxs
93.597 488.04 m
/N9 14.3462 Tf
(5) show
115.064 488.04 m
(Concluding)
[10.3148 7.18754 7.91913 6.35526 3.95956 7.91913 7.91913 3.95956 7.91913 7.18754 ] pdfxs
189.665 488.04 m
(Remarks)
[10.3148 6.35526 11.9934 7.18754 6.35526 7.91913 5.63813 ] pdfxs
93.5969 463.2 m
/N22 10.9091 Tf
(There)
[6.70915 5.38913 4.78904 3.58903 4.78904 ] pdfxs
121.982 463.2 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
138.15 463.2 m
(a) show
145.939 463.2 m
(number)
[5.38913 5.38913 8.50908 5.38913 4.78904 3.58903 ] pdfxs
182.233 463.2 m
(of)
[5.38913 3.58903 ] pdfxs
194.211 463.2 m
(questions)
[5.38913 5.38913 4.78904 4.18912 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
238.273 463.2 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
256.96 463.2 m
(open)
[5.38913 5.38913 4.78904 5.38913 ] pdfxs
281.156 463.2 m
(issues)
[2.98911 4.18912 4.18912 5.38913 4.78904 4.18912 ] pdfxs
310.131 463.2 m
(that)
[2.98911 5.38913 4.78904 2.98911 ] pdfxs
329.407 463.2 m
(remain)
[3.58903 4.78904 8.50908 4.78904 2.98911 5.38913 ] pdfxs
362.582 463.2 m
(to)
[2.98911 5.38913 ] pdfxs
373.96 463.2 m
(be)
[5.38913 4.78904 ] pdfxs
387.258 463.2 m
(addressed)
[4.78904 5.38913 5.38913 3.58903 4.78904 4.18912 4.18912 4.78904 5.38913 ] pdfxs
433.12 463.2 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
451.807 463.2 m
(man)
[8.50908 4.78904 5.38913 ] pdfxs
470.374 463.2 m
(y) show
478.763 463.2 m
(interesting)
[2.98911 5.38913 2.98911 4.78904 3.58903 4.78904 4.18912 2.98911 2.98911 5.38913 5.38913 
] pdfxs
93.5963 449.64 m
(directions)
[5.38913 2.98911 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
140.287 449.64 m
(in)
[2.98911 5.38913 ] pdfxs
152.505 449.64 m
(which)
[7.90916 5.38913 2.98911 4.78904 5.38913 ] pdfxs
182.811 449.64 m
(this)
[2.98911 5.38913 2.98911 4.18912 ] pdfxs
202.327 449.64 m
(w) show
210.116 449.64 m
(ork)
[5.38913 3.58903 5.38913 ] pdfxs
228.323 449.64 m
(can)
[4.78904 4.78904 5.38913 ] pdfxs
247.131 449.64 m
(be)
[5.38913 4.78904 ] pdfxs
261.149 449.64 m
(e) show
265.818 449.64 m
(xtended.)
[5.38913 2.98911 4.78904 5.38913 5.38913 4.78904 5.38913 2.74908 ] pdfxs
309.411 449.64 m
(In)
[3.58903 5.38913 ] pdfxs
322.229 449.64 m
(man)
[8.50908 4.78904 5.38913 ] pdfxs
340.796 449.64 m
(y) show
350.025 449.64 m
(problems,)
[5.38913 3.58903 5.38913 5.38913 2.98911 4.78904 8.50908 4.18912 2.74908 ] pdfxs
397.207 449.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
414.214 449.64 m
(strict)
[4.18912 2.98911 3.58903 2.98911 4.78904 2.98911 ] pdfxs
439.709 449.64 m
(order)
[5.38913 3.58903 5.38913 4.78904 3.58903 ] pdfxs
466.414 449.64 m
(of)
[5.38913 3.58903 ] pdfxs
479.232 449.64 m
(priority)
[5.38913 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 5.38913 ] pdfxs
515.625 449.64 m
(of)
[5.38913 3.58903 ] pdfxs
93.5959 436.08 m
(subtasks)
[4.18912 5.38913 5.38913 2.98911 4.78904 4.18912 5.38913 4.18912 ] pdfxs
134.069 436.08 m
(may)
[8.50908 4.78904 5.38913 ] pdfxs
156.356 436.08 m
(be)
[5.38913 4.78904 ] pdfxs
170.254 436.08 m
(violated:)
[5.38913 2.98911 5.38913 2.98911 4.78904 2.98911 4.78904 5.38913 2.98911 ] pdfxs
213.476 436.08 m
(in)
[2.98911 5.38913 ] pdfxs
225.454 436.08 m
(some)
[4.18912 5.38913 8.50908 4.78904 ] pdfxs
252.05 436.08 m
(situations)
[4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
297.301 436.08 m
(we)
[7.90916 4.78904 ] pdfxs
313.599 436.08 m
(may)
[8.50908 4.78904 5.38913 ] pdfxs
335.886 436.08 m
(w) show
343.675 436.08 m
(ant)
[4.78904 5.38913 2.98911 ] pdfxs
360.563 436.08 m
(to)
[2.98911 5.38913 ] pdfxs
372.661 436.08 m
(be)
[5.38913 4.78904 ] pdfxs
386.439 436.08 m
(sub-optimal)
[4.18912 5.38913 5.38913 3.58903 5.38913 5.38913 2.98911 2.98911 8.50908 4.78904 2.98911 
] pdfxs
442.119 436.08 m
(with)
[7.90916 2.98911 2.98911 5.38913 ] pdfxs
464.995 436.08 m
(respect)
[3.58903 4.78904 4.18912 5.38913 4.78904 4.78904 2.98911 ] pdfxs
499.359 436.08 m
(to)
[2.98911 5.38913 ] pdfxs
511.457 436.08 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
93.5961 422.52 m
(superior)
[4.18912 5.38913 5.38913 4.78904 3.58903 2.98911 5.38913 3.58903 ] pdfxs
132.149 422.52 m
(subtasks)
[4.18912 5.38913 5.38913 2.98911 4.78904 4.18912 5.38913 4.18912 ] pdfxs
171.901 422.52 m
(in)
[2.98911 5.38913 ] pdfxs
183.16 422.52 m
(order)
[5.38913 3.58903 5.38913 4.78904 3.58903 ] pdfxs
209.025 422.52 m
(to)
[2.98911 5.38913 ] pdfxs
220.283 422.52 m
(impro)
[2.98911 8.50908 5.38913 3.58903 5.38913 ] pdfxs
246.029 422.52 m
(v) show
251.298 422.52 m
(e) show
259.087 422.52 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
275.254 422.52 m
(o) show
280.523 422.52 m
(v) show
285.792 422.52 m
(erall)
[4.78904 3.58903 4.78904 2.98911 2.98911 ] pdfxs
308.057 422.52 m
(performance.)
[5.38913 4.78904 3.58903 3.58903 5.38913 3.58903 8.50908 4.78904 5.38913 4.78904 4.78904 
2.74908 ] pdfxs
369.487 422.52 m
(One)
[7.90916 5.38913 4.78904 ] pdfxs
390.574 422.52 m
(other)
[5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
415.719 422.52 m
(interesting)
[2.98911 5.38913 2.98911 4.78904 3.58903 4.78904 4.18912 2.98911 2.98911 5.38913 5.38913 
] pdfxs
464.559 422.52 m
(direction)
[5.38913 2.98911 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
506.101 422.52 m
(is)
[2.98911 4.18912 ] pdfxs
516.159 422.52 m
(to)
[2.98911 5.38913 ] pdfxs
93.5959 408.96 m
(study)
[4.18912 2.98911 5.38913 5.38913 5.38913 ] pdfxs
119.941 408.96 m
(situations)
[4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
164.352 408.96 m
(when)
[7.90916 5.38913 4.78904 5.38913 ] pdfxs
190.709 408.96 m
(actions)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 ] pdfxs
224.232 408.96 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
240.279 408.96 m
(structured.)
[4.18912 2.98911 3.58903 5.38913 4.78904 2.98911 5.38913 3.58903 4.78904 5.38913 2.74908 
] pdfxs
289.959 408.96 m
(W) show
299.428 408.96 m
(e) show
306.977 408.96 m
(are)
[4.78904 3.58903 4.78904 ] pdfxs
323.025 408.96 m
(currently)
[4.78904 5.38913 3.58903 3.58903 4.78904 5.38913 2.98911 2.98911 5.38913 ] pdfxs
365.046 408.96 m
(in)
[2.98911 5.38913 ] pdfxs
372.944 408.96 m
(v) show
378.214 408.96 m
(estigating)
[4.78904 4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
423.344 408.96 m
(compact)
[4.78904 5.38913 8.50908 5.38913 4.78904 4.78904 2.98911 ] pdfxs
462.988 408.96 m
(representation)
[3.58903 4.78904 5.38913 3.58903 4.78904 4.18912 4.78904 5.38913 2.98911 4.78904 2.98911 
2.98911 5.38913 5.38913 ] pdfxs
93.596 395.4 m
(of)
[5.38913 3.58903 ] pdfxs
105.334 395.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
121.381 395.4 m
(set)
[4.18912 4.78904 2.98911 ] pdfxs
136.229 395.4 m
(of)
[5.38913 3.58903 ] pdfxs
147.967 395.4 m
(admissible)
[4.78904 5.38913 8.50908 2.98911 4.18912 4.18912 2.98911 5.38913 2.98911 4.78904 ] pdfxs
197.298 395.4 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
233.93 395.4 m
(by)
[5.38913 5.38913 ] pdfxs
247.469 395.4 m
(e) show
252.138 395.4 m
(xploiting)
[5.38913 5.38913 2.98911 5.38913 2.98911 2.98911 2.98911 5.38913 5.38913 ] pdfxs
294.159 395.4 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
310.207 395.4 m
(structure)
[4.18912 2.98911 3.58903 5.38913 4.78904 2.98911 5.38913 3.58903 4.78904 ] pdfxs
351.028 395.4 m
(of)
[5.38913 3.58903 ] pdfxs
362.767 395.4 m
(actions.)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 4.18912 2.74908 ] pdfxs
110.516 381.84 m
(Another)
[7.90916 5.38913 5.38913 2.98911 5.38913 4.78904 3.58903 ] pdfxs
149.199 381.84 m
(interesting)
[2.98911 5.38913 2.98911 4.78904 3.58903 4.78904 4.18912 2.98911 2.98911 5.38913 5.38913 
] pdfxs
198.159 381.84 m
(direction)
[5.38913 2.98911 3.58903 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
239.821 381.84 m
(is)
[2.98911 4.18912 ] pdfxs
250.119 381.84 m
(to)
[2.98911 5.38913 ] pdfxs
261.497 381.84 m
(in)
[2.98911 5.38913 ] pdfxs
269.395 381.84 m
(v) show
274.664 381.84 m
(estigate)
[4.78904 4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 4.78904 ] pdfxs
311.057 381.84 m
(non-v)
[5.38913 5.38913 5.38913 3.58903 5.38913 ] pdfxs
335.962 381.84 m
(alue)
[4.78904 2.98911 5.38913 4.78904 ] pdfxs
357.279 381.84 m
(based)
[5.38913 4.78904 4.18912 4.78904 5.38913 ] pdfxs
385.064 381.84 m
(reinforcement)
[3.58903 4.78904 2.98911 5.38913 3.58903 5.38913 3.58903 4.78904 4.78904 8.50908 4.78904 
5.38913 2.98911 ] pdfxs
449.122 381.84 m
(learning)
[2.98911 4.78904 4.78904 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
487.795 381.84 m
(methods)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 4.18912 ] pdfxs
93.595 368.28 m
(such)
[4.18912 5.38913 4.78904 5.38913 ] pdfxs
117.191 368.28 m
(as)
[4.78904 4.18912 ] pdfxs
130.01 368.28 m
(polic)
[5.38913 5.38913 2.98911 2.98911 4.78904 ] pdfxs
151.435 368.28 m
(y) show
160.784 368.28 m
(search)
[4.18912 4.78904 4.78904 3.58903 4.78904 5.38913 ] pdfxs
192.278 368.28 m
(methods)
[8.50908 4.78904 2.98911 5.38913 5.38913 5.38913 4.18912 ] pdfxs
232.882 368.28 m
(\(Baxter)
[3.58903 7.30907 4.78904 5.38913 2.98911 4.78904 3.58903 ] pdfxs
269.166 368.28 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
288.573 368.28 m
(Bartlett,)
[7.30907 4.78904 3.58903 2.98911 2.98911 4.78904 2.98911 2.98911 2.74908 ] pdfxs
327.715 368.28 m
(2000\))
[5.38913 5.38913 5.38913 5.38913 3.58903 ] pdfxs
356.82 368.28 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
373.107 368.28 m
(computing)
[4.78904 5.38913 8.50908 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 ] pdfxs
423.8 368.3 m
/N101 [0.0999908 0 0 -0.0999908 0 0] Tf
(X) show
427.854 368.28 m
/N22 10.9091 Tf
(-ascending)
[3.58903 4.78904 4.18912 4.78904 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
478.745 368.28 m
(policies)
[5.38913 5.38913 2.98911 2.98911 4.78904 2.98911 4.78904 4.18912 ] pdfxs
516.218 368.28 m
(in)
[2.98911 5.38913 ] pdfxs
93.5996 354.84 m
(MDPs.)
[9.70908 7.90916 6.10906 4.18912 2.74908 ] pdfxs
93.5996 325.32 m
/N110 10.9091 Tf
(Ackno)
[7.90916 4.78904 6.10906 6.10906 5.38913 ] pdfxs
123.785 325.32 m
(wledgements)
[7.90916 2.98911 4.78904 6.10906 5.38913 4.78904 9.10916 4.78904 6.10906 3.58903 4.18912 
] pdfxs
93.5996 304.32 m
/N22 10.9091 Tf
(This)
[6.70915 5.38913 2.98911 4.18912 ] pdfxs
115.636 304.32 m
(research)
[3.58903 4.78904 4.18912 4.78904 4.78904 3.58903 4.78904 5.38913 ] pdfxs
154.429 304.32 m
(is)
[2.98911 4.18912 ] pdfxs
164.367 304.32 m
(supported)
[4.18912 5.38913 5.38913 5.38913 5.38913 3.58903 2.98911 4.78904 5.38913 ] pdfxs
209.868 304.32 m
(in)
[2.98911 5.38913 ] pdfxs
221.007 304.32 m
(part)
[5.38913 4.78904 3.58903 2.98911 ] pdfxs
240.523 304.32 m
(by)
[5.38913 5.38913 ] pdfxs
254.061 304.32 m
(a) show
261.49 304.32 m
(grant)
[5.38913 3.58903 4.78904 5.38913 2.98911 ] pdfxs
286.516 304.32 m
(from)
[3.58903 3.58903 5.38913 8.50908 ] pdfxs
310.232 304.32 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
326.159 304.32 m
(National)
[7.90916 4.78904 2.98911 2.98911 5.38913 5.38913 4.78904 2.98911 ] pdfxs
366.272 304.32 m
(Science)
[6.10906 4.78904 2.98911 4.78904 5.38913 4.78904 4.78904 ] pdfxs
402.795 304.32 m
(F) show
408.784 304.32 m
(oundation)
[5.38913 5.38913 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
454.886 304.32 m
(#ECS-0218125.)
[5.38913 6.70915 7.30907 6.10906 3.58903 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 
5.38913 2.74908 ] pdfxs
93.5991 269.28 m
/N9 14.3462 Tf
(Refer)
[10.3148 6.35526 4.79162 6.35526 6.35526 ] pdfxs
127.532 269.28 m
(ences)
[6.35526 7.91913 6.35526 6.35526 5.63813 ] pdfxs
93.5991 244.44 m
/N22 10.9091 Tf
(Baxter)
[7.30907 4.78904 5.38913 2.98911 4.78904 3.58903 ] pdfxs
121.974 244.44 m
(,) show
127.843 244.44 m
(J.)
[4.18912 2.74908 ] pdfxs
137.661 244.44 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
156.228 244.44 m
(Bartlett,)
[7.30907 4.78904 3.58903 2.98911 2.98911 4.78904 2.98911 2.98911 2.74908 ] pdfxs
194.53 244.44 m
(P) show
199.439 244.44 m
(.) show
204.948 244.44 m
(\(2000\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
241.111 244.44 m
(Reinforcement)
[7.30907 4.78904 2.98911 5.38913 3.58903 5.38913 3.58903 4.78904 4.78904 8.50908 4.78904 
5.38913 2.98911 ] pdfxs
308.65 244.44 m
(learning)
[2.98911 4.78904 4.78904 3.58903 5.38913 2.98911 5.38913 5.38913 ] pdfxs
347.202 244.44 m
(in)
[2.98911 5.38913 ] pdfxs
358.58 244.44 m
(pomdp')
[5.38913 5.38913 8.50908 5.38913 5.38913 3.58903 ] pdfxs
391.635 244.44 m
(s) show
398.944 244.44 m
(via)
[5.38913 2.98911 4.78904 ] pdfxs
415.111 244.44 m
(direct)
[5.38913 2.98911 3.58903 4.78904 4.78904 2.98911 ] pdfxs
442.766 244.44 m
(gradient)
[5.38913 3.58903 4.78904 5.38913 2.98911 4.78904 5.38913 2.98911 ] pdfxs
481.318 244.44 m
(ascent.)
[4.78904 4.18912 4.78904 4.78904 5.38913 2.98911 2.74908 ] pdfxs
515.562 244.44 m
/N24 10.9091 Tf
(In)
[3.58903 5.38913 ] pdfxs
104.519 230.88 m
(ICML)
[3.58903 7.30907 9.10916 6.10906 ] pdfxs
130.635 230.88 m
/N22 10.9091 Tf
(.) show
93.5989 208.32 m
(Boutilier)
[7.30907 5.38913 5.38913 2.98911 2.98911 2.98911 2.98911 4.78904 3.58903 ] pdfxs
131.541 208.32 m
(,) show
137.17 208.32 m
(C.,)
[7.30907 2.74908 2.74908 ] pdfxs
152.377 208.32 m
(Brafman,)
[7.30907 3.58903 4.78904 3.58903 8.50908 4.78904 5.38913 2.74908 ] pdfxs
195.85 208.32 m
(R.,)
[7.30907 2.74908 2.74908 ] pdfxs
211.057 208.32 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
229.384 208.32 m
(Geib,)
[7.90916 4.78904 2.98911 5.38913 2.74908 ] pdfxs
255.849 208.32 m
(C.)
[7.30907 2.74908 ] pdfxs
268.308 208.32 m
(\(1997\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
303.631 208.32 m
(Prioritized)
[6.10906 3.58903 2.98911 5.38913 3.58903 2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 
] pdfxs
352.111 208.32 m
(goal)
[5.38913 5.38913 4.78904 2.98911 ] pdfxs
373.427 208.32 m
(decomposition)
[5.38913 4.78904 4.78904 5.38913 8.50908 5.38913 5.38913 4.18912 2.98911 2.98911 2.98911 
5.38913 5.38913 ] pdfxs
440.006 208.32 m
(of)
[5.38913 3.58903 ] pdfxs
451.624 208.32 m
(Mark)
[9.70908 4.78904 3.58903 5.38913 ] pdfxs
474.98 208.32 m
(o) show
480.249 208.32 m
(v) show
488.398 208.32 m
(decision)
[5.38913 4.78904 4.78904 2.98911 4.18912 2.98911 5.38913 5.38913 ] pdfxs
104.518 194.76 m
(processes:)
[5.38913 3.58903 5.38913 4.78904 4.78904 4.18912 4.18912 4.78904 4.18912 2.98911 ] pdfxs
153.009 194.76 m
(T) show
158.878 194.76 m
(o) show
164.027 194.76 m
(w) show
171.816 194.76 m
(ards)
[4.78904 3.58903 5.38913 4.18912 ] pdfxs
192.772 194.76 m
(a) show
200.561 194.76 m
(synthesis)
[4.18912 5.38913 5.38913 2.98911 5.38913 4.78904 4.18912 2.98911 4.18912 ] pdfxs
243.303 194.76 m
(of)
[5.38913 3.58903 ] pdfxs
255.401 194.76 m
(classical)
[4.78904 2.98911 4.78904 4.18912 4.18912 2.98911 4.78904 4.78904 2.98911 ] pdfxs
295.143 194.76 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
313.831 194.76 m
(decision)
[5.38913 4.78904 4.78904 2.98911 4.18912 2.98911 5.38913 5.38913 ] pdfxs
352.983 194.76 m
(theoretic)
[2.98911 5.38913 4.78904 5.38913 3.58903 4.78904 2.98911 2.98911 4.78904 ] pdfxs
393.925 194.76 m
(planning.)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
439.307 194.76 m
(In)
[3.58903 5.38913 ] pdfxs
451.285 194.76 m
(Pollack,)
[6.10906 5.38913 2.98911 2.98911 4.78904 4.78904 5.38913 2.74908 ] pdfxs
489.718 194.76 m
(M.,)
[9.70908 2.74908 2.74908 ] pdfxs
507.805 194.76 m
(edi-)
[4.78904 5.38913 2.98911 3.58903 ] pdfxs
104.518 181.2 m
(tor)
[2.98911 5.38913 3.58903 ] pdfxs
116.005 181.2 m
(,) show
122.114 181.2 m
/N24 10.9091 Tf
(Pr)
[6.70915 4.18912 ] pdfxs
132.532 181.2 m
(oceedings)
[5.38913 4.78904 4.78904 4.78904 5.38913 2.98911 5.38913 5.38913 4.18912 ] pdfxs
179.114 181.2 m
(of)
[5.38913 2.98911 ] pdfxs
190.612 181.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
207.02 181.2 m
(F) show
213.249 181.2 m
(ifteenth)
[2.98911 2.98911 2.98911 4.78904 4.78904 5.38913 2.98911 5.38913 ] pdfxs
248.921 181.2 m
(International)
[3.58903 5.38913 2.98911 4.78904 4.18912 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 
5.38913 2.98911 ] pdfxs
309.5 181.2 m
(J) show
314.049 181.2 m
(oint)
[5.38913 2.98911 5.38913 2.98911 ] pdfxs
334.045 181.2 m
(Confer)
[7.30907 5.38913 5.38913 2.98911 4.78904 4.18912 ] pdfxs
363.739 181.2 m
(ence)
[4.78904 5.38913 4.78904 4.78904 ] pdfxs
386.976 181.2 m
(on)
[5.38913 5.38913 ] pdfxs
400.874 181.2 m
(Arti\002cial)
[6.70915 4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 5.38913 2.98911 ] pdfxs
442.656 181.2 m
(Intellig)
[3.58903 5.38913 2.98911 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
473.648 181.2 m
(ence)
[4.78904 5.38913 4.78904 4.78904 ] pdfxs
493.405 181.2 m
/N22 10.9091 Tf
(,) show
499.874 181.2 m
(pages)
[5.38913 4.78904 5.38913 4.78904 4.18912 ] pdfxs
104.518 167.76 m
(1156\2261163,)
[5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 2.74908 ] pdfxs
158.889 167.76 m
(San)
[6.10906 4.78904 5.38913 ] pdfxs
178.056 167.76 m
(Francisco.)
[6.10906 3.58903 4.78904 5.38913 4.78904 2.98911 4.18912 4.78904 5.38913 2.74908 ] pdfxs
225.707 167.76 m
(Mor)
[9.70908 5.38913 3.58903 ] pdfxs
244.154 167.76 m
(gan)
[5.38913 4.78904 5.38913 ] pdfxs
262.721 167.76 m
(Kaufmann.)
[7.90916 4.78904 5.38913 3.58903 8.50908 4.78904 5.38913 5.38913 2.74908 ] pdfxs
93.5973 145.2 m
(Guestrin,)
[7.90916 5.38913 4.78904 4.18912 2.98911 3.58903 2.98911 5.38913 2.74908 ] pdfxs
136.939 145.2 m
(C.)
[7.30907 2.74908 ] pdfxs
149.997 145.2 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
168.805 145.2 m
(Gordon,)
[7.90916 5.38913 3.58903 5.38913 5.38913 5.38913 2.74908 ] pdfxs
207.848 145.2 m
(G.)
[7.90916 2.74908 ] pdfxs
221.506 145.2 m
(\(2002\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
258.27 145.2 m
(Distrib)
[7.90916 2.98911 4.18912 2.98911 3.58903 2.98911 5.38913 ] pdfxs
288.074 145.2 m
(uted)
[5.38913 2.98911 4.78904 5.38913 ] pdfxs
310.11 145.2 m
(planning)
[5.38913 2.98911 4.78904 5.38913 5.38913 2.98911 5.38913 5.38913 ] pdfxs
351.302 145.2 m
(in)
[2.98911 5.38913 ] pdfxs
362.801 145.2 m
(hierarchical)
[5.38913 2.98911 4.78904 3.58903 4.78904 3.58903 4.78904 5.38913 2.98911 4.78904 4.78904 
2.98911 ] pdfxs
417.27 145.2 m
(f) show
420.739 145.2 m
(actored)
[4.78904 4.78904 2.98911 5.38913 3.58903 4.78904 5.38913 ] pdfxs
455.822 145.2 m
(mdps.)
[8.50908 5.38913 5.38913 4.18912 2.74908 ] pdfxs
487.088 145.2 m
(In)
[3.58903 5.38913 ] pdfxs
499.306 145.2 m
/N24 10.9091 Tf
(In)
[3.58903 5.38913 ] pdfxs
511.404 145.2 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
104.517 131.64 m
(Pr)
[6.70915 4.18912 ] pdfxs
114.935 131.64 m
(oceedings)
[5.38913 4.78904 4.78904 4.78904 5.38913 2.98911 5.38913 5.38913 4.18912 ] pdfxs
161.517 131.64 m
(of)
[5.38913 2.98911 ] pdfxs
173.015 131.64 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
189.423 131.64 m
(Eighteenth)
[6.70915 2.98911 5.38913 5.38913 2.98911 4.78904 4.78904 5.38913 2.98911 5.38913 ] pdfxs
239.713 131.64 m
(Confer)
[7.30907 5.38913 5.38913 2.98911 4.78904 4.18912 ] pdfxs
269.408 131.64 m
(ence)
[4.78904 5.38913 4.78904 4.78904 ] pdfxs
292.524 131.64 m
(on)
[5.38913 5.38913 ] pdfxs
306.423 131.64 m
(Uncertainty)
[7.90916 5.38913 4.78904 4.78904 4.18912 2.98911 5.38913 2.98911 5.38913 2.98911 4.78904 
] pdfxs
361.503 131.64 m
(in)
[2.98911 5.38913 ] pdfxs
373.121 131.64 m
(Arti\002cial)
[6.70915 4.18912 2.98911 2.98911 5.38913 4.78904 2.98911 5.38913 2.98911 ] pdfxs
414.903 131.64 m
(Intellig)
[3.58903 5.38913 2.98911 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
445.895 131.64 m
(ence)
[4.78904 5.38913 4.78904 4.78904 ] pdfxs
465.651 131.64 m
/N22 10.9091 Tf
(,) show
472.001 131.64 m
(pages)
[5.38913 4.78904 5.38913 4.78904 4.18912 ] pdfxs
499.906 131.64 m
(197)
[5.38913 5.38913 5.38913 ] pdfxs
519.313 131.64 m
(\226) show
104.517 118.08 m
(206,)
[5.38913 5.38913 5.38913 2.74908 ] pdfxs
126.314 118.08 m
(Edmonton,)
[6.70915 5.38913 8.50908 5.38913 5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
177.095 118.08 m
(Canada.)
[7.30907 4.78904 5.38913 4.78904 5.38913 4.78904 2.74908 ] pdfxs
304.197 77.2801 m
(10)
[5.38913 5.38913 ] pdfxs
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 11 11
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
q
10 0 0 10 0 0 cm
0 setgray
93.6 672.12 m
/N22 10.9091 Tf
(Huber)
[7.90916 5.38913 5.38913 4.78904 3.58903 ] pdfxs
120.185 672.12 m
(,) show
126.774 672.12 m
(M.)
[9.70908 2.74908 ] pdfxs
142.713 672.12 m
(\(2000\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
180.796 672.12 m
/N24 10.9091 Tf
(A) show
190.985 672.12 m
(Hybrid)
[7.90916 4.78904 5.38913 4.18912 2.98911 5.38913 ] pdfxs
225.24 672.12 m
(Ar)
[6.70915 4.18912 ] pdfxs
235.778 672.12 m
(c) show
240.447 672.12 m
(hitectur)
[5.38913 2.98911 2.98911 4.78904 4.78904 2.98911 5.38913 4.18912 ] pdfxs
273.6 672.12 m
(e) show
282.229 672.12 m
(for)
[2.98911 5.38913 4.18912 ] pdfxs
298.396 672.12 m
(Adaptive)
[6.70915 5.38913 5.38913 5.38913 2.98911 2.98911 4.78904 4.78904 ] pdfxs
340.549 672.12 m
(Robot)
[6.70915 5.38913 5.38913 5.38913 2.98911 ] pdfxs
370.134 672.12 m
(Contr)
[7.30907 5.38913 5.38913 2.98911 4.18912 ] pdfxs
394.92 672.12 m
(ol)
[5.38913 2.98911 ] pdfxs
403.298 672.12 m
/N22 10.9091 Tf
(.) show
412.647 672.12 m
(PhD)
[6.10906 5.38913 7.90916 ] pdfxs
435.414 672.12 m
(thesis,)
[2.98911 5.38913 4.78904 4.18912 2.98911 4.18912 2.74908 ] pdfxs
466.657 672.12 m
(Uni)
[7.90916 5.38913 2.98911 ] pdfxs
482.705 672.12 m
(v) show
487.974 672.12 m
(ersity)
[4.78904 3.58903 4.18912 2.98911 2.98911 5.38913 ] pdfxs
515.628 672.12 m
(of)
[5.38913 3.58903 ] pdfxs
104.519 658.68 m
(Massachusetts,)
[9.70908 4.78904 4.18912 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 4.78904 2.98911 
2.98911 4.18912 2.74908 ] pdfxs
172.887 658.68 m
(Amherst.)
[7.90916 8.50908 5.38913 4.78904 3.58903 4.18912 2.98911 2.74908 ] pdfxs
93.5993 636.12 m
(Huber)
[7.90916 5.38913 5.38913 4.78904 3.58903 ] pdfxs
120.185 636.12 m
(,) show
125.814 636.12 m
(M.,)
[9.70908 2.74908 2.74908 ] pdfxs
143.661 636.12 m
(MacDonald,)
[9.70908 4.78904 4.78904 7.90916 5.38913 5.38913 4.78904 2.98911 5.38913 2.74908 ] pdfxs
200.552 636.12 m
(W) show
209.901 636.12 m
(.,)
[2.74908 2.74908 ] pdfxs
217.919 636.12 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
236.366 636.12 m
(Grupen,)
[7.90916 3.58903 5.38913 5.38913 4.78904 5.38913 2.74908 ] pdfxs
274.45 636.12 m
(R.)
[7.30907 2.74908 ] pdfxs
287.148 636.12 m
(\(1996\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
322.832 636.12 m
(A) show
333.501 636.12 m
(control)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 ] pdfxs
367.024 636.12 m
(basis)
[5.38913 4.78904 4.18912 2.98911 4.18912 ] pdfxs
391.45 636.12 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
406.897 636.12 m
(multile)
[8.50908 5.38913 2.98911 2.98911 2.98911 2.98911 4.78904 ] pdfxs
437.421 636.12 m
(gged)
[5.38913 5.38913 4.78904 5.38913 ] pdfxs
461.497 636.12 m
(w) show
469.286 636.12 m
(alking.)
[4.78904 2.98911 5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
93.599 613.56 m
(Nakamura,)
[7.90916 4.78904 5.38913 4.78904 8.50908 5.38913 3.58903 4.78904 2.74908 ] pdfxs
144.261 613.56 m
(Y) show
150.73 613.56 m
(.) show
156.119 613.56 m
(\(1991\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
191.562 613.56 m
/N24 10.9091 Tf
(Advanced)
[6.70915 5.38913 4.78904 5.38913 5.38913 4.78904 4.78904 5.38913 ] pdfxs
237.075 613.56 m
(r) show
240.784 613.56 m
(obotics:)
[5.38913 5.38913 5.38913 2.98911 2.98911 4.78904 4.18912 3.58903 ] pdfxs
279.217 613.56 m
(r) show
283.046 613.56 m
(edundancy)
[4.78904 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 4.78904 4.78904 ] pdfxs
332.868 613.56 m
(and)
[5.38913 5.38913 5.38913 ] pdfxs
351.795 613.56 m
(optimization)
[5.38913 5.38913 2.98911 2.98911 7.90916 2.98911 4.18912 5.38913 2.98911 2.98911 5.38913 
5.38913 ] pdfxs
405.784 613.56 m
/N22 10.9091 Tf
(.) show
412.613 613.56 m
(Addison-W)
[7.90916 5.38913 5.38913 2.98911 4.18912 5.38913 5.38913 3.58903 10.3092 ] pdfxs
462.315 613.56 m
(esle)
[4.78904 4.18912 2.98911 4.78904 ] pdfxs
478.951 613.56 m
(y) show
487.46 613.56 m
(Pub)
[6.10906 5.38913 5.38913 ] pdfxs
503.867 613.56 m
(.) show
509.256 613.56 m
(Co.)
[7.30907 5.38913 2.74908 ] pdfxs
93.5984 591.12 m
(Pellionisz,)
[6.10906 4.78904 2.98911 2.98911 2.98911 5.38913 5.38913 2.98911 4.18912 4.78904 2.74908 
] pdfxs
142.558 591.12 m
(A.)
[7.90916 2.74908 ] pdfxs
156.337 591.12 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
175.144 591.12 m
(Llinas,)
[6.70915 2.98911 2.98911 5.38913 4.78904 4.18912 2.74908 ] pdfxs
208.428 591.12 m
(R.)
[7.30907 2.74908 ] pdfxs
221.606 591.12 m
(\(1985\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
258.729 591.12 m
(T) show
264.718 591.12 m
(ensor)
[4.78904 5.38913 4.18912 5.38913 3.58903 ] pdfxs
291.304 591.12 m
(netw)
[5.38913 4.78904 2.98911 7.90916 ] pdfxs
312.26 591.12 m
(ork)
[5.38913 3.58903 5.38913 ] pdfxs
330.107 591.12 m
(theory)
[2.98911 5.38913 4.78904 5.38913 3.58903 5.38913 ] pdfxs
361.122 591.12 m
(of)
[5.38913 3.58903 ] pdfxs
373.34 591.12 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
389.867 591.12 m
(metaor)
[8.50908 4.78904 2.98911 4.78904 5.38913 3.58903 ] pdfxs
419.682 591.12 m
(ganization)
[5.38913 4.78904 5.38913 2.98911 4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
468.293 591.12 m
(of)
[5.38913 3.58903 ] pdfxs
480.511 591.12 m
(functional)
[3.58903 5.38913 5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 4.78904 2.98911 ] pdfxs
104.519 577.56 m
(geometries)
[5.38913 4.78904 5.38913 8.50908 4.78904 2.98911 3.58903 2.98911 4.78904 4.18912 ] pdfxs
155.05 577.56 m
(in)
[2.98911 5.38913 ] pdfxs
166.188 577.56 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
182.235 577.56 m
(central)
[4.78904 4.78904 5.38913 2.98911 3.58903 4.78904 2.98911 ] pdfxs
214.559 577.56 m
(nerv)
[5.38913 4.78904 3.58903 5.38913 ] pdfxs
233.475 577.56 m
(ous)
[5.38913 5.38913 4.18912 ] pdfxs
251.562 577.56 m
(system.)
[4.18912 5.38913 4.18912 2.98911 4.78904 8.50908 2.74908 ] pdfxs
288.446 577.56 m
/N24 10.9091 Tf
(Neur)
[7.30907 4.78904 5.38913 4.18912 ] pdfxs
309.642 577.56 m
(oscience)
[5.38913 4.18912 4.78904 2.98911 4.78904 5.38913 4.78904 4.78904 ] pdfxs
346.755 577.56 m
/N22 10.9091 Tf
(,) show
352.624 577.56 m
(16,)
[5.38913 5.38913 2.74908 ] pdfxs
368.911 577.56 m
(No.)
[7.90916 5.38913 2.74908 ] pdfxs
387.719 577.56 m
(2:245\226273.)
[5.38913 2.98911 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 2.74908 ] pdfxs
93.5986 555 m
(Perkins,)
[6.10906 4.78904 3.58903 5.38913 2.98911 5.38913 4.18912 2.74908 ] pdfxs
131.431 555 m
(T) show
137.3 555 m
(.) show
142.449 555 m
(J.)
[4.18912 2.74908 ] pdfxs
151.787 555 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
169.995 555 m
(Barto,)
[7.30907 4.78904 3.58903 2.98911 5.38913 2.74908 ] pdfxs
199.329 555 m
(A.)
[7.90916 2.74908 ] pdfxs
212.387 555 m
(G.)
[7.90916 2.74908 ] pdfxs
225.326 555 m
(\(2001\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
260.289 555 m
(L) show
266.398 555 m
(yapuno)
[5.38913 4.78904 5.38913 5.38913 5.38913 5.38913 ] pdfxs
298.013 555 m
(v-constraine)
[5.38913 3.58903 4.78904 5.38913 5.38913 4.18912 2.98911 3.58903 4.78904 2.98911 5.38913 
4.78904 ] pdfxs
351.402 555 m
(d) show
359.911 555 m
(action)
[4.78904 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
389.005 555 m
(sets)
[4.18912 4.78904 2.98911 4.18912 ] pdfxs
407.682 555 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
422.769 555 m
(reinforcement)
[3.58903 4.78904 2.98911 5.38913 3.58903 5.38913 3.58903 4.78904 4.78904 8.50908 4.78904 
5.38913 2.98911 ] pdfxs
486.227 555 m
(learning.)
[2.98911 4.78904 4.78904 3.58903 5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
104.518 541.44 m
(In)
[3.58903 5.38913 ] pdfxs
116.136 541.44 m
/N24 10.9091 Tf
(Pr)
[6.70915 4.18912 ] pdfxs
126.555 541.44 m
(oc.)
[5.38913 4.78904 2.74908 ] pdfxs
142.122 541.44 m
(18th)
[5.38913 5.38913 2.98911 5.38913 ] pdfxs
164.038 541.44 m
(International)
[3.58903 5.38913 2.98911 4.78904 4.18912 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 
5.38913 2.98911 ] pdfxs
224.016 541.44 m
(Conf)
[7.30907 5.38913 5.38913 2.98911 ] pdfxs
244.973 541.44 m
(.) show
250.362 541.44 m
(on)
[5.38913 5.38913 ] pdfxs
263.78 541.44 m
(Mac)
[9.10916 5.38913 4.78904 ] pdfxs
282.947 541.44 m
(hine)
[5.38913 2.98911 5.38913 4.78904 ] pdfxs
304.384 541.44 m
(Learning)
[6.10906 4.78904 5.38913 4.18912 5.38913 2.98911 5.38913 5.38913 ] pdfxs
344.016 541.44 m
/N22 10.9091 Tf
(,) show
349.525 541.44 m
(pages)
[5.38913 4.78904 5.38913 4.78904 4.18912 ] pdfxs
376.951 541.44 m
(409\226416.)
[5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 5.38913 2.74908 ] pdfxs
420.303 541.44 m
(Mor)
[9.70908 5.38913 3.58903 ] pdfxs
438.751 541.44 m
(gan)
[5.38913 4.78904 5.38913 ] pdfxs
457.078 541.44 m
(Kaufmann,)
[7.90916 4.78904 5.38913 3.58903 8.50908 4.78904 5.38913 5.38913 2.74908 ] pdfxs
508.46 541.44 m
(San)
[6.10906 4.78904 5.38913 ] pdfxs
104.519 527.88 m
(Francisco,)
[6.10906 3.58903 4.78904 5.38913 4.78904 2.98911 4.18912 4.78904 5.38913 2.74908 ] pdfxs
152.29 527.88 m
(CA.)
[7.30907 7.90916 2.74908 ] pdfxs
93.5986 505.44 m
(Platt,)
[6.10906 2.98911 4.78904 2.98911 2.98911 2.74908 ] pdfxs
120.173 505.44 m
(R.,)
[7.30907 2.74908 2.74908 ] pdfxs
136.7 505.44 m
(F) show
142.689 505.44 m
(agg,)
[4.78904 5.38913 5.38913 2.74908 ] pdfxs
164.966 505.44 m
(A.,)
[7.90916 2.74908 2.74908 ] pdfxs
182.093 505.44 m
(and)
[4.78904 5.38913 5.38913 ] pdfxs
201.5 505.44 m
(Grupen,)
[7.90916 3.58903 5.38913 5.38913 4.78904 5.38913 2.74908 ] pdfxs
240.664 505.44 m
(R.)
[7.30907 2.74908 ] pdfxs
254.322 505.44 m
(\(2002\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
292.885 505.44 m
(Nullspace)
[7.90916 5.38913 2.98911 2.98911 4.18912 5.38913 4.78904 4.78904 4.78904 ] pdfxs
340.067 505.44 m
(composition)
[4.78904 5.38913 8.50908 5.38913 5.38913 4.18912 2.98911 2.98911 2.98911 5.38913 5.38913 
] pdfxs
397.547 505.44 m
(of)
[5.38913 3.58903 ] pdfxs
410.245 505.44 m
(control)
[4.78904 5.38913 5.38913 2.98911 3.58903 5.38913 2.98911 ] pdfxs
444.729 505.44 m
(la)
[2.98911 4.78904 ] pdfxs
452.387 505.44 m
(ws)
[7.90916 4.18912 ] pdfxs
468.205 505.44 m
(for)
[3.58903 5.38913 3.58903 ] pdfxs
484.493 505.44 m
(grasping.)
[5.38913 3.58903 4.78904 4.18912 5.38913 2.98911 5.38913 5.38913 2.74908 ] pdfxs
104.519 491.88 m
/N24 10.9091 Tf
(In)
[3.58903 5.38913 ] pdfxs
116.497 491.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
132.664 491.88 m
(Pr)
[6.70915 4.18912 ] pdfxs
143.082 491.88 m
(oceedings)
[5.38913 4.78904 4.78904 4.78904 5.38913 2.98911 5.38913 5.38913 4.18912 ] pdfxs
189.544 491.88 m
(of)
[5.38913 2.98911 ] pdfxs
200.922 491.88 m
(the)
[2.98911 5.38913 4.78904 ] pdfxs
217.089 491.88 m
(IEEE/RSJ)
[3.58903 6.70915 6.70915 6.70915 2.98911 6.70915 5.38913 4.78904 ] pdfxs
263.562 491.88 m
(International)
[3.58903 5.38913 2.98911 4.78904 4.18912 5.38913 5.38913 2.98911 2.98911 5.38913 5.38913 
5.38913 2.98911 ] pdfxs
323.9 491.88 m
(Confer)
[7.30907 5.38913 5.38913 2.98911 4.78904 4.18912 ] pdfxs
353.595 491.88 m
(ence)
[4.78904 5.38913 4.78904 4.78904 ] pdfxs
376.591 491.88 m
(on)
[5.38913 5.38913 ] pdfxs
390.369 491.88 m
(Intellig)
[3.58903 5.38913 2.98911 4.78904 2.98911 2.98911 2.98911 5.38913 ] pdfxs
421.362 491.88 m
(ent)
[4.78904 5.38913 2.98911 ] pdfxs
437.889 491.88 m
(Robots)
[6.70915 5.38913 5.38913 5.38913 2.98911 4.18912 ] pdfxs
471.063 491.88 m
(and)
[5.38913 5.38913 5.38913 ] pdfxs
490.231 491.88 m
(Systems)
[5.38913 4.78904 4.18912 2.98911 4.78904 7.90916 4.18912 ] pdfxs
104.519 478.32 m
(\(IR)
[3.58903 3.58903 6.70915 ] pdfxs
117.926 478.32 m
(OS\))
[7.90916 5.38913 3.58903 ] pdfxs
134.813 478.32 m
/N22 10.9091 Tf
(.) show
93.5988 455.76 m
(Precup,)
[6.10906 3.58903 4.78904 4.78904 5.38913 5.38913 2.74908 ] pdfxs
130.122 455.76 m
(D.)
[7.90916 2.74908 ] pdfxs
144.021 455.76 m
(\(2000\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
181.744 455.76 m
/N24 10.9091 Tf
(T) show
186.893 455.76 m
(empor)
[4.78904 7.90916 5.38913 5.38913 4.18912 ] pdfxs
214.439 455.76 m
(al)
[5.38913 2.98911 ] pdfxs
226.297 455.76 m
(Abstr)
[6.70915 5.38913 4.18912 2.98911 4.18912 ] pdfxs
249.642 455.76 m
(action)
[5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
280.297 455.76 m
(in)
[2.98911 5.38913 ] pdfxs
292.035 455.76 m
(Reinfor)
[6.70915 4.78904 2.98911 5.38913 2.98911 5.38913 4.18912 ] pdfxs
324.119 455.76 m
(cement)
[4.78904 4.78904 7.90916 4.78904 5.38913 2.98911 ] pdfxs
358.493 455.76 m
(Learning)
[6.10906 4.78904 5.38913 4.18912 5.38913 2.98911 5.38913 5.38913 ] pdfxs
398.126 455.76 m
/N22 10.9091 Tf
(.) show
407.115 455.76 m
(PhD)
[6.10906 5.38913 7.90916 ] pdfxs
429.882 455.76 m
(thesis,)
[2.98911 5.38913 4.78904 4.18912 2.98911 4.18912 2.74908 ] pdfxs
460.886 455.76 m
(Department)
[7.90916 4.78904 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 ] pdfxs
515.617 455.76 m
(of)
[5.38913 3.58903 ] pdfxs
104.519 442.2 m
(Computer)
[7.30907 5.38913 8.50908 5.38913 5.38913 2.98911 4.78904 3.58903 ] pdfxs
150.751 442.2 m
(Science,)
[6.10906 4.78904 2.98911 4.78904 5.38913 4.78904 4.78904 2.74908 ] pdfxs
190.024 442.2 m
(Uni)
[7.90916 5.38913 2.98911 ] pdfxs
206.071 442.2 m
(v) show
211.34 442.2 m
(ersity)
[4.78904 3.58903 4.18912 2.98911 2.98911 5.38913 ] pdfxs
238.275 442.2 m
(of)
[5.38913 3.58903 ] pdfxs
250.133 442.2 m
(Massachusetts,)
[9.70908 4.78904 4.18912 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 4.78904 2.98911 
2.98911 4.18912 2.74908 ] pdfxs
318.38 442.2 m
(Amherst.)
[7.90916 8.50908 5.38913 4.78904 3.58903 4.18912 2.98911 2.74908 ] pdfxs
93.5983 419.76 m
(Ra)
[7.30907 4.78904 ] pdfxs
105.456 419.76 m
(vindran,)
[5.38913 2.98911 5.38913 5.38913 3.58903 4.78904 5.38913 2.74908 ] pdfxs
145.689 419.76 m
(B.)
[7.30907 2.74908 ] pdfxs
159.707 419.76 m
(\(2003\).)
[3.58903 5.38913 5.38913 5.38913 5.38913 3.58903 2.74908 ] pdfxs
199.351 419.76 m
/N24 10.9091 Tf
(An)
[6.70915 5.38913 ] pdfxs
215.409 419.76 m
(Alg)
[6.70915 2.98911 5.38913 ] pdfxs
230.376 419.76 m
(ebr)
[4.78904 5.38913 4.18912 ] pdfxs
244.624 419.76 m
(aic)
[5.38913 2.98911 4.78904 ] pdfxs
261.991 419.76 m
(Appr)
[6.70915 5.38913 5.38913 4.18912 ] pdfxs
283.187 419.76 m
(oac)
[5.38913 5.38913 4.78904 ] pdfxs
298.635 419.76 m
(h) show
308.344 419.76 m
(to)
[2.98911 5.38913 ] pdfxs
320.682 419.76 m
(Abstr)
[6.70915 5.38913 4.18912 2.98911 4.18912 ] pdfxs
344.027 419.76 m
(action)
[5.38913 4.78904 2.98911 2.98911 5.38913 5.38913 ] pdfxs
375.402 419.76 m
(in)
[2.98911 5.38913 ] pdfxs
387.74 419.76 m
(Reinfor)
[6.70915 4.78904 2.98911 5.38913 2.98911 5.38913 4.18912 ] pdfxs
419.824 419.76 m
(cement)
[4.78904 4.78904 7.90916 4.78904 5.38913 2.98911 ] pdfxs
454.798 419.76 m
(Learning)
[6.10906 4.78904 5.38913 4.18912 5.38913 2.98911 5.38913 5.38913 ] pdfxs
494.431 419.76 m
/N22 10.9091 Tf
(.) show
505.34 419.76 m
(PhD)
[6.10906 5.38913 7.90916 ] pdfxs
104.518 406.2 m
(thesis,)
[2.98911 5.38913 4.78904 4.18912 2.98911 4.18912 2.74908 ] pdfxs
134.681 406.2 m
(Department)
[7.90916 4.78904 5.38913 4.78904 3.58903 2.98911 8.50908 4.78904 5.38913 2.98911 ] pdfxs
188.812 406.2 m
(of)
[5.38913 3.58903 ] pdfxs
200.67 406.2 m
(Computer)
[7.30907 5.38913 8.50908 5.38913 5.38913 2.98911 4.78904 3.58903 ] pdfxs
246.903 406.2 m
(Science,)
[6.10906 4.78904 2.98911 4.78904 5.38913 4.78904 4.78904 2.74908 ] pdfxs
286.176 406.2 m
(Uni)
[7.90916 5.38913 2.98911 ] pdfxs
302.223 406.2 m
(v) show
307.492 406.2 m
(ersity)
[4.78904 3.58903 4.18912 2.98911 2.98911 5.38913 ] pdfxs
334.427 406.2 m
(of)
[5.38913 3.58903 ] pdfxs
346.285 406.2 m
(Massachusetts,)
[9.70908 4.78904 4.18912 4.18912 4.78904 4.78904 5.38913 5.38913 4.18912 4.78904 2.98911 
2.98911 4.18912 2.74908 ] pdfxs
414.532 406.2 m
(Amherst.)
[7.90916 8.50908 5.38913 4.78904 3.58903 4.18912 2.98911 2.74908 ] pdfxs
304.198 77.28 m
(11)
[5.38913 5.38913 ] pdfxs
Q
Q
PDFVars/TermAll get exec end end
userdict /pgsave get restore
showpage
%%PageTrailer
%%EndPage
%%Page: 12 12
%%BeginPageSetup
userdict /pgsave save put
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 true PDF begin PDFVars begin AS end end
%%BeginResource: font VLFNIY+NewCenturySchlbk-Bold
ct_CffDict begin
%!FontType1
16 dict begin
/FontInfo 13 dict dup begin
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file PUBLIC (Aladdin Free Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) def
/FullName (Century Schoolbook L Bold) def
/FamilyName (Century Schoolbook L) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /VLFNIY+NewCenturySchlbk-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -166 -372 1000 1005 } def
/XUID [6 5020142 ] def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81BB5A2F58753878D92B1C73E948BB360F467A7D593
2446E52E22935D5D0316634839C917AE2BE363D6AE3760363F748EAAEAD9AB74
D863835F45718D23FB3980D0C645610BF765847F4BC5CB03391BDC9D40A6A460
ABF0D95BB6A176DB5088A1068A0DFDC266C25ADCBEF3E5472E03E0D29BC6801F
A2AEAD77E33C825D7C534A1FD1968A8A4629F8B03CBB835D3CB30B9A48945F21
8290379A65F3D6DD646D5DA447639EA78F5FCF0B43A549EF37F16FCBB77047B5
382B673BBA21CA54D6F5B47DAA57C9F45EF03FD2A37D6CD9B0796F5787261A62
94A19E72C57F8B3C4765196EAF2799ABB85C9B78468CEA903F3745A4BAEA2E2B
55F14C98DD8FFBDF98DC785C7DA0E60EFFD27BB8C539F444AC02BD010C3BFD99
77D364A6DB032F289235A43C8ACED706A190F1F17E9C1AE83D64213892C20525
DAF9C8E3452E29FF52F1B2AC91DC55D07719FC973751724769B343534EB5CA04
3E53B2A49188957FA44767F864049A80E442BC33CDC390B7933A0AB8A53A40DB
ADCE2B40D619159466BB2E986EEF882A61A0D4EF79520ADE45F07A74A79361E5
3D2FFB2643A46E5535EB9FF41237431E5BE5BEFDF3A7307EAF160629134CCF5C
E8A6A2C3B4F210712D70BDCD66AD7A670A84CE9740A2E6A16E0D6793517AFF46
8B87FD46E4E09C91996BF1D35D3F63AF8EA6E184CCCE84727121B95C553DA0D8
F262CE73BEABFEEFA798A8B83E9108E641CB1BF49FC1599FE67705F9084A08DD
6150026F08354F71B06ABFAE8873FF8C79CA9E0C12FFFCEF5DD8A562DEF560DD
95933FD3EB145FE4F2C50760B36335B8C5D49A84F2BB26DB79D0BDE021694980
CAC02F3756DEC61E222E0EB2B12BFD5085EF85C0CD702B980C92CE9C479C34ED
F9C4207390E43DB096835C8C1381A72B10EEEEA6DA4E31F632C7493FDE5C5FB7
8ACDA58BECA057F35D7F2D9629B6BDB37E21EF6DC43E37B0B3BF327AA72689C7
18C4EB47000ADE9A8225E47EB1E66321DE451D83DC29FBB99457ABF7BD034615
5FD6F1CCFD20DE70650D83ABD74105E8B09883EB57C963D5B596974C5FE756A3
52AAB7BFDEE0C9C3C5BB06542E8CE6A75672BC8B390100A147EF4E39B25C7AEC
F1CB17416E7F2C96E0BBB1F5F4D8B8593CBD7EB72346C7125730106DA0FB6698
9DDECDB6759F5935CA96815785FF9C2E54953D0B4D2FED98F680C4433CCE9121
23D72E780E28F6996D3113F03564EB2E3F3DD6C93E6E3AE9F7AC1921F7200931
D37F848BDF0D95DA681D05B61C7BC226B509A98066F7E0777F7A29BA826CE91A
6C5025CA162A4409571E8156F9C3F3CF80B284E37763BBC829398066A585A272
0B5191A4F21DBDAE407F3E060BCF8D46CF9DE0411281D4685B260D50B45CB57A
D120EFA8335ADCA2EBC3D4FF8D867078B0B66A5C95A5691307B61B53464F0F21
239A37F5C7E385BAF3E6AACC4AA70E1B12C4EB051371C2273F571AC0C05031BA
B07F091F39A9F3426A707085BF79C26D891BE2FFA955EBDFE1A321FA959E564A
2F414A6E5A1FB90F9BF3AA782D652E34E02A717E24FDFBEF2417CD667B2491C6
F261425E9C7B1E6ADD95ED3490938792353A3C8308A9E4D9E7B40F145B85B173
9A6CFBABDFF07EB51C8CA0ECD55488F6C0BF04536C3881BFC015872A6BC62203
5D9A945B6F70DDCB97A91B31D89420B48A79516CF3A155360A842C57623C5C61
4E1E0F37A72E0AA17AE828FF546B25416648826844B9BF9BD2FC1573152FC0C8
3BF29CA2E8E3F52CD324354784B51D90A902D54F4806D3293B45DED75747C1E6
4347D7F8893D1A597789A0E4FE2CD8B155CE1022380E94FD2EC86132E46B7DC7
583AE05E8EB71985D2446AE593E58A2B99331C2F5780BB97199F00A1E4E9B6EC
840E1348EFDA681FE08F8B6CFBB1FC4FA7DDF1DDC443338A8D490235BE244AF3
46599C9ACFBB69BC4488920908A5EEC1778012318E25AD39E336790F9E1EE57B
6084374C1C972A52D75D4535A09B8E7DCF67C625C56CC935037E7B52E23B56C3
619A055635FDD867655082E53AF0E1EE58466FE4D65BA843CB18E2B6377B152A
28D173C58EC2E443BEA425FA8F8443597EBDB17ACD0EC47013CBF1E8FC2057DC
A8F546413A716EAC30ADED77CE123735BD6F5F1C315C1D1FA4245CFD6C8699A3
5B8FACB553A42069914C43EF2B6C3D09D8770239573FB1C4FDBA67AA01731CDC
7ED260D4B10F3349716785A60CA1B97EA43920E98808991A81B406ABCC9023DA
443F983DB662F02615ABA41F11F4CFAA1B1714FB361ECFFF2920E0B2C171CFF2
640A0E36ACF003A0E88A07D4B0D38C38E76BFABA1379107BAC459033BBD2EAE6
83C453E2B9D68637E018C271DC06D213F3840ED593108CFCF6870F2837DC58F0
EE83A53DE48B1AD47EA18A5BFCD3BEF29991F5CF277C1174729C07DA24EED091
7DD83C829140C2AC2C25D1F3B6AB15D1E5D073FAAAD84018EE0B9F19FFC8B706
9E3319CDDAB37B83FEFE1EA5E3B8CC9D346CDA64F453E5DF07DBC94D07A76990
42EF0D4360E8F01049EB792280A6D2E23578BC3D08E7745B7B0AED32D78B8E9A
A833E0ED73849BE5FF85C8009720781CAE3EF6C0EE388E3DA1AB165E43B2ACA0
7ED6C8113867CD765775533833B5668D3250CAAD05CB4B55B04F9ABB3CBB5B3F
1D26D06E869E8F2F699DFE6C332BF9D935FBC9CFFEFC1EDDF758A29A5819E389
39A14D38213111AF853D1933FAE756B5237BCA16F2EA18E97A7B319A058601D4
74DA8D73981ED5AA590137F712DAF2E6AEB5A62B98510E274827F03C407B2F3D
F80777A1898A04FD22182FDD08F350F43538C9B6E299B28DDE4896D8F3D3F5B6
9984B6962D24386C8946B18014F59BB49A430A837B8FA7C725AF76CDBEEF21C8
AEBA40E526AA3F2112CBF03699DAF85E9C11B6FBD7969AD5ACFDE33D5E67B196
04442C3778FE5A8AA60AC78321A496774F535EDCA4409F07FE4A002D08EBAB2C
F1E1C4F8CC5878132591BCE5F99AE68A4FB380601A46AB2B7276A1760AE4A86A
D4717F91A872EFED2C0A3112A13EEBC36C328DCFCBCC9FB958FBFE202C6B9A6B
D4E8B532C61EEAB66F4D6D55426F5D8FA04E5610EC709F8712AD2BA0D36A921E
76EDB5949E052BB77AEA93275C8D87296305845B7EB370E0D5F7A5CB7F5C4CE1
FECCD10331EA8DB39E665606CFA32CF89083F1811ED0B7B3AFBCD4230A143D99
2447C4E143EA4E4C97BD43180AAB5BDF26831B9077FFAF9BBA58D53ADD2B9FBE
A097A07ED18C8CF032ADFE413BD25219BD9CCD2078995488F28AA497249441A2
9FA6A70ED5DA13C8301B08DB75636E163A8BFE43ECAEF2A89B101D345071464B
83F9AF104ECCD5415A04C4A5C3E27E08579172DA78D96633A48CB06033A4CEDE
59754F53739F4C6D67DE0E0B8403873D2FF7F4802FF6DDC9B2D42A8DB607479F
258F6EE2D15D8342882699E9E6CF788C3733EB7BF932C0FC85DAD85F02FC5ED8
721CAB0DF01DD0CBDBDABC3936609994019600BDC1A22867933E24A08CC40211
145F200AAC4E7B38C9A39E6776C5174B76A90B28579D9AF82447A5EB1C40669F
E20E9A56149FE9258134A59042D2D6ED60FAA04C1A2D94E697FC7C7A716C83AC
F76454847937979D7AEA6FFD55522AE9A0025F488E968BE7C444DBE3E171BA5E
F0FDD1255BDD57D0BB64CED46C624028BF9FC5EAA7BAD87F72768A0DA539582E
1B793509AC142054882E99BB99C8D8A8552DB751DC7B28F2A12DD9AA93804ED9
BBDFEF745B0984675D5F5E7BD747754C6D0FA4E6EED0B236D36FA32B8CE9E2B1
F44A555BDA37D151FD674249C0D47AB349879B8B5D7A4166E8C45FB65560649D
8C617C785F0EF0A2E32EA5152CC93CFCC585DEABE3BAB6B447CDC3F8C71911F2
8F11B43AF1979B03768E2CDFDFB3ED76B88A393BBF1AACF8F46BC35AA5C93329
6577260740A57D00EAE81D167F6873148F05FF5DEA7FF0D03802BB187C1CE1C0
AF3C7C84607820E97916AF9A7FD9EAC7BA55519356C5CF8028B32806C47859DB
FCDF676B2BAF584E2E92C1AE250F8A0C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/VLFNIY+NewCenturySchlbk-Bold findfont /Encoding get
dup 0 /.notdef put
pop
end
/VLFNIY+NewCenturySchlbk-Bold findfont /Encoding get
dup 0 /.notdef put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 71 /G put
dup 101 /e put
dup 103 /g put
dup 110 /n put
dup 116 /t put
pop
%%EndResource
[/N353/VLFNIY+NewCenturySchlbk-Bold -1 TZG
%%BeginResource: font A
10 dict begin
T3Defs
/FontType 3 def
/FontName /N26 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-64 
73 
157 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 36 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 0 46 99 setcachedevice
46 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 99 def
/ImageMatrix [46 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF80FFFFCFFFF8003FFFCFFFF0000FFFCFFFE03E03FFCFFFE1FF03FFCFFFC
3FF81FFCFFFFFFF81FFCFFFFFFF80FFCFFFFFFFE0FFCFFFFFFFE0FFCFFFFFFFE
0FFCFFFFFFFE07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF007FCFFFFFFE007FC
FFFFFFE00FFCFFFFFF800FFCFFFFF8000FFCFFFF80000FFCFFFC00001FFCFFE0
00003FFCFFE00000FFFCFF800003FFFCFE00003FFFFCF800003FFFFCF00001FF
FFFCE0000FFFFFFCE0007FFFFFFCE007FFFFFFFCC00FFFFFFFFCC00FFFFFFFFC
801FFFFFFFFC803FFFFFFFFC80FFFFFFFFFC80FFFFFFFFFC81FFFFFFFFFC81FF
FFFFFFFC81FFFFFFFFFC81FFFFFFFFFC81FFFFFFFFFC83FFFFFFFFFC83FFFFFF
FFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC83FFFFFFFFFC81FFFFFFFFFC
81FFFFFFFFFC81FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC1FFFFFFFFFCC0FF
FFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE0FFFFFFFFFCE03FFFFFFFFCF03FFFFF
FFFCF03FFFFFFFFCF01FFFFFFFFCF01FFFFFFFFCF81FFFFFFFFCF80FFFFFFFFC
FE0FFFFFFFFCFE0FFFFFFFFCFF07FFFFFFFCFF03FFFFFFFCFF83FFFFFFFCFF80
FFFFFFFCFFC0FFFFFFFCFFE0FFFFFFFCFFE07FFFFFFCFFE03FFFFFFCFFF81FFF
FFFCFFFC1FFFFFFCFFFE1FFFFFFCFFFE0FFFFFFCFFFF03FFFFFCFFFF01FFFFFC
FFFF80FFFFFCFFFFE07FFFFCFFFFF07FFFFCFFFFFC3FFFFCFFFFFE07001CFFFF
FE000000FFFFFF800000FFFFFFE00000FFFFFFF00000FFFFFFE1000CFFFFFFE1
FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFCFFFFFFE1FFFC
FFFFFFE0FFFCFFFFFFE0FFFCFFFFFFF0FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 35 73 62 setcachedevice
73 0 0 27 0 35 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 27 def
/ImageMatrix [73 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000008080000000000000000000800000000000000000008000
0000000000000000C0000000000000000080FFFFFFFFFFFFFFFFFF80FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFF
FFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFF
FF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80
FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFF
FFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF80C0000000
0000000000808000000000000000000080000000000000000000800000000000
00000000C0000000000000000080>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE00FFFFFFC000FFFFFF0000FFFFFF007EFFFFFC01FEFFFFF00FFEFFFF
C00FFEFFFFC01FFEFFFF803FFEFFFF807FFEFFFF807FFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFC01FF
FEFFFC01FFFEFFFC03FFFEFFF803FFFEFFF003FFFEFFF007FFFEFFC00FFFFEFF
C01FFFFEFE00FFFFFE8003FFFFFE0003FFFFFE0003FFFFFE8000FFFFFEFE00FF
FFFEFFC01FFFFEFFF00FFFFEFFF007FFFEFFF003FFFEFFF803FFFEFFFC03FFFE
FFFC01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF007FFEFFFF807FFEFFFF807FFEFFFFC03FFEFFFF
C01FFEFFFFC00FFEFFFFF001FEFFFFFC01FEFFFFFF007EFFFFFFC000FFFFFFC0
00FFFFFFFE00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
130 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 -1 57 79 setcachedevice
57 0 0 80 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 57 def
/Height 80 def
/ImageMatrix [57 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC001FFFFFFF80FFE00001FFFFFF80FFE00001FFFFFF80FF0000003FFFFF80
FE00000007FFFF80FC00000001FFFF80F800000000FFFF80F00001FE001FFF80
F0000FFFE01FFF80F0007FFFF80FFF80C000FFFFFC07FF80C000FFFFFC03FF80
8001FFFFFF01FF808003FFFFFF807F808003FFFFFF807F808007FFFFFFC03F80
8007FFFFFFE03F800007FFFFFFE01F80001FFFFFFFF00F80001FFFFFFFFC0F80
001FFFFFFFFF0F80001FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80003FFFFFFFFFFF80
803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80803FFFFFFFFFFF80
801FFFFFFFFFFF80801FFFFFFFFFFF80C01FFFFFFFFFFF80C01FFFFFFFFFFF80
C01FFFFFFFFFFF80C01FFFFFFFFFFF80C007FFFFFFFFFF80F007FFFFFFFFFF80
F007FFFFFFFFFF80F007FFFFFFFFFF80F807FFFFFFFFFF80F803FFFFFFFFFF80
F803FFFFFFFFFF80FC03FFFFFFFFFF80FC03FFFFFFFFFF80FE01FFFFFFFFFF80
FE01FFFFFF87FF80FE00FFFFFF81FF80FF00FFFFFF807F80FF007FFFFFC03F80
FFC07FFFFFC03F80FFC07FFFFFE01F80FFE01FFFFFE01F80FFE01FFFFFE00F80
FFF00FFFFFF00F80FFF007FFFFF00780FFF807FFFFFC0780FFFC07FFFFFC0780
FFFF03FFFFFE0180FFFF01FFFFFE0180FFFF807FFFFE0080FFFFC03FFFFE0080
FFFFE03FFFFE0080FFFFF01FFFFE0000FFFFFC07FFFE0000FFFFFC00FFFC0000
FFFFFF0007E00000FFFFFF8000000000FFFFFFF000000000FFFFFFFC00000000
FFFFFFFF00000080FFFFFFFF00000080FFFFFFFFF0000180FFFFFFFFFF800F80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
57 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
48 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 40 28 93 setcachedevice
28 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 28 def
/Height 53 def
/ImageMatrix [28 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FFC01FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF0
FFE07FF0FFE07FF0FFE07FF0FFE07FF0FFE07FF000E07FF000007FF000007FF0
FE007FF0FFE07FF0FFE07FF0FFF07FF0FFFC7FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
28 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 64 14 98 setcachedevice
14 0 0 34 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 14 def
/Height 34 def
/ImageMatrix [14 0 0 -34 0 34]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E3FCE1FCE1FCF1FCF0FCF87CF83CFC3CFE0CFE0CFF8CFF84FF84FFC4FFC4FFC4
FFC0FFE0FFE0FFE0FFE0FFE0F06080000000000000000000000400040004000C
800CF07C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
14 34 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a12 {{
0 0 0 40 35 93 setcachedevice
35 0 0 53 0 40 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 53 def
/ImageMatrix [35 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000E000000000E000000000E0C000000060E000000060F000000060F87F
FFF860FC1FFFFC60FC0FFFFC60FF07FFFC00FF83FFFF00FFC3FFFF00FFC1FFFF
00FFE07FFFE0FFE03FFFE0FFF01FFFE0FFFC07FFE0FFFE07FFE0FFFF01FFE0FF
FF80FFE0FFFF807FE0FFFFC03FE0FFFFF01FE0FFFFF81FE0FFFFF807E0FFFFFC
03E0FFFFFC01E0FFFFFE00E0FFFFFE00E0FFFFFF00E0FFFFFF0060FFFFFFC060
FFFFFFC000FFFFFFC000C0FFFFC000C0FFFFC000007FFFE000007FFFE000007F
FFE000007FFFC000007FFFC00000FFFFC00003FFFFC060C7FFFFC060C3FFFF00
60C1FFFF00E0E0FFFE00E0F0FFFE01E0F87FFC03E0FC0FF01FE0FC00001FE0FF
80007FE0FFE007FFE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 64 13 76 setcachedevice
13 0 0 12 0 64 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 12 def
/ImageMatrix [13 0 0 -12 0 12]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 12 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a17 {{
0 0 0 57 45 95 setcachedevice
45 0 0 38 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 38 def
/ImageMatrix [45 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFFE03F8F87FFFFE03F8F03FFFF801F8F00FFFF07038F00FFFF07038F00F
FFE07E18F80FFFE07E08F80FFFE07F08F807FFE07F88F807FFF03F80F807FFF0
3F80FC07FFF00FC0FC03FFF00FC0FC03FFF80FC0FC03FFF80FE0FE03FFF807F8
FE03FFF807F8FE01FFFC07F8FE01FFFC03F8FE01FFFC03F8FF81FFFE03F8FF81
FFFE03F8FF80FFFE03F83F80FFFE01F81F80FFFE01F81FC0FFFF81F81FC03FFF
81F80FC03FFF81F80FC01FFF81F88FC00FFF81F883E00FFF81F883E00FFF81F8
E3E087FF81F8E1E0C0FF83F8E1C0C03E03F8F000F80003F8F003FC000FF8FC07
FF807FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a18 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a19 {{
0 0 0 -6 39 104 setcachedevice
39 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 110 def
/ImageMatrix [39 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00FFFFFFFE0007FFFFFE0001FFFFFEFC01FFFFFEFF007FFFFEFFE01FFFFEFFE0
07FFFEFFF007FFFEFFF803FFFEFFFC03FFFEFFFC03FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF007F
FEFFFF007FFEFFFF807FFEFFFF803FFEFFFF801FFEFFFFC01FFEFFFFE007FEFF
FFF007FEFFFFFE00FEFFFFFF8002FFFFFF8000FFFFFF8000FFFFFE0002FFFFFE
00FEFFFFF007FEFFFFE01FFEFFFFC01FFEFFFF801FFEFFFF803FFEFFFF807FFE
FFFF007FFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF
01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FF
FEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFF
FF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01
FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFEFFFF01FFFE
FFFF01FFFEFFFF01FFFEFFFC01FFFEFFFC03FFFEFFFC03FFFEFFF807FFFEFFF0
07FFFEFFE007FFFEFF001FFFFEFF007FFFFEFC01FFFFFE0007FFFFFE0007FFFF
FE00FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -48 64 2 setcachedevice
64 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 64 def
/Height 50 def
/ImageMatrix [64 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF80FFFFF00FFFFFFF80FFFFF00FFFFFFC000FFF8003FFFFF00003FE00007FFF
E00000FC00003FFFE000007800001FFF8000003800000FFF8000003800000FFF
800F001001E003FF807FE0000FFC01FF007FE0000FFC01FF00FFFC003FFF00FF
01FFFE003FFF80FF01FFFF007FFF80FF03FFFF807FFFE07F03FFFF80FFFFF07F
03FFFF80FFFFF03F03FFFFE07FFFF83F03FFFFE07FFFF83F03FFFFE07FFFFC3F
03FFFFE03FFFFC0F03FFFFE03FFFFE0F03FFFFE03FFFFE0F83FFFFF00FFFFE07
83FFFFF00FFFFE0783FFFFF00FFFFF8783FFFFF00FFFFF8781FFFFF007FFFF83
81FFFFF007FFFF8381FFFFF807FFFF83E1FFFFF807FFFFC3E1FFFFF807FFFFC3
E0FFFFFE0FFFFFC3F0FFFFFFFFFFFFC1F07FFFFFFFFFFFC1F07FFFFFFFFFFF81
F03FFFFFFFFFFF81F83FFFFFFFFFFF81F83FFFFFFFFFFF81FC0FFFFFFFFFFE00
FC07FFFFFFFFFC00FC07FFFFFFFFF800FE03FFFFFFFFF800FE03FFFFFFFFF800
FF81FFFFFFFFF800FF80FFFFFFFFF800FF80FFFFFFFFF800FFC0FFFFFFFFF801
FFE0FFFFFFFFFC01FFF3FFFFFFFFFF87>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
64 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
0 0 0 -37 22 19 setcachedevice
22 0 0 56 0 -37 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 22 def
/Height 56 def
/ImageMatrix [22 0 0 -56 0 56]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF81FCFF81FCFC00FCF8381CF8381CF03F0CF03F04F03F84F03FC4F80FC0F80F
C0F807E0F807E0FC07E0FC07F8FC03FCFC03FCFE03FCFE01FCFE01FCFF81FCFF
80FCFF80FC3FC0FC1FC03C1FC03C1FE03C0FE03C0FE01C83E01C83F01CE3F01C
E1F01CF0F01CF0701CF8003CFC00FCFF83FCFFFFFCFFFFFCFFFFFCFFFFFCFFFF
FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFCFFFF0CFFFF0CFFFE04FFF800FFF800FF
F800FFFE04FFFF0C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
22 56 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
70 0 0 0 0 0 setcachedevice
} exec } bind def
/a24 {{
0 0 0 -77 70 0 setcachedevice
70 0 0 77 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 70 def
/Height 77 def
/ImageMatrix [70 0 0 -77 0 77]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F000007FFFF800003CF000007FFFF800003CF000007FFFF800003CE000007FFF
F800001CE000007FFFF800001CE000007FFFF800001CE000007FFFF800001CE0
FFF87FFFF87FFC1CE0FFF87FFFF87FFC1CC1FFF0FFFFFC3FFE0CC3FFF0FFFFFC
3FFF0CC3FFF0FFFFFC3FFF0CC3FFF0FFFFFC3FFF0CC3FFE0FFFFFC0FFF0CC3FF
E0FFFFFC0FFF0C83FF81FFFFFE07FF0087FF01FFFFFE03FF8087FF01FFFFFE03
FF80FFFF01FFFFFE03FFFCFFFE03FFFFFF81FFFCFFFE03FFFFFF81FFFCFFFC03
FFFFFF80FFFCFFF803FFFFFF803FFCFFF80FFFFFFFC03FFCFFF80FFFFFFFC03F
FCFFE00FFFFFFFC01FFCFFC00FFFFFFFC00FFCFFC01FFFFFFFE00FFCFF801FFF
FFFFE007FCFF801FFFFFFFE007FCFF003FFFFFFFF003FCFF003FFFFFFFF003FC
FE003FFFFFFFF000FCFE003FFFFFFFF000FCF8007FFFFFFFF8007CF8007FFFFF
FFF8007CF8007FFFFFFFF8007CF000FFFFFFFFFE003CF000FFFFFFFFFE003CE0
00FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFFFE001CE000FFFFFFFF
FE001CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003
FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF
000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FFFFFFFFFF000CC003FF
FFFFFFFF000CC003FFFFFFFFFF000CE000FFFFFFFFFE001CE000FFFFFFFFFE00
1CE000FFFFFFFFFE001CE000FFFFFFFFFE001CF000FFFFFFFFFE003CF0007FFF
FFFFF8003CF8007FFFFFFFF8007CF8003FFFFFFFF0007CF8003FFFFFFFF0007C
FE001FFFFFFFE000FCFF001FFFFFFFE003FCFF801FFFFFFFE007FCFFC00FFFFF
FFC00FFCFFC003FFFFFF800FFCFFE001FFFFFE001FFCFFFC007FFFF800FFFCFF
FE007FFFF801FFFCFFFF803FFFF007FFFCFFFFF003FF003FFFFCFFFFF0000000
3FFFFCFFFFFE000001FFFFFCFFFFFFF0003FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
70 77 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a25 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a26 {{
51 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F00000000000000040E00000000000000000E00000000000000000E000000000
00000000F00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFF
C00000000040FFFFFFC00000000040FFFFFC000000000000FFFFC00000000000
00FFFF80000000000000FFFE00000000000040FFFC001FFFFFFFFFC0FFFC00FF
FFFFFFFFC0FFE00FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FF801FFFFFFFFFFFC0
FF007FFFFFFFFFFFC0FC01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC07FFFFFF
FFFFFFC0F80FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0E0
1FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FF
FFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFF
FFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFF
FFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFF
C003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFF
FFFFFFFFC001FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0
C0FFFFFFFFFFFFFFC0C0FFFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07FFFFFFF
FFFFFFC0E01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F8
0FFFFFFFFFFFFFC0FC07FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC01FFFFFFFF
FFFFC0FF007FFFFFFFFFFFC0FF807FFFFFFFFFFFC0FFC01FFFFFFFFFFFC0FFE0
0FFFFFFFFFFFC0FFE000FFFFFFFFFFC0FFFC001FFFFFFFFFC0FFFE0000000000
0040FFFF80000000000040FFFFC0000000000000FFFFFC000000000000FFFFFC
000000000000FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 -48 50 2 setcachedevice
50 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 50 def
/ImageMatrix [50 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FC0FFE00FFFE03FC0FF8001FF800FC0FC07C07F0387C0F807C03C
0381C0F00FF81C07C1C0E00FFE0007C0C0E01FFF0007F0C0E01FFFC007F0C0C0
7FFFE007F040C07FFFE007F040C07FFFE007F840007FFFF007F800007FFFF807
F800007FFFF803FC00007FFFFC03FC00007FFFFC03FC00001FFFFC03FC00001F
FFFC01FC00001FFFFC01FFC0001FFFFF01FFC0001FFFFF01FFC0000FFFFF01FF
C0000FFFFF007FC0C00FFFFF007FC0C00FFFFF807FC0C00FFFFF807FC0C007FF
FF807FC0C007FFFF803FC0E007FFFF803FC0E007FFFFC03FC0E007FFFFC03FC0
F003FFFFC03FC0F003FFFFC01FC0F003FFFFC01FC0F801FFFFE01FC0FC01FFFF
E01FC0FC01FFFFE01FC0FF007FFFE00FC0FF803FFFE00FC0FF803FFFC00FC0FF
C01FFFC00FC0FFE00FFFC007C0FFF00FFFC007C0FFFC07FF8407C0FFFE01FF0C
07C0FFFE007C0C07C0FFFF80001F0FC0FFFFF0007FFFC0FFFFFE01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
0 0 0 -76 42 2 setcachedevice
42 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 78 def
/ImageMatrix [42 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC01FFFFFC0FFC01FFFFFC0FF0001FFFFC0FE0F807FFFC0F80F803FFFC0F01F
F007FFC0E03FF803FFC0E03FFC03FFC0E0FFFE01FFC0C0FFFF80FFC0C0FFFF80
3FC0C0FFFF801FC080FFFFC00FC081FFFFC00FC081FFFFE00FC080FFFFE007C0
80FFFFE007C080FFFFF003C080FFFFF003C080FFFFF003C080FFFFF800C080FF
FFF800C0803FFFF800C0803FFFF80040C03FFFF80040C03FFFFE0040C03FFFFE
0040C01FFFFE0040C01FFFFE0000C01FFFFE0000E01FFFFF0000E01FFFFF0000
E00FFFFF0000E00FFFFF0000E00FFFFF0000F00FFFFF0000F007FFFF8040F007
FFFF8040F003FFFF8040F803FFFF0040F800FFFF0040F8007FFF00C0F8003FFF
00C0F8003FFF03C0FE001FFE03C0FE030FF807C0FE0001F007C0FE0080000FC0
FE00F0003FC0FF00FC01FFC0FF00FFFFFFC0FF007FFFFFC0FF007FFFFFC0FF00
7FFFFFC0FF807FFFFFC0FF807FFFFFC0FF803FFFFFC0FF803FFFFFC0FF803FFF
FFC0FFC03FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFC01FFFFFC0FFE01FFFFFC0
FFE01FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFE00FFFFFC0FFF80FFFFFC0FFF8
0FFFFFC0FFF803FFFFC0FFF803FFFFC0F80003FFFFC0F80003FFFFC0F80003FF
FFC0F80001FFFFC0F80001FFFFC0FFFC01FFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
0 0 0 -48 43 2 setcachedevice
43 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 43 def
/Height 50 def
/ImageMatrix [43 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC007FFFE0FFFC007FFFE0FFC00003FFE0FF81FE00FFE0FC01FE001FE0F803
FFF007E0F007FFFC03E0F00FFFFF83E0E00FFFFFC1E0E01FFFFFE060C01FFFFF
E020C01FFFFFF000C01FFFFFFC00C01FFFFFFE00C07FFFFFFF00001FFFFFFFE0
001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001FFFFFFFE0001F
FFFFFFE0000FFFFFFFE0000FFFFFFFE0C00FFFFFFFE0C00FFFFFFFE0C00FFFFF
FFE0C007FFFFFFE0C007FFFFFFE0E007FFFFFFE0E007FFFFFFE0E007FFFFFFE0
F003FFFFFFE0F803FFFFFFE0F801FFFF8060F801FFFF8020FC007FFF8020FF00
7FFF8020FF007FFF8000FF803FFF8000FF801FFF8000FFC00FFF8000FFE007FF
E000FFF007FFFC00FFFE01FFFC20FFFF00FFF060FFFF001FC060FFFFC00001E0
FFFFF80003E0FFFFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
43 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FFFE03FFCFFE00FFFE03FFCFF8001FF800FFCFC07C07F0387FCF807C03C
0381FCF00FF81C07C1FCE00FFE0007C0FCE01FFF0007F0FCE01FFFC007F0FCC0
7FFFE007F07CC07FFFE007F07CC07FFFE007F87C007FFFF003F83C007FFFF803
F83C007FFFF803FC3C007FFFFC03FC3C007FFFFC03FC3C001FFFFC01FC3C001F
FFFC01FC3C001FFFFC01FFFC001FFFFF01FFFC001FFFFF01FFFC000FFFFF007F
FC000FFFFF007FFCC00FFFFF007FFCC00FFFFF807FFCC00FFFFF807FFCC007FF
FF803FFCC007FFFF803FFCE007FFFF803FFCE007FFFFC03FFCE007FFFFC03FFC
F003FFFFC01FFCF003FFFFC01FFCF003FFFFC01FFCF801FFFFE01FFCFC01FFFF
E00FFCFC01FFFFE00FFCFF007FFFE00FFCFF803FFFE00FFCFF803FFFC00FFCFF
C01FFFC007FCFFE00FFFC007FCFFF00FFFC007FCFFFC07FF8407FCFFFE01FF0C
07FCFFFE007C0C01FCFFFF80001C01FCFFFFF0007C01FCFFFFFE01FE01FCFFFF
FFFFFE01FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFE00FCFFFFFFFFFF00
FCFFFFFFFFFF00FCFFFFFFFFFF007CFFFFFFFFFF007CFFFFFFFFFF007CFFFFFF
FFFF807CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFF803CFFFFFFFFFFC03C
FFFFFFFFFFC03CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFFFFC01CFFFFFFFF
FFF01CFFFFFFFFFFF01CFFFFFFFFFFF004FFFFFFFFFFF004FFFFFFFFF00004FF
FFFFFFF00004FFFFFFFFF00004FFFFFFFFF00000FFFFFFFFF00000FFFFFFFFFF
F800>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/A/N26 -1 TZ
%%BeginResource: font C
10 dict begin
T3Defs
/FontType 3 def
/FontName /N101 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-96 
97 
192 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 105 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 38 47 102 setcachedevice
47 0 0 64 0 38 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 64 def
/ImageMatrix [47 0 0 -64 0 64]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF000FFFFFFEE00000FFFFFEE00000FFFFFE0000003FFFFEC000001FFFFEC000
0003FFFEE001FF01FFFEF81FFFC0FFFEFFFFFFE0FFFEFFFFFFF07FFEFFFFFFF0
1FFEFFFFFFF01FFEFFFFFFF80FFEFFC01FF80FFEFFC01FFC0FFEFC0000FC07FE
F800003C07FEF000001C03FEE000000303FEE0003F0103FEE003FFE183FEC007
FFF001FEC00FFFF801FEC00FFFF8007E001FFFFC007E001FFFFF007E007FFFFF
807E007FFFFF807E007FFFFFC03E007FFFFFC03E00FFFFFFC03E00FFFFFFE01E
00FFFFFFE01E00FFFFFFE01E00FFFFFFF01E00FFFFFFF01EC0FFFFFFFC0EC0FF
FFFFFE0EC0FFFFFFFFCEC07FFFFFFFFEE07FFFFFFFFEE07FFFFFFFFEE07FFFFF
FFFEF01FFFFFFFFEF01FFFFFFFFEF81FFFFFFFFEF80FFFFFC3FEF80FFFFFC1FE
FC07FFFFC07EFC07FFFFE03EFF07FFFFF03EFF83FFFFFC1EFFC1FFFFFC0EFFC0
7FFFFC0EFFE03FFFFE06FFF01FFFFE06FFFE1FFFFE06FFFF07FFFC00FFFFC07F
E000FFFFC0000000FFFFF0000000FFFFFC000000FFFFFFC00006FFFFFFFC001E
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 64 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
68 0 0 0 0 0 setcachedevice
} exec } bind def
/a2 {{
0 0 0 16 66 81 setcachedevice
66 0 0 65 0 16 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC00000000040FFFFFC000000000000FFFFC0000000000000FFFF800000
00000000FFFF80000000000040FFFE001FFFFFFFFFC0FFFC00FFFFFFFFFFC0FF
E000FFFFFFFFFFC0FFC00FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FF807FFFFFFF
FFFFC0FF01FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0F807
FFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F01FFFFFFFFFFF
FFC0E07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0C0FFFF
FFFFFFFFFFC0C0FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFF
C001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC003FFFFFF
FFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC0
03FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFFFFFFFFC003FFFFFFFF
FFFFFFC003FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001
FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C1FFFFFFFFFFFFFFC0C0FFFFFFFFFF
FFFFC0C0FFFFFFFFFFFFFFC0C07FFFFFFFFFFFFFC0E07FFFFFFFFFFFFFC0E07F
FFFFFFFFFFFFC0F01FFFFFFFFFFFFFC0F00FFFFFFFFFFFFFC0F00FFFFFFFFFFF
FFC0F807FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FC03FFFFFFFFFFFFC0FF01FF
FFFFFFFFFFC0FF807FFFFFFFFFFFC0FF801FFFFFFFFFFFC0FFC00FFFFFFFFFFF
C0FFE000FFFFFFFFFFC0FFFC00FFFFFFFFFFC0FFFE001FFFFFFFFFC0FFFF8000
0000000040FFFF80000000000000FFFFC0000000000000FFFFFC000000000000
FFFFFFC00000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
109 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 39 4 setcachedevice
39 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 4 def
/ImageMatrix [39 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a6 {{
0 0 0 46 66 51 setcachedevice
66 0 0 5 0 46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 5 def
/ImageMatrix [66 0 0 -5 0 5]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 5 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a7 {{
111 0 0 0 0 0 setcachedevice
} exec } bind def
/a8 {{
0 0 0 -77 69 3 setcachedevice
69 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<07FFFFFFFC003FFFF801FFFFFF800003FFF801FFFFFF800003FFF8C07FFFF000
0000FFF8E01FFE000000001FF8E00FC0000000000FF8F000000000000003F8F8
00000000000001F8FC0000000000FF01F8FC000000001FFF0078FF00000003FF
FF8038FF00000003FFFF8018FF0000007FFFFF8018FF800007FFFFFFC008FFC0
1FFFFFFFFFC008FFC01FFFFFFFFFF008FFE00FFFFFFFFFFC00FFE007FFFFFFFF
FC00FFE007FFFFFFFFFF00FFE001FFFFFFFFFFF8FFF001FFFFFFFFFFF8FFF001
FFFFFFFFFFF8FFFC01FFFFFFFFFFF8FFFC00FFFFFFFFFFF8FFFC00FFFFFFFFFF
F8FFFC007FFFFFFFFFF8FFFC007FFFFFFFFFF8FFFE007FFFFFFFFFF8FFFE007F
FFFFFFFFF8FFFE007FFFFFFFFFF8FFFE003FFFFFFFFFF8FFFE003FFFFFFFFFF8
FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF003FFFFFFFFFF8FFFF001FFF
FFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FFFF801FFFFFFFFFF8FF
FF8007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFFFFFFF8FFFFC007FFFF
FFFFF8FFFFC003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFFF003FFFFFFFFF8FFFF
F003FFFFFFFFF8FFFFF001FFFFFFFFF8FFFFF801FFFFFFFFF8FFFFF801FFFFFF
FFF8FFFFF801FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC00FFFFFFFFF8FFFFFC
00FFFFFFFFF8FFFFFC007FFFFFFFF8FFFFFE007FFFFFFFF8FFFFFE007FFFFFFF
F8FFFFFF007FFFFFFFF8FFFFFF001FFFFFFFF8FFFFFF001FFFF81FF8FFFFFFC0
0FFFF80FF8FFFFFFC00FFFF803F8FFFFFFE00FFFF803F8FFFFFFF007FFF801F8
FFFFFFF007FFF80078FFFFFFF003FFF80078FFFFFFF801FFF80078FFFFFFFC01
FFF00078FFFFFFFF01FFF00078FFFFFFFF807FF00078FFFFFFFFC03FE00078FF
FFFFFFC01F000078FFFFFFFFF000000078FFFFFFFFFC00000078FFFFFFFFFE00
0001F8FFFFFFFFFF800001F8FFFFFFFFFFF00003F8FFFFFFFFFFF00003F8FFFF
FFFFFFFC0007F8FFFFFFFFFFFFE01FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a9 {{
0 0 0 -47 13 0 setcachedevice
13 0 0 47 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 13 def
/Height 47 def
/ImageMatrix [13 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F0788008800800000000000000000000000080088008F078FFF8FFF8FFF8FFF8
FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8FFF8
FFF8FFF8F078F0788008800800000000000000000000800880088008F078>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
13 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
/a11 {{
0 0 0 19 97 78 setcachedevice
97 0 0 59 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 97 def
/Height 59 def
/ImageMatrix [97 0 0 -59 0 59]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFF
FFFFF81FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFFF80FFFFF
80FFFFFFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFF
FFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFF07FF
FF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFF
FFFFFFFFFF01FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81
FFFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFF
FFFFFFFFFFFFE03FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFF
F01FFF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFFFFFFFFFFFE07FF80FFFF
FFFFFFFFFFFFFFFE01FF80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFF
FFFF803F80FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFFFFFFFFFFF00780C0
0000000000000000000001808000000000000000000000000080000000000000
00000000000080000000000000000000000000C0000000000000000000000180
FFFFFFFFFFFFFFFFFFFFF00780FFFFFFFFFFFFFFFFFFFFC03F80FFFFFFFFFFFF
FFFFFFFF803F80FFFFFFFFFFFFFFFFFFFE007F80FFFFFFFFFFFFFFFFFFFE01FF
80FFFFFFFFFFFFFFFFFFFE07FF80FFFFFFFFFFFFFFFFFFFC0FFF80FFFFFFFFFF
FFFFFFFFF01FFF80FFFFFFFFFFFFFFFFFFE01FFF80FFFFFFFFFFFFFFFFFFE03F
FF80FFFFFFFFFFFFFFFFFFC03FFF80FFFFFFFFFFFFFFFFFFC07FFF80FFFFFFFF
FFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF81FFFF80FFFFFFFFFFFFFFFFFF01
FFFF80FFFFFFFFFFFFFFFFFF03FFFF80FFFFFFFFFFFFFFFFFF07FFFF80FFFFFF
FFFFFFFFFFFF07FFFF80FFFFFFFFFFFFFFFFFC07FFFF80FFFFFFFFFFFFFFFFFC
0FFFFF80FFFFFFFFFFFFFFFFFC0FFFFF80FFFFFFFFFFFFFFFFF80FFFFF80FFFF
FFFFFFFFFFFFF80FFFFF80FFFFFFFFFFFFFFFFF81FFFFF80FFFFFFFFFFFFFFFF
F81FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80FFFFFFFFFFFFFFFFFC7FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
97 59 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
116 0 0 0 0 0 setcachedevice
} exec } bind def
/a13 {{
0 0 0 1 34 76 setcachedevice
34 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 34 def
/Height 75 def
/ImageMatrix [34 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFC0007FC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF0
03FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FF
C0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FF
F003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003
FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0
FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFF003FFC0FFC0007FC00000
0000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
34 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a14 {{
143 0 0 0 0 0 setcachedevice
} exec } bind def
/a15 {{
0 0 0 1 77 79 setcachedevice
77 0 0 78 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 78 def
/ImageMatrix [77 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF007F8FFFFFFFFFFFFFF8000F8FFFFFFFFFFFFFF8000F80000
0000FFFFFC00787800000000FFFFF0007C3800000000FFFFE0007C1800000000
FFFFC001FE18FF8000FFFFFFC003FE00FFE007FFFFFFC003FE00FFE007FFFFFF
0003FF00FFE007FFFFFF0007FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007
FF00FFE007FFFFFE0007FF00FFE007FFFFFE0007FFD8FFE007FFFFFE000FFFF8
FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE007FFFFFE000FFFF8FFE0
07FFFFFE000FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FF
FFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE001FFFF8FFE007FFFFFE
007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE007FFFF8FFE007FFFFFE00FF
FFF8FFE007FFFFFC00FFFFF8FFE007FFFFFC00FFFFF8FFE007FFFFF801FFFFF8
FFE007FFFFF801FFFFF8FFE007FFFFF803FFFFF8FFE007FFFFF007FFFFF8FFE0
07FFFFC007FFFFF8FFE007FFFF801FFFFFF8FFE007FFFC007FFFFFF8FFE007FF
FC01FFFFFFF8FFE00000000FFFFFFFF8FFE000000001FFFFFFF8FFE000000000
3FFFFFF8FFE007FFFE0007FFFFF8FFE007FFFFC001FFFFF8FFE007FFFFF801FF
FFF8FFE007FFFFFE00FFFFF8FFE007FFFFFF001FFFF8FFE007FFFFFF000FFFF8
FFE007FFFFFF000FFFF8FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE0
07FFFFFFC003FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE001FFF8FFE007FF
FFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFF
E001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE001
FFF8FFE007FFFFFFE001FFF8FFE007FFFFFFE003FFF8FFE007FFFFFFE003FFF8
FFE007FFFFFFC007FFF8FFE007FFFFFFC007FFF8FFE007FFFFFF0007FFF8FFE0
07FFFFFF000FFFF8FFE007FFFFFF001FFFF8FFE007FFFFFE007FFFF8FFE007FF
FFF800FFFFF8FFE007FFFFC000FFFFF8FF8001FFFE0003FFFFF8000000000000
07FFFFF80000000000003FFFFFF8000000000001FFFFFFF800000000003FFFFF
FFF800000000003FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a16 {{
0 0 0 -47 59 2 setcachedevice
59 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 59 def
/Height 49 def
/ImageMatrix [59 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC3FFFFF07FFFE0FFC3FFFFF07FFFE0FF01FFFFE01FFFE0FF007FFFE01FFFE0
FF007FFFC01FFFE0FF007FFFC01FFFE0FF803FFFC01FFFE0FF803FFFC01FFFE0
FFC03FFFC03FFFE0FFC03FFF803FFFE0FFC01FFF803FFFE0FFE01FFF803FFFE0
FFE01FFF807FFFE0FFF01FFF807FFFE0FFF01FFF807FFFE0FFFC0FFF807FFFE0
FFFC0FFF807FFFE0FFFC0FFF807FFFE0FFFC07FF81FFFFE0FFFE07FF81FFFFE0
FFFE07FF81FFFFE0FFFF07FFC1FFFFE0FFFF07FFC1FFFFE0FFFF01FFC1FFFFE0
FFFF01FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0FFFF81FFC1FFFFE0
FFFF80FFC1FFFFE0FFFFC0FFC1FFFFE0FFFFC0FFE1FFFFE0FFFFC0FFE1FFFFE0
FFFFF0FFE07FFFE007FFF07FE07FFFE003FFF07FE07FFFE003FFF07FE07FFFE0
01FFF87FF07FFFE0C1FFF87FF07FFFE0E0FFF83FF07FFFE0E07FFC3FF03FFFE0
E01FFC3FF03FFFE0F007FC3FFC3FFFE0F800000000000060FC00000000000060
FF00000000000000FF80000000000000FF80000000000000FFE0000000000000
FFFC000000000060>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
59 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
112 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -48 54 24 setcachedevice
54 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 72 def
/ImageMatrix [54 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFC01FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFFFFFFFC00FFFFFF
FFFFFC00FFFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC007FFFFFFFFFFC80
7FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFC803FFFFFFFFFFCE03FFFFFFF
FFFCE03FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCE00FFFFFFFFFFCF00F
FFFFFFFFFCF00FFFFFFFFFFCF007FFFFFFFFFCF007FFFFFFFFFCF007F803FFFF
FCF807F803FFFFFCF807C0007FFFFCF80383F00FFFFCF80303F003FFFCF8020F
FC00FFFCFC001FFE003FFCFC001FFFC03FFCFC003FFFC01FFCFC003FFFE00FFC
FC003FFFE007FCFE00FFFFF003FCFE00FFFFF803FCFE00FFFFF803FCFE00FFFF
FE00FCFF80FFFFFE007CFF80FFFFFE007CFF803FFFFF003CFF803FFFFF003CFF
803FFFFF003CFFC03FFFFF801CFFC03FFFFF801CFFC01FFFFF801CFFC01FFFFF
800CFFC01FFFFF800CFFE01FFFFFC00CFFE01FFFFFC00CFFE00FFFFFC00CFFE0
0FFFFFC00CFFF00FFFFFC000FFF007FFFFE000FFF007FFFFE000FFF807FFFFE0
00FFF807FFFFE000FFF803FFFFE000FFFE03FFFFE00CFFFF00FFFFE00CFFFF00
FFFFE00CFFFF807FFFE00CFFFFC07FFFE00CFFFFC03FFFE00CFFFFE01FFFE01C
FFFFF80FFFC01CFFFFFC0FFFC03CFFFFFE03FFC07CFFFFFF01FF80FCFFFFFF00
7F00FCFFFFFFE00003FCFFFFFFF8000FFCFFFFFFFF803FFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
0 0 0 -74 45 -37 setcachedevice
45 0 0 37 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 45 def
/Height 37 def
/ImageMatrix [45 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE0FFFF0FFF8FE0FFFF0FFF8FC07FFE07FF8FC07FFE07FF8FC03FFE07FF8FC03
FF807FF8FE03FF807FF8FE03FF807FF8FF81FF80FFF8FF81FF80FFF8FF81FF80
FFF8FFC1FF80FFF8FFC0FF80FFF8FFE0FF81FFF8FFE0FF81FFF8FFF0FF81FFF8
FFF03F81FFF8FFF03F81FFF8FFF03FE1FFF8FFF83FE1FFF8FFF83FE1FFF8FFFE
1FE1FFF8FFFE1FE1FFF8FFFE1FE1FFF81FFE1FE1FFF81FFF1FF1FFF80FFF0FF1
FFF883FF0FF0FFF883FF0FF0FFF880FF8FF0FFF8E07F87F8FFF8F07F87F8FFF8
F80000000008FC0000000000FC0000000000FE0000000000FFC000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
45 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a20 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a21 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC00FFFFF800FFFFF800FFFFF080FFFFE180FFFF8180FFFF0380FFFE0380
FFFE0F80FFFC1F80FFF81F80FFF81F80FFE03F80FFC07F80FFC07F80FFC0FF80
FF80FF80FF80FF80FF03FF80FF03FF80FF03FF80FE07FF80FE07FF80F807FF80
F807FF80F80FFF80F80FFF80F00FFF80F01FFF80F01FFF80E01FFF80E01FFF80
E01FFF80E01FFF80E03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80C03FFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF8080FFFF80
80FFFF8080FFFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80C03FFF80
C03FFF80C03FFF80E03FFF80E01FFF80E01FFF80E01FFF80E01FFF80F01FFF80
F01FFF80F00FFF80F80FFF80F80FFF80F807FF80F807FF80FE07FF80FE07FF80
FF03FF80FF03FF80FF03FF80FF80FF80FF80FF80FFC0FF80FFC07F80FFC07F80
FFE03F80FFF81F80FFF81F80FFFC1F80FFFE0F80FFFE0380FFFF0380FFFF8180
FFFFE180FFFFF080FFFFF800FFFFF800FFFFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a22 {{
64 0 0 0 0 0 setcachedevice
} exec } bind def
/a23 {{
0 0 0 -82 25 27 setcachedevice
25 0 0 109 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 109 def
/ImageMatrix [25 0 0 -109 0 109]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF8087FFFF8087FFFF80C3FFFF80E1FFFF80E07FFF80F03FFF80F01FFF80
FC1FFF80FE0FFF80FE07FF80FE07FF80FF01FF80FF80FF80FF80FF80FFC0FF80
FFC07F80FFC07F80FFF03F80FFF03F80FFF03F80FFF81F80FFF81F80FFF80780
FFF80780FFFC0780FFFC0780FFFC0380FFFE0380FFFE0380FFFE0180FFFE0180
FFFE0180FFFE0180FFFF0180FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0080FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000FFFFC000
FFFFC000FFFFC000FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080FFFF0080
FFFF0080FFFF0080FFFF0180FFFE0180FFFE0180FFFE0180FFFE0180FFFE0380
FFFE0380FFFC0380FFFC0780FFFC0780FFF80780FFF80780FFF81F80FFF81F80
FFF03F80FFF03F80FFF03F80FFC07F80FFC07F80FFC0FF80FF80FF80FF80FF80
FF01FF80FE07FF80FE07FF80FE0FFF80FC1FFF80F01FFF80F03FFF80E07FFF80
E1FFFF80C3FFFF8087FFFF8087FFFF808FFFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 109 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
53 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 1 80 76 setcachedevice
80 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 80 def
/Height 75 def
/ImageMatrix [80 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000003FFFF0000000000000001FFFF0000000000000001FFFF0000
0000000000007FFFFFE001FFFFFF00007FFFFFF001FFFFFFF8007FFFFFF000FF
FFFFFF007FFFFFF000FFFFFFFF803FFFFFF000FFFFFFFF803FFFFFFC00FFFFFF
FFC01FFFFFFC007FFFFFFFE01FFFFFFC007FFFFFFFF01FFFFFFE007FFFFFFFFC
0FFFFFFE007FFFFFFFFE0FFFFFFE007FFFFFFFFE0FFFFFFE003FFFFFFFFE07FF
FFFE003FFFFFFFFF07FFFFFF003FFFFFFFFF87FFFFFF003FFFFFFFFF81FFFFFF
003FFFFFFFFFC1FFFFFF001FFFFFFFFFC0FFFFFF001FFFFFFFFFC0FFFFFF801F
FFFFFFFFF0FFFFFF801FFFFFFFFFF0FFFFFF801FFFFE1FFFF07FFFFF8007FFFE
1FFFF87FFFFF8007FFFE07FFF83FFFFFC007FFFE07FFF83FFFFFC007FFFF07FF
FC3FFFFFC007FFFF07FFFFFFFFFFC003FFFF07FFFFFFFFFFF003FFFF03FFFFFF
FFFFF003FFFF03FFFFFFFFFFF003FFFF03FFFFFFFFFFF001FFFE03FFFFFFFFFF
F001FFFE03FFFFFFFFFFF801FFFC01FFFFFFFFFFF800000001FFFFFFFFFFF800
000001FFFFFFFFFFF800000001FFFFFFFFFFF800000000FFFFFFFFFFFC00FFFE
00FFFFFFFFFFFC00FFFFC0FFFFFFFFFFFC00FFFFE0FFFFFFFFFFFC007FFFE0FF
FFFFFFFFFC007FFFE07FFFFFFFFFFE007FFFF07FFFFFFFFFFE007FFFF07FFFFF
FFFFFE007FFFF87FFFFFFFFFFE001FFFF87FFF07FFFFFE001FFFF81FFF03FFFF
FF001FFFF81FFF03FFFFFF001FFFFC1FFFC3FFFFFF001FFFFC1FFFC3FFFFFF00
0FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFFFFFFFFC3FFFFFFC00FFF
FFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFC007FFFFFFFFC1FFFFFFE007FFFFFF
FFC1FFFFFFE007FFFFFFFFC1FFFFFFE007FFFFFFFFC1FFFFFFE003FFFFFFFFC1
FFFFFFE003FFFFFFFF01FFFFFFF003FFFFFFFF01FFFFFFF003FFFFFFFF00FFFF
FFF003FFFFFFFE00FFFFFFF001FFFFFFFC00FFFFFFF001FFFFFFC000FFFFC000
000000000000FFFFC000000000000000FFFFC000000000000000FFFFC0000000
00000000FFFFC000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
80 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
125 0 0 0 0 0 setcachedevice
} exec } bind def
/a27 {{
0 0 0 90 30 128 setcachedevice
30 0 0 38 0 90 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 38 def
/ImageMatrix [30 0 0 -38 0 38]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE007FFCFE007FFCF0000FFCC1FF01FCC1FF00FC87FFE07C87FFF03C87FFF03C
81FFF83C80FFF80C80FFF80C80FFFC0C80FFFC0CC1FFFC0CFFFFF80CFFFFF00C
FFFFE00CFFF8000CFFC0000CFFC0003CFF80007CFF0000FCFE0000FCFE0003FC
FE007FFCFE03FFFCFE07FF8CFE07FE04FE07FE00FF07FE00FF07FE00FF07FF80
FF83FFC0FFC0FFC4FFC07E04FFE00004FFF8003CFFFF00FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 38 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a28 {{
81 0 0 0 0 0 setcachedevice
} exec } bind def
/a29 {{
0 0 0 69 15 101 setcachedevice
15 0 0 32 0 69 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 15 def
/Height 32 def
/ImageMatrix [15 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFE0FFE03FE03FE83FE81FE81FE81FE80FEE0FEE0FEE07EE07EF07EF03EF03E
F03EF80EF80EF806F806F806FC06FC02FC02FC00FE00FE00FE00FE00FE00FF82
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
15 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a30 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a31 {{
0 0 0 96 56 117 setcachedevice
56 0 0 21 0 96 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 21 def
/ImageMatrix [56 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFFFFFC01FF8FFFFFFFE0007F8FFFFFFFE0007F8FFFFFFF80003F8FFFFFFF
00000F8FFFFFFE00000787FFFFF800F80387FFFFF007FE0387FFFFF01FFF83C7
FFFFC03FFFC1C3FFFF80FFFFE1C1FFFE00FFFFE1C0FFFC01FFFFF0E03FF003FF
FFF0E03FF00FFFFFF0F00F803FFFFFF8F800007FFFFFF8F800007FFFFFF8FE00
00FFFFFFF8FF0003FFFFFFF8FFC01FFFFFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a32 {{
28 0 0 0 0 0 setcachedevice
} exec } bind def
/a33 {{
0 0 0 72 60 130 setcachedevice
60 0 0 58 0 72 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 58 def
/ImageMatrix [60 0 0 -58 0 58]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF8FFFFFFFFFFFF0FF83FFFFFFFFFFF0FF81FFFFFFFFFFF0FFC1FFFFFFFFFFF0
FFC0FFFFFFFFFFF0FFC0FFFFFFFFFFF0FFC03FFFFFFFFFF0FFE03FFFFFFFFFF0
FFE03FFFFFFFFFF0FFF03FFFFFFFFFF0FFF01FFFFFFFFFF0FFF01FFFFFFFFFF0
FFF00FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0FFF80FFFFFFFFFF0
FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE07FFFFFFFFF0FFFE03FFFFFFFFF0
FFFF0201FFFFFFF0FFFF0201FFFFFFF0FFFF03000FFFFFF0FFFF008001FFFFF0
FFFF0080003FFFF0FFFF80F0000FFFF0FFFF80FFF003FFF0FFFF80FFFF03FFF0
FFFF807FFFC0FFF0FFFFC07FFFF87FF0FFFFC07FFFF81FF0FFFFC07FFFFC0FF0
FFFFC03FFFFE03F0FFFFC03FFFFF03F0FFFFE03FFFFF81F0FFFFE03FFFFF80F0
FFFFE03FFFFF80F0FFFFE01FFFFFE070FFFFE01FFFFFE070FFFFE01FFFFFF070
FFFFE01FFFFFF030FFFFF81FFFFFF0300FFFF81FFFFFF00003FFF81FFFFFF000
01FFF80FFFFFE00081FFF80FFFFFE00080FFF80FFFFFE000E0FFF80FFFFF8000
E07FF80FFFFF0000F03FF80FFFFC0000F807FC0FFFE00030FE07FC0FFFE00030
FF80FC0FFE000070FFE00000000000F0FFE00000000000F0FFF80000000003F0
FFFF000000001FF0FFFFFC000003FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 58 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a34 {{
0 0 0 59 37 86 setcachedevice
37 0 0 27 0 59 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 27 def
/ImageMatrix [37 0 0 -27 0 27]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC7FFE3FF8FC7FFE3FF8F81FFC1FF8FC0FFC07F8FC0FFC07F8FC0FF81FF8FF07
F81FF8FF07F83FF8FF87F83FF8FF87F83FF8FF83F83FF8FFC3F83FF8FFC3F87F
F8FFC3F87FF8FFE3FC7FF8FFE1FC7FF8FFE1FC7FF8FFF1FC7FF81FF1FC3FF81F
F1FC3FF807FC7C3FF8C1FC7E3FF8C000000008E000000000F000000000F80000
0000FF00000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 27 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 39 17 99 setcachedevice
17 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 60 def
/ImageMatrix [17 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFF000FFF080FFE180FFC380FF0380FE0780FE1F80FE3F80FC3F80F87F
80F87F80F07F80F0FF80F0FF80C1FF80C1FF80C1FF8081FF8081FF8087FF8087
FF8087FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF8007FF80
07FF8007FF8007FF8007FF8007FF8087FF8087FF8087FF8081FF8081FF80C1FF
80C1FF80C1FF80F0FF80F0FF80F07F80F87F80F83F80FC3F80FE3F80FE1F80FE
0780FF0380FFC180FFE180FFF080FFFC00FFFC00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 57 25 86 setcachedevice
25 0 0 29 0 57 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 29 def
/ImageMatrix [25 0 0 -29 0 29]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC007F80FC007F80E0001F80C1FE0780C1FE018003FFC18001FFF08001FFF080
01FFF080C1FFF000C1FFF000E3FF8000FFF00000FFF00080FF800180FF000780
FC000780FC001F80FC07F980FC0FF980FC1FF000FC1FF000FC1FF000FF0FF800
FF03F000FF83F000FFC00080FFF00780FFF00780>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 29 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
25 0 0 0 0 0 setcachedevice
} exec } bind def
/a39 {{
0 0 0 39 18 99 setcachedevice
18 0 0 60 0 39 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 60 def
/ImageMatrix [18 0 0 -60 0 60]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFC083FFC0C3FFC0E1FFC0F0FFC0F03FC0F81FC0FE1FC0FF1FC0FF0FC0FF87
C0FF87C0FF83C0FFC3C0FFC3C0FFE0C0FFE0C0FFE0C0FFE040FFE040FFF840FF
F840FFF840FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800FFF800
FFF800FFF800FFF800FFF800FFF800FFF840FFF840FFF840FFE040FFE040FFE0
C0FFE0C0FFE0C0FFC3C0FFC3C0FF83C0FF87C0FF07C0FF0FC0FF1FC0FE1FC0F8
1FC0F03FC0E0FFC0E1FFC0C3FFC08FFFC08FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 60 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a40 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a41 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
0 0 0 -84 19 -42 setcachedevice
19 0 0 42 0 -84 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 19 def
/Height 42 def
/ImageMatrix [19 0 0 -42 0 42]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<03FFE001FFE001FFE001FFE001FFE000FFE080FFE080FFE080FFE0807FE0E07F
E0E03FE0E03FE0E03FE0E03FE0F00FE0F00FE0F00FE0F007E0F007E0F807E0F8
03E0F803E0F803E0F801E0FC01E0FC01E0FC00E0FC00E0FC00E0FC0020FE0020
FE0020FE0020FE0000FE0000FF8000FF8000FF8000FFC000FFE0E0FFE0E0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
19 42 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a43 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a44 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
86 0 0 0 0 0 setcachedevice
} exec } bind def
/a46 {{
82 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a48 {{
29 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFFC00007FFFFFF
FFFFFFC0C007FFFFFFFFFFFFC0F001FFFFFFFFFFFFC0FC003FFFFFFFFFFFC0FC
000FFFFFFFFFFFC0FF8001FFFFFFFFFFC0FFE0007FFFFFFFFFC0FFFC007FFFFF
FFFFC0FFFF001FFFFFFFFFC0FFFFC003FFFFFFFFC0FFFFC000FFFFFFFFC0FFFF
F8001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC007FFFFFFC0FFFFFFF001FFFF
FFC0FFFFFFFC003FFFFFC0FFFFFFFC000FFFFFC0FFFFFFFF8001FFFFC0FFFFFF
FFE0007FFFC0FFFFFFFFFC007FFFC0FFFFFFFFFF001FFFC0FFFFFFFFFFC003FF
C0FFFFFFFFFFC000FFC0FFFFFFFFFFF8001FC0FFFFFFFFFFFE0007C0FFFFFFFF
FFFFC007C0FFFFFFFFFFFFF001C0FFFFFFFFFFFFFC0040FFFFFFFFFFFFFC0000
FFFFFFFFFFFFFF8000FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0040FFFFFFFFFF
FFF001C0FFFFFFFFFFFFC007C0FFFFFFFFFFFE0007C0FFFFFFFFFFF8001FC0FF
FFFFFFFFC000FFC0FFFFFFFFFFC003FFC0FFFFFFFFFF001FFFC0FFFFFFFFFC00
7FFFC0FFFFFFFFE0007FFFC0FFFFFFFF8001FFFFC0FFFFFFFC000FFFFFC0FFFF
FFFC003FFFFFC0FFFFFFF001FFFFFFC0FFFFFFC007FFFFFFC0FFFFFE0007FFFF
FFC0FFFFF8001FFFFFFFC0FFFFC000FFFFFFFFC0FFFFC003FFFFFFFFC0FFFF00
1FFFFFFFFFC0FFFC007FFFFFFFFFC0FFE0007FFFFFFFFFC0FF8001FFFFFFFFFF
C0FC000FFFFFFFFFFFC0FC003FFFFFFFFFFFC0F001FFFFFFFFFFFFC0C007FFFF
FFFFFFFFC00007FFFFFFFFFFFFC0001FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC0
C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a50 {{
77 0 0 0 0 0 setcachedevice
} exec } bind def
/a51 {{
0 0 0 -73 47 3 setcachedevice
47 0 0 76 0 -73 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 76 def
/ImageMatrix [47 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC007FFFEFFFE0000FFFEFFFE0000FFFEFFF00FE01FFEFFE03FF80FFEFFC0
3FF807FEFF807FFC03FEFF01FFFF01FEFF03FFFF81FEFC03FFFF807EF807FFFF
C03EF807FFFFC03EF007FFFFC01EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
E00FFFFFE00EE00FFFFFE00EE00FFFFFE00EC00FFFFFE006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001F
FFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFF
F000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000001FFFFFF000
001FFFFFF000001FFFFFF000C01FFFFFF006C01FFFFFF006C01FFFFFF006C01F
FFFFF006C01FFFFFF006C01FFFFFF006C01FFFFFF006E01FFFFFF00EE00FFFFF
E00EE00FFFFFE00EE00FFFFFE00EF00FFFFFE01EF00FFFFFE01EF00FFFFFE01E
F807FFFFC03EF807FFFFC03EFC07FFFFC07EFC03FFFF807EFF03FFFF81FEFF81
FFFF03FEFFC07FFC07FEFFC03FF807FEFFE00FE00FFEFFF000001FFEFFFE0000
FFFEFFFFC007FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a52 {{
108 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
94 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
139 0 0 0 0 0 setcachedevice
} exec } bind def
/a55 {{
0 0 0 -15 56 42 setcachedevice
56 0 0 57 0 -15 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 57 def
/ImageMatrix [56 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFF800000
00000000800000000000008000000000000080000000000000FFFFFFE1FFFFFF
FFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1
FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFF
FFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FF
FFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFF
FFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFFFFFFFFFFE1FFFF
FFFFFFFFE1FFFFFFFFFFFFE1FFFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a57 {{
0 0 0 -60 66 5 setcachedevice
66 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 65 def
/ImageMatrix [66 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFFFFFF040FFFFFFFFFFFFFFC000FFFFFFFFFFFFFF0000FFFFFFFFFF
FFF80000FFFFFFFFFFFFF80040FFFFFFFFFFFFE003C0FFFFFFFFFFFF000FC0FF
FFFFFFFFFC000FC0FFFFFFFFFFF0007FC0FFFFFFFFFF8001FFC0FFFFFFFFFF80
07FFC0FFFFFFFFFE003FFFC0FFFFFFFFF000FFFFC0FFFFFFFFC000FFFFC0FFFF
FFFF0007FFFFC0FFFFFFF8001FFFFFC0FFFFFFF8007FFFFFC0FFFFFFE003FFFF
FFC0FFFFFF000FFFFFFFC0FFFFFC000FFFFFFFC0FFFFF0007FFFFFFFC0FFFF80
01FFFFFFFFC0FFFF8007FFFFFFFFC0FFFE003FFFFFFFFFC0FFF000FFFFFFFFFF
C0FFC000FFFFFFFFFFC0FF0007FFFFFFFFFFC0F8001FFFFFFFFFFFC0F8007FFF
FFFFFFFFC0E003FFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0
007FFFFFFFFFFFFFC0000FFFFFFFFFFFFFC0C00FFFFFFFFFFFFFC0E003FFFFFF
FFFFFFC0F8007FFFFFFFFFFFC0F8001FFFFFFFFFFFC0FF0007FFFFFFFFFFC0FF
C000FFFFFFFFFFC0FFF000FFFFFFFFFFC0FFFE003FFFFFFFFFC0FFFF8007FFFF
FFFFC0FFFF8001FFFFFFFFC0FFFFF0007FFFFFFFC0FFFFFC000FFFFFFFC0FFFF
FF000FFFFFFFC0FFFFFFE003FFFFFFC0FFFFFFF8007FFFFFC0FFFFFFF8001FFF
FFC0FFFFFFFF0007FFFFC0FFFFFFFFC000FFFFC0FFFFFFFFF000FFFFC0FFFFFF
FFFE003FFFC0FFFFFFFFFF8007FFC0FFFFFFFFFF8001FFC0FFFFFFFFFFF0007F
C0FFFFFFFFFFFC000FC0FFFFFFFFFFFF000FC0FFFFFFFFFFFFE003C0FFFFFFFF
FFFFF80040FFFFFFFFFFFFF80000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFFC000
FFFFFFFFFFFFFFF040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
78 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
110 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -75 69 5 setcachedevice
69 0 0 80 0 -75 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 69 def
/Height 80 def
/ImageMatrix [69 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF8FFFFFFFFFFFF8FFFF87FFFFFFFFFFF8FFFF80FFFFFFFFFFF8FFFF807FFF
FFFFFFF8FFFF807FFFFFFFFFF8FFFF803FFFFFFFFFF8FFFF800FFFFFFFFFF8FF
FF8003FFFFFFFFF8FFFF8001FFFFFFFFF8FFFFC000FFFFFFFFF8FFFFC000FFFF
FFFFF8FFFFC0007FFFFFFFF8FFFFC0000FFFFFFFF8FFFFC00007FFFFFFF8FFFF
C00003FFFFFFF8FFFFC01001FFFFFFF8FFFFC01801FFFFFFF8FFFFC01C00FFFF
FFF8FFFFC01E003FFFFFF8FFFFC01E001FFFFFF8FFFFC01F800FFFFFF8FFFFE0
1FE007FFFFF8FFFFE01FF007FFFFF8FFFFE01FF803FFFFF8FFFFE00FFE00FFFF
F8FFFFE00FFE007FFFF8FFFFE00FFF003FFFF8FFFFE00FFF801FFFF8FFFFE00F
FFC01FFFF8FFFFE00FFFE01FFFF8FFFFE00FFFF80FFFF8FFFFE00FFFF803FFF8
FFFFE00FFFFC01FFF8FFFFE00FFFFE00FFF8FFFFE00FFFFF00FFF8FFFFE00FFF
FF80FFF8FFFFE00FFFFFE07FF8FFFFE00FFFFFE03FF8FFFFE00FFFFFE03FF8FF
FFE00FFFFFF00FF8FFFFE00FFFFFF80FF8FFFFE00FFFFFFC07F8FFFFE00FFFFF
FE07F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFE03F8FFFFE00FFFFFFF81F8FFFF
E00FFFFFFFC1F8FFFFC00FFFFFFFC1F8FFFFC00FFFFFFFE0F8FFFFC00FFFFFFF
E0F8FFFFC00FFFFFFFF038FFFFC00FFFFFFFF038FFFFC01FFFFFFFF838FFFFC0
1FFFFFFFF818FFFF801FFFFFFFFE18FFFF801FFFFFFFFE18FFFF801FFFFFFFFE
08FFFF801FFFFFFFFE08FFFF801FFFFFFFFF08FFFF003FFFFFFFFF08FFFF003F
FFFFFFFF00FFFF003FFFFFFFFF00FFFE003FFFFFFFFE00FFFE003FFFFFFFFE00
FFFE007FFFFFFFFE00FFF8007FFFFFFFF800FFF8007FFFFFFFF000FFF0007FFF
FFFFC000FFE000FFFFFFF80000FFC000FFFFFFF80000FFC003FFFFFFF80000FE
0003FFFFFFF80008F80007FFFFFFF80008000007FFFFFFF8000800000FFFFFFF
FC001880001FFFFFFFFC001880003FFFFFFFFC0038F001FFFFFFFFFE00F8F807
FFFFFFFFFF83F8F807FFFFFFFFFF83F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
69 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
0 0 0 -76 32 -41 setcachedevice
32 0 0 35 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 35 def
/ImageMatrix [32 0 0 -35 0 35]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE3FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFFC7FC1FF1
C1FC1FC1C1FC1FC180FE3F80C01E3C01C00E3801E0063003FE00003FFF8000FF
FFE003FFFFFC1FFFFFE003FFFF8000FFFE00003FFE06303FE00E3803C01E3C01
801E3C0080FC1F80C1FC1FC1C7FC1FF1FFFC1FFFFFFC1FFFFFFC1FFFFFFC1FFF
FFFC1FFFFFFC1FFFFFFE3FFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 35 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a62 {{
0 0 0 -48 62 2 setcachedevice
62 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 50 def
/ImageMatrix [62 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFC00FFFFFE03FCFFFC00FFFFFE03FCFFC00007FFF800FCFF00FE01FFF0383C
FE00FE003FE0381CF807FFF00FE07E0CF007FFFE03807E0CF00FFFFF83807F0C
E01FFFFFC0807F0CE01FFFFFF8007FFCC01FFFFFF8007FFCC01FFFFFFC00FFFC
C01FFFFFFE00FFFCC03FFFFFFF00FFFC803FFFFFFF00FFFC803FFFFFFF00FFFC
801FFFFFFF007FFC801FFFFFFF007FFC801FFFFFFF003FFC801FFFFFFF003FFC
801FFFFFFF000FFC801FFFFFFF0007FC800FFFFFFF0007FC800FFFFFFF0083FC
C00FFFFFFF0081FCC00FFFFFFF00C1FCC00FFFFFFF00E1FCC007FFFFFF00E0FC
C007FFFFFF00E0FCE007FFFFFF00F03CE007FFFFFF00F03CE007FFFFFF00F83C
F003FFFFFF00F81CF003FFFFFF00FE1CF000FFFFFF00FE1CF800FFFFFF00FE0C
FE007FFFFE00FF0CFE007FFFFE01FF0CFF007FFFFE01FF04FF803FFFFE01FF84
FF801FFFFC01FF84FFC00FFFFC03FF84FFE003FFF80FFF80FFF803FFF80FFF80
FFFE01FFF81FFFC0FFFF00FFE03FFFFCFFFF003F803FFFFCFFFFE00000FFFFFC
FFFFF80003FFFFFCFFFFFF801FFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 -60 54 5 setcachedevice
54 0 0 65 0 -60 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 65 def
/ImageMatrix [54 0 0 -65 0 65]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFC0000004FFFFFC00000000FFFFC000000000FFFF8000000000FFFF8000
000004FFFE001FFFFFFCFFFC00FFFFFFFCFFE000FFFFFFFCFFC00FFFFFFFFCFF
801FFFFFFFFCFF807FFFFFFFFCFF01FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFF
FFFCF807FFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF01FFFFFFFFFFCE07F
FFFFFFFFFCE07FFFFFFFFFFCC07FFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFF
FCC1FFFFFFFFFFFCC1FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFF
FFFFFFFC03FFFFFFFFFFFC03FFFFFFFFFFFC0000000000000400000000000000
00000000000000000000000000000000000000000403FFFFFFFFFFFC03FFFFFF
FFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFC01FFFFFFFFFFFCC1FFFFFFFFFFFCC1
FFFFFFFFFFFCC0FFFFFFFFFFFCC0FFFFFFFFFFFCC07FFFFFFFFFFCE07FFFFFFF
FFFCE07FFFFFFFFFFCF01FFFFFFFFFFCF00FFFFFFFFFFCF00FFFFFFFFFFCF807
FFFFFFFFFCFC03FFFFFFFFFCFC03FFFFFFFFFCFF01FFFFFFFFFCFF807FFFFFFF
FCFF801FFFFFFFFCFFC00FFFFFFFFCFFE000FFFFFFFCFFFC00FFFFFFFCFFFE00
1FFFFFFCFFFF8000000004FFFF8000000000FFFFC000000000FFFFFC00000000
FFFFFFC0000004>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 65 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
96 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
52 0 0 0 0 0 setcachedevice
} exec } bind def
/a66 {{
0 0 0 -70 66 17 setcachedevice
66 0 0 87 0 -70 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 66 def
/Height 87 def
/ImageMatrix [66 0 0 -87 0 87]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C000000000000000400000000000000000000000000000000000000000000000
00000000C00000000000000040FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FF
FFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFF
FFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFF
FFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFF
FFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFC0C3FFFF
FFFFFFFFFFC0C3FFFFFFFFFFFFFFC000FFFFFFFFFFFFFFC0001FFFFFFFFFFFFF
C00007FFFFFFFFFFFFC0C001FFFFFFFFFFFFC0F0003FFFFFFFFFFFC0FC003FFF
FFFFFFFFC0FF800FFFFFFFFFFFC0FFE001FFFFFFFFFFC0FFE0007FFFFFFFFFC0
FFFC001FFFFFFFFFC0FFFF0003FFFFFFFFC0FFFFC003FFFFFFFFC0FFFFF800FF
FFFFFFC0FFFFFE001FFFFFFFC0FFFFFE0007FFFFFFC0FFFFFFC001FFFFFFC0FF
FFFFF0003FFFFFC0FFFFFFFC003FFFFFC0FFFFFFFF800FFFFFC0FFFFFFFFE001
FFFFC0FFFFFFFFE0007FFFC0FFFFFFFFFC001FFFC0FFFFFFFFFF0003FFC0FFFF
FFFFFFC003FFC0FFFFFFFFFFF800FFC0FFFFFFFFFFFE001FC0FFFFFFFFFFFE00
07C0FFFFFFFFFFFFC001C0FFFFFFFFFFFFF00040FFFFFFFFFFFFFC0040FFFFFF
FFFFFFFF8000FFFFFFFFFFFFFF0000FFFFFFFFFFFFF80000FFFFFFFFFFFFE000
40FFFFFFFFFFFF0003C0FFFFFFFFFFFF000FC0FFFFFFFFFFFC007FC0FFFFFFFF
FFF001FFC0FFFFFFFFFF8001FFC0FFFFFFFFFE0007FFC0FFFFFFFFF0003FFFC0
FFFFFFFFF000FFFFC0FFFFFFFFC007FFFFC0FFFFFFFF001FFFFFC0FFFFFFF800
1FFFFFC0FFFFFFE0007FFFFFC0FFFFFF0003FFFFFFC0FFFFFF000FFFFFFFC0FF
FFFC007FFFFFFFC0FFFFF001FFFFFFFFC0FFFF8001FFFFFFFFC0FFFE0007FFFF
FFFFC0FFF0003FFFFFFFFFC0FFF000FFFFFFFFFFC0FFC007FFFFFFFFFFC0FF00
1FFFFFFFFFFFC0F8001FFFFFFFFFFFC0E0007FFFFFFFFFFFC0C003FFFFFFFFFF
FFC0C00FFFFFFFFFFFFFC0007FFFFFFFFFFFFFC001FFFFFFFFFFFFFFC001FFFF
FFFFFFFFFFC0C7FFFFFFFFFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
66 87 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
87 0 0 0 0 0 setcachedevice
} exec } bind def
/a68 {{
121 0 0 0 0 0 setcachedevice
} exec } bind def
/a69 {{
115 0 0 0 0 0 setcachedevice
} exec } bind def
/a70 {{
120 0 0 0 0 0 setcachedevice
} exec } bind def
/a71 {{
0 0 0 -48 54 2 setcachedevice
54 0 0 50 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 50 def
/ImageMatrix [54 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFFC0FFCE1FFFFFFFC0FFC80FFFFFFE001FC803FFFFFC070FC803FFFFF
C0707C803FFFFF80F83CC03FFFFF80FC0CC03FFFFF80FC0CC01FFFFF00FE0CC0
1FFFFF00FE0CC01FFFFF00FE04E01FFFFF00FF84E00FFFFF007F84E00FFFFF00
7F84E00FFFFF807F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF807FC0F007
FFFF807FC0F007FFFF807FFCF807FFFF007FFCF807FFFF007FFCF803FFFE007F
FCF803FFF800FFFCF803FFC003FFFCFE03FFC007FFFCFE03F0001FFFFCFE0000
01FFFFFCFE000001FFFFFCFE00007FFFFFFCFF0001FFFFFFFCFF0081FFFFFFFC
FF00707FFFFFFCFF007C3FFFFFFCFF007C0FFFFFFCFF807E07FFFFFCFF803F81
FFFFFCFF803FC1FFFFFCFF803FF0FFFFFCFFC03FF83FE0FCFFC03FF81F803CFF
C01FFE0F803CFFC01FFF03800CFFC01FFF83800CFFE01FFFE0000CFFE01FFFFC
000CFFE01FFFFC000CFFE01FFFFF000CFFF81FFFFFE07CFFFC3FFFFFFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a72 {{
66 0 0 0 0 0 setcachedevice
} exec } bind def
/a73 {{
0 0 0 28 86 76 setcachedevice
86 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 86 def
/Height 48 def
/ImageMatrix [86 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C000000F00000000000003C000000F00000000000003C000000F00000
000000003C000000F0000000FF001FFFFC007FFFF001FCFF803FFFFE00FFFFF8
03FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFF
F803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FF
FFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00
FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE
00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFF
FE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803F
FFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF80
3FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF
803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FCFF803FFFFE00FFFFF803FC
FF803FFFFE00FFFFF803FCFF801FFFFE007FFFF803FCFF801FFFFE007FFFF803
FCFF801FFFFE007FFFF803FCFF800FFFFE003FFFF803FCFF800FFFFE003FFFF8
03FCFF8007FFFE001FFFF803FCFF8007FFFC001FFFF003FCFF0041FFFC0107FF
F007FCFF0041FFFC0107FFF007FCFC0070FFFC07C3FFF01FFC0000783FF00FE0
FFC03FFC00007807E00FE01F803FFC00007E00001FF800007FFC00007FC0003F
FF0000FFFCFF807FF003FFFFC00FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
86 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a74 {{
119 0 0 0 0 0 setcachedevice
} exec } bind def
/a75 {{
0 0 0 1 25 76 setcachedevice
25 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 25 def
/Height 75 def
/ImageMatrix [25 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000FF001F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80FF803F80
FF003F80FF003F80FC003F80C0003F80C0003F80C0003F80C0003F80FF803F80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80
FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FFFFFF80FF83FF80FC007F80
FC007F80FC007F80F8003F80F8003F80F8003F80F8003F80F8003F80FC007F80
FC007F80FF83FF80FF83FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
25 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a76 {{
91 0 0 0 0 0 setcachedevice
} exec } bind def
/a77 {{
0 0 0 28 56 76 setcachedevice
56 0 0 48 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 48 def
/ImageMatrix [56 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000003C0000000000003C0000000000003C0000000000003C000000FF001FFF
FC007FFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF
803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE
00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF80
3FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00
FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803F
FFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FFFF803FFFFE00FF
FF803FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF801FFFFE00FFFF800FFF
FE00FFFF800FFFFE00FFFF8007FFFE00FFFF8007FFFC00FFFF0041FFFC01FFFF
0041FFFC01FFFC0070FFFC07FF0000783FF00FFF00007807E00FFF00007E0000
1FFF00007FC0003FFFFF807FF003FFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a78 {{
0 0 0 80 41 132 setcachedevice
41 0 0 52 0 80 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 52 def
/ImageMatrix [41 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFE0000000FFFF00000000FFF800000000FFE000000000FFC007FFFF80FFC0
7FFFFF80FF01FFFFFF80FE07FFFFFF80FC07FFFFFF80F81FFFFFFF80F83FFFFF
FF80F87FFFFFFF80F07FFFFFFF80C0FFFFFFFF80C0FFFFFFFF8081FFFFFFFF80
81FFFFFFFF8087FFFFFFFF8087FFFFFFFF8007FFFFFFFF8007FFFFFFFF800FFF
FFFFFF800FFFFFFFFF800FFFFFFFFF8000000000000000000000000000000000
00000000000000000FFFFFFFFF800FFFFFFFFF800FFFFFFFFF8007FFFFFFFF80
07FFFFFFFF8087FFFFFFFF8081FFFFFFFF8081FFFFFFFF80C1FFFFFFFF80C0FF
FFFFFF80C07FFFFFFF80F07FFFFFFF80F83FFFFFFF80F83FFFFFFF80FC1FFFFF
FF80FE07FFFFFF80FE01FFFFFF80FF007FFFFF80FFC007FFFF80FFE007FFFF80
FFF800000000FFFF00000000FFFF00000000FFFFE0000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a79 {{
43 0 0 0 0 0 setcachedevice
} exec } bind def
/a80 {{
0 0 0 58 30 62 setcachedevice
30 0 0 4 0 58 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 30 def
/Height 4 def
/ImageMatrix [30 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000800000008000000080000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
30 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a81 {{
72 0 0 0 0 0 setcachedevice
} exec } bind def
/a82 {{
0 0 0 0 51 57 setcachedevice
51 0 0 57 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 57 def
/ImageMatrix [51 0 0 -57 0 57]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE000FFFFFFE0FFE000FFFFFFE0FE00000FFFFFE0F8000000FFFFE0F0000000
3FFFE0E000000007FFE080001FF803FFE08001FFFF83FFE08007FFFFE0FFE000
0FFFFFF03FE0000FFFFFF01FE0003FFFFFF80FE0007FFFFFF80FE0007FFFFFFE
0FE000FFFFFFFE07E080FFFFFFFE07E080FFFFFFFE03E080FFFFFFFE03E0807F
FFFFF803E0E07FFFFFF803E0F03FFFFFF803E0FC0FFFFFF003E0FC07FFFFE003
E0FF87FFFFC003E0FFFFFFFE0007E0FFFFFFFE0007E0FFFFFFF8000FE0FFFFFF
E0001FE0FFFFFF00001FE0FFFFF800003FE0FFFFE00001FFE0FFFFE00007FFE0
FFFF80003FFFE0FFFF0000FFFFE0FFFE0000FFFFE0FFFE000FFFFFE0FFF8001F
FFFFE0FFF8007FFFFFE0FFF800FFFFFFE0FFF803FFFFFFE0FFF803FFFFFFE0FF
F803FFFFFFE0FFF807FFFFE0E0FFFE07FFFFE0E0FFFE07FFFFE060FFFF07FFFF
E000FFFF03FFFFE000FFFF03FFFFE000FFFF80FFFFC000FFFFC0FFFFC000FFFF
E07FFF0000FFFFFC1FF00000FFFFFC00000000FFFFFE00000000FFFFFF800000
20FFFFFFF00000E0FFFFFFFF800FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 57 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a83 {{
0 0 0 26 38 76 setcachedevice
38 0 0 50 0 26 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC003FFFFCFC003FFFFCE00007FFFCC00001FFFCC000007FFCE007F03FFCF07F
F81FFCFFFFFC1FFCFFFFFC07FCFFFFFE07FCFFFFFE03FCFF001F01FCF8000101
FCF80001C1FCF0000040FCE003F800FCC003F800FCC00FFE007CC01FFF007CC0
7FFFC07C00FFFFE07C00FFFFE01C00FFFFE01C00FFFFF01C01FFFFF01C01FFFF
F81C01FFFFF80C01FFFFF80C01FFFFF80C01FFFFFF0CC0FFFFFFCCC0FFFFFFFC
C0FFFFFFFCE0FFFFFFFCE07FFFFFFCE07FFFE1FCF01FFFE0FCF01FFFF0FCF81F
FFF81CFC0FFFF80CFC07FFF80CFF03FFFC04FF81FFFF00FFC1FFFF00FFF03FFC
00FFFC07F000FFFC000000FFFF000000FFFFC00004FFFFFE001C>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a84 {{
0 0 0 -48 51 24 setcachedevice
51 0 0 72 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 51 def
/Height 72 def
/ImageMatrix [51 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFE0FFFE0FFFFFFFC07FFE0FFFFFFFC03FFE0FFFFFFFC03FFE0FFFFFFFC
03FFE0FFFFFFFC03FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FFFFFFFC01FFE0FF
FFFFFE01FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFE00FFE0FFFFFFFF80
FFE0FFFFFFFF80FFE0FFFFFFFF803FE0FFFFFFFF803FE0FFFFFFFF803FE0FFFF
FFFFC03FE0FFFFFFFFC03FE0FFFFFFFFC01FE0FFFFFFFFC01FE0FE0FFFFFC01F
E0FE0FFFFFE01FE0F807FFFFE01FE0F803FFFFE00FE0F803FFFFE00FE0FC03FF
FFE00FE0FC03FFFFF00FE0FC03FFFFF00FE0FC01FFFFF007E0FE01FFFFF007E0
FE01FFFFF007E0FE01FFFFF807E0FE00FFFFF803E0FE00FFFFF803E0FF80FFFF
F803E0FF80FFFFFE03E0FF80FFFFFE03E0FF803FFFFE00E0FF803FFFFE00E0FF
C03FFFFE00E0FFC03FFFFF00E0FFC03FFFFF00E0FFC01FFFFF0060FFC01FFFFF
0060FFE01FFFFF0060FFE01FFFFF8060FFE01FFFFF8060FFE00FFFFF8020FFE0
0FFFFF8020FFF00FFFFF8020FFF00FFFFFC020FFF00FFFFFC02003F007FFFFC0
2003F807FFFFC00003F803FFFFC00083F803FFFFE00083F800FFFFE00083F800
FFFFE00081F800FFFFE000E1FE007FFFE000E1FE003FFFE000E0FE001FFFE000
E0FE000FFFE000F0FE060FFFE020F07E0703FFE020F87E0FE1FFC060F8380FE0
3F8060FC000FF00000E0FE003FFC0003E0FF81FFFFC01FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
51 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a85 {{
113 0 0 0 0 0 setcachedevice
} exec } bind def
/a86 {{
0 0 0 27 50 78 setcachedevice
50 0 0 51 0 27 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 51 def
/ImageMatrix [50 0 0 -51 0 51]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF001FFFC0FC0FFF001FFFC0FC0FF80003FE001C0FC01FC1FC000C0F001FC07
800040E007FF03803040C00FFFC1007800C01FFFE101FC00C01FFFF001FC0000
7FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFF801FC00007FFFFC01
FC00007FFFFC01FC00007FFFFC01FC00001FFFFC01FC00C01FFFFC01FC00C00F
FFFC01FFC0E00FFFFC01FFC0E00FFFFC01FFC0F007FFFC01FFC0F003FFFC01FF
C0F8007FFC01FFC0FC003FFC01FFC0FF803FFC01FFC0FFE007FC01FFC0FFFC00
3C01FFC0FFFC000001FFC0FFFF800001FFC0FFFFFE0001FFC0FFFFFFFC01FFC0
FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FF0FFFFC01FFC0F803FFFC
01FFC0F803FFFC01FFC0F001FFFC01FFC0F001FFF803FFC0F001FFF803FFC0F0
01FFF803FFC0F001FFF003FFC0F001FFF007FFC0F803FFF00FFFC0F80FFFE01F
FFC0F80FFFC01FFFC0FC01FE007FFFC0FF000001FFFFC0FFC00007FFFFC0FFFE
003FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 51 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a87 {{
0 0 0 29 55 76 setcachedevice
55 0 0 47 0 29 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 47 def
/ImageMatrix [55 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000007FE000000000007FE000000000007FE000000000007FE000000F8001FFF
C001FEFF001FFFE003FEFFC07FFFE007FEFFE07FFFE00FFEFFE01FFFC00FFEFF
F01FFF001FFEFFF80FFE001FFEFFFC0FFE007FFEFFFF07FE00FFFEFFFF83FC01
FFFEFFFF83F801FFFEFFFFC1F001FFFEFFFFC07003FFFEFFFFE07007FFFEFFFF
F0001FFFFEFFFFFC001FFFFEFFFFFC001FFFFEFFFFFC003FFFFEFFFFFE007FFF
FEFFFFFE00FFFFFEFFFFFC00FFFFFEFFFFFC01FFFFFEFFFFF000FFFFFEFFFFE0
007FFFFEFFFFC0007FFFFEFFFFC0087FFFFEFFFFC0183FFFFEFFFF803C1FFFFE
FFFF003C07FFFEFFFC003E03FFFEFFFC007F03FFFEFFFC01FFC3FFFEFFF803FF
C1FFFEFFF003FFE0FFFEFFE003FFE07FFEFFE007FFE01FFEFFC007FFE007FEFF
C007FFE007FEFE0003FFC0007E0000007F00000E0000007F00000E0000007F00
000E0000007F00000E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a88 {{
0 0 0 -47 37 2 setcachedevice
37 0 0 49 0 -47 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 49 def
/ImageMatrix [37 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE007FF8FFFE007FF8FFE00007F8FF807E01F8FF007E0038FE03FFE018F807
FFF018F80FFFFE18F00FFFFFF8E01FFFFFF8E01FFFFFF8C01FFFFFF8C01FFFFF
F8C03FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF8803FFFFFF880
3FFFFFF8803FFFFFF8803FFFFFF8801FFFFFF8801FFFFFF8801FFFFFF8801FFF
FFF880000003F880000000F880000000F8C0000000F8C00FFFFFF8C00FFFFFF8
E007FFFFF8E007FFFFF8E003FFFFF8F003FFFFF8F000FFFFF8F800FFFFF8FE00
FFFFF8FF007FFFF8FF003FFFF8FF801FFFF8FFC003FFF8FFF803FFF8FFFC007F
F8FFFF000008FFFF000000FFFFE00000FFFFFE0008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a89 {{
35 0 0 0 0 0 setcachedevice
} exec } bind def
/a90 {{
0 0 0 3 36 76 setcachedevice
36 0 0 73 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 73 def
/ImageMatrix [36 0 0 -73 0 73]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000FFE0007FF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0
FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC
01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FF
F0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FF
FC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01
FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF0FFFC01FFF001FC01FFF0000C01FFF0
000001FFF0000001FFF0FC0001FFF0FFE001FFF0FFE001FFF0FFFC01FFF0FFFF
01FFF0FFFF81FFF0FFFFC1FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 73 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a91 {{
0 0 0 -6 17 104 setcachedevice
17 0 0 110 0 -6 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 17 def
/Height 110 def
/ImageMatrix [17 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0
00FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF000
FFF000FFF000FFF000FFF000FFF000FFF000FFF000FFF0000000000000000000
00000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
17 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a92 {{
46 0 0 0 0 0 setcachedevice
} exec } bind def
/a93 {{
0 0 0 -76 60 3 setcachedevice
60 0 0 79 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 60 def
/Height 79 def
/ImageMatrix [60 0 0 -79 0 79]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF8FFFFFFF0FFFFFFE07FFFFFF0FFFFFFE07FFFFFF0FFFFFFC03FFFFFF0
FFFFFFC03FFFFFF0FFFFFFC03FFFFFF0FFFFFF801FFFFFF0FFFFFF801FFFFFF0
FFFFFF801FFFFFF0FFFFFF801FFFFFF0FFFFFF000FFFFFF0FFFFFF000FFFFFF0
FFFFFE0003FFFFF0FFFFFE0603FFFFF0FFFFFE0603FFFFF0FFFFFE0F03FFFFF0
FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF80F01FFFFF0FFFFF01F80FFFFF0
FFFFF01F80FFFFF0FFFFF01F80FFFFF0FFFFE03FE07FFFF0FFFFE03FE07FFFF0
FFFFE03FE07FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0FFFFC0FFF03FFFF0
FFFFC1FFF83FFFF0FFFF81FFF80FFFF0FFFF81FFF80FFFF0FFFE01FFF807FFF0
FFFE03FFFC07FFF0FFFE03FFFC07FFF0FFFE07FFFE07FFF0FFFC07FFFE03FFF0
FFFC07FFFE03FFF0FFF807FFFE01FFF0FFF80FFFFF81FFF0FFF80FFFFF81FFF0
FFF83FFFFFC1FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0FFF03FFFFFC0FFF0
FFF07FFFFFE0FFF0FFE07FFFFFE03FF0FFE07FFFFFE03FF0FF80000000001FF0
FF80000000001FF0FF80000000001FF0FF80000000001FF0FF00000000000FF0
FF01FFFFFFF80FF0FF01FFFFFFF80FF0FE03FFFFFFFE07F0FE03FFFFFFFE07F0
FE03FFFFFFFE07F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0FC0FFFFFFFFF03F0
F81FFFFFFFFF80F0F81FFFFFFFFF80F0F81FFFFFFFFF80F0F83FFFFFFFFFC0F0
E03FFFFFFFFFC070E03FFFFFFFFFC070C03FFFFFFFFFC030C07FFFFFFFFFE030
C07FFFFFFFFFE030C0FFFFFFFFFFF83080FFFFFFFFFFF81080FFFFFFFFFFF810
80FFFFFFFFFFF81003FFFFFFFFFFFC0003FFFFFFFFFFFC0003FFFFFFFFFFFC00
07FFFFFFFFFFFE0007FFFFFFFFFFFE008FFFFFFFFFFFFF10>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
60 79 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a94 {{
85 0 0 0 0 0 setcachedevice
} exec } bind def
/a95 {{
0 0 0 -77 73 14 setcachedevice
73 0 0 91 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 73 def
/Height 91 def
/ImageMatrix [73 0 0 -91 0 91]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFF8001FFFF80FFFFFFFFFF8001FFFF80FFFFFFFFF000003FFF80FFFF
FFFF00000003FF80FFFFFFF800000001FF80FFFFFF80000000007F80FFFFFC00
000000001F80FFFFFC0000003FE01F80FFFFC0000007FFF80F80FFFC0000007F
FFF80780FFC00000007FFFF803808000000003FFFFFC0380800000003FFFFFFC
0180C0000001FFFFFFFF0180F0000001FFFFFFFF8180F80000003FFFFFFFC000
F800000007FFFFFFC000FE00000001FFFFFFFD80FFFFFF00007FFFFFFF80FFFF
FFFE007FFFFFFF80FFFFFFFFE00FFFFFFF80FFFFFFFFF803FFFFFF80FFFFFFFF
F801FFFFFF80FFFFFFFFFF007FFFFF80FFF8003FFFC01FFFFF80FFF8003FFFE0
1FFFFF80FFC00007FFFC0FFFFF80FE000000FFFE07FFFF80FC0000001FFE01FF
FF80F800000007FF00FFFF80F000000001FF807FFF80F00003FC01FFC07FFF80
F0001FFFC0FFF03FFF80C000FFFFE07FF01FFF808000FFFFE01FF007FF808001
FFFFF81FF807FF808003FFFFFFFFFC03FF808003FFFFFFFFFE03FF808007FFFF
FFFFFE01FF80001FFFFFFFFFFF00FF80001FFFFFFFFFFF00FF80001FFFFFFFFF
FF007F80001FFFFFFFFFFFC07F80001FFFFFFFFFFFC07F80003FFFFFFFFFFFE0
1F80003FFFFFFFFFFFE01F80003FFFFFFFFFFFE00F80003FFFFFFFFFFFE00F80
003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780003FFFFFFFFFFFF00780803F
FFFFFFFFFFF00780803FFFFFFFFFFFF00380803FFFFFFFFFFFF80380803FFFFF
FFFFFFF80380803FFFFFFFFFFFF80380C01FFFFFFFFFFFF80380C01FFFFFFFFF
FFF80180C01FFFFFFFFFFFF80180F01FFFFFFFFFFFF80180F007FFFFFFFFFFF8
0180F007FFFFFFFFFFF80180F807FFFFFFFFFFF80180F803FFFFFFFFFFF80180
F803FFFFFFFFFFF80180FC03FFFFFFFFFFF80180FE01FFFFFFFFFFF00180FE01
FFFFFFFFFFF00180FF00FFFFFFFFFFF00180FFC0FFFFFFFFFFF00180FFC07FFF
FFFFFFE00180FFC01FFFFFFFFFE00180FFE01FFFFFFFFFE00380FFF01FFFFFFF
FFE00380FFF80FFFFFFFFFC00380FFFC07FFFFFFFF000780FFFC03FFFFFFFF00
0780FFFF01FFFFFFFE000780FFFF807FFFFFFC000780FFFFC07FFFFFFC000F80
FFFFE01FFFFFF8001F80FFFFFC07FFFFC0001F80FFFFFC00FFFF00001F80FFFF
FE001FF000007F80FFFFFF8000000000FF80FFFFFFF000000001FF80FFFFFFFC
00000003FF80FFFFFFFF0000001FFF80FFFFFFFF0000001FFF80FFFFFFFFF000
007FFF80FFFFFFFFFF0007FFFF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
73 91 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a96 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a97 {{
42 0 0 0 0 0 setcachedevice
} exec } bind def
/a98 {{
0 0 0 0 29 37 setcachedevice
29 0 0 37 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 37 def
/ImageMatrix [29 0 0 -37 0 37]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE00FF8FFE00FF8FF8000F8FC07F038F807F018F00FFE18E01FFF38E07FFFF8
E07FFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF8C0FFFFF800FFFFF800FFFFF8
00FFFFF8007FFFF8C07FFFF8C07FFFF8C0000078C0000078C0000078C01FFFF8
E01FFFF8E01FFFF8F00FFFF8F00FFFF8F007FFF8F803FFF8FC01FFF8FF01FFF8
FFC07FF8FFE01FF8FFE00000FFFC0000FFFF8000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 37 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a99 {{
107 0 0 0 0 0 setcachedevice
} exec } bind def
/a100 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a101 {{
99 0 0 0 0 0 setcachedevice
} exec } bind def
/a102 {{
0 0 0 -82 18 28 setcachedevice
18 0 0 110 0 -82 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 18 def
/Height 110 def
/ImageMatrix [18 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000080000080000080000080000083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FF
C083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083
FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC0
83FFC083FFC083FFC083FFC083FFC083FFC083FFC083FFC08000008000008000
00800000800000800000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
18 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a103 {{
126 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/C/N101 -1 TZ
%%BeginResource: font G
10 dict begin
T3Defs
/FontType 3 def
/FontName /N279 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-42 
132 
214 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 70 dict begin
/.notdef {250 0 d0} bind def
/a1 {{
0 0 0 0 58 72 setcachedevice
58 0 0 72 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 58 def
/Height 72 def
/ImageMatrix [58 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFFC001FFFFFFFFFFFFC000FFFFFFFFFFFFC000FFFFFFFFFFFFC0
00FFFFFFFFFFFFC000FFFFFFFFFFFFC0007FFFFFFFFFFFC0007FFFFFFFFFFFC0
007FFFFFFFFFFFC0807FFFFFFFFFFFC0803FFFFFFFFFFFC0803FFFFFFFFFFFC0
803FFFFFFFFFFFC0E03FFFFFFFFFFFC0E03FFFFFFFFFFFC0E00FFFFFFFFFFFC0
E00FFFFFFFFFFFC0E00FFFFFFFFFFFC0F00FFFFFFFFFFFC0F00FFFFFFFFFFFC0
F007FFFFFFFFFFC0F007FFFFFFFFFFC0F007C00FFFE03FC0F807C00FFFE03FC0
F8070001FF800FC0F80007F07F0383C0F80007F03E0381C0F8001FFC0607E1C0
FC003FFE0007E0C0FC003FFF8007F0C0FC00FFFFC007F0C0FC00FFFFE007F040
FC00FFFFE007F040FE00FFFFF007F840FE00FFFFF003F800FE00FFFFF803F800
FF80FFFFF803FC00FF80FFFFFE03FC00FF80FFFFFE03FC00FF803FFFFE00FC00
FF803FFFFE00FC00FF803FFFFE00FFC0FFC03FFFFF00FFC0FFC03FFFFF00FFC0
FFC01FFFFF007FC0FFC01FFFFF007FC0FFC01FFFFF007FC0FFE01FFFFF807FC0
FFE01FFFFF807FC0FFE00FFFFF803FC0FFE00FFFFF803FC0FFE00FFFFF803FC0
FFF00FFFFFC03FC0FFF00FFFFFC03FC0FFF007FFFFC01FC0FFF007FFFFC01FC0
FFF007FFFFC01FC0FFF807FFFFE01FC0FFF803FFFFE00FC0FFF803FFFFE00FC0
FFF803FFFFE00FC0FFFE03FFFFF80FC0FFFE03FFFFF80FC0FFFE00FFFFF803C0
FFFE00FFFFF803C0FFFE00FFFFF803C0FFFF00FFFFFC03C0FFFF00FFFFFC03C0
FFFF00FFFFFC03C0FFFF00FFFFFC03C0FFFF80FFFFFF0FC0FFFFC3FFFFFFFFC0
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
58 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
0 0 0 11 36 83 setcachedevice
36 0 0 72 0 11 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 36 def
/Height 72 def
/ImageMatrix [36 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF01FFF0FFFC007FF0FFE0003FF0FFE07C1FF0FFE3FE1FF0FFFFFE07F0FFFF
FE07F0FFFFFE03F0FFFFFE03F0FFFFFE03F0FFFFFE03F0FFFFFC03F0FFFFF007
F0FFFF0007F0FFF00007F0FF80001FF0FF80003FF0FC00007FF0F80007FFF0F0
0007FFF0E0003FFFF0E003FFFFF0E00FFFFFF0C01FFFFFF0C07FFFFFF0C07FFF
FFF0C0FFFFFFF000FFFFFFF001FFFFFFF001FFFFFFF001FFFFFFF001FFFFFFF0
01FFFFFFF0C1FFFFFFF0C1FFFFFFF0C1FFFFFFF0C1FFFFFFF0C0FFFFFFF0C0FF
FFFFF0E0FFFFFFF0E0FFFFFFF0E0FFFFFFF0E07FFFFFF0E07FFFFFF0F01FFFFF
F0F01FFFFFF0F81FFFFFF0F81FFFFFF0FC0FFFFFF0FC07FFFFF0FF07FFFFF0FF
03FFFFF0FF83FFFFF0FFC1FFFFF0FFC1FFFFF0FFC07FFFF0FFE03FFFF0FFF01F
FFF0FFFC1FFFF0FFFE0FFFF0FFFF07FFF0FFFF010070FFFF800000FFFFF00000
FFFFFC0000FFFFF80010FFFFF8FFF0FFFFF8FFF0FFFFF8FFF0FFFFF8FFF0FFFF
F8FFF0FFFFF8FFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
36 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a3 {{
67 0 0 0 0 0 setcachedevice
} exec } bind def
/a4 {{
0 0 0 0 78 45 setcachedevice
78 0 0 45 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 78 def
/Height 45 def
/ImageMatrix [78 0 0 -45 0 45]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000003F000003E000000000003F000003E000000000003F000003E0000000000
03F000003E000000FC00FFFFC00FFFF800FCFE01FFFFE01FFFFE03FCFE01FFFF
E01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01F
FFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE
03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FC
FE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01
FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFF
E01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01F
FFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE03FCFE01FFFFE01FFFFE
03FCFE01FFFFE01FFFFE03FCFE00FFFFE00FFFFE03FCFE00FFFFE00FFFFE03FC
FE00FFFFE00FFFFE03FCFE003FFFE007FFFE03FCFE003FFFE007FFFE03FCFE00
3FFFE007FFFE03FCFE001FFFC003FFF807FCFE010FFFC020FFF807FCF80107FF
C0207FF807FC000183FF80383FF007FC0001C07E00FC0FE00FFC0001E07E01FE
0FE01FFC0001FC0007FF8000FFFCFE01FF003FFFF003FFFCFE01FF003FFFF003
FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
78 45 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a5 {{
0 0 0 -1 47 47 setcachedevice
47 0 0 48 0 -1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 47 def
/Height 48 def
/ImageMatrix [47 0 0 -48 0 48]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFE007FFE03EFFE007FFE03EFF00007FC01EF803F83F800EE003F8070006C007
FE0703C6C00FFFC003C0C01FFFC007F0001FFFE007F0007FFFF007F0007FFFF0
07F0007FFFF007F0007FFFF807F0007FFFF807F0007FFFF807F0C01FFFF807F0
C01FFFF807F0C00FFFF807FEC007FFF807FEE007FFF807FEF007FFF807FEF801
FFF807FEF8007FF807FEFF001FF807FEFFC000F807FEFFF000F807FEFFFF0000
07FEFFFFF80007FEFFFFF80007FEFFFFFFF807FEFFFFFFF807FEFFFFFFF807FE
FFFFFFF807FEFC0FFFF807FEF807FFF807FEF003FFF807FEF003FFF007FEF003
FFF00FFEF003FFF00FFEF003FFE01FFEF003FFE01FFEF007FFC01FFEF80FFF00
7FFEFC1FFF01FFFEFF03FC03FFFEFFC0001FFFFEFFC0001FFFFEFFFC00FFFFFE
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
47 48 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
84 0 0 0 0 0 setcachedevice
} exec } bind def
/a7 {{
0 0 0 2 50 45 setcachedevice
50 0 0 43 0 2 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 43 def
/ImageMatrix [50 0 0 -43 0 43]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00001FF800000000001FF800000000001FF800000000001FF8000000F800FFFE
000FC0FF00FFFF007FC0FFC1FFFF00FFC0FFE0FFFE01FFC0FFE0FFFC01FFC0FF
F07FFC01FFC0FFF87FF803FFC0FFFC7FF807FFC0FFFF1FF01FFFC0FFFF0FC01F
FFC0FFFF07C01FFFC0FFFF83803FFFC0FFFFC3007FFFC0FFFFE300FFFFC0FFFF
F000FFFFC0FFFFF001FFFFC0FFFFF001FFFFC0FFFFF007FFFFC0FFFFE007FFFF
C0FFFFE00FFFFFC0FFFFE00FFFFFC0FFFFC007FFFFC0FFFF8001FFFFC0FFFF00
01FFFFC0FFFF0070FFFFC0FFFF01F8FFFFC0FFFC03F87FFFC0FFF803FC3FFFC0
FFF803FC3FFFC0FFF007FE1FFFC0FFE00FFF07FFC0FFE01FFF07FFC0FFC01FFF
01FFC0FF001FFF00FFC0FE001FFE000FC0000007FC000040000007FC00004000
0007FC000040000007FC000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 43 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a8 {{
49 0 0 0 0 0 setcachedevice
} exec } bind def
/a9 {{
0 0 0 0 21 49 setcachedevice
21 0 0 49 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 21 def
/Height 49 def
/ImageMatrix [21 0 0 -49 0 49]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF03F8FF03F8FC01F8F81C38F81C38F01E18F01F08F01F88F01F88F80FC0F80F
C0F807C0FC07C0FC07F8FC07F8FF03F8FF03F8FF01F8FF81F8FF81F8FF81F81F
C0781FC07807C078C7C038C7E038E3E038E3E038E1E038F0E038F80078FC01F8
FF03F8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FFFC38FFF0
18FFF018FFF008FFF008FFF008FFFC08FFFE18>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
21 49 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a10 {{
0 0 0 0 26 99 setcachedevice
26 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 99 def
/ImageMatrix [26 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0
83FFFFC083FFFFC083FFFFC083FFFFC083FFFFC0800000408000000080000000
80000000C0000040C0000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a11 {{
0 0 0 -21 61 -15 setcachedevice
61 0 0 6 0 -21 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 6 def
/ImageMatrix [61 0 0 -6 0 6]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000000000008800000000000000800000000000000000000000000000000
00000000000000008000000000000008>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 6 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a12 {{
0 0 0 -62 62 12 setcachedevice
62 0 0 74 0 -62 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 74 def
/ImageMatrix [62 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE7FFFFFFFFFFCFFFE3FFFFFFFFFFCFFFE0FFFFFFFFFFCFFFE07FFFFFFFFFC
FFFE07FFFFFFFFFCFFFE01FFFFFFFFFCFFFE00FFFFFFFFFCFFFE007FFFFFFFFC
FFFF001FFFFFFFFCFFFF0007FFFFFFFCFFFF0007FFFFFFFCFFFF0003FFFFFFFC
FFFF0001FFFFFFFCFFFF0000FFFFFFFCFFFF00007FFFFFFCFFFF00001FFFFFFC
FFFF00C01FFFFFFCFFFF00E00FFFFFFCFFFF00F807FFFFFCFFFF00F803FFFFFC
FFFF80FC01FFFFFCFFFF80FF007FFFFCFFFF80FF807FFFFCFFFF807FC03FFFFC
FFFF807FE01FFFFCFFFF807FE00FFFFCFFFF807FF00FFFFCFFFF807FFC07FFFC
FFFF807FFE07FFFCFFFF807FFF01FFFCFFFF807FFF80FFFCFFFF807FFF807FFC
FFFF807FFFC03FFCFFFF807FFFF03FFCFFFF807FFFF83FFCFFFF807FFFFC1FFC
FFFF807FFFFC07FCFFFF807FFFFC07FCFFFF807FFFFE03FCFFFF807FFFFF01FC
FFFF807FFFFFC1FCFFFF807FFFFFE1FCFFFF807FFFFFF0FCFFFF807FFFFFF0FC
FFFF007FFFFFF07CFFFF007FFFFFF87CFFFF007FFFFFFC7CFFFF007FFFFFFC1C
FFFF007FFFFFFF1CFFFF007FFFFFFF0CFFFF00FFFFFFFF0CFFFF00FFFFFFFF8C
FFFF00FFFFFFFF8CFFFE00FFFFFFFFC4FFFE00FFFFFFFFC4FFFE00FFFFFFFFC4
FFFC00FFFFFFFFC0FFFC00FFFFFFFFC0FFFC01FFFFFFFFC0FFFC01FFFFFFFF80
FFF001FFFFFFFF80FFE001FFFFFFFF00FFE007FFFFFFF800FFC007FFFFFF0000
FFC007FFFFFF0000FF800FFFFFFF0000FF001FFFFFFF0000F0001FFFFFFF0000
00001FFFFFFF000400003FFFFFFFC00400007FFFFFFFC00CE001FFFFFFFFE01C
F00FFFFFFFFFE0FCF00FFFFFFFFFE0FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a13 {{
73 0 0 0 0 0 setcachedevice
} exec } bind def
/a14 {{
0 0 0 -62 29 -31 setcachedevice
29 0 0 31 0 -62 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 29 def
/Height 31 def
/ImageMatrix [29 0 0 -31 0 31]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8C7F87F8881F87C00
807878008078780080387000E0084018E0000018FE0001F8FF8007F8FFF03FF8
FF8007F8FE0001F8E000001880084000803870008078780081F87C00C7F87F88
C7F87F88FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8FFF87FF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
29 31 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a15 {{
71 0 0 0 0 0 setcachedevice
} exec } bind def
/a16 {{
0 0 0 -54 24 45 setcachedevice
24 0 0 99 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 24 def
/Height 99 def
/ImageMatrix [24 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFF8FFFFF0FFFFC0FFFF81FFFF07FFFF0FFFFE1FFFFC1FFFF01FFFE03FFFE0
7FFFE07FFFC1FFFF83FFFF83FFFF03FFFF07FFFF07FFFC07FFFC0FFFF80FFFF8
0FFFF81FFFF81FFFF01FFFF07FFFF07FFFE07FFFE07FFFE07FFFE07FFFC0FFFF
C0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFF00FFFF01FFFF01FFFF01FFFF01FF
FF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01
FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFFC0FFFFC0FFFFC0FFFFC0FFFF
C0FFFFC0FFFFC0FFFFE07FFFE07FFFE07FFFE07FFFF07FFFF07FFFF01FFFF01F
FFF81FFFF80FFFF80FFFFC0FFFFC07FFFC07FFFF07FFFF03FFFF83FFFF83FFFF
C1FFFFC07FFFE07FFFE03FFFF03FFFFC1FFFFE1FFFFE0FFFFF07FFFF81FFFFC1
FFFFF0FFFFF8FFFFF8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
24 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a17 {{
60 0 0 0 0 0 setcachedevice
} exec } bind def
/a18 {{
0 0 0 -24 37 23 setcachedevice
37 0 0 47 0 -24 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 37 def
/Height 47 def
/ImageMatrix [37 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FF800FFFF8FF800FFFF8FE0000FFF8F03FF03FF8E03FF007F8C1FFFC03F883FF
FF81F887FFFFC1F881FFFFE0F8803FFFE0F8801FFFE038801FFFF038801FFFF0
38801FFFF038C01FFFF018C01FFFF018C01FFFF018F03FFFE018FFFFFFC018FF
FFFFC018FFFFFC0018FFFF800038FFFC000038FFE0000038FFC00000F8FFC000
01F8FF800003F8FF80000FF8FF80000FF8FF0000FFF8FF003FFFF8FF007FFFF8
FF00FFF818FF83FFF000FF83FFF000FF83FFF000FF80FFF000FF80FFF000FFC0
FFF800FFE07FFF00FFE07FFF00FFE01FFF00FFF803F808FFFE03F818FFFF8000
F8FFFFF003F8FFFFF003F8>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
37 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a19 {{
33 0 0 0 0 0 setcachedevice
} exec } bind def
/a20 {{
0 0 0 -54 24 45 setcachedevice
24 0 0 99 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 24 def
/Height 99 def
/ImageMatrix [24 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8FFFFF87FFFF83FFFFC1FFFFE0FFFFF0FFFFF83FFFF81FFFF80FFFFE07FFFF07
FFFF07FFFF83FFFFC0FFFFC0FFFFC07FFFE07FFFE07FFFE03FFFF83FFFF81FFF
F81FFFFC1FFFFC1FFFFC0FFFFE0FFFFE0FFFFE03FFFE03FFFE03FFFE03FFFF01
FFFF01FFFF01FFFF01FFFF01FFFF01FFFF01FFFF00FFFF80FFFF80FFFF80FFFF
80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FF
FF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF80FFFF01FFFF01FFFF01FFFF01
FFFF01FFFF01FFFF01FFFE03FFFE03FFFE03FFFE03FFFE0FFFFE0FFFFC0FFFFC
0FFFFC1FFFF81FFFF81FFFF83FFFE03FFFE03FFFE07FFFC07FFFC0FFFFC0FFFF
83FFFF03FFFF07FFFE07FFFE0FFFF81FFFF83FFFF03FFFE0FFFFC1FFFFC3FFFF
87FFFF8FFFFF8FFFFF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
24 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a21 {{
47 0 0 0 0 0 setcachedevice
} exec } bind def
/a22 {{
0 0 0 0 46 67 setcachedevice
46 0 0 67 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 46 def
/Height 67 def
/ImageMatrix [46 0 0 -67 0 67]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFF0FFFCFFFFFFE03FFCFFFFFFE03FFCFFFFFFE03FFCFFFFFFE00FFCFFFF
FFE00FFCFFFFFFE00FFCFFFFFFF00FFCFFFFFFF007FCFFFFFFF007FCFFFFFFF0
07FCFFFFFFF807FCFFFFFFF807FCFFFFFFF803FCFFFFFFF803FCFFFFFFF803FC
FFFFFFFC03FCFFFFFFFC03FCFFFFFFFC01FCFFFFFFFC01FCFC3FFFFC01FCFC3F
FFFE01FCF00FFFFE01FCF007FFFE00FCF007FFFE00FCF807FFFE00FCF807FFFF
80FCF807FFFF80FCF803FFFF803CFC03FFFF803CFC03FFFF803CFC03FFFFC03C
FC01FFFFC01CFC01FFFFC01CFE01FFFFC01CFE01FFFFE01CFE01FFFFE01CFE00
FFFFE00CFE00FFFFE00CFF80FFFFE00CFF80FFFFF00CFF80FFFFF00CFF803FFF
F004FF803FFFF004FFC03FFFF004FFC03FFFF804FFC03FFFF804FFC01FFFF800
FFC01FFFF8001FE01FFFF8001FE01FFFFE001FE01FFFFE001FE00FFFFE000FF0
0FFFFE000FF007FFFE008FF007FFFF0083F003FFFF0083F003FFFF00E3F000FF
FF00E3F0087FFE00E1F0083FFE00E0F00C0FFE00F0601E01F804F8603F81F80C
FC00FFF0001CFE03FFFC01FCFE03FFFC01FC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
46 67 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a23 {{
0 0 0 -19 42 13 setcachedevice
42 0 0 32 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 42 def
/Height 32 def
/ImageMatrix [42 0 0 -32 0 32]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FC1FFFC3FFC0FC1FFFC3FFC0F80FFF01FFC0F80FFF01FFC0F807FE01FFC0FC07
FE01FFC0FC07FE01FFC0FF07FE03FFC0FF03FE03FFC0FF83FE03FFC0FF83FE03
FFC0FF83FE07FFC0FFC1FE07FFC0FFC1FE07FFC0FFE1FE07FFC0FFE1FE07FFC0
FFE1FE07FFC0FFE07E07FFC0FFF07F07FFC0FFF07F07FFC0FFFC7F07FFC0FFFC
7F07FFC01FFC3F07FFC01FFC3F07FFC003FE3FC7FFC0C3FE3FC7FFC0E0FE3FC7
FFC0F000000001C0F00000000040F80000000000FC0000000000FF8000000040
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
42 32 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a24 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a25 {{
0 0 0 0 26 99 setcachedevice
26 0 0 99 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 99 def
/ImageMatrix [26 0 0 -99 0 99]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFC40FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000
FFFFF000FFFFF000FFFFF000FFFFF000FFFFF000800000000000000000000000
000000008000004080000040>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 99 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a26 {{
0 0 0 11 61 93 setcachedevice
61 0 0 82 0 11 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 61 def
/Height 82 def
/ImageMatrix [61 0 0 -82 0 82]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<8000000000000008000000000000000000000000000000000000000000000000
8000000000000008FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8FFFFFFFFFFFFFFF8
FFFFFFFFFFFFFFF8FFFFFFFFFFFFFE08FFFFFFFFFFFFF800FFFFFFFFFFFFF800
FFFFFFFFFFFFE000FFFFFFFFFFFF0008FFFFFFFFFFFC0008FFFFFFFFFFE00078
FFFFFFFFFF8001F8FFFFFFFFFF800FF8FFFFFFFFFE003FF8FFFFFFFFF000FFF8
FFFFFFFFC000FFF8FFFFFFFE0007FFF8FFFFFFF8001FFFF8FFFFFFF800FFFFF8
FFFFFFE003FFFFF8FFFFFF000FFFFFF8FFFFFC000FFFFFF8FFFFE0007FFFFFF8
FFFF8001FFFFFFF8FFFF800FFFFFFFF8FFFE003FFFFFFFF8FFF000FFFFFFFFF8
FFC000FFFFFFFFF8FE0007FFFFFFFFF8F8001FFFFFFFFFF8F800FFFFFFFFFFF8
E003FFFFFFFFFFF8800FFFFFFFFFFFF8000FFFFFFFFFFFF8003FFFFFFFFFFFF8
0007FFFFFFFFFFF88007FFFFFFFFFFF8E001FFFFFFFFFFF8FC003FFFFFFFFFF8
FC000FFFFFFFFFF8FF8003FFFFFFFFF8FFE0007FFFFFFFF8FFF8007FFFFFFFF8
FFFF001FFFFFFFF8FFFFC003FFFFFFF8FFFFC000FFFFFFF8FFFFF8003FFFFFF8
FFFFFE0007FFFFF8FFFFFF8007FFFFF8FFFFFFF001FFFFF8FFFFFFFC003FFFF8
FFFFFFFC000FFFF8FFFFFFFF8003FFF8FFFFFFFFE0007FF8FFFFFFFFF8007FF8
FFFFFFFFFF001FF8FFFFFFFFFFC003F8FFFFFFFFFFC000F8FFFFFFFFFFF80038
FFFFFFFFFFFE0008FFFFFFFFFFFF8008FFFFFFFFFFFFF000FFFFFFFFFFFFFC00
FFFFFFFFFFFFFC00FFFFFFFFFFFFFF88>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
61 82 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a27 {{
79 0 0 0 0 0 setcachedevice
} exec } bind def
/a28 {{
0 0 0 30 55 97 setcachedevice
55 0 0 67 0 30 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 55 def
/Height 67 def
/ImageMatrix [55 0 0 -67 0 67]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<83FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE00FFFFFFFFFFFE007FFFFF
FFFFFE007FFFFFFFFFFE007FFFFFFFFFFE807FFFFFFFFFFE803FFFFFFFFFFE80
3FFFFFFFFFFE803FFFFFFFFFFEE03FFFFFFFFFFEE03FFFFFFFFFFEE00FFFFFFF
FFFEE00FFFFFFFFFFEE00FFFFFFFFFFEF00FFFFFFFFFFEF00FFFFFFFFFFEF007
FFFFFFFFFEF007FFFFFFFFFEF007801FFF80FEF807801FFF80FEF8060003FE00
7EF8000FE0F80C3EF8000FE0700C1EF8001FF8201E0EFC003FFC001F0EFC00FF
FE001F8EFC00FFFF801F8EFC00FFFFC01F82FC00FFFFC01F82FE00FFFFC01FE2
FE00FFFFE00FE0FE00FFFFE00FE0FE00FFFFE00FF0FF80FFFFF00FF0FF80FFFF
F00FF0FF803FFFF007F0FF803FFFF007FEFF803FFFF007FEFFC03FFFF807FEFF
C03FFFF807FEFFC01FFFF803FEFFC01FFFF803FEFFC01FFFF803FEFFE01FFFFE
03FEFFE01FFFFE03FEFFE00FFFFE00FEFFE00FFFFE00FEFFE00FFFFE00FEFFF0
0FFFFF00FEFFF00FFFFF00FEFFF007FFFF007EFFF007FFFF007EFFF007FFFF00
7EFFF807FFFF807EFFF803FFFF803EFFF803FFFF803EFFF803FFFF803EFFFE03
FFFFC03EFFFE03FFFFC03EFFFE00FFFFC03EFFFE00FFFFC03EFFFE00FFFFE03E
FFFF00FFFFF87EFFFF87FFFFFFFEFFFF87FFFFFFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
55 67 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a29 {{
100 0 0 0 0 0 setcachedevice
} exec } bind def
/a30 {{
0 0 0 42 32 105 setcachedevice
32 0 0 63 0 42 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 32 def
/Height 63 def
/ImageMatrix [32 0 0 -63 0 63]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFE07FFFFF000FFFFF000FFFFE1F87FFFE7FC3FFFE7FC3FFFFFFC1FFFFFFC1F
FFFFFC1FFFFFF81FFFFFC01FFFFE001FFFE0001FFF00003FFF00007FFC0000FF
F00007FFE00007FFE0007FFFC007FFFFC01FFFFFC07FFFFF00FFFFFF00FFFFFF
01FFFFFF01FFFFFF01FFFFFF01FFFFFF03FFFFFF01FFFFFF01FFFFFF01FFFFFF
C1FFFFFFC1FFFFFFC1FFFFFFC1FFFFFFE0FFFFFFE0FFFFFFE0FFFFFFF07FFFFF
F07FFFFFF07FFFFFF81FFFFFFC0FFFFFFC0FFFFFFF0FFFFFFF87FFFFFF83FFFF
FFC1FFFFFFE07FFFFFF07FFFFFFC3FFFFFFE1FFFFFFE0C01FFFF0000FFFF8000
FFFFF000FFFFF001FFFFF1FFFFFFF1FFFFFFF1FFFFFFF1FFFFFFF1FF>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
32 63 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a31 {{
61 0 0 0 0 0 setcachedevice
} exec } bind def
/a32 {{
0 0 0 -19 132 121 setcachedevice
132 0 0 140 0 -19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 132 def
/Height 140 def
/ImageMatrix [132 0 0 -140 0 140]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000000000000000000000000000FFF0800000000000000000000000000000
FFF08000000000000000000000000000007FF0C0000000000000000000000000
00007FF0C000000000000000000000000000007FF0E000000000000000000000
000000001FF0F000000000000000000000000000001FF0F00000000000000000
0000000000001FF0FC00000000000000000000000000001FF0FE000000000000
00000000000000000FF0FE00000000000000000000000000000FF0FF003FFFFF
FFFFFFFFFFFF0000000007F0FF801FFFFFFFFFFFFFFFFFFFC0000007F0FFC01F
FFFFFFFFFFFFFFFFFFFF000007F0FFC01FFFFFFFFFFFFFFFFFFFFFF00007F0FF
F007FFFFFFFFFFFFFFFFFFFFFE0003F0FFF003FFFFFFFFFFFFFFFFFFFFFE0003
F0FFF801FFFFFFFFFFFFFFFFFFFFFFC003F0FFFC00FFFFFFFFFFFFFFFFFFFFFF
F001F0FFFE00FFFFFFFFFFFFFFFFFFFFFFF801F0FFFF007FFFFFFFFFFFFFFFFF
FFFFFF01F0FFFF007FFFFFFFFFFFFFFFFFFFFFFF81F0FFFF001FFFFFFFFFFFFF
FFFFFFFFFF8070FFFFC00FFFFFFFFFFFFFFFFFFFFFFFC070FFFFE007FFFFFFFF
FFFFFFFFFFFFFFE030FFFFF007FFFFFFFFFFFFFFFFFFFFFFF030FFFFF803FFFF
FFFFFFFFFFFFFFFFFFFC30FFFFFC01FFFFFFFFFFFFFFFFFFFFFFFE30FFFFFC01
FFFFFFFFFFFFFFFFFFFFFFFE10FFFFFF007FFFFFFFFFFFFFFFFFFFFFFE10FFFF
FF003FFFFFFFFFFFFFFFFFFFFFFF10FFFFFF803FFFFFFFFFFFFFFFFFFFFFFF10
FFFFFFC01FFFFFFFFFFFFFFFFFFFFFFF80FFFFFFE00FFFFFFFFFFFFFFFFFFFFF
FFF0FFFFFFE007FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFF001FFFFFFFFFFFFFFFF
FFFFFFF0FFFFFFFC01FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFC01FFFFFFFFFFFF
FFFFFFFFFFF0FFFFFFFE00FFFFFFFFFFFFFFFFFFFFFFF0FFFFFFFF007FFFFFFF
FFFFFFFFFFFFFFF0FFFFFFFF003FFFFFFFFFFFFFFFFFFFFFF0FFFFFFFF801FFF
FFFFFFFFFFFFFFFFFFF0FFFFFFFFC007FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF0
07FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF007FFFFFFFFFFFFFFFFFFFFF0FFFFFF
FFF803FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFF801FFFFFFFFFFFFFFFFFFFFF0FF
FFFFFFFC00FFFFFFFFFFFFFFFFFFFFF0FFFFFFFFFE007FFFFFFFFFFFFFFFFFFF
F0FFFFFFFFFF007FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFC01FFFFFFFFFFFFFFF
FFFFF0FFFFFFFFFFE01FFFFFFFFFFFFFFFFFFFF0FFFFFFFFFFE00FFFFFFFFFFF
FFFFFFFFF0FFFFFFFFFFE007FFFFFFFFFFFFFFFFFFF0FFFFFFFFFFF003FFFFFF
FFFFFFFFFFFFF0FFFFFFFFFFF803FFFFFFFFFFFFFFFFFFF0FFFFFFFFFFFC01FF
FFFFFFFFFFFFFFFFF0FFFFFFFFFFFF007FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFF
003FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFF803FFFFFFFFFFFFFFFFFF0FFFFFFFF
FFFF801FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFC01FFFFFFFFFFFFFFFFFF0FFFF
FFFFFFFFE00FFFFFFFFFFFFFFFFFF0FFFFFFFFFFFFF007FFFFFFFFFFFFFFFFF0
FFFFFFFFFFFFF001FFFFFFFFFFFFFFFFF0FFFFFFFFFFFFE000FFFFFFFFFFFFFF
FFF0FFFFFFFFFFFFC000FFFFFFFFFFFFFFFFF0FFFFFFFFFFFFC000FFFFFFFFFF
FFFFFFF0FFFFFFFFFFFFC0007FFFFFFFFFFFFFFFF0FFFFFFFFFFFF80003FFFFF
FFFFFFFFFFF0FFFFFFFFFFFF00003FFFFFFFFFFFFFFFF0FFFFFFFFFFFC00003F
FFFFFFFFFFFFFFF0FFFFFFFFFFFC00007FFFFFFFFFFFFFFFF0FFFFFFFFFFFC00
007FFFFFFFFFFFFFFFF0FFFFFFFFFFF80000FFFFFFFFFFFFFFFFF0FFFFFFFFFF
F00001FFFFFFFFFFFFFFFFF0FFFFFFFFFFF00001FFFFFFFFFFFFFFFFF0FFFFFF
FFFFE00007FFFFFFFFFFFFFFFFF0FFFFFFFFFFC00007FFFFFFFFFFFFFFFFF0FF
FFFFFFFFC0000FFFFFFFFFFFFFFFFFF0FFFFFFFFFF00001FFFFFFFFFFFFFFFFF
F0FFFFFFFFFF00003FFFFFFFFFFFFFFFFFF0FFFFFFFFFE00003FFFFFFFFFFFFF
FFFFF0FFFFFFFFFC00003FFFFFFFFFFFFFFFFFF0FFFFFFFFF800007FFFFFFFFF
FFFFFFFFF0FFFFFFFFF80001FFFFFFFFFFFFFFFFFFF0FFFFFFFFF80003FFFFFF
FFFFFFFFFFFFF0FFFFFFFFF00003FFFFFFFFFFFFFFFFFFF0FFFFFFFFC00003FF
FFFFFFFFFFFFFFFFF0FFFFFFFF800007FFFFFFFFFFFFFFFFFFF0FFFFFFFF8000
0FFFFFFFFFFFFFFFFFFFF0FFFFFFFF80000FFFFFFFFFFFFFFFFFFFF0FFFFFFFF
00001FFFFFFFFFFFFFFFFFFFF0FFFFFFFE00007FFFFFFFFFFFFFFFFFFFF0FFFF
FFFC00007FFFFFFFFFFFFFFFFFFFF0FFFFFFFC0000FFFFFFFFFFFFFFFFFFFFF0
FFFFFFF00000FFFFFFFFFFFFFFFFFFFFF0FFFFFFF00001FFFFFFFFFFFFFFFFFF
FFF0FFFFFFE00003FFFFFFFFFFFFFFFFFFFFF0FFFFFFC00007FFFFFFFFFFFFFF
FFFFFFF0FFFFFFC00007FFFFFFFFFFFFFFFFFFFFF0FFFFFF800007FFFFFFFFFF
FFFFFFFFFFF0FFFFFF00001FFFFFFFFFFFFFFFFFFFFFF0FFFFFF00003FFFFFFF
FFFFFFFFFFFFFFF0FFFFFC00007FFFFFFFFFFFFFFFFFFFFFF0FFFFFC00007FFF
FFFFFFFFFFFFFFFFFFF0FFFFF800007FFFFFFFFFFFFFFFFFFFFFF0FFFFF00000
FFFFFFFFFFFFFFFFFFFFFFF0FFFFF00001FFFFFFFFFFFFFFFFFFFFFFF0FFFFF0
0007FFFFFFFFFFFFFFFFFFFFFFF0FFFFE00007FFFFFFFFFFFFFFFFFFFFFFF0FF
FFC0000FFFFFFFFFFFFFFFFFFFFFFF80FFFF00000FFFFFFFFFFFFFFFFFFFFFFF
00FFFF00001FFFFFFFFFFFFFFFFFFFFFFF10FFFE00003FFFFFFFFFFFFFFFFFFF
FFFE10FFFE00003FFFFFFFFFFFFFFFFFFFFFFE10FFFC00007FFFFFFFFFFFFFFF
FFFFFFFC30FFF80001FFFFFFFFFFFFFFFFFFFFFFFC30FFF80001FFFFFFFFFFFF
FFFFFFFFFFF030FFF00001FFFFFFFFFFFFFFFFFFFFFFE070FFC00003FFFFFFFF
>
<FFFFFFFFFFFFFFC070FFC00007FFFFFFFFFFFFFFFFFFFFFFC1F0FF80000FFFFF
FFFFFFFFFFFFFFFFFF81F0FF80000FFFFFFFFFFFFFFFFFFFFFFC01F0FF00000F
FFFFFFFFFFFFFFFFFFFFF801F0FE00001FFFFFFFFFFFFFFFFFFFFFE003F0FC00
007FFFFFFFFFFFFFFFFFFFFF0003F0FC0000FFFFFFFFFFFFFFFFFFFFFF0007F0
FC0000FFFFFFFFFFFFFFFFFFFFFC0007F0F00001FFFFFFFFFFFFFFFFFFFFC000
07F0E00001FFFFFFFFFFFFFFFFFFFE000007F0C00003FFFFFFFFFFFFFFFFFF80
00000FF0C00007FFFFFFFFFFFFFFFE000000000FF0C00007FFFFFFFFFFFFFFFE
000000001FF08000000000000000000000000000001FF0800000000000000000
0000000000007FF08000000000000000000000000000007FF080000000000000
00000000000000007FF08000000000000000000000000000007FF08000000000
00000000000000000000FFF0>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
132 140 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a33 {{
114 0 0 0 0 0 setcachedevice
} exec } bind def
/a34 {{
0 0 0 0 38 50 setcachedevice
38 0 0 50 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 38 def
/Height 50 def
/ImageMatrix [38 0 0 -50 0 50]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C3FFFF81FCC3FFFF81FC81FFFE003C80FFFC0E1C80FFFC0E1C80FFF80F0CC0FF
F80F84C0FFF80FC4C03FF80FC4C03FFC07E0C03FFC07E0E03FFC03E0E01FFE03
E0E01FFE03FCE01FFE03FCF01FFF81FCF01FFF81FCF00FFF81FCF00FFF80FCF0
0FFFC0FCF80FFFC0FCF80FFFC0FCF807FFC0FCF807FFC0FCF803FFE0FCFE03FF
E0FCFE03FFE0FCFE00FFE0FCFE003FC0FCFE000FC0FCFF020001FCFF038003FC
FF00F00FFCFF00FFFFFCFF00FFFFFCFF80FFFFFCFF807FFFFCFF807FFFFCFF80
7FFFFCFFC07FFFFCFFC07FFFFCFFC03FFFFCFFC03FFFFCFFC03FFFFCFFE03FFF
FCFFE03FFFFCFE001FFFFCFE001FFFFCFE001FFFFCFFF81FFFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
38 50 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a35 {{
0 0 0 7 39 54 setcachedevice
39 0 0 47 0 7 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 47 def
/ImageMatrix [39 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC00000FFFC000000FFF0000000FFC0000000FF000FFFFEFF00FFFFFEFE03
FFFFFEFC1FFFFFFEF81FFFFFFEF03FFFFFFEF07FFFFFFEF0FFFFFFFEC0FFFFFF
FEC1FFFFFFFE81FFFFFFFE81FFFFFFFE87FFFFFFFE87FFFFFFFE07FFFFFFFE0F
FFFFFFFE0FFFFFFFFE00000000000000000000000000000000000000000FFFFF
FFFE0FFFFFFFFE07FFFFFFFE07FFFFFFFE87FFFFFFFE87FFFFFFFE81FFFFFFFE
81FFFFFFFEC0FFFFFFFEC0FFFFFFFEF0FFFFFFFEF07FFFFFFEF83FFFFFFEF81F
FFFFFEFC03FFFFFEFE00FFFFFEFF00FFFFFEFFC00FFFFEFFF0000000FFF00000
00FFFC000000FFFFC00000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a36 {{
50 0 0 0 0 0 setcachedevice
} exec } bind def
/a37 {{
0 0 0 0 62 52 setcachedevice
62 0 0 52 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 62 def
/Height 52 def
/ImageMatrix [62 0 0 -52 0 52]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFFFFFFC00FFCFFE1FFFFFF8000FCFFE0FFFFFF80003CFFE0FFFFFF80003C
FFE03FFFFF807C0CFFF03FFFFF80FC04FFF01FFFFF80FC04FFF01FFFFF80FE00
FFF01FFFFF80FF80FFF81FFFFF80FFFCFFF80FFFFF80FFFCFFF80FFFFFC0FFFC
FFF80FFFFFC07FFCFFFE07FFFFC07FFCFFFE07FFFFC07FFCFFFE07FFFFC07FFC
FFFF07FFFFC07FFCFFFF03FFFFC07FFCFFFF03FFFFC07FFCFFFF03FFFFE03FFC
FFFF80FFFFE03FFCFFFF80FFFFE03FFCFFFF80FFFFE03FFCFFE0000000003FFC
FFE0000000001FFCFFF0000000001FFCFFF8000000001FFCFFFFC07FFFFC1FFC
FFFFE07FFFFC0FFCFFFFE03FFFFC0FFCFFFFE03FFFFC0FFCFFFFE03FFFFC0FFC
FFFFE03FFFFE03FCFFFFF83FFFFE03FCFFFFF81FFFFE03FCFFFFF81FFFFF03FC
FFFFF81FFFFF01FCFFFFF81FFFFF01FC0FFFF81FFFFF01FC0FFFF81FFFFF81FC
81FFFC1FFFFF80FC80FFFC0FFFFF80FC80FFFC0FFFFF80FCE07FFC0FFFFFE07C
F03FFC0FFFFFE07CF83FFC0FFFFFF07CFC0FFC0FFFFFF03CFF81F80FFFFFF03C
FF80000FFFFFF03CFFC0000FFFFFF80CFFF0000FFFFFFC0CFFFF801FFFFFFE0C
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
62 52 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a38 {{
0 0 0 -140 71 -66 setcachedevice
71 0 0 74 0 -140 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 71 def
/Height 74 def
/ImageMatrix [71 0 0 -74 0 74]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC7FFFFFFFFFFFFFEFFC1FFFFFFFFFFFFFEFFC07FFFFFFFFFFFFEFFC01FFFFF
FFFFFFFEFFE01FFFFFFFFFFFFEFFE01FFFFFFFFFFFFEFFE01FFFFFFFFFFFFEFF
E00FFFFFFFFFFFFEFFF00FFFFFFFFFFFFEFFF00FFFFFFFFFFFFEFFF80FFFFFFF
FFFFFEFFF807FFFFFFFFFFFEFFF807FFFFFFFFFFFEFFF803FFFFFFFFFFFEFFFC
03FFFFFFFFFFFEFFFC03FFFFFFFFFFFEFFFC03FFFFFFFFFFFEFFFF01FFFFFFFF
FFFEFFFF01FFFFFFFFFFFEFFFF01FFFFFFFFFFFEFFFF007FFFFFFFFFFEFFFF80
7FFFFFFFFFFEFFFF807FFFFFFFFFFEFFFF807FFFFFFFFFFEFFFFC03FFFFFFFFF
FEFFFFC03007FFFFFFFEFFFFC030007FFFFFFEFFFFC0180007FFFFFEFFFFC01C
0007FFFFFEFFFFE01F0001FFFFFEFFFFE01FFF803FFFFEFFFFE01FFF800FFFFE
FFFFE00FFFFC01FFFEFFFFF00FFFFF00FFFEFFFFF00FFFFFC0FFFEFFFFF00FFF
FFF87FFEFFFFF007FFFFFC1FFEFFFFF007FFFFFC07FEFFFFFC07FFFFFE03FEFF
FFFC07FFFFFF01FEFFFFFC07FFFFFFC1FEFFFFFC01FFFFFFC0FEFFFFFC01FFFF
FFE07EFFFFFC01FFFFFFE01EFFFFFE01FFFFFFF01EFFFFFE01FFFFFFF00EFFFF
FE01FFFFFFF80EFFFFFE00FFFFFFF806FFFFFE00FFFFFFF806FFFFFE00FFFFFF
F802FFFFFF00FFFFFFFC02FFFFFF00FFFFFFFC02FFFFFF00FFFFFFFC02FFFFFF
007FFFFFFC001FFFFF007FFFFFFC0001FFFF007FFFFFFC0080FFFF007FFFFFF8
00807FFF807FFFFFF800C07FFF807FFFFFF800C03FFF807FFFFFF800F03FFF80
3FFFFFF000F01FFF803FFFFFE000F81FFF803FFFFFC002FC07FF803FFFFE0002
FE07FF803FFFFE0002FF03FF803FFFFC0006FFE0FFC03FFFC0000EFFE003C03F
FC00000EFFF00000000000001EFFFC000000000000FEFFFFC00000000001FEFF
FFF0000000001FFEFFFFFFC0000001FFFEFFFFFFC0000001FFFE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
71 74 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a39 {{
83 0 0 0 0 0 setcachedevice
} exec } bind def
/a40 {{
0 0 0 -49 50 23 setcachedevice
50 0 0 72 0 -49 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 72 def
/ImageMatrix [50 0 0 -72 0 72]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFC07FC0E1FFFFFFC07FC080FFFFFF001FC0803FFFFE0F0FC0803FFFF8
0F03C0C03FFFF80F81C0C03FFFF80FE1C0C03FFFF80FF1C0C01FFFF80FF0C0E0
1FFFF80FF8C0E01FFFF807F840E01FFFF807F840E00FFFF807FC40E00FFFF807
FC40F00FFFF803FC00F00FFFFE03FE00F00FFFFE00FE00F007FFFE00FE00F007
FFFF00FFC0F807FFFF00FFC0F807FFFF007FC0F807FFFF807FC0F803FFFF807F
C0F803FFFF803FC0FE03FFFF803FC0FE03FFFFC03FC0FE03FFFFC03FC0FE00FF
FFC03FC0FE00FFFFC01FC0FF00FFFFC01FC0FF00FFFFE01FC0FF00FFFFE01FC0
FF007FFFE01FC0FF807FFFE01FC0FF803FFFE01FC0FF803FFFF81FC0FF801FFF
F81FC0FF801FFFF81FC0FFC00FFFF81FC0FFC003FFE01FC0FFC001FFE01FC0FF
C0007FE01FC0FFC0100FC03FC0FFE01C0FC07FC0FFE01F8000FFC0FFE01FE00F
FFC0FFE00FE00FFFC0FFE00FFFFFFFC0FFF80FFFFFFFC0FFF80FFFFFFFC0FFF8
0FFFFFFFC0FFF803FFFFFFC0FFF803FFFFFFC0FFFC03FFFFFFC0FFFC03FFFFFF
C0FFFC03FFFFFFC0FFFC01FFFFFFC0FFFE01FFFFFFC0FFFE01FFFFFFC0FFFE01
FFFFFFC0FFFE00FFFFFFC0FFFE00FFFFFFC0FFFF00FFFFFFC0FFFF00FFFFFFC0
FFFF00FFFFFFC0FFFF007FFFFFC0FF80007FFFFFC0FF80007FFFFFC0FF80007F
FFFFC0FF80007FFFFFC0FF80007FFFFFC0FFFF807FFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 72 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a41 {{
34 0 0 0 0 0 setcachedevice
} exec } bind def
/a42 {{
57 0 0 0 0 0 setcachedevice
} exec } bind def
/a43 {{
0 0 0 -134 63 -101 setcachedevice
63 0 0 33 0 -134 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 63 def
/Height 33 def
/ImageMatrix [63 0 0 -33 0 33]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<F87FFFE1FFFFC0FEF87FFFE1FFFFC0FEF01FFFC0FFFF001EF01FFFC0FFFE070E
F00FFFC07FFE070EF80FFFE07FFC0786F80FFFE07FFC07C2F80FFFE07FFC07E2
F80FFFE07FFC07E2FC07FFF01FFE03F0FC07FFF01FFE03F0FC07FFF01FFE01F0
FC07FFF01FFF01F0FC07FFF01FFF01FEFF03FFF80FFF01FEFF03FFF80FFFC0FE
FF03FFF80FFFC0FEFF03FFF80FFFC0FEFF01FFF807FFC07EFF81FFFC07FFE07E
FF81FFFC07FFE07E1F81FFFC07FFE07E1F807FFC07FFE07E07807FFC03FFE07E
C7C03FFF01FFF07EC7C03FFF01FFF07EC7C01FFF01FFF07EE3C00FFC047FF07E
E3C007FC041FE07EE1C1C0F80607E07EF001F0000F0000FEF803F8001FC001FE
FC0FFE00FFF807FE>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
63 33 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a44 {{
92 0 0 0 0 0 setcachedevice
} exec } bind def
/a45 {{
0 0 0 19 53 40 setcachedevice
53 0 0 21 0 19 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 53 def
/Height 21 def
/ImageMatrix [53 0 0 -21 0 21]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<00000000000000000000000000000000000000000000000000000000FFFFFFFF
FFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FF
FFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFF
FFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8FFFFFFFFFFFFF8000000000000000000
00000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
53 21 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a46 {{
27 0 0 0 0 0 setcachedevice
} exec } bind def
/a47 {{
0 0 0 1 27 47 setcachedevice
27 0 0 46 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 27 def
/Height 46 def
/ImageMatrix [27 0 0 -46 0 46]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000008000000080000000FF803FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0
FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE0FFC07FE087C07FE080007FE0
80007FE0F0007FE0FF807FE0FFF07FE0FFF07FE0FFF87FE0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
27 46 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a48 {{
63 0 0 0 0 0 setcachedevice
} exec } bind def
/a49 {{
59 0 0 0 0 0 setcachedevice
} exec } bind def
/a50 {{
0 0 0 -46 26 23 setcachedevice
26 0 0 69 0 -46 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 26 def
/Height 69 def
/ImageMatrix [26 0 0 -69 0 69]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFC0FFC0FFC0FFC0FE001FC0FC0F0FC0F80F07C0F80F83C0F80FC3C0F80FE3C0
F80FE0C0F80FF8C0F807F840F807F840F803FC40F803FC40FC03FC00FC03FE00
FC01FE00FC01FE00FE01FFC0FE01FFC0FE00FFC0FF80FFC0FF803FC0FF803FC0
FF803FC0FFC03FC0FFC01FC0FFE01FC0FFE01FC01FE00FC01FE00FC01FF00FC0
0FF00FC08FF007C08FF007C083F807C083F807C0E3FE07C0E1FE07C0F1FE07C0
F0FE07C0F07E07C0F83E07C0FC3E0FC0FE001FC0FFC0FFC0FFC0FFC0FFFFFFC0
FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0
FFFFFFC0FFFFFFC0FFFFFFC0FFFFC3C0FFFF0040FFFF0040FFFF0000FFFF0000
FFFF0000FFFF0000FFFF8000FFFF8000FFFFE0C0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
26 69 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a51 {{
31 0 0 0 0 0 setcachedevice
} exec } bind def
/a52 {{
37 0 0 0 0 0 setcachedevice
} exec } bind def
/a53 {{
38 0 0 0 0 0 setcachedevice
} exec } bind def
/a54 {{
0 0 0 0 35 4 setcachedevice
35 0 0 4 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 35 def
/Height 4 def
/ImageMatrix [35 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<0000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
35 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a55 {{
0 0 0 0 50 47 setcachedevice
50 0 0 47 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 47 def
/ImageMatrix [50 0 0 -47 0 47]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFE03FC0E1FFFFFFE03FC080FFFFFF800FC0803FFFFE0783C0803FFFF8
0781C0803FFFF80FE1C0C03FFFF80FF0C0C03FFFF80FF0C0C01FFFF00FF8C0C0
1FFFF00FF840C01FFFF00FF840E01FFFF00FFC40E00FFFF007FC40E00FFFF007
FC40E00FFFF807FC00F00FFFF807FE00F00FFFF807FE00F007FFF007FE00F007
FFF007FFC0F007FFF007FFC0F807FFE00FFFC0F807FFC01FFFC0F803FE001FFF
C0F803E0003FFFC0F8000000FFFFC0FE000007FFFFC0FE0000FFFFFFC0FE001F
FFFFFFC0FE0003FFFFFFC0FE0001FFFFFFC0FF00E0FFFFFFC0FF00F0FFFFFFC0
FF00783FFFFFC0FF007E0FFFFFC0FF007E07FFFFC0FF807F83FE1FC0FF803FC1
F803C0FF803FE1F803C0FF803FF0F801C0FFC03FF81801C0FFC03FF80801C0FF
C01FFF0001C0FFC01FFF8001C0FFC01FFFE001C0FFE01FFFFE0FC0FFF87FFFFF
FFC0FFF87FFFFFFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 47 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a56 {{
0 0 0 -76 54 2 setcachedevice
54 0 0 78 0 -76 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 78 def
/ImageMatrix [54 0 0 -78 0 78]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<E1FFFFFFF81FFCE1FFFFFFF81FFC80FFFFFFC003FC803FFFFF80E0FC803FFFFF
00E07C803FFFFF03F07CC03FFFFF03F83CC03FFFFF03FC3CC01FFFFF03FC0CC0
1FFFFF03FE0CC01FFFFF00FE04E01FFFFF00FE04E00FFFFF00FF84E00FFFFF00
FF84E00FFFFF007F80F00FFFFF807FC0F00FFFFF807FC0F007FFFF803FC0F007
FFFF803FC0F007FFFFC03FFCF807FFFFC03FFCF807FFFFC01FFCF803FFFFC01F
FCF803FFFFE00FFCF803FFFFE00FFCFE03FFFFE00FFCFE03FFFFF80FFCFE00FF
FFF80FFCFE00FFFFF803FCFE00FFFFF803FCFF00FFFFFC03FCFF00FFFFFC03FC
FF007FFFFC03FCFF007FFFFC01FCFF003FFFFC01FCFF803FFFFE01FCFF801FFF
FE01FCFF801FFFFE01FCFF801FFFFE01FCFFC00FFFFE01FCFFC003FFFE01FCFF
C001FFFE01FCFFC000FFFE01FCFFC000FFFE03FCFFE0107FFE03FCFFE01C3FFC
0FFCFFE00C03F80FFCFFE00E00001FFCFFE00FC0003FFCFFF80FF803FFFCFFF8
0FFFFFFFFCFFF803FFFFFFFCFFF803FFFFFFFCFFF803FFFFFFFCFFFC03FFFFFF
FCFFFC03FFFFFFFCFFFC01FFFFFFFCFFFC01FFFFFFFCFFFC01FFFFFFFCFFFE01
FFFFFFFCFFFE00FFFFFFFCFFFE00FFFFFFFCFFFE00FFFFFFFCFFFF00FFFFFFFC
FFFF00FFFFFFFCFFFF007FFFFFFCFFFF007FFFFFFCFFFF007FFFFFFCFFFF807F
FFFFFCFFFF807FFFFFFCFFFF803FFFFFFCFFFF803FFFFFFCFFC0003FFFFFFCFF
C0003FFFFFFCFFC0003FFFFFFCFFC0000FFFFFFCFFC0000FFFFFFCFFFFE00FFF
FFFC>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 78 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a57 {{
0 0 0 28 50 99 setcachedevice
50 0 0 71 0 28 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 50 def
/Height 71 def
/ImageMatrix [50 0 0 -71 0 71]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FE000FFFFFFFC0F00001FFFFFFC08000001FFFFFC0007FC00FFFFFC001FFF00F
FFFFC0007FFE01FFFFC0003FFF00FFFFC0003FFF007FFFC0003FFF803FFFC000
3FFFC01FFFC0003FFFC01FFFC0803FFFF01FFFC0F0FFFFF007FFC0F0FFFFF007
FFC0FFFFFFF803FFC0FFFFFFF803FFC0FFFFFFF803FFC0FFFFFFFC03FFC0FFFF
FFFC03FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFC01FFC0FFFFFFFE01FF
C0FFFF007E01FFC0FFF8001E00FFC0FFE0000600FFC0FFC01F0000FFC0FF00FF
C000FFC0FF00FFF000FFC0FF01FFF8007FC0FE01FFFC007FC0FC01FFFC007FC0
FC01FFFE007FC0FC03FFFF001FC0FC03FFFFC01FC0FC03FFFFC01FC0F803FFFF
E01FC0F801FFFFE01FC0F801FFFFE00FC0F801FFFFE00FC0F801FFFFE00FC0F8
01FFFFF00FC0F801FFFFF00FC0F800FFFFF007C0F800FFFFF007C0FC00FFFFF0
07C0FC00FFFFF807C0FC00FFFFF807C0FC007FFFF803C0FC007FFFF803C0FE00
7FFFF803C0FE007FFFFC03C0FE007FFFFC03C0FF001FFFFC01C0FF001FFFFC01
C0FF001FFFFC01C0FFC00FFFFF01C0FFC00FFFFF0040FFE00FFFFF0040FFF007
FFFF0040FFF807FFFF0040FFF803FFFF0040FFF801FFFC0000FFFC007FFC0000
FFFF807FFC0000FFFFC03FF84000FFFFE01FF04000FFFFE007E04000FFFFFC00
00F040FFFFFF0003FFC0FFFFFFF01FFFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
50 71 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a58 {{
41 0 0 0 0 0 setcachedevice
} exec } bind def
/a59 {{
36 0 0 0 0 0 setcachedevice
} exec } bind def
/a60 {{
0 0 0 -74 91 36 setcachedevice
91 0 0 110 0 -74 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 91 def
/Height 110 def
/ImageMatrix [91 0 0 -110 0 110]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<800000003FFFFFC000000000800000003FFFFFC000000000800000003FFFFFC0
00000000800000003FFFFFC000000000800000003FFFFFC00000000080000000
3FFFFFC000000000FE00000FFFFFFFFF000007E0FF80007FFFFFFFFFE0001FE0
FFC000FFFFFFFFFFF0003FE0FFC000FFFFFFFFFFF0003FE0FFC000FFFFFFFFFF
F0003FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FF
FFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0
FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFFF8007FE0FFF001FFFFFFFFFF
F8007FE0FFF001FFFFFFFFFFF8007FE0FFC001FFFFFFFFFFF8003FE0FFC001FF
FFFFFFFFF8003FE0FF8001FFFFFFFFFFF8001FE0FF8001FFFFFFFFFFF8001FE0
FE0001FFFFFFFFFFF80007E08000000000000000000000008000000000000000
0000000080000000000000000000000080000000000000000000000080000000
0000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
91 110 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a61 {{
62 0 0 0 0 0 setcachedevice
} exec } bind def
/a62 {{
0 0 0 -14 56 9 setcachedevice
56 0 0 23 0 -14 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 56 def
/Height 23 def
/ImageMatrix [56 0 0 -23 0 23]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<80000000000000800000000000008000000000000080000000000000FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF800000000000008000000000000080000000000000800000000000
00>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
56 23 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a63 {{
0 0 0 30 41 34 setcachedevice
41 0 0 4 0 30 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 41 def
/Height 4 def
/ImageMatrix [41 0 0 -4 0 4]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000000000000000000000000000000000000000000000000>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
41 4 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a64 {{
30 0 0 0 0 0 setcachedevice
} exec } bind def
/a65 {{
0 0 0 0 39 53 setcachedevice
39 0 0 53 0 0 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 39 def
/Height 53 def
/ImageMatrix [39 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFF0FFEFFFFFE03FEFFFFFE03FEFFFFFE01FEFFFFFE01FEFFFFFE01FEFFFF
FF01FEFFFFFF01FEFFFFFF00FEFFFFFF00FEFFFFFF00FEFFFFFF80FEFFFFFF80
FEFFFFFF807EFFFFFF807EF87FFF807EF87FFFE07EF03FFFE07EF00FFFE03EF0
0FFFE03EF00FFFE03EF80FFFF03EF80FFFF03EF807FFF00EF807FFF00EF807FF
F00EFC07FFF80EFC03FFF806FC03FFF806FC03FFF806FE03FFFC06FE03FFFC06
FE01FFFC02FE01FFFC02FE01FFFC02FF81FFFE02FF81FFFE02FF80FFFE003F80
FFFE001F80FFFE001FC0FFFF801FC03FFF800FC03FFF800FC01FFF808FC00FFF
8083E00FFF8083E00FFF80E3E087FF80E1E0C0FF82E0C0C03E02F000F80002F8
03FC000EFC07FF807E>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
39 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a66 {{
0 0 0 -54 54 -1 setcachedevice
54 0 0 53 0 -54 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 54 def
/Height 53 def
/ImageMatrix [54 0 0 -53 0 53]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<C7FFFFFFFFFFC401FFFFFFFFFF0000FFFFFFFFFE00007FFFFFFFFC00C07FFFFF
FFFC00E01FFFFFFFF804F00FFFFFFFF01CF007FFFFFFC01CF803FFFFFF803CFC
01FFFFFF007CFF01FFFFFF00FCFF807FFFFE01FCFFC03FFFFC07FCFFC01FFFF0
07FCFFE00FFFE00FFCFFF007FFC01FFCFFFC07FFC03FFCFFFE01FF807FFCFFFF
00FF01FFFCFFFF007C01FFFCFFFF803803FFFCFFFFC01007FFFCFFFFF0100FFF
FCFFFFF8001FFFFCFFFFFC007FFFFCFFFFFC007FFFFCFFFFFE00FFFFFCFFFFFC
007FFFFCFFFFFC007FFFFCFFFFF8001FFFFCFFFFF0100FFFFCFFFFC01007FFFC
FFFF803803FFFCFFFF007C01FFFCFFFF00FF01FFFCFFFE01FF807FFCFFFC07FF
C03FFCFFF007FFC01FFCFFE00FFFE00FFCFFC01FFFF007FCFFC03FFFFC07FCFF
807FFFFE01FCFF01FFFFFF00FCFC01FFFFFF007CF803FFFFFF803CF007FFFFFF
C01CF00FFFFFFFF01CE01FFFFFFFF804C07FFFFFFFFC00007FFFFFFFFC0000FF
FFFFFFFE0001FFFFFFFFFF00C7FFFFFFFFFFC4>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
54 53 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a67 {{
0 0 0 -77 77 3 setcachedevice
77 0 0 80 0 -77 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 77 def
/Height 80 def
/ImageMatrix [77 0 0 -80 0 80]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFFF000FFFFFFFFFF8FFFFE000007FFFFFFFF8FFFFE000007FFFFFFFF8FFFF
0000001FFE3FFFF8FFFC001FF803FC3FFFF8FFF0001FF800FC1FFFF8FFC001FF
FF00701FFFF8FF8007FFFFE0001FFFF8FF803FFFFFF8001FFFF8FF007FFFFFFC
001FFFF8FE00FFFFFFFF000FFFF8FC00FFFFFFFF000FFFF8F000FFFFFFFF800F
FFF8F001FFFFFFFFC00FFFF8F007FFFFFFFFC00FFFF8E007FFFFFFFFC007FFF8
E007FFFFFFFFE007FFF8C007FFFFFFFFE007FFF8C00FFFFFFFFFE007FFF8C00F
FFFFFFFFE001FFF8C00FFFFFFFFFE001FFF8801FFFFFFFFFF001FFF8801FFFFF
FFFFF001FFF8801FFFFFFFFFF001FFF8801FFFFFFFFFF000FFF8801FFFFFFFFF
F000FFF8801FFFFFFFFFFC00FFF8801FFFFFFFFFFC00FFF8801FFFFFFFFFFC00
7FF8801FFFFFFFFFF0007FF8801FFFFFFFC0000000F8800FFFFFFFC0000000F8
800FFFFFFFC0000000F8800FFFFFFFC0000000F8800FFFFFFFFFFFFFFFF8800F
FFFFFFFFFFFFFFF8800FFFFFFFFFFFFFFFF88007FFFFFFFFFFFFFFF88007FFFF
FFFFFFFFFFF8C007FFFFFFFFFFFFFFF8C007FFFFFFFFFFFFFFF8C007FFFFFFFF
FFFFFFF8C001FFFFFFFFFFFFFFF8C001FFFFFFFFFFFFFFF8E001FFFFFFFFFFFF
FFF8E001FFFFFFFFFFFFFFF8E000FFFFFFFFFFFFFFF8E000FFFFFFFFFFFFFFF8
F000FFFFFFFFFFFFC3F8F0007FFFFFFFFFFFC3F8FC007FFFFFFFFFFFC3F8FC00
7FFFFFFFFFFFC3F8FE003FFFFFFFFFFFC3F8FE003FFFFFFFFFFFC1F8FE001FFF
FFFFFFFFC1F8FF001FFFFFFFFFFFC1F8FF801FFFFFFFFFFFC1F8FF8007FFFFFF
FFFFC1F8FFC007FFFFFFFFFFC0F8FFC003FFFFFFFFFFC0F8FFF001FFFFFFFFFF
C0F8FFF800FFFFFFFFFF00F8FFF800FFFFFFFFFF00F8FFFC00FFFFFFFFFF0078
FFFE007FFFFFFFFF0078FFFE001FFFFFFFFE0078FFFF000FFFFFFFFE0078FFFF
C003FFFFFFFE0018FFFFF003FFFFFFFE0018FFFFF801FFFFFFFC0018FFFFFC00
7FFFFFF80018FFFFFC001FFFFFF00018FFFFFF8007FFFFC06008FFFFFFC000FF
FF80F008FFFFFFF000FFFF81F808FFFFFFFE0007FC07FC08FFFFFFFF8000000F
FF08FFFFFFFF8000000FFF00FFFFFFFFF800003FFF80FFFFFFFFFFC003FFFF80
>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
77 80 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a68 {{
0 0 0 1 49 76 setcachedevice
49 0 0 75 0 1 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 49 def
/Height 75 def
/ImageMatrix [49 0 0 -75 0 75]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFFC000000000FFFFC000000000FFFFC000000000FFFFC000000000FFFFFFF0
01FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FF
FFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803
FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFFFFF803FF80FFFF
FFF803FF80000000000000000000000000000000000000000000000000000000
000FFFFFFC03FF8083FFFFFC03FF80E1FFFFFC03FF80E1FFFFFC03FF80E0FFFF
FC03FF80F0FFFFFC03FF80F8FFFFFC03FF80F87FFFFC03FF80FC3FFFFC03FF80
FC3FFFFC03FF80FE0FFFFC03FF80FE07FFFC03FF80FF87FFFC03FF80FFC7FFFC
03FF80FFC3FFFC03FF80FFC1FFFC03FF80FFE1FFFC03FF80FFE0FFFC03FF80FF
F0FFFC03FF80FFF83FFC03FF80FFF83FFC03FF80FFF81FFC03FF80FFFE0FFC03
FF80FFFF0FFC03FF80FFFF0FFC03FF80FFFF87FC03FF80FFFFC3FC03FF80FFFF
C3FC03FF80FFFFC0FC03FF80FFFFE07C03FF80FFFFF87C03FF80FFFFF87C03FF
80FFFFFC3C03FF80FFFFFC1C03FF80FFFFFE1C03FF80FFFFFE0C03FF80FFFFFF
0C03FF80FFFFFF8C03FF80FFFFFF8003FF80FFFFFF8003FF80FFFFFFE003FF80
FFFFFFF003FF80FFFFFFF003FF80FFFFFFF803FF80FFFFFFFC03FF80FFFFFFFC
03FF80FFFFFFFC03FF80FFFFFFFE03FF80FFFFFFFE03FF80FFFFFFFF83FF80FF
FFFFFFC3FF80FFFFFFFFC3FF80>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
49 75 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a69 {{
118 0 0 0 0 0 setcachedevice
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/G/N279 -1 TZ
%%BeginResource: font H
10 dict begin
T3Defs
/FontType 3 def
/FontName /N331 def
/FontMatrix [1 
0 
0 
1 
0 
0 ]def
/FontBBox [0 
-3 
58 
118 ]def
/Encoding [/a0 /a1 /a2 /a3 /a4 /a5 /a6 /a7 /a8 /a9 /a10 /a11 /a12 /a13 /a14 /a15 /a16 /a17 
/a18 /a19 /a20 /a21 /a22 /a23 /a24 /a25 /a26 /a27 /a28 /a29 /a30 /a31 /a32 /a33 
/a34 /a35 /a36 /a37 /a38 /a39 /a40 /a41 /a42 /a43 /a44 /a45 /a46 /a47 /a48 /a49 
/a50 /a51 /a52 /a53 /a54 /a55 /a56 /a57 /a58 /a59 /a60 /a61 /a62 /a63 /a64 /a65 
/a66 /a67 /a68 /a69 /a70 /a71 /a72 /a73 /a74 /a75 /a76 /a77 /a78 /a79 /a80 /a81 
/a82 /a83 /a84 /a85 /a86 /a87 /a88 /a89 /a90 /a91 /a92 /a93 /a94 /a95 /a96 /a97 
/a98 /a99 /a100 /a101 /a102 /a103 /a104 /a105 /a106 /a107 /a108 /a109 /a110 
/a111 /a112 /a113 /a114 /a115 /a116 /a117 /a118 /a119 /a120 /a121 /a122 /a123 
/a124 /a125 /a126 /a127 /a128 /a129 /a130 /a131 /a132 /a133 /a134 /a135 /a136 
/a137 /a138 /a139 /a140 /a141 /a142 /a143 /a144 /a145 /a146 /a147 /a148 /a149 
/a150 /a151 /a152 /a153 /a154 /a155 /a156 /a157 /a158 /a159 /a160 /a161 /a162 
/a163 /a164 /a165 /a166 /a167 /a168 /a169 /a170 /a171 /a172 /a173 /a174 /a175 
/a176 /a177 /a178 /a179 /a180 /a181 /a182 /a183 /a184 /a185 /a186 /a187 /a188 
/a189 /a190 /a191 /a192 /a193 /a194 /a195 /a196 /a197 /a198 /a199 /a200 /a201 
/a202 /a203 /a204 /a205 /a206 /a207 /a208 /a209 /a210 /a211 /a212 /a213 /a214 
/a215 /a216 /a217 /a218 /a219 /a220 /a221 /a222 /a223 /a224 /a225 /a226 /a227 
/a228 /a229 /a230 /a231 /a232 /a233 /a234 /a235 /a236 /a237 /a238 /a239 /a240 
/a241 /a242 /a243 /a244 /a245 /a246 /a247 /a248 /a249 /a250 /a251 /a252 /a253 
/a254 /a255 ] def
/GlyphProcs 8 dict begin
/.notdef {250 0 d0} bind def
/a0 {{
0 0 0 -48 58 22 setcachedevice
58 0 0 70 0 -48 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 58 def
/Height 70 def
/ImageMatrix [58 0 0 -70 0 70]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<000001FFFFFFFFC0000001FFFFFFFFC0000001FFFFFFFFC0000001FFFFFFFFC0
FE00FFFFFFFFFFC0FE00FFFFFFFFFFC0FE00FFFFFFFFFFC0FF00FFFFFFFFFFC0
FF007FFFFFFFFFC0FF007FFFFFFFFFC0FF007FFFFFFFFFC0FFC07FFFFFFFFFC0
FFC07FFFFFFFFFC0FFC01FFFFFFFFFC0FFC01FFFFFFFFFC0FFC01FFFFFFFFFC0
FFE01FFFFFFFFFC0FFE01FFFFFFFFFC0FFE00FFFFFFFFFC0FFE00FFFFFFFFFC0
FFE00FF01FFFFFC0FFF00FF01FFFFFC0FFF00F8001FFFFC0FFF0060FC07FFFC0
FFF0040FC01FFFC0FFF0041FF007FFC0FFF8003FF803FFC0FFF8007FFC03FFC0
FFF8007FFF01FFC0FFF801FFFF807FC0FFF801FFFF803FC0FFFC01FFFF801FC0
FFFC01FFFFC00FC0FFFC01FFFFC00FC0FFFC01FFFFE00FC0FFFF01FFFFE007C0
FFFF01FFFFE007C0FFFF007FFFF001C0FFFF007FFFF001C0FFFF007FFFF001C0
FFFF807FFFFC00C0FFFF807FFFFC00C0FFFF803FFFFC00C0FFFF803FFFFC0040
FFFF803FFFFC0040FFFFC03FFFFE0040FFFFC03FFFFE0040FFFFC01FFFFE0040
FFFFC01FFFFE0000FFFFC01FFFFE0000FFFFE01FFFFF0000FFFFE01FFFFF0000
FE07E00FFFFF0000FE07E00FFFFF0000FE07E00FFFFF0000FF07F00FFFFF0000
FF07F007FFFF8040FF07F007FFFF8040FF03F001FFFF8040FFC3FC01FFFF0040
FFC3FC00FFFF0040FFC1FC007FFF00C0FFC1FC003FFF00C0FFE1FC083FFF01C0
FFE0FC0C1FFE01C0FFF0FC1F07FC07C0FFF0701F01F007C0FFF8001FC0000FC0
FFFC007FF0003FC0FFFF03FFFC01FFC0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
58 70 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a1 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFF801FFFFF0FF80003FFFF0FF80003FFFF0FF000007FFF0F807F803FFF0F007
F800FFF0F01FFE003FF0E00FFF801FF0E00FFFC01FF0E007FFE01FF0E003FFF0
0FF0E003FFF007F0E003FFF003F0E003FFF803F0E003FFF803F0F007FFFE00F0
F80FFFFE00F0F80FFFFE0070FFFFFFFE0070FFFFFFFF0030FFFFFFFF0030FFFF
FFFF0030FFFFFFFF0030FFFFFFFF0030FFFFFFFF0010FFFFFFFF8010FFFFFFFF
8010FFFF007F8010FFFC00078010FFE000038000FFC01F818000FF007FE08000
FF00FFF08000FE00FFF88000FE03FFF80000F803FFF80000F007FFFE0000E007
FFFE0000E007FFFF0000E007FFFF0000C00FFFFF0000C00FFFFF0000C00FFFFF
0000C00FFFFF0000C00FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000
800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8010800FFFFF8010800F
FFFF8010800FFFFF8010800FFFFF8010800FFFFF8010800FFFFF8030C00FFFFF
8030C00FFFFF0030C00FFFFF0030C00FFFFF0030E00FFFFF0070E007FFFF0070
F007FFFF00F0F007FFFE00F0F003FFFE00F0F803FFFE03F0FE03FFFE07F0FF00
FFF807F0FF807FF00FF0FF803FE00FF0FFC01FC01FF0FFE00000FFF0FFFC0003
FFF0FFFF800FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a2 {{
26 0 0 0 0 0 setcachedevice
} exec } bind def
/a3 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF003FFFF0FFF80003FFF0FFF80003FFF0FFC00000FFF0FF007F803FF0FE00
7F800FF0F807FFE007F0F00FFFF003F0F01FFFF803F0F03FFFFE00F0E0FFFFFF
0070E0FFFFFF0070C1FFFFFF0030C1FFFFFF8030C3FFFFFF803080FFFFFF8010
801FFFFF8010800FFFFF8010800FFFFFC000800FFFFFC000800FFFFFC000800F
FFFFC000800FFFFFC000800FFFFFC000C00FFFFFC000C01FFFFFC000F8FFFFFF
C000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC000FFFFFFFFC010
FFFFFFFFC010FFFFFFFFC010FFFFFFFF8010FFFFFFFF8010FFFFFFFF8030FE3F
FFFF8030FE3FFFFF8070FE1FFFFF0070FE0FFFFF00F0FE07FFFE00F0FE03FFF8
03F0FE00FFF007F0FE00FFF00FF0FE181FE03FF0FE1E0001FFF0FE1E0001FFF0
FE1FE007FFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1F
FFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFF
FFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1FFFFFFFF0FE1800FFFFF0
FE00000FFFF0FE000003FFF0FE000000FFF0FE0000001FF0FE0000001FF0FE00
00000FF0FE00000007F0FE00000003F0FE00000003F0FE007FF800F0FE0FFFFF
80F0FE3FFFFFF8F0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a4 {{
54 0 0 0 0 0 setcachedevice
} exec } bind def
/a5 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF800FFFF0FFFE0001FFF0FFFE0001FFF0FFF800003FF0FFE01FC01FF0FFC0
1FC00FF0FF803FF007F0FF007FF803F0FF00FFFE03F0FE03FFFE00F0F803FFFF
0070F803FFFF0070F003FFFF0030F007FFFF0030F007FFFF0030F007FFFF8010
E007FFFF8010E007FFFF8010E007FFFF8000C00FFFFF8000C00FFFFF8000C00F
FFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF8000C00FFFFF
8000800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000800FFFFF8000
800FFFFF80008007FFFF80108007FFFF80108007FFFF80108007FFFF00108007
FFFF00308007FFFF00308003FFFF00708003FFFF00F08000FFFE00F08000FFFE
03F080087FF803F080087FF807F0800C3FF01FF0800E0FC03FF0800E00003FF0
C00F0001FFF0C00FF007FFF0C00FFFFFFFF0C00FFFFFFFF0E007FFFFFFF0E007
FFFFFFF0E007FFFFFFF0E007FFFFFFF0F007FFFFFFF0F007FFFFFFF0F003FFFF
FFF0F003FFFF80F0F803FFFF0070F800FFFE0030FE00FFFE0030FF00FFFE0030
FF007FFE0030FF007FFE0030FF803FFE0030FFC01FFF0030FFE01FFF8030FFF8
1FFFE070FFFC0FFFE070FFFC01FFC070FFFE007F00F0FFFF800003F0FFFFF000
0FF0FFFFFE003FF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
/a6 {{
0 0 0 3 44 79 setcachedevice
44 0 0 76 0 3 cm
q
n
0 0 1 1 re
10 dict dup begin
/ImageType 1 def
/Width 44 def
/Height 76 def
/ImageMatrix [44 0 0 -76 0 76]  def
/BitsPerComponent 1 def
/Decode [0 1 ]  def
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<FFFF800FFFF0FFFC0001FFF0FFFC0001FFF0FFC000003FF0FF803FE00FF0FE00
3FE007F0F800FFFE03F0F007FFFF00F0F00FFFFF80F0F01FFFFFC070E01FFFFF
E030C01FFFFFE030C03FFFFFF810C0FFFFFFF810C0FFFFFFF81080FFFFFFFC10
81FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FFFFFFFC0081FF
FFFFF80081FFFFFFF80081FFFFFFF80080FFFFFFE000C0FFFFFFC000C0FFFFFF
C000C03FFFFF8010E03FFFFF0010E01FFFFE0010E01FFFF00010F00FFFE00030
F80FFFE00030FE07FF800070FF03FE0000F0FF00F80000F0FF80700003F0FFE0
000007F0FFF800000FF0FFFE00003FF0FFFC0000FFF0FFF80000FFF0FFC00003
FFF0FF800001FFF0FF800001FFF0FF0000603FF0FE0001F81FF0F80001F80FF0
F80003FE07F0F0001FFE03F0F0003FFF03F0F000FFFF80F0F003FFFF8070E003
FFFF8070E007FFFFC070E00FFFFFC030E01FFFFFE030E01FFFFFE030E03FFFFF
E030E03FFFFFE030E03FFFFFE030E03FFFFFE030E03FFFFFE030F03FFFFFC030
F03FFFFFC070F01FFFFFC070F81FFFFF8070F80FFFFF80F0FE0FFFFF80F0FF07
FFFF03F0FF83FFFE07F0FF80FFF007F0FFC03FC00FF0FFE000003FF0FFFC0001
FFF0FFFF800FFFF0>
} _i 1 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 def end
44 76 false 4 -1 roll dup /ImageMatrix get exch /DataSource get
imagemask
Q
} exec } bind def
currentdict end def
FontName currentdict end
definefont pop
%%EndResource
[/H/N331 -1 TZ
%%EndPageSetup
0 0 612 792 re
W
n
0.0999908 0 0 0.0999908 0 0 cm
q
Q
q
n
996 6403 m
996 4622.4 l
3156 4622.4 l
3156 6403 l
h
W
n
n
1434.64 4657.67 87.6936 87.6934 re
0 setgray
eofill
2.19232 w
n
1434.64 4657.67 87.6936 87.6934 re
S
n
1452.18 4745.36 52.616 35.0776 re
eofill
n
1452.18 4745.36 52.616 35.0776 re
S
Q
q
n
996 6403 m
996 4622.4 l
3156 4622.4 l
3156 6403 l
h
1345.78 4665.85 m
1356.01 4690.11 l
1294.91 4716.42 l
1338.18 4683.39 l
1284.39 4692.16 l
h
eoclip
n
4.38463 w
n
1193.48 4745.36 m
1346.95 4679.59 l
0 setgray
S
Q
q
n
996 6403 m
996 4622.4 l
3156 4622.4 l
3156 6403 l
h
W
n
n
1284.39 4692.16 m
1338.18 4683.39 l
1294.91 4716.42 l
1284.39 4692.16 l
0 setgray
eofill
4.38463 w
n
1284.39 4692.16 m
1338.18 4683.39 l
1294.91 4716.42 l
1284.39 4692.16 l
h
S
q
10 0 0 10 0 0 cm
299.12 625.807 m
/N353 12.2771 Tf
(G) show
193.888 503.036 m
(G) show
158.811 538.113 m
(G) show
246.504 555.652 m
(G) show
307.889 625.807 m
/N353 8.76926 Tf
(1) show
202.658 503.036 m
(2) show
255.273 555.652 m
(3) show
167.58 538.113 m
(4) show
99.6177 481.112 m
/N353 11.4001 Tf
(Agent) show
Q
8.76926 w
n
1390.79 6038.84 175.387 175.387 re
S
n
1566.18 6038.84 175.387 175.387 re
S
n
1741.57 6038.84 175.387 175.387 re
S
n
1916.95 6038.84 175.387 175.387 re
S
n
2092.34 6038.84 175.387 175.387 re
S
n
1390.79 5863.45 175.387 175.387 re
S
n
1566.18 5863.45 175.387 175.387 re
S
n
1741.57 5863.45 175.387 175.387 re
S
n
1916.95 5863.45 175.387 175.387 re
S
n
2092.34 5863.45 175.387 175.387 re
S
n
1390.79 5688.06 175.387 175.387 re
S
n
1566.18 5688.06 175.387 175.387 re
S
n
1741.57 5688.06 175.387 175.387 re
S
n
1916.95 5688.06 175.387 175.387 re
S
n
2092.34 5688.06 175.387 175.387 re
S
n
1390.79 5512.68 175.387 175.387 re
S
n
1566.18 5512.68 175.387 175.387 re
S
n
1741.57 5512.68 175.387 175.387 re
S
n
1916.95 5512.68 175.387 175.387 re
S
n
2092.34 5512.68 175.387 175.387 re
S
n
1390.79 6214.23 175.387 175.387 re
S
n
1566.18 6214.23 175.387 175.387 re
S
n
1741.57 6214.23 175.387 175.387 re
S
n
1916.95 6214.23 175.387 175.387 re
S
n
2092.34 6214.23 175.387 175.387 re
S
n
1390.79 5161.9 175.387 175.387 re
S
n
1566.18 5161.9 175.387 175.387 re
S
n
1741.57 5161.9 175.387 175.387 re
S
n
1916.95 5161.9 175.387 175.387 re
S
n
2092.34 5161.9 175.387 175.387 re
S
n
1390.79 4986.52 175.387 175.387 re
S
n
1566.18 4986.52 175.387 175.387 re
S
n
1741.57 4986.52 175.387 175.387 re
S
n
1916.95 4986.52 175.387 175.387 re
S
n
2092.34 4986.52 175.387 175.387 re
S
n
1390.79 4811.13 175.387 175.387 re
S
n
1566.18 4811.13 175.387 175.387 re
S
n
1741.57 4811.13 175.387 175.387 re
S
n
1916.95 4811.13 175.387 175.387 re
S
n
2092.34 4811.13 175.387 175.387 re
S
n
1390.79 4635.74 175.387 175.387 re
S
n
1566.18 4635.74 175.387 175.387 re
S
n
1741.57 4635.74 175.387 175.387 re
S
n
1916.95 4635.74 175.387 175.387 re
S
n
2092.34 4635.74 175.387 175.387 re
S
n
1390.79 5337.29 175.387 175.387 re
S
n
1566.18 5337.29 175.387 175.387 re
S
n
1741.57 5337.29 175.387 175.387 re
S
n
1916.95 5337.29 175.387 175.387 re
S
n
2092.34 5337.29 175.387 175.387 re
S
n
2267.73 5161.9 175.387 175.387 re
S
n
2443.11 5161.9 175.387 175.387 re
S
n
2618.5 5161.9 175.387 175.387 re
S
n
2793.89 5161.9 175.387 175.387 re
S
n
2969.27 5161.9 175.387 175.387 re
S
n
2267.73 4986.52 175.387 175.387 re
S
n
2443.11 4986.52 175.387 175.387 re
S
n
2618.5 4986.52 175.387 175.387 re
S
n
2793.89 4986.52 175.387 175.387 re
S
n
2969.27 4986.52 175.387 175.387 re
S
n
2267.73 4811.13 175.387 175.387 re
S
n
2443.11 4811.13 175.387 175.387 re
S
n
2618.5 4811.13 175.387 175.387 re
S
n
2793.89 4811.13 175.387 175.387 re
S
n
2969.27 4811.13 175.387 175.387 re
S
n
2267.73 4635.74 175.387 175.387 re
S
n
2443.11 4635.74 175.387 175.387 re
S
n
2618.5 4635.74 175.387 175.387 re
S
n
2793.89 4635.74 175.387 175.387 re
S
n
2969.27 4635.74 175.387 175.387 re
S
n
2267.73 5337.29 175.387 175.387 re
S
n
2443.11 5337.29 175.387 175.387 re
S
n
2618.5 5337.29 175.387 175.387 re
S
n
2793.89 5337.29 175.387 175.387 re
S
n
2969.27 5337.29 175.387 175.387 re
S
n
2267.73 6038.84 175.387 175.387 re
S
n
2443.11 6038.84 175.387 175.387 re
S
n
2618.5 6038.84 175.387 175.387 re
S
n
2793.89 6038.84 175.387 175.387 re
S
n
2969.27 6038.84 175.387 175.387 re
S
n
2267.73 5863.45 175.387 175.387 re
S
n
2443.11 5863.45 175.387 175.387 re
S
n
2618.5 5863.45 175.387 175.387 re
S
n
2793.89 5863.45 175.387 175.387 re
S
n
2969.27 5863.45 175.387 175.387 re
S
n
2267.73 5688.06 175.387 175.387 re
S
n
2443.11 5688.06 175.387 175.387 re
S
n
2618.5 5688.06 175.387 175.387 re
S
n
2793.89 5688.06 175.387 175.387 re
S
n
2969.27 5688.06 175.387 175.387 re
S
n
2267.73 5512.68 175.387 175.387 re
S
n
2443.11 5512.68 175.387 175.387 re
S
n
2618.5 5512.68 175.387 175.387 re
S
n
2793.89 5512.68 175.387 175.387 re
S
n
2969.27 5512.68 175.387 175.387 re
S
n
2267.73 6214.23 175.387 175.387 re
S
n
2443.11 6214.23 175.387 175.387 re
S
n
2618.5 6214.23 175.387 175.387 re
S
n
2793.89 6214.23 175.387 175.387 re
S
n
2969.27 6214.23 175.387 175.387 re
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 6141 m
3815.53 6153.24 l
3784.35 6122.35 l
3815.53 6140.71 l
3796.88 6109.81 l
h
eoclip
n
2.18579 w
n
3753.16 6078.34 m
3818.74 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 6109.81 m
3815.53 6140.71 l
3784.35 6122.35 l
3796.88 6109.81 l
0 setgray
eofill
2.18579 w
n
3796.88 6109.81 m
3815.53 6140.71 l
3784.35 6122.35 l
3796.88 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 6141 m
3990.4 6153.24 l
3959.21 6122.35 l
3990.4 6140.71 l
3971.74 6109.81 l
h
eoclip
n
2.18579 w
n
3928.03 6078.34 m
3993.6 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 6109.81 m
3990.4 6140.71 l
3959.21 6122.35 l
3971.74 6109.81 l
0 setgray
eofill
2.18579 w
n
3971.74 6109.81 m
3990.4 6140.71 l
3959.21 6122.35 l
3971.74 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 6141 m
4165.26 6153.24 l
4134.08 6122.35 l
4165.26 6140.71 l
4146.61 6109.81 l
h
eoclip
n
2.18579 w
n
4102.89 6078.34 m
4168.47 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 6109.81 m
4165.26 6140.71 l
4134.08 6122.35 l
4146.61 6109.81 l
0 setgray
eofill
2.18579 w
n
4146.61 6109.81 m
4165.26 6140.71 l
4134.08 6122.35 l
4146.61 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 6141 m
4340.13 6153.24 l
4308.94 6122.35 l
4340.13 6140.71 l
4321.47 6109.81 l
h
eoclip
n
2.18579 w
n
4277.76 6078.34 m
4343.33 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 6109.81 m
4340.13 6140.71 l
4308.94 6122.35 l
4321.47 6109.81 l
0 setgray
eofill
2.18579 w
n
4321.47 6109.81 m
4340.13 6140.71 l
4308.94 6122.35 l
4321.47 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 6141 m
4514.99 6153.24 l
4483.81 6122.35 l
4514.99 6140.71 l
4496.34 6109.81 l
h
eoclip
n
2.18579 w
n
4452.62 6078.34 m
4518.2 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 6109.81 m
4514.99 6140.71 l
4483.81 6122.35 l
4496.34 6109.81 l
0 setgray
eofill
2.18579 w
n
4496.34 6109.81 m
4514.99 6140.71 l
4483.81 6122.35 l
4496.34 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 6141 m
4689.85 6153.24 l
4658.67 6122.35 l
4689.85 6140.71 l
4671.2 6109.81 l
h
eoclip
n
2.18579 w
n
4627.49 6078.34 m
4693.06 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 6109.81 m
4689.85 6140.71 l
4658.67 6122.35 l
4671.2 6109.81 l
0 setgray
eofill
2.18579 w
n
4671.2 6109.81 m
4689.85 6140.71 l
4658.67 6122.35 l
4671.2 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 6141 m
4864.72 6153.24 l
4833.54 6122.35 l
4864.72 6140.71 l
4846.07 6109.81 l
h
eoclip
n
2.18579 w
n
4802.35 6078.34 m
4867.93 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 6109.81 m
4864.72 6140.71 l
4833.54 6122.35 l
4846.07 6109.81 l
0 setgray
eofill
2.18579 w
n
4846.07 6109.81 m
4864.72 6140.71 l
4833.54 6122.35 l
4846.07 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 6141 m
5039.58 6153.24 l
5008.4 6122.35 l
5039.58 6140.71 l
5020.93 6109.81 l
h
eoclip
n
2.18579 w
n
4977.22 6078.34 m
5042.79 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 6109.81 m
5039.58 6140.71 l
5008.4 6122.35 l
5020.93 6109.81 l
0 setgray
eofill
2.18579 w
n
5020.93 6109.81 m
5039.58 6140.71 l
5008.4 6122.35 l
5020.93 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 6141 m
5214.45 6153.24 l
5183.26 6122.35 l
5214.45 6140.71 l
5195.8 6109.81 l
h
eoclip
n
2.18579 w
n
5152.08 6078.34 m
5217.65 6143.91 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 6109.81 m
5214.45 6140.71 l
5183.26 6122.35 l
5195.8 6109.81 l
0 setgray
eofill
2.18579 w
n
5195.8 6109.81 m
5214.45 6140.71 l
5183.26 6122.35 l
5195.8 6109.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 5616.4 m
3815.53 5628.64 l
3784.35 5597.75 l
3815.53 5616.11 l
3796.88 5585.22 l
h
eoclip
n
2.18579 w
n
3753.16 5553.74 m
3818.74 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 5585.22 m
3815.53 5616.11 l
3784.35 5597.75 l
3796.88 5585.22 l
0 setgray
eofill
2.18579 w
n
3796.88 5585.22 m
3815.53 5616.11 l
3784.35 5597.75 l
3796.88 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 5616.4 m
3990.4 5628.64 l
3959.21 5597.75 l
3990.4 5616.11 l
3971.74 5585.22 l
h
eoclip
n
2.18579 w
n
3928.03 5553.74 m
3993.6 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 5585.22 m
3990.4 5616.11 l
3959.21 5597.75 l
3971.74 5585.22 l
0 setgray
eofill
2.18579 w
n
3971.74 5585.22 m
3990.4 5616.11 l
3959.21 5597.75 l
3971.74 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 5616.4 m
4165.26 5628.64 l
4134.08 5597.75 l
4165.26 5616.11 l
4146.61 5585.22 l
h
eoclip
n
2.18579 w
n
4102.89 5553.74 m
4168.47 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 5585.22 m
4165.26 5616.11 l
4134.08 5597.75 l
4146.61 5585.22 l
0 setgray
eofill
2.18579 w
n
4146.61 5585.22 m
4165.26 5616.11 l
4134.08 5597.75 l
4146.61 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 5616.4 m
4340.13 5628.64 l
4308.94 5597.75 l
4340.13 5616.11 l
4321.47 5585.22 l
h
eoclip
n
2.18579 w
n
4277.76 5553.74 m
4343.33 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 5585.22 m
4340.13 5616.11 l
4308.94 5597.75 l
4321.47 5585.22 l
0 setgray
eofill
2.18579 w
n
4321.47 5585.22 m
4340.13 5616.11 l
4308.94 5597.75 l
4321.47 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 5616.4 m
4514.99 5628.64 l
4483.81 5597.75 l
4514.99 5616.11 l
4496.34 5585.22 l
h
eoclip
n
2.18579 w
n
4452.62 5553.74 m
4518.2 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 5585.22 m
4514.99 5616.11 l
4483.81 5597.75 l
4496.34 5585.22 l
0 setgray
eofill
2.18579 w
n
4496.34 5585.22 m
4514.99 5616.11 l
4483.81 5597.75 l
4496.34 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 5616.4 m
4689.85 5628.64 l
4658.67 5597.75 l
4689.85 5616.11 l
4671.2 5585.22 l
h
eoclip
n
2.18579 w
n
4627.49 5553.74 m
4693.06 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 5585.22 m
4689.85 5616.11 l
4658.67 5597.75 l
4671.2 5585.22 l
0 setgray
eofill
2.18579 w
n
4671.2 5585.22 m
4689.85 5616.11 l
4658.67 5597.75 l
4671.2 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 5616.4 m
4864.72 5628.64 l
4833.54 5597.75 l
4864.72 5616.11 l
4846.07 5585.22 l
h
eoclip
n
2.18579 w
n
4802.35 5553.74 m
4867.93 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 5585.22 m
4864.72 5616.11 l
4833.54 5597.75 l
4846.07 5585.22 l
0 setgray
eofill
2.18579 w
n
4846.07 5585.22 m
4864.72 5616.11 l
4833.54 5597.75 l
4846.07 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 5616.4 m
5039.58 5628.64 l
5008.4 5597.75 l
5039.58 5616.11 l
5020.93 5585.22 l
h
eoclip
n
2.18579 w
n
4977.22 5553.74 m
5042.79 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 5585.22 m
5039.58 5616.11 l
5008.4 5597.75 l
5020.93 5585.22 l
0 setgray
eofill
2.18579 w
n
5020.93 5585.22 m
5039.58 5616.11 l
5008.4 5597.75 l
5020.93 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 5616.4 m
5214.45 5628.64 l
5183.26 5597.75 l
5214.45 5616.11 l
5195.8 5585.22 l
h
eoclip
n
2.18579 w
n
5152.08 5553.74 m
5217.65 5619.32 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 5585.22 m
5214.45 5616.11 l
5183.26 5597.75 l
5195.8 5585.22 l
0 setgray
eofill
2.18579 w
n
5195.8 5585.22 m
5214.45 5616.11 l
5183.26 5597.75 l
5195.8 5585.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 5419.68 m
3815.53 5431.92 l
3784.35 5401.03 l
3815.53 5419.39 l
3796.88 5388.5 l
h
eoclip
n
2.18579 w
n
3753.16 5357.02 m
3818.74 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 5388.5 m
3815.53 5419.39 l
3784.35 5401.03 l
3796.88 5388.5 l
0 setgray
eofill
2.18579 w
n
3796.88 5388.5 m
3815.53 5419.39 l
3784.35 5401.03 l
3796.88 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 5419.68 m
3990.4 5431.92 l
3959.21 5401.03 l
3990.4 5419.39 l
3971.74 5388.5 l
h
eoclip
n
2.18579 w
n
3928.03 5357.02 m
3993.6 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 5388.5 m
3990.4 5419.39 l
3959.21 5401.03 l
3971.74 5388.5 l
0 setgray
eofill
2.18579 w
n
3971.74 5388.5 m
3990.4 5419.39 l
3959.21 5401.03 l
3971.74 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 5419.68 m
4165.26 5431.92 l
4134.08 5401.03 l
4165.26 5419.39 l
4146.61 5388.5 l
h
eoclip
n
2.18579 w
n
4102.89 5357.02 m
4168.47 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 5388.5 m
4165.26 5419.39 l
4134.08 5401.03 l
4146.61 5388.5 l
0 setgray
eofill
2.18579 w
n
4146.61 5388.5 m
4165.26 5419.39 l
4134.08 5401.03 l
4146.61 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 5419.68 m
4340.13 5431.92 l
4308.94 5401.03 l
4340.13 5419.39 l
4321.47 5388.5 l
h
eoclip
n
2.18579 w
n
4277.76 5357.02 m
4343.33 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 5388.5 m
4340.13 5419.39 l
4308.94 5401.03 l
4321.47 5388.5 l
0 setgray
eofill
2.18579 w
n
4321.47 5388.5 m
4340.13 5419.39 l
4308.94 5401.03 l
4321.47 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 5419.68 m
4514.99 5431.92 l
4483.81 5401.03 l
4514.99 5419.39 l
4496.34 5388.5 l
h
eoclip
n
2.18579 w
n
4452.62 5357.02 m
4518.2 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 5388.5 m
4514.99 5419.39 l
4483.81 5401.03 l
4496.34 5388.5 l
0 setgray
eofill
2.18579 w
n
4496.34 5388.5 m
4514.99 5419.39 l
4483.81 5401.03 l
4496.34 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 5419.68 m
4689.85 5431.92 l
4658.67 5401.03 l
4689.85 5419.39 l
4671.2 5388.5 l
h
eoclip
n
2.18579 w
n
4627.49 5357.02 m
4693.06 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 5388.5 m
4689.85 5419.39 l
4658.67 5401.03 l
4671.2 5388.5 l
0 setgray
eofill
2.18579 w
n
4671.2 5388.5 m
4689.85 5419.39 l
4658.67 5401.03 l
4671.2 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 5419.68 m
4864.72 5431.92 l
4833.54 5401.03 l
4864.72 5419.39 l
4846.07 5388.5 l
h
eoclip
n
2.18579 w
n
4802.35 5357.02 m
4867.93 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 5388.5 m
4864.72 5419.39 l
4833.54 5401.03 l
4846.07 5388.5 l
0 setgray
eofill
2.18579 w
n
4846.07 5388.5 m
4864.72 5419.39 l
4833.54 5401.03 l
4846.07 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 5419.68 m
5039.58 5431.92 l
5008.4 5401.03 l
5039.58 5419.39 l
5020.93 5388.5 l
h
eoclip
n
2.18579 w
n
4977.22 5357.02 m
5042.79 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 5388.5 m
5039.58 5419.39 l
5008.4 5401.03 l
5020.93 5388.5 l
0 setgray
eofill
2.18579 w
n
5020.93 5388.5 m
5039.58 5419.39 l
5008.4 5401.03 l
5020.93 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 5419.68 m
5214.45 5431.92 l
5183.26 5401.03 l
5214.45 5419.39 l
5195.8 5388.5 l
h
eoclip
n
2.18579 w
n
5152.08 5357.02 m
5217.65 5422.6 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 5388.5 m
5214.45 5419.39 l
5183.26 5401.03 l
5195.8 5388.5 l
0 setgray
eofill
2.18579 w
n
5195.8 5388.5 m
5214.45 5419.39 l
5183.26 5401.03 l
5195.8 5388.5 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 5266.67 m
3815.53 5278.92 l
3784.35 5248.02 l
3815.53 5266.38 l
3796.88 5235.49 l
h
eoclip
n
2.18579 w
n
3753.16 5204.01 m
3818.74 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 5235.49 m
3815.53 5266.38 l
3784.35 5248.02 l
3796.88 5235.49 l
0 setgray
eofill
2.18579 w
n
3796.88 5235.49 m
3815.53 5266.38 l
3784.35 5248.02 l
3796.88 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 5266.67 m
3990.4 5278.92 l
3959.21 5248.02 l
3990.4 5266.38 l
3971.74 5235.49 l
h
eoclip
n
2.18579 w
n
3928.03 5204.01 m
3993.6 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 5235.49 m
3990.4 5266.38 l
3959.21 5248.02 l
3971.74 5235.49 l
0 setgray
eofill
2.18579 w
n
3971.74 5235.49 m
3990.4 5266.38 l
3959.21 5248.02 l
3971.74 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 5266.67 m
4165.26 5278.92 l
4134.08 5248.02 l
4165.26 5266.38 l
4146.61 5235.49 l
h
eoclip
n
2.18579 w
n
4102.89 5204.01 m
4168.47 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 5235.49 m
4165.26 5266.38 l
4134.08 5248.02 l
4146.61 5235.49 l
0 setgray
eofill
2.18579 w
n
4146.61 5235.49 m
4165.26 5266.38 l
4134.08 5248.02 l
4146.61 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 5266.67 m
4340.13 5278.92 l
4308.94 5248.02 l
4340.13 5266.38 l
4321.47 5235.49 l
h
eoclip
n
2.18579 w
n
4277.76 5204.01 m
4343.33 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 5235.49 m
4340.13 5266.38 l
4308.94 5248.02 l
4321.47 5235.49 l
0 setgray
eofill
2.18579 w
n
4321.47 5235.49 m
4340.13 5266.38 l
4308.94 5248.02 l
4321.47 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 5266.67 m
4514.99 5278.92 l
4483.81 5248.02 l
4514.99 5266.38 l
4496.34 5235.49 l
h
eoclip
n
2.18579 w
n
4452.62 5204.01 m
4518.2 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 5235.49 m
4514.99 5266.38 l
4483.81 5248.02 l
4496.34 5235.49 l
0 setgray
eofill
2.18579 w
n
4496.34 5235.49 m
4514.99 5266.38 l
4483.81 5248.02 l
4496.34 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 5266.67 m
4689.85 5278.92 l
4658.67 5248.02 l
4689.85 5266.38 l
4671.2 5235.49 l
h
eoclip
n
2.18579 w
n
4627.49 5204.01 m
4693.06 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 5235.49 m
4689.85 5266.38 l
4658.67 5248.02 l
4671.2 5235.49 l
0 setgray
eofill
2.18579 w
n
4671.2 5235.49 m
4689.85 5266.38 l
4658.67 5248.02 l
4671.2 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 5266.67 m
4864.72 5278.92 l
4833.54 5248.02 l
4864.72 5266.38 l
4846.07 5235.49 l
h
eoclip
n
2.18579 w
n
4802.35 5204.01 m
4867.93 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 5235.49 m
4864.72 5266.38 l
4833.54 5248.02 l
4846.07 5235.49 l
0 setgray
eofill
2.18579 w
n
4846.07 5235.49 m
4864.72 5266.38 l
4833.54 5248.02 l
4846.07 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 5266.67 m
5039.58 5278.92 l
5008.4 5248.02 l
5039.58 5266.38 l
5020.93 5235.49 l
h
eoclip
n
2.18579 w
n
4977.22 5204.01 m
5042.79 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 5235.49 m
5039.58 5266.38 l
5008.4 5248.02 l
5020.93 5235.49 l
0 setgray
eofill
2.18579 w
n
5020.93 5235.49 m
5039.58 5266.38 l
5008.4 5248.02 l
5020.93 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 5266.67 m
5214.45 5278.92 l
5183.26 5248.02 l
5214.45 5266.38 l
5195.8 5235.49 l
h
eoclip
n
2.18579 w
n
5152.08 5204.01 m
5217.65 5269.59 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 5235.49 m
5214.45 5266.38 l
5183.26 5248.02 l
5195.8 5235.49 l
0 setgray
eofill
2.18579 w
n
5195.8 5235.49 m
5214.45 5266.38 l
5183.26 5248.02 l
5195.8 5235.49 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 5091.81 m
3815.53 5104.05 l
3784.35 5073.16 l
3815.53 5091.52 l
3796.88 5060.63 l
h
eoclip
n
2.18579 w
n
3753.16 5029.15 m
3818.74 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 5060.63 m
3815.53 5091.52 l
3784.35 5073.16 l
3796.88 5060.63 l
0 setgray
eofill
2.18579 w
n
3796.88 5060.63 m
3815.53 5091.52 l
3784.35 5073.16 l
3796.88 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 5091.81 m
3990.4 5104.05 l
3959.21 5073.16 l
3990.4 5091.52 l
3971.74 5060.63 l
h
eoclip
n
2.18579 w
n
3928.03 5029.15 m
3993.6 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 5060.63 m
3990.4 5091.52 l
3959.21 5073.16 l
3971.74 5060.63 l
0 setgray
eofill
2.18579 w
n
3971.74 5060.63 m
3990.4 5091.52 l
3959.21 5073.16 l
3971.74 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 5091.81 m
4165.26 5104.05 l
4134.08 5073.16 l
4165.26 5091.52 l
4146.61 5060.63 l
h
eoclip
n
2.18579 w
n
4102.89 5029.15 m
4168.47 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 5060.63 m
4165.26 5091.52 l
4134.08 5073.16 l
4146.61 5060.63 l
0 setgray
eofill
2.18579 w
n
4146.61 5060.63 m
4165.26 5091.52 l
4134.08 5073.16 l
4146.61 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 5091.81 m
4340.13 5104.05 l
4308.94 5073.16 l
4340.13 5091.52 l
4321.47 5060.63 l
h
eoclip
n
2.18579 w
n
4277.76 5029.15 m
4343.33 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 5060.63 m
4340.13 5091.52 l
4308.94 5073.16 l
4321.47 5060.63 l
0 setgray
eofill
2.18579 w
n
4321.47 5060.63 m
4340.13 5091.52 l
4308.94 5073.16 l
4321.47 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 5091.81 m
4514.99 5104.05 l
4483.81 5073.16 l
4514.99 5091.52 l
4496.34 5060.63 l
h
eoclip
n
2.18579 w
n
4452.62 5029.15 m
4518.2 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 5060.63 m
4514.99 5091.52 l
4483.81 5073.16 l
4496.34 5060.63 l
0 setgray
eofill
2.18579 w
n
4496.34 5060.63 m
4514.99 5091.52 l
4483.81 5073.16 l
4496.34 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 5091.81 m
4689.85 5104.05 l
4658.67 5073.16 l
4689.85 5091.52 l
4671.2 5060.63 l
h
eoclip
n
2.18579 w
n
4627.49 5029.15 m
4693.06 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 5060.63 m
4689.85 5091.52 l
4658.67 5073.16 l
4671.2 5060.63 l
0 setgray
eofill
2.18579 w
n
4671.2 5060.63 m
4689.85 5091.52 l
4658.67 5073.16 l
4671.2 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 5091.81 m
4864.72 5104.05 l
4833.54 5073.16 l
4864.72 5091.52 l
4846.07 5060.63 l
h
eoclip
n
2.18579 w
n
4802.35 5029.15 m
4867.93 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 5060.63 m
4864.72 5091.52 l
4833.54 5073.16 l
4846.07 5060.63 l
0 setgray
eofill
2.18579 w
n
4846.07 5060.63 m
4864.72 5091.52 l
4833.54 5073.16 l
4846.07 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 5091.81 m
5039.58 5104.05 l
5008.4 5073.16 l
5039.58 5091.52 l
5020.93 5060.63 l
h
eoclip
n
2.18579 w
n
4977.22 5029.15 m
5042.79 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 5060.63 m
5039.58 5091.52 l
5008.4 5073.16 l
5020.93 5060.63 l
0 setgray
eofill
2.18579 w
n
5020.93 5060.63 m
5039.58 5091.52 l
5008.4 5073.16 l
5020.93 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 5091.81 m
5214.45 5104.05 l
5183.26 5073.16 l
5214.45 5091.52 l
5195.8 5060.63 l
h
eoclip
n
2.18579 w
n
5152.08 5029.15 m
5217.65 5094.72 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 5060.63 m
5214.45 5091.52 l
5183.26 5073.16 l
5195.8 5060.63 l
0 setgray
eofill
2.18579 w
n
5195.8 5060.63 m
5214.45 5091.52 l
5183.26 5073.16 l
5195.8 5060.63 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 4916.95 m
3815.53 4929.19 l
3784.35 4898.29 l
3815.53 4916.65 l
3796.88 4885.76 l
h
eoclip
n
2.18579 w
n
3753.16 4854.29 m
3818.74 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 4885.76 m
3815.53 4916.65 l
3784.35 4898.29 l
3796.88 4885.76 l
0 setgray
eofill
2.18579 w
n
3796.88 4885.76 m
3815.53 4916.65 l
3784.35 4898.29 l
3796.88 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 4916.95 m
3990.4 4929.19 l
3959.21 4898.29 l
3990.4 4916.65 l
3971.74 4885.76 l
h
eoclip
n
2.18579 w
n
3928.03 4854.29 m
3993.6 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 4885.76 m
3990.4 4916.65 l
3959.21 4898.29 l
3971.74 4885.76 l
0 setgray
eofill
2.18579 w
n
3971.74 4885.76 m
3990.4 4916.65 l
3959.21 4898.29 l
3971.74 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 4916.95 m
4165.26 4929.19 l
4134.08 4898.29 l
4165.26 4916.65 l
4146.61 4885.76 l
h
eoclip
n
2.18579 w
n
4102.89 4854.29 m
4168.47 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 4885.76 m
4165.26 4916.65 l
4134.08 4898.29 l
4146.61 4885.76 l
0 setgray
eofill
2.18579 w
n
4146.61 4885.76 m
4165.26 4916.65 l
4134.08 4898.29 l
4146.61 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 4916.95 m
4340.13 4929.19 l
4308.94 4898.29 l
4340.13 4916.65 l
4321.47 4885.76 l
h
eoclip
n
2.18579 w
n
4277.76 4854.29 m
4343.33 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 4885.76 m
4340.13 4916.65 l
4308.94 4898.29 l
4321.47 4885.76 l
0 setgray
eofill
2.18579 w
n
4321.47 4885.76 m
4340.13 4916.65 l
4308.94 4898.29 l
4321.47 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 4916.95 m
4514.99 4929.19 l
4483.81 4898.29 l
4514.99 4916.65 l
4496.34 4885.76 l
h
eoclip
n
2.18579 w
n
4452.62 4854.29 m
4518.2 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 4885.76 m
4514.99 4916.65 l
4483.81 4898.29 l
4496.34 4885.76 l
0 setgray
eofill
2.18579 w
n
4496.34 4885.76 m
4514.99 4916.65 l
4483.81 4898.29 l
4496.34 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 4916.95 m
4689.85 4929.19 l
4658.67 4898.29 l
4689.85 4916.65 l
4671.2 4885.76 l
h
eoclip
n
2.18579 w
n
4627.49 4854.29 m
4693.06 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 4885.76 m
4689.85 4916.65 l
4658.67 4898.29 l
4671.2 4885.76 l
0 setgray
eofill
2.18579 w
n
4671.2 4885.76 m
4689.85 4916.65 l
4658.67 4898.29 l
4671.2 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 4916.95 m
4864.72 4929.19 l
4833.54 4898.29 l
4864.72 4916.65 l
4846.07 4885.76 l
h
eoclip
n
2.18579 w
n
4802.35 4854.29 m
4867.93 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 4885.76 m
4864.72 4916.65 l
4833.54 4898.29 l
4846.07 4885.76 l
0 setgray
eofill
2.18579 w
n
4846.07 4885.76 m
4864.72 4916.65 l
4833.54 4898.29 l
4846.07 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 4916.95 m
5039.58 4929.19 l
5008.4 4898.29 l
5039.58 4916.65 l
5020.93 4885.76 l
h
eoclip
n
2.18579 w
n
4977.22 4854.29 m
5042.79 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 4885.76 m
5039.58 4916.65 l
5008.4 4898.29 l
5020.93 4885.76 l
0 setgray
eofill
2.18579 w
n
5020.93 4885.76 m
5039.58 4916.65 l
5008.4 4898.29 l
5020.93 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 4916.95 m
5214.45 4929.19 l
5183.26 4898.29 l
5214.45 4916.65 l
5195.8 4885.76 l
h
eoclip
n
2.18579 w
n
5152.08 4854.29 m
5217.65 4919.86 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 4885.76 m
5214.45 4916.65 l
5183.26 4898.29 l
5195.8 4885.76 l
0 setgray
eofill
2.18579 w
n
5195.8 4885.76 m
5214.45 4916.65 l
5183.26 4898.29 l
5195.8 4885.76 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 4742.08 m
3815.53 4754.32 l
3784.35 4723.43 l
3815.53 4741.79 l
3796.88 4710.9 l
h
eoclip
n
2.18579 w
n
3753.16 4679.42 m
3818.74 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 4710.9 m
3815.53 4741.79 l
3784.35 4723.43 l
3796.88 4710.9 l
0 setgray
eofill
2.18579 w
n
3796.88 4710.9 m
3815.53 4741.79 l
3784.35 4723.43 l
3796.88 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 4742.08 m
3990.4 4754.32 l
3959.21 4723.43 l
3990.4 4741.79 l
3971.74 4710.9 l
h
eoclip
n
2.18579 w
n
3928.03 4679.42 m
3993.6 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 4710.9 m
3990.4 4741.79 l
3959.21 4723.43 l
3971.74 4710.9 l
0 setgray
eofill
2.18579 w
n
3971.74 4710.9 m
3990.4 4741.79 l
3959.21 4723.43 l
3971.74 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 4742.08 m
4165.26 4754.32 l
4134.08 4723.43 l
4165.26 4741.79 l
4146.61 4710.9 l
h
eoclip
n
2.18579 w
n
4102.89 4679.42 m
4168.47 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 4710.9 m
4165.26 4741.79 l
4134.08 4723.43 l
4146.61 4710.9 l
0 setgray
eofill
2.18579 w
n
4146.61 4710.9 m
4165.26 4741.79 l
4134.08 4723.43 l
4146.61 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 4742.08 m
4340.13 4754.32 l
4308.94 4723.43 l
4340.13 4741.79 l
4321.47 4710.9 l
h
eoclip
n
2.18579 w
n
4277.76 4679.42 m
4343.33 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 4710.9 m
4340.13 4741.79 l
4308.94 4723.43 l
4321.47 4710.9 l
0 setgray
eofill
2.18579 w
n
4321.47 4710.9 m
4340.13 4741.79 l
4308.94 4723.43 l
4321.47 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 4742.08 m
4514.99 4754.32 l
4483.81 4723.43 l
4514.99 4741.79 l
4496.34 4710.9 l
h
eoclip
n
2.18579 w
n
4452.62 4679.42 m
4518.2 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 4710.9 m
4514.99 4741.79 l
4483.81 4723.43 l
4496.34 4710.9 l
0 setgray
eofill
2.18579 w
n
4496.34 4710.9 m
4514.99 4741.79 l
4483.81 4723.43 l
4496.34 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 4742.08 m
4689.85 4754.32 l
4658.67 4723.43 l
4689.85 4741.79 l
4671.2 4710.9 l
h
eoclip
n
2.18579 w
n
4627.49 4679.42 m
4693.06 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 4710.9 m
4689.85 4741.79 l
4658.67 4723.43 l
4671.2 4710.9 l
0 setgray
eofill
2.18579 w
n
4671.2 4710.9 m
4689.85 4741.79 l
4658.67 4723.43 l
4671.2 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 4742.08 m
4864.72 4754.32 l
4833.54 4723.43 l
4864.72 4741.79 l
4846.07 4710.9 l
h
eoclip
n
2.18579 w
n
4802.35 4679.42 m
4867.93 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 4710.9 m
4864.72 4741.79 l
4833.54 4723.43 l
4846.07 4710.9 l
0 setgray
eofill
2.18579 w
n
4846.07 4710.9 m
4864.72 4741.79 l
4833.54 4723.43 l
4846.07 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 4742.08 m
5039.58 4754.32 l
5008.4 4723.43 l
5039.58 4741.79 l
5020.93 4710.9 l
h
eoclip
n
2.18579 w
n
4977.22 4679.42 m
5042.79 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 4710.9 m
5039.58 4741.79 l
5008.4 4723.43 l
5020.93 4710.9 l
0 setgray
eofill
2.18579 w
n
5020.93 4710.9 m
5039.58 4741.79 l
5008.4 4723.43 l
5020.93 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 4742.08 m
5214.45 4754.32 l
5183.26 4723.43 l
5214.45 4741.79 l
5195.8 4710.9 l
h
eoclip
n
2.18579 w
n
5152.08 4679.42 m
5217.65 4744.99 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 4710.9 m
5214.45 4741.79 l
5183.26 4723.43 l
5195.8 4710.9 l
0 setgray
eofill
2.18579 w
n
5195.8 4710.9 m
5214.45 4741.79 l
5183.26 4723.43 l
5195.8 4710.9 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 5966.13 m
3815.53 5978.37 l
3784.35 5947.48 l
3815.53 5965.84 l
3796.88 5934.95 l
h
eoclip
n
2.18579 w
n
3753.16 5903.47 m
3818.74 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 5934.95 m
3815.53 5965.84 l
3784.35 5947.48 l
3796.88 5934.95 l
0 setgray
eofill
2.18579 w
n
3796.88 5934.95 m
3815.53 5965.84 l
3784.35 5947.48 l
3796.88 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 5966.13 m
3990.4 5978.37 l
3959.21 5947.48 l
3990.4 5965.84 l
3971.74 5934.95 l
h
eoclip
n
2.18579 w
n
3928.03 5903.47 m
3993.6 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 5934.95 m
3990.4 5965.84 l
3959.21 5947.48 l
3971.74 5934.95 l
0 setgray
eofill
2.18579 w
n
3971.74 5934.95 m
3990.4 5965.84 l
3959.21 5947.48 l
3971.74 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 5966.13 m
4165.26 5978.37 l
4134.08 5947.48 l
4165.26 5965.84 l
4146.61 5934.95 l
h
eoclip
n
2.18579 w
n
4102.89 5903.47 m
4168.47 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 5934.95 m
4165.26 5965.84 l
4134.08 5947.48 l
4146.61 5934.95 l
0 setgray
eofill
2.18579 w
n
4146.61 5934.95 m
4165.26 5965.84 l
4134.08 5947.48 l
4146.61 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 5966.13 m
4340.13 5978.37 l
4308.94 5947.48 l
4340.13 5965.84 l
4321.47 5934.95 l
h
eoclip
n
2.18579 w
n
4277.76 5903.47 m
4343.33 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 5934.95 m
4340.13 5965.84 l
4308.94 5947.48 l
4321.47 5934.95 l
0 setgray
eofill
2.18579 w
n
4321.47 5934.95 m
4340.13 5965.84 l
4308.94 5947.48 l
4321.47 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 5966.13 m
4514.99 5978.37 l
4483.81 5947.48 l
4514.99 5965.84 l
4496.34 5934.95 l
h
eoclip
n
2.18579 w
n
4452.62 5903.47 m
4518.2 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 5934.95 m
4514.99 5965.84 l
4483.81 5947.48 l
4496.34 5934.95 l
0 setgray
eofill
2.18579 w
n
4496.34 5934.95 m
4514.99 5965.84 l
4483.81 5947.48 l
4496.34 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 5966.13 m
4689.85 5978.37 l
4658.67 5947.48 l
4689.85 5965.84 l
4671.2 5934.95 l
h
eoclip
n
2.18579 w
n
4627.49 5903.47 m
4693.06 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 5934.95 m
4689.85 5965.84 l
4658.67 5947.48 l
4671.2 5934.95 l
0 setgray
eofill
2.18579 w
n
4671.2 5934.95 m
4689.85 5965.84 l
4658.67 5947.48 l
4671.2 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 5966.13 m
4864.72 5978.37 l
4833.54 5947.48 l
4864.72 5965.84 l
4846.07 5934.95 l
h
eoclip
n
2.18579 w
n
4802.35 5903.47 m
4867.93 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 5934.95 m
4864.72 5965.84 l
4833.54 5947.48 l
4846.07 5934.95 l
0 setgray
eofill
2.18579 w
n
4846.07 5934.95 m
4864.72 5965.84 l
4833.54 5947.48 l
4846.07 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 5966.13 m
5039.58 5978.37 l
5008.4 5947.48 l
5039.58 5965.84 l
5020.93 5934.95 l
h
eoclip
n
2.18579 w
n
4977.22 5903.47 m
5042.79 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 5934.95 m
5039.58 5965.84 l
5008.4 5947.48 l
5020.93 5934.95 l
0 setgray
eofill
2.18579 w
n
5020.93 5934.95 m
5039.58 5965.84 l
5008.4 5947.48 l
5020.93 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 5966.13 m
5214.45 5978.37 l
5183.26 5947.48 l
5214.45 5965.84 l
5195.8 5934.95 l
h
eoclip
n
2.18579 w
n
5152.08 5903.47 m
5217.65 5969.05 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 5934.95 m
5214.45 5965.84 l
5183.26 5947.48 l
5195.8 5934.95 l
0 setgray
eofill
2.18579 w
n
5195.8 5934.95 m
5214.45 5965.84 l
5183.26 5947.48 l
5195.8 5934.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3827.77 5791.27 m
3815.53 5803.51 l
3784.35 5772.62 l
3815.53 5790.98 l
3796.88 5760.08 l
h
eoclip
n
2.18579 w
n
3753.16 5728.61 m
3818.74 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3796.88 5760.08 m
3815.53 5790.98 l
3784.35 5772.62 l
3796.88 5760.08 l
0 setgray
eofill
2.18579 w
n
3796.88 5760.08 m
3815.53 5790.98 l
3784.35 5772.62 l
3796.88 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4002.64 5791.27 m
3990.4 5803.51 l
3959.21 5772.62 l
3990.4 5790.98 l
3971.74 5760.08 l
h
eoclip
n
2.18579 w
n
3928.03 5728.61 m
3993.6 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3971.74 5760.08 m
3990.4 5790.98 l
3959.21 5772.62 l
3971.74 5760.08 l
0 setgray
eofill
2.18579 w
n
3971.74 5760.08 m
3990.4 5790.98 l
3959.21 5772.62 l
3971.74 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4177.5 5791.27 m
4165.26 5803.51 l
4134.08 5772.62 l
4165.26 5790.98 l
4146.61 5760.08 l
h
eoclip
n
2.18579 w
n
4102.89 5728.61 m
4168.47 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4146.61 5760.08 m
4165.26 5790.98 l
4134.08 5772.62 l
4146.61 5760.08 l
0 setgray
eofill
2.18579 w
n
4146.61 5760.08 m
4165.26 5790.98 l
4134.08 5772.62 l
4146.61 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4352.37 5791.27 m
4340.13 5803.51 l
4308.94 5772.62 l
4340.13 5790.98 l
4321.47 5760.08 l
h
eoclip
n
2.18579 w
n
4277.76 5728.61 m
4343.33 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4321.47 5760.08 m
4340.13 5790.98 l
4308.94 5772.62 l
4321.47 5760.08 l
0 setgray
eofill
2.18579 w
n
4321.47 5760.08 m
4340.13 5790.98 l
4308.94 5772.62 l
4321.47 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4527.23 5791.27 m
4514.99 5803.51 l
4483.81 5772.62 l
4514.99 5790.98 l
4496.34 5760.08 l
h
eoclip
n
2.18579 w
n
4452.62 5728.61 m
4518.2 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4496.34 5760.08 m
4514.99 5790.98 l
4483.81 5772.62 l
4496.34 5760.08 l
0 setgray
eofill
2.18579 w
n
4496.34 5760.08 m
4514.99 5790.98 l
4483.81 5772.62 l
4496.34 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4702.1 5791.27 m
4689.85 5803.51 l
4658.67 5772.62 l
4689.85 5790.98 l
4671.2 5760.08 l
h
eoclip
n
2.18579 w
n
4627.49 5728.61 m
4693.06 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4671.2 5760.08 m
4689.85 5790.98 l
4658.67 5772.62 l
4671.2 5760.08 l
0 setgray
eofill
2.18579 w
n
4671.2 5760.08 m
4689.85 5790.98 l
4658.67 5772.62 l
4671.2 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4876.96 5791.27 m
4864.72 5803.51 l
4833.54 5772.62 l
4864.72 5790.98 l
4846.07 5760.08 l
h
eoclip
n
2.18579 w
n
4802.35 5728.61 m
4867.93 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4846.07 5760.08 m
4864.72 5790.98 l
4833.54 5772.62 l
4846.07 5760.08 l
0 setgray
eofill
2.18579 w
n
4846.07 5760.08 m
4864.72 5790.98 l
4833.54 5772.62 l
4846.07 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5051.82 5791.27 m
5039.58 5803.51 l
5008.4 5772.62 l
5039.58 5790.98 l
5020.93 5760.08 l
h
eoclip
n
2.18579 w
n
4977.22 5728.61 m
5042.79 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5020.93 5760.08 m
5039.58 5790.98 l
5008.4 5772.62 l
5020.93 5760.08 l
0 setgray
eofill
2.18579 w
n
5020.93 5760.08 m
5039.58 5790.98 l
5008.4 5772.62 l
5020.93 5760.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5226.69 5791.27 m
5214.45 5803.51 l
5183.26 5772.62 l
5214.45 5790.98 l
5195.8 5760.08 l
h
eoclip
n
2.18579 w
n
5152.08 5728.61 m
5217.65 5794.18 l
0 setgray
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5195.8 5760.08 m
5214.45 5790.98 l
5183.26 5772.62 l
5195.8 5760.08 l
0 setgray
eofill
2.18579 w
n
5195.8 5760.08 m
5214.45 5790.98 l
5183.26 5772.62 l
5195.8 5760.08 l
h
S
q
10 0 0 10 0 0 cm
530.509 625.32 m
/N353 11.3662 Tf
(G) show
539.252 625.32 m
/N353 8.74316 Tf
(1) show
Q
8.74316 w
n
3709.45 6034.62 174.865 174.865 re
S
n
3884.31 6034.62 174.865 174.865 re
S
n
4059.18 6034.62 174.865 174.865 re
S
n
4234.04 6034.62 174.865 174.865 re
S
n
4408.91 6034.62 174.865 174.865 re
S
n
3709.45 5859.76 174.865 174.865 re
S
n
3884.31 5859.76 174.865 174.865 re
S
n
4059.18 5859.76 174.865 174.865 re
S
n
4234.04 5859.76 174.865 174.865 re
S
n
4408.91 5859.76 174.865 174.865 re
S
n
3709.45 5684.89 174.865 174.865 re
S
n
3884.31 5684.89 174.865 174.865 re
S
n
4059.18 5684.89 174.865 174.865 re
S
n
4234.04 5684.89 174.865 174.865 re
S
n
4408.91 5684.89 174.865 174.865 re
S
n
3709.45 5510.03 174.865 174.865 re
S
n
3884.31 5510.03 174.865 174.865 re
S
n
4059.18 5510.03 174.865 174.865 re
S
n
4234.04 5510.03 174.865 174.865 re
S
n
4408.91 5510.03 174.865 174.865 re
S
n
3709.45 6209.49 174.865 174.865 re
S
n
3884.31 6209.49 174.865 174.865 re
S
n
4059.18 6209.49 174.865 174.865 re
S
n
4234.04 6209.49 174.865 174.865 re
S
n
4408.91 6209.49 174.865 174.865 re
S
n
3709.45 5160.3 174.865 174.865 re
S
n
3884.31 5160.3 174.865 174.865 re
S
n
4059.18 5160.3 174.865 174.865 re
S
n
4234.04 5160.3 174.865 174.865 re
S
n
4408.91 5160.3 174.865 174.865 re
S
n
3709.45 4985.43 174.865 174.865 re
S
n
3884.31 4985.43 174.865 174.865 re
S
n
4059.18 4985.43 174.865 174.865 re
S
n
4234.04 4985.43 174.865 174.865 re
S
n
4408.91 4985.43 174.865 174.865 re
S
n
3709.45 4810.57 174.865 174.865 re
S
n
3884.31 4810.57 174.865 174.865 re
S
n
4059.18 4810.57 174.865 174.865 re
S
n
4234.04 4810.57 174.865 174.865 re
S
n
4408.91 4810.57 174.865 174.865 re
S
n
3709.45 4635.7 174.865 174.865 re
S
n
3884.31 4635.7 174.865 174.865 re
S
n
4059.18 4635.7 174.865 174.865 re
S
n
4234.04 4635.7 174.865 174.865 re
S
n
4408.91 4635.7 174.865 174.865 re
S
n
3709.45 5335.16 174.865 174.865 re
S
n
3884.31 5335.16 174.865 174.865 re
S
n
4059.18 5335.16 174.865 174.865 re
S
n
4234.04 5335.16 174.865 174.865 re
S
n
4408.91 5335.16 174.865 174.865 re
S
n
4583.77 5160.3 174.865 174.865 re
S
n
4758.64 5160.3 174.865 174.865 re
S
n
4933.5 5160.3 174.865 174.865 re
S
n
5108.36 5160.3 174.865 174.865 re
S
n
5283.23 5160.3 174.865 174.865 re
S
n
4583.77 4985.43 174.865 174.865 re
S
n
4758.64 4985.43 174.865 174.865 re
S
n
4933.5 4985.43 174.865 174.865 re
S
n
5108.36 4985.43 174.865 174.865 re
S
n
5283.23 4985.43 174.865 174.865 re
S
n
4583.77 4810.57 174.865 174.865 re
S
n
4758.64 4810.57 174.865 174.865 re
S
n
4933.5 4810.57 174.865 174.865 re
S
n
5108.36 4810.57 174.865 174.865 re
S
n
5283.23 4810.57 174.865 174.865 re
S
n
4583.77 4635.7 174.865 174.865 re
S
n
4758.64 4635.7 174.865 174.865 re
S
n
4933.5 4635.7 174.865 174.865 re
S
n
5108.36 4635.7 174.865 174.865 re
S
n
5283.23 4635.7 174.865 174.865 re
S
n
4583.77 5335.16 174.865 174.865 re
S
n
4758.64 5335.16 174.865 174.865 re
S
n
4933.5 5335.16 174.865 174.865 re
S
n
5108.36 5335.16 174.865 174.865 re
S
n
5283.23 5335.16 174.865 174.865 re
S
n
4583.77 6034.62 174.865 174.865 re
S
n
4758.64 6034.62 174.865 174.865 re
S
n
4933.5 6034.62 174.865 174.865 re
S
n
5108.36 6034.62 174.865 174.865 re
S
n
5283.23 6034.62 174.865 174.865 re
S
n
4583.77 5859.76 174.865 174.865 re
S
n
4758.64 5859.76 174.865 174.865 re
S
n
4933.5 5859.76 174.865 174.865 re
S
n
5108.36 5859.76 174.865 174.865 re
S
n
5283.23 5859.76 174.865 174.865 re
S
n
4583.77 5684.89 174.865 174.865 re
S
n
4758.64 5684.89 174.865 174.865 re
S
n
4933.5 5684.89 174.865 174.865 re
S
n
5108.36 5684.89 174.865 174.865 re
S
n
5283.23 5684.89 174.865 174.865 re
S
n
4583.77 5510.03 174.865 174.865 re
S
n
4758.64 5510.03 174.865 174.865 re
S
n
4933.5 5510.03 174.865 174.865 re
S
n
5108.36 5510.03 174.865 174.865 re
S
n
5283.23 5510.03 174.865 174.865 re
S
n
4583.77 6209.49 174.865 174.865 re
S
n
4758.64 6209.49 174.865 174.865 re
S
n
4933.5 6209.49 174.865 174.865 re
S
n
5108.36 6209.49 174.865 174.865 re
S
n
5283.23 6209.49 174.865 174.865 re
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
3844.97 6288.18 m
3844.97 6305.66 l
3800.96 6305.66 l
3835.93 6296.92 l
3800.96 6288.18 l
h
eoclip
n
n
3753.16 6296.92 m
3840.59 6296.92 l
0 setgray
eofill
2.18579 w
n
3753.16 6296.92 m
3840.59 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3800.96 6288.18 m
3835.93 6296.92 l
3800.96 6305.66 l
3800.96 6288.18 l
0 setgray
eofill
2.18579 w
n
3800.96 6288.18 m
3835.93 6296.92 l
3800.96 6305.66 l
3800.96 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4369.56 6288.18 m
4369.56 6305.66 l
4325.55 6305.66 l
4360.53 6296.92 l
4325.55 6288.18 l
h
eoclip
n
n
4277.76 6296.92 m
4365.19 6296.92 l
0 setgray
eofill
2.18579 w
n
4277.76 6296.92 m
4365.19 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4325.55 6288.18 m
4360.53 6296.92 l
4325.55 6305.66 l
4325.55 6288.18 l
0 setgray
eofill
2.18579 w
n
4325.55 6288.18 m
4360.53 6296.92 l
4325.55 6305.66 l
4325.55 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4544.43 6288.18 m
4544.43 6305.66 l
4500.42 6305.66 l
4535.39 6296.92 l
4500.42 6288.18 l
h
eoclip
n
n
4452.62 6296.92 m
4540.05 6296.92 l
0 setgray
eofill
2.18579 w
n
4452.62 6296.92 m
4540.05 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4500.42 6288.18 m
4535.39 6296.92 l
4500.42 6305.66 l
4500.42 6288.18 l
0 setgray
eofill
2.18579 w
n
4500.42 6288.18 m
4535.39 6296.92 l
4500.42 6305.66 l
4500.42 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4719.29 6288.18 m
4719.29 6305.66 l
4675.28 6305.66 l
4710.26 6296.92 l
4675.28 6288.18 l
h
eoclip
n
n
4627.49 6296.92 m
4714.92 6296.92 l
0 setgray
eofill
2.18579 w
n
4627.49 6296.92 m
4714.92 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4675.28 6288.18 m
4710.26 6296.92 l
4675.28 6305.66 l
4675.28 6288.18 l
0 setgray
eofill
2.18579 w
n
4675.28 6288.18 m
4710.26 6296.92 l
4675.28 6305.66 l
4675.28 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4894.16 6288.18 m
4894.16 6305.66 l
4850.15 6305.66 l
4885.12 6296.92 l
4850.15 6288.18 l
h
eoclip
n
n
4802.35 6296.92 m
4889.78 6296.92 l
0 setgray
eofill
2.18579 w
n
4802.35 6296.92 m
4889.78 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4850.15 6288.18 m
4885.12 6296.92 l
4850.15 6305.66 l
4850.15 6288.18 l
0 setgray
eofill
2.18579 w
n
4850.15 6288.18 m
4885.12 6296.92 l
4850.15 6305.66 l
4850.15 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5069.02 6288.18 m
5069.02 6305.66 l
5025.01 6305.66 l
5059.99 6296.92 l
5025.01 6288.18 l
h
eoclip
n
n
4977.22 6296.92 m
5064.65 6296.92 l
0 setgray
eofill
2.18579 w
n
4977.22 6296.92 m
5064.65 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5025.01 6288.18 m
5059.99 6296.92 l
5025.01 6305.66 l
5025.01 6288.18 l
0 setgray
eofill
2.18579 w
n
5025.01 6288.18 m
5059.99 6296.92 l
5025.01 6305.66 l
5025.01 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5243.88 6288.18 m
5243.88 6305.66 l
5199.88 6305.66 l
5234.85 6296.92 l
5199.88 6288.18 l
h
eoclip
n
n
5152.08 6296.92 m
5239.51 6296.92 l
0 setgray
eofill
2.18579 w
n
5152.08 6296.92 m
5239.51 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5199.88 6288.18 m
5234.85 6296.92 l
5199.88 6305.66 l
5199.88 6288.18 l
0 setgray
eofill
2.18579 w
n
5199.88 6288.18 m
5234.85 6296.92 l
5199.88 6305.66 l
5199.88 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4194.7 6288.18 m
4194.7 6305.66 l
4150.69 6305.66 l
4185.66 6296.92 l
4150.69 6288.18 l
h
eoclip
n
n
4102.89 6296.92 m
4190.32 6296.92 l
0 setgray
eofill
2.18579 w
n
4102.89 6296.92 m
4190.32 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
4150.69 6288.18 m
4185.66 6296.92 l
4150.69 6305.66 l
4150.69 6288.18 l
0 setgray
eofill
2.18579 w
n
4150.69 6288.18 m
4185.66 6296.92 l
4150.69 6305.66 l
4150.69 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
4019.83 6288.18 m
4019.83 6305.66 l
3975.82 6305.66 l
4010.8 6296.92 l
3975.82 6288.18 l
h
eoclip
n
n
3928.03 6296.92 m
4015.46 6296.92 l
0 setgray
eofill
2.18579 w
n
3928.03 6296.92 m
4015.46 6296.92 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
3975.82 6288.18 m
4010.8 6296.92 l
3975.82 6305.66 l
3975.82 6288.18 l
0 setgray
eofill
2.18579 w
n
3975.82 6288.18 m
4010.8 6296.92 l
3975.82 6305.66 l
3975.82 6288.18 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 6170.14 m
5361.92 6170.14 l
5361.92 6126.13 l
5370.66 6161.11 l
5379.4 6126.13 l
h
eoclip
n
n
5370.66 6078.34 m
5370.66 6165.77 l
0 setgray
eofill
2.18579 w
n
5370.66 6078.34 m
5370.66 6165.77 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 6126.13 m
5370.66 6161.11 l
5361.92 6126.13 l
5379.4 6126.13 l
0 setgray
eofill
2.18579 w
n
5379.4 6126.13 m
5370.66 6161.11 l
5361.92 6126.13 l
5379.4 6126.13 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 5645.55 m
5361.92 5645.55 l
5361.92 5601.54 l
5370.66 5636.51 l
5379.4 5601.54 l
h
eoclip
n
n
5370.66 5553.74 m
5370.66 5641.18 l
0 setgray
eofill
2.18579 w
n
5370.66 5553.74 m
5370.66 5641.18 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 5601.54 m
5370.66 5636.51 l
5361.92 5601.54 l
5379.4 5601.54 l
0 setgray
eofill
2.18579 w
n
5379.4 5601.54 m
5370.66 5636.51 l
5361.92 5601.54 l
5379.4 5601.54 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 5448.83 m
5361.92 5448.83 l
5361.92 5404.82 l
5370.66 5439.79 l
5379.4 5404.82 l
h
eoclip
n
n
5370.66 5357.02 m
5370.66 5444.45 l
0 setgray
eofill
2.18579 w
n
5370.66 5357.02 m
5370.66 5444.45 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 5404.82 m
5370.66 5439.79 l
5361.92 5404.82 l
5379.4 5404.82 l
0 setgray
eofill
2.18579 w
n
5379.4 5404.82 m
5370.66 5439.79 l
5361.92 5404.82 l
5379.4 5404.82 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 5295.82 m
5361.92 5295.82 l
5361.92 5251.81 l
5370.66 5286.78 l
5379.4 5251.81 l
h
eoclip
n
n
5370.66 5204.01 m
5370.66 5291.45 l
0 setgray
eofill
2.18579 w
n
5370.66 5204.01 m
5370.66 5291.45 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 5251.81 m
5370.66 5286.78 l
5361.92 5251.81 l
5379.4 5251.81 l
0 setgray
eofill
2.18579 w
n
5379.4 5251.81 m
5370.66 5286.78 l
5361.92 5251.81 l
5379.4 5251.81 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 5120.95 m
5361.92 5120.95 l
5361.92 5076.95 l
5370.66 5111.92 l
5379.4 5076.95 l
h
eoclip
n
n
5370.66 5029.15 m
5370.66 5116.58 l
0 setgray
eofill
2.18579 w
n
5370.66 5029.15 m
5370.66 5116.58 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 5076.95 m
5370.66 5111.92 l
5361.92 5076.95 l
5379.4 5076.95 l
0 setgray
eofill
2.18579 w
n
5379.4 5076.95 m
5370.66 5111.92 l
5361.92 5076.95 l
5379.4 5076.95 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 4946.09 m
5361.92 4946.09 l
5361.92 4902.08 l
5370.66 4937.05 l
5379.4 4902.08 l
h
eoclip
n
n
5370.66 4854.29 m
5370.66 4941.72 l
0 setgray
eofill
2.18579 w
n
5370.66 4854.29 m
5370.66 4941.72 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 4902.08 m
5370.66 4937.05 l
5361.92 4902.08 l
5379.4 4902.08 l
0 setgray
eofill
2.18579 w
n
5379.4 4902.08 m
5370.66 4937.05 l
5361.92 4902.08 l
5379.4 4902.08 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 4771.22 m
5361.92 4771.22 l
5361.92 4727.22 l
5370.66 4762.19 l
5379.4 4727.22 l
h
eoclip
n
n
5370.66 4679.42 m
5370.66 4766.85 l
0 setgray
eofill
2.18579 w
n
5370.66 4679.42 m
5370.66 4766.85 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 4727.22 m
5370.66 4762.19 l
5361.92 4727.22 l
5379.4 4727.22 l
0 setgray
eofill
2.18579 w
n
5379.4 4727.22 m
5370.66 4762.19 l
5361.92 4727.22 l
5379.4 4727.22 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 5995.28 m
5361.92 5995.28 l
5361.92 5951.27 l
5370.66 5986.24 l
5379.4 5951.27 l
h
eoclip
n
n
5370.66 5903.47 m
5370.66 5990.91 l
0 setgray
eofill
2.18579 w
n
5370.66 5903.47 m
5370.66 5990.91 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 5951.27 m
5370.66 5986.24 l
5361.92 5951.27 l
5379.4 5951.27 l
0 setgray
eofill
2.18579 w
n
5379.4 5951.27 m
5370.66 5986.24 l
5361.92 5951.27 l
5379.4 5951.27 l
h
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
5379.4 5820.41 m
5361.92 5820.41 l
5361.92 5776.41 l
5370.66 5811.38 l
5379.4 5776.41 l
h
eoclip
n
n
5370.66 5728.61 m
5370.66 5816.04 l
0 setgray
eofill
2.18579 w
n
5370.66 5728.61 m
5370.66 5816.04 l
S
Q
q
n
3698.4 6397.7 m
3698.4 4622.4 l
5469.4 4622.4 l
5469.4 6397.7 l
h
W
n
n
5379.4 5776.41 m
5370.66 5811.38 l
5361.92 5776.41 l
5379.4 5776.41 l
0 setgray
eofill
2.18579 w
n
5379.4 5776.41 m
5370.66 5811.38 l
5361.92 5776.41 l
5379.4 5776.41 l
h
S
Q
q
q
10 0 0 10 0 0 cm
0 setgray
220.56 435.12 m
/N22 10.9091 Tf
(\(a\))
[3.58903 4.78904 3.58903 ] pdfxs
452.007 435.12 m
(\(b\))
[3.58903 5.38913 3.58903 ] pdfxs
Q
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 3962.31 m
1469.53 3974.55 l
1438.35 3943.66 l
1469.53 3962.02 l
1450.88 3931.13 l
h
eoclip
n
2.18579 w
n
1407.16 3899.65 m
1472.74 3965.23 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 3931.13 m
1469.53 3962.02 l
1438.35 3943.66 l
1450.88 3931.13 l
0 setgray
eofill
2.18579 w
n
1450.88 3931.13 m
1469.53 3962.02 l
1438.35 3943.66 l
1450.88 3931.13 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1469.53 3825.05 m
1481.77 3837.29 l
1450.88 3868.47 l
1469.53 3837.29 l
1438.35 3855.94 l
h
eoclip
n
2.18579 w
n
1407.16 3899.65 m
1472.74 3834.08 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1438.35 3855.94 m
1469.53 3837.29 l
1450.88 3868.47 l
1438.35 3855.94 l
0 setgray
eofill
2.18579 w
n
1438.35 3855.94 m
1469.53 3837.29 l
1450.88 3868.47 l
1438.35 3855.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 3962.31 m
1644.4 3974.55 l
1613.21 3943.66 l
1644.4 3962.02 l
1625.74 3931.13 l
h
eoclip
n
2.18579 w
n
1582.03 3899.65 m
1647.6 3965.23 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 3931.13 m
1644.4 3962.02 l
1613.21 3943.66 l
1625.74 3931.13 l
0 setgray
eofill
2.18579 w
n
1625.74 3931.13 m
1644.4 3962.02 l
1613.21 3943.66 l
1625.74 3931.13 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1644.4 3825.05 m
1656.64 3837.29 l
1625.74 3868.47 l
1644.4 3837.29 l
1613.21 3855.94 l
h
eoclip
n
2.18579 w
n
1582.03 3899.65 m
1647.6 3834.08 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1613.21 3855.94 m
1644.4 3837.29 l
1625.74 3868.47 l
1613.21 3855.94 l
0 setgray
eofill
2.18579 w
n
1613.21 3855.94 m
1644.4 3837.29 l
1625.74 3868.47 l
1613.21 3855.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1831.5 3962.31 m
1819.26 3974.55 l
1788.08 3943.66 l
1819.26 3962.02 l
1800.61 3931.13 l
h
eoclip
n
2.18579 w
n
1756.89 3899.65 m
1822.47 3965.23 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1800.61 3931.13 m
1819.26 3962.02 l
1788.08 3943.66 l
1800.61 3931.13 l
0 setgray
eofill
2.18579 w
n
1800.61 3931.13 m
1819.26 3962.02 l
1788.08 3943.66 l
1800.61 3931.13 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1819.26 3825.05 m
1831.5 3837.29 l
1800.61 3868.47 l
1819.26 3837.29 l
1788.08 3855.94 l
h
eoclip
n
2.18579 w
n
1756.89 3899.65 m
1822.47 3834.08 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1788.08 3855.94 m
1819.26 3837.29 l
1800.61 3868.47 l
1788.08 3855.94 l
0 setgray
eofill
2.18579 w
n
1788.08 3855.94 m
1819.26 3837.29 l
1800.61 3868.47 l
1788.08 3855.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2006.37 3962.31 m
1994.13 3974.55 l
1962.94 3943.66 l
1994.13 3962.02 l
1975.47 3931.13 l
h
eoclip
n
2.18579 w
n
1931.76 3899.65 m
1997.33 3965.23 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1975.47 3931.13 m
1994.13 3962.02 l
1962.94 3943.66 l
1975.47 3931.13 l
0 setgray
eofill
2.18579 w
n
1975.47 3931.13 m
1994.13 3962.02 l
1962.94 3943.66 l
1975.47 3931.13 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1994.13 3825.05 m
2006.37 3837.29 l
1975.47 3868.47 l
1994.13 3837.29 l
1962.94 3855.94 l
h
eoclip
n
2.18579 w
n
1931.76 3899.65 m
1997.33 3834.08 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1962.94 3855.94 m
1994.13 3837.29 l
1975.47 3868.47 l
1962.94 3855.94 l
0 setgray
eofill
2.18579 w
n
1962.94 3855.94 m
1994.13 3837.29 l
1975.47 3868.47 l
1962.94 3855.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2181.23 3962.31 m
2168.99 3974.55 l
2137.81 3943.66 l
2168.99 3962.02 l
2150.34 3931.13 l
h
eoclip
n
2.18579 w
n
2106.62 3899.65 m
2172.2 3965.23 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2150.34 3931.13 m
2168.99 3962.02 l
2137.81 3943.66 l
2150.34 3931.13 l
0 setgray
eofill
2.18579 w
n
2150.34 3931.13 m
2168.99 3962.02 l
2137.81 3943.66 l
2150.34 3931.13 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2168.99 3825.05 m
2181.23 3837.29 l
2150.34 3868.47 l
2168.99 3837.29 l
2137.81 3855.94 l
h
eoclip
n
2.18579 w
n
2106.62 3899.65 m
2172.2 3834.08 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2137.81 3855.94 m
2168.99 3837.29 l
2150.34 3868.47 l
2137.81 3855.94 l
0 setgray
eofill
2.18579 w
n
2137.81 3855.94 m
2168.99 3837.29 l
2150.34 3868.47 l
2137.81 3855.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2356.1 3962.31 m
2343.86 3974.55 l
2312.67 3943.66 l
2343.86 3962.02 l
2325.2 3931.13 l
h
eoclip
n
2.18579 w
n
2281.49 3899.65 m
2347.06 3965.23 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2325.2 3931.13 m
2343.86 3962.02 l
2312.67 3943.66 l
2325.2 3931.13 l
0 setgray
eofill
2.18579 w
n
2325.2 3931.13 m
2343.86 3962.02 l
2312.67 3943.66 l
2325.2 3931.13 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2343.86 3825.05 m
2356.1 3837.29 l
2325.2 3868.47 l
2343.86 3837.29 l
2312.67 3855.94 l
h
eoclip
n
2.18579 w
n
2281.49 3899.65 m
2347.06 3834.08 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2312.67 3855.94 m
2343.86 3837.29 l
2325.2 3868.47 l
2312.67 3855.94 l
0 setgray
eofill
2.18579 w
n
2312.67 3855.94 m
2343.86 3837.29 l
2325.2 3868.47 l
2312.67 3855.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2530.96 3962.31 m
2518.72 3974.55 l
2487.54 3943.66 l
2518.72 3962.02 l
2500.07 3931.13 l
h
eoclip
n
2.18579 w
n
2456.35 3899.65 m
2521.93 3965.23 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2500.07 3931.13 m
2518.72 3962.02 l
2487.54 3943.66 l
2500.07 3931.13 l
0 setgray
eofill
2.18579 w
n
2500.07 3931.13 m
2518.72 3962.02 l
2487.54 3943.66 l
2500.07 3931.13 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2518.72 3825.05 m
2530.96 3837.29 l
2500.07 3868.47 l
2518.72 3837.29 l
2487.54 3855.94 l
h
eoclip
n
2.18579 w
n
2456.35 3899.65 m
2521.93 3834.08 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2487.54 3855.94 m
2518.72 3837.29 l
2500.07 3868.47 l
2487.54 3855.94 l
0 setgray
eofill
2.18579 w
n
2487.54 3855.94 m
2518.72 3837.29 l
2500.07 3868.47 l
2487.54 3855.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2705.83 3940.46 m
2693.58 3952.7 l
2662.4 3921.8 l
2693.58 3940.16 l
2674.93 3909.27 l
h
eoclip
n
2.18579 w
n
2631.22 3877.8 m
2696.79 3943.37 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2674.93 3909.27 m
2693.58 3940.16 l
2662.4 3921.8 l
2674.93 3909.27 l
0 setgray
eofill
2.18579 w
n
2674.93 3909.27 m
2693.58 3940.16 l
2662.4 3921.8 l
2674.93 3909.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 3787.45 m
1469.53 3799.69 l
1438.35 3768.8 l
1469.53 3787.16 l
1450.88 3756.27 l
h
eoclip
n
2.18579 w
n
1407.16 3724.79 m
1472.74 3790.36 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 3756.27 m
1469.53 3787.16 l
1438.35 3768.8 l
1450.88 3756.27 l
0 setgray
eofill
2.18579 w
n
1450.88 3756.27 m
1469.53 3787.16 l
1438.35 3768.8 l
1450.88 3756.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1469.53 3650.18 m
1481.77 3662.42 l
1450.88 3693.61 l
1469.53 3662.42 l
1438.35 3681.07 l
h
eoclip
n
2.18579 w
n
1407.16 3724.79 m
1472.74 3659.22 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1438.35 3681.07 m
1469.53 3662.42 l
1450.88 3693.61 l
1438.35 3681.07 l
0 setgray
eofill
2.18579 w
n
1438.35 3681.07 m
1469.53 3662.42 l
1450.88 3693.61 l
1438.35 3681.07 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 3787.45 m
1644.4 3799.69 l
1613.21 3768.8 l
1644.4 3787.16 l
1625.74 3756.27 l
h
eoclip
n
2.18579 w
n
1582.03 3724.79 m
1647.6 3790.36 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 3756.27 m
1644.4 3787.16 l
1613.21 3768.8 l
1625.74 3756.27 l
0 setgray
eofill
2.18579 w
n
1625.74 3756.27 m
1644.4 3787.16 l
1613.21 3768.8 l
1625.74 3756.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1644.4 3650.18 m
1656.64 3662.42 l
1625.74 3693.61 l
1644.4 3662.42 l
1613.21 3681.07 l
h
eoclip
n
2.18579 w
n
1582.03 3724.79 m
1647.6 3659.22 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1613.21 3681.07 m
1644.4 3662.42 l
1625.74 3693.61 l
1613.21 3681.07 l
0 setgray
eofill
2.18579 w
n
1613.21 3681.07 m
1644.4 3662.42 l
1625.74 3693.61 l
1613.21 3681.07 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1831.5 3787.45 m
1819.26 3799.69 l
1788.08 3768.8 l
1819.26 3787.16 l
1800.61 3756.27 l
h
eoclip
n
2.18579 w
n
1756.89 3724.79 m
1822.47 3790.36 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1800.61 3756.27 m
1819.26 3787.16 l
1788.08 3768.8 l
1800.61 3756.27 l
0 setgray
eofill
2.18579 w
n
1800.61 3756.27 m
1819.26 3787.16 l
1788.08 3768.8 l
1800.61 3756.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1819.26 3650.18 m
1831.5 3662.42 l
1800.61 3693.61 l
1819.26 3662.42 l
1788.08 3681.07 l
h
eoclip
n
2.18579 w
n
1756.89 3724.79 m
1822.47 3659.22 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1788.08 3681.07 m
1819.26 3662.42 l
1800.61 3693.61 l
1788.08 3681.07 l
0 setgray
eofill
2.18579 w
n
1788.08 3681.07 m
1819.26 3662.42 l
1800.61 3693.61 l
1788.08 3681.07 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2006.37 3787.45 m
1994.13 3799.69 l
1962.94 3768.8 l
1994.13 3787.16 l
1975.47 3756.27 l
h
eoclip
n
2.18579 w
n
1931.76 3724.79 m
1997.33 3790.36 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1975.47 3756.27 m
1994.13 3787.16 l
1962.94 3768.8 l
1975.47 3756.27 l
0 setgray
eofill
2.18579 w
n
1975.47 3756.27 m
1994.13 3787.16 l
1962.94 3768.8 l
1975.47 3756.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1994.13 3650.18 m
2006.37 3662.42 l
1975.47 3693.61 l
1994.13 3662.42 l
1962.94 3681.07 l
h
eoclip
n
2.18579 w
n
1931.76 3724.79 m
1997.33 3659.22 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1962.94 3681.07 m
1994.13 3662.42 l
1975.47 3693.61 l
1962.94 3681.07 l
0 setgray
eofill
2.18579 w
n
1962.94 3681.07 m
1994.13 3662.42 l
1975.47 3693.61 l
1962.94 3681.07 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2181.23 3787.45 m
2168.99 3799.69 l
2137.81 3768.8 l
2168.99 3787.16 l
2150.34 3756.27 l
h
eoclip
n
2.18579 w
n
2106.62 3724.79 m
2172.2 3790.36 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2150.34 3756.27 m
2168.99 3787.16 l
2137.81 3768.8 l
2150.34 3756.27 l
0 setgray
eofill
2.18579 w
n
2150.34 3756.27 m
2168.99 3787.16 l
2137.81 3768.8 l
2150.34 3756.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2168.99 3650.18 m
2181.23 3662.42 l
2150.34 3693.61 l
2168.99 3662.42 l
2137.81 3681.07 l
h
eoclip
n
2.18579 w
n
2106.62 3724.79 m
2172.2 3659.22 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2137.81 3681.07 m
2168.99 3662.42 l
2150.34 3693.61 l
2137.81 3681.07 l
0 setgray
eofill
2.18579 w
n
2137.81 3681.07 m
2168.99 3662.42 l
2150.34 3693.61 l
2137.81 3681.07 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2356.1 3787.45 m
2343.86 3799.69 l
2312.67 3768.8 l
2343.86 3787.16 l
2325.2 3756.27 l
h
eoclip
n
2.18579 w
n
2281.49 3724.79 m
2347.06 3790.36 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2325.2 3756.27 m
2343.86 3787.16 l
2312.67 3768.8 l
2325.2 3756.27 l
0 setgray
eofill
2.18579 w
n
2325.2 3756.27 m
2343.86 3787.16 l
2312.67 3768.8 l
2325.2 3756.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2343.86 3650.18 m
2356.1 3662.42 l
2325.2 3693.61 l
2343.86 3662.42 l
2312.67 3681.07 l
h
eoclip
n
2.18579 w
n
2281.49 3724.79 m
2347.06 3659.22 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2312.67 3681.07 m
2343.86 3662.42 l
2325.2 3693.61 l
2312.67 3681.07 l
0 setgray
eofill
2.18579 w
n
2312.67 3681.07 m
2343.86 3662.42 l
2325.2 3693.61 l
2312.67 3681.07 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2530.96 3765.59 m
2518.72 3777.83 l
2487.54 3746.94 l
2518.72 3765.3 l
2500.07 3734.41 l
h
eoclip
n
2.18579 w
n
2456.35 3702.93 m
2521.93 3768.51 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2500.07 3734.41 m
2518.72 3765.3 l
2487.54 3746.94 l
2500.07 3734.41 l
0 setgray
eofill
2.18579 w
n
2500.07 3734.41 m
2518.72 3765.3 l
2487.54 3746.94 l
2500.07 3734.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2902.55 3743.73 m
2890.31 3755.97 l
2859.12 3725.08 l
2890.31 3743.44 l
2871.66 3712.55 l
h
eoclip
n
2.18579 w
n
2827.94 3681.07 m
2893.51 3746.65 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2871.66 3712.55 m
2890.31 3743.44 l
2859.12 3725.08 l
2871.66 3712.55 l
0 setgray
eofill
2.18579 w
n
2871.66 3712.55 m
2890.31 3743.44 l
2859.12 3725.08 l
2871.66 3712.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 3755.97 m
2971.62 3743.73 l
3002.51 3712.55 l
2984.15 3743.44 l
3015.04 3725.08 l
h
eoclip
n
2.18579 w
n
3046.52 3681.07 m
2980.95 3746.65 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 3725.08 m
2984.15 3743.44 l
3002.51 3712.55 l
3015.04 3725.08 l
0 setgray
eofill
2.18579 w
n
3015.04 3725.08 m
2984.15 3743.44 l
3002.51 3712.55 l
3015.04 3725.08 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 3612.58 m
1469.53 3624.83 l
1438.35 3593.93 l
1469.53 3612.29 l
1450.88 3581.4 l
h
eoclip
n
2.18579 w
n
1407.16 3549.93 m
1472.74 3615.5 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 3581.4 m
1469.53 3612.29 l
1438.35 3593.93 l
1450.88 3581.4 l
0 setgray
eofill
2.18579 w
n
1450.88 3581.4 m
1469.53 3612.29 l
1438.35 3593.93 l
1450.88 3581.4 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1469.53 3475.32 m
1481.77 3487.56 l
1450.88 3518.74 l
1469.53 3487.56 l
1438.35 3506.21 l
h
eoclip
n
2.18579 w
n
1407.16 3549.93 m
1472.74 3484.35 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1438.35 3506.21 m
1469.53 3487.56 l
1450.88 3518.74 l
1438.35 3506.21 l
0 setgray
eofill
2.18579 w
n
1438.35 3506.21 m
1469.53 3487.56 l
1450.88 3518.74 l
1438.35 3506.21 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 3612.58 m
1644.4 3624.83 l
1613.21 3593.93 l
1644.4 3612.29 l
1625.74 3581.4 l
h
eoclip
n
2.18579 w
n
1582.03 3549.93 m
1647.6 3615.5 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 3581.4 m
1644.4 3612.29 l
1613.21 3593.93 l
1625.74 3581.4 l
0 setgray
eofill
2.18579 w
n
1625.74 3581.4 m
1644.4 3612.29 l
1613.21 3593.93 l
1625.74 3581.4 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1644.4 3475.32 m
1656.64 3487.56 l
1625.74 3518.74 l
1644.4 3487.56 l
1613.21 3506.21 l
h
eoclip
n
2.18579 w
n
1582.03 3549.93 m
1647.6 3484.35 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1613.21 3506.21 m
1644.4 3487.56 l
1625.74 3518.74 l
1613.21 3506.21 l
0 setgray
eofill
2.18579 w
n
1613.21 3506.21 m
1644.4 3487.56 l
1625.74 3518.74 l
1613.21 3506.21 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1831.5 3612.58 m
1819.26 3624.83 l
1788.08 3593.93 l
1819.26 3612.29 l
1800.61 3581.4 l
h
eoclip
n
2.18579 w
n
1756.89 3549.93 m
1822.47 3615.5 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1800.61 3581.4 m
1819.26 3612.29 l
1788.08 3593.93 l
1800.61 3581.4 l
0 setgray
eofill
2.18579 w
n
1800.61 3581.4 m
1819.26 3612.29 l
1788.08 3593.93 l
1800.61 3581.4 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1819.26 3475.32 m
1831.5 3487.56 l
1800.61 3518.74 l
1819.26 3487.56 l
1788.08 3506.21 l
h
eoclip
n
2.18579 w
n
1756.89 3549.93 m
1822.47 3484.35 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1788.08 3506.21 m
1819.26 3487.56 l
1800.61 3518.74 l
1788.08 3506.21 l
0 setgray
eofill
2.18579 w
n
1788.08 3506.21 m
1819.26 3487.56 l
1800.61 3518.74 l
1788.08 3506.21 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2006.37 3612.58 m
1994.13 3624.83 l
1962.94 3593.93 l
1994.13 3612.29 l
1975.47 3581.4 l
h
eoclip
n
2.18579 w
n
1931.76 3549.93 m
1997.33 3615.5 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1975.47 3581.4 m
1994.13 3612.29 l
1962.94 3593.93 l
1975.47 3581.4 l
0 setgray
eofill
2.18579 w
n
1975.47 3581.4 m
1994.13 3612.29 l
1962.94 3593.93 l
1975.47 3581.4 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1994.13 3475.32 m
2006.37 3487.56 l
1975.47 3518.74 l
1994.13 3487.56 l
1962.94 3506.21 l
h
eoclip
n
2.18579 w
n
1931.76 3549.93 m
1997.33 3484.35 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1962.94 3506.21 m
1994.13 3487.56 l
1975.47 3518.74 l
1962.94 3506.21 l
0 setgray
eofill
2.18579 w
n
1962.94 3506.21 m
1994.13 3487.56 l
1975.47 3518.74 l
1962.94 3506.21 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2181.23 3612.58 m
2168.99 3624.83 l
2137.81 3593.93 l
2168.99 3612.29 l
2150.34 3581.4 l
h
eoclip
n
2.18579 w
n
2106.62 3549.93 m
2172.2 3615.5 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2150.34 3581.4 m
2168.99 3612.29 l
2137.81 3593.93 l
2150.34 3581.4 l
0 setgray
eofill
2.18579 w
n
2150.34 3581.4 m
2168.99 3612.29 l
2137.81 3593.93 l
2150.34 3581.4 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2168.99 3475.32 m
2181.23 3487.56 l
2150.34 3518.74 l
2168.99 3487.56 l
2137.81 3506.21 l
h
eoclip
n
2.18579 w
n
2106.62 3549.93 m
2172.2 3484.35 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2137.81 3506.21 m
2168.99 3487.56 l
2150.34 3518.74 l
2137.81 3506.21 l
0 setgray
eofill
2.18579 w
n
2137.81 3506.21 m
2168.99 3487.56 l
2150.34 3518.74 l
2137.81 3506.21 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2356.1 3590.73 m
2343.86 3602.97 l
2312.67 3572.07 l
2343.86 3590.44 l
2325.2 3559.54 l
h
eoclip
n
2.18579 w
n
2281.49 3528.07 m
2347.06 3593.64 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2325.2 3559.54 m
2343.86 3590.44 l
2312.67 3572.07 l
2325.2 3559.54 l
0 setgray
eofill
2.18579 w
n
2325.2 3559.54 m
2343.86 3590.44 l
2312.67 3572.07 l
2325.2 3559.54 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2727.68 3568.87 m
2715.44 3581.11 l
2684.26 3550.22 l
2715.44 3568.58 l
2696.79 3537.68 l
h
eoclip
n
2.18579 w
n
2653.07 3506.21 m
2718.65 3571.78 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2696.79 3537.68 m
2715.44 3568.58 l
2684.26 3550.22 l
2696.79 3537.68 l
0 setgray
eofill
2.18579 w
n
2696.79 3537.68 m
2715.44 3568.58 l
2684.26 3550.22 l
2696.79 3537.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2787.14 3581.11 m
2774.9 3568.87 l
2805.79 3537.68 l
2787.43 3568.58 l
2818.32 3550.22 l
h
eoclip
n
2.18579 w
n
2849.8 3506.21 m
2784.22 3571.78 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2818.32 3550.22 m
2787.43 3568.58 l
2805.79 3537.68 l
2818.32 3550.22 l
0 setgray
eofill
2.18579 w
n
2818.32 3550.22 m
2787.43 3568.58 l
2805.79 3537.68 l
2818.32 3550.22 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2924.41 3568.87 m
2912.17 3581.11 l
2880.98 3550.22 l
2912.17 3568.58 l
2893.51 3537.68 l
h
eoclip
n
2.18579 w
n
2849.8 3506.21 m
2915.37 3571.78 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2893.51 3537.68 m
2912.17 3568.58 l
2880.98 3550.22 l
2893.51 3537.68 l
0 setgray
eofill
2.18579 w
n
2893.51 3537.68 m
2912.17 3568.58 l
2880.98 3550.22 l
2893.51 3537.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 3581.11 m
2971.62 3568.87 l
3002.51 3537.68 l
2984.15 3568.58 l
3015.04 3550.22 l
h
eoclip
n
2.18579 w
n
3046.52 3506.21 m
2980.95 3571.78 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 3550.22 m
2984.15 3568.58 l
3002.51 3537.68 l
3015.04 3550.22 l
0 setgray
eofill
2.18579 w
n
3015.04 3550.22 m
2984.15 3568.58 l
3002.51 3537.68 l
3015.04 3550.22 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 3437.72 m
1469.53 3449.96 l
1438.35 3419.07 l
1469.53 3437.43 l
1450.88 3406.54 l
h
eoclip
n
2.18579 w
n
1407.16 3375.06 m
1472.74 3440.63 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 3406.54 m
1469.53 3437.43 l
1438.35 3419.07 l
1450.88 3406.54 l
0 setgray
eofill
2.18579 w
n
1450.88 3406.54 m
1469.53 3437.43 l
1438.35 3419.07 l
1450.88 3406.54 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1469.53 3300.45 m
1481.77 3312.69 l
1450.88 3343.88 l
1469.53 3312.69 l
1438.35 3331.34 l
h
eoclip
n
2.18579 w
n
1407.16 3375.06 m
1472.74 3309.49 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1438.35 3331.34 m
1469.53 3312.69 l
1450.88 3343.88 l
1438.35 3331.34 l
0 setgray
eofill
2.18579 w
n
1438.35 3331.34 m
1469.53 3312.69 l
1450.88 3343.88 l
1438.35 3331.34 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 3437.72 m
1644.4 3449.96 l
1613.21 3419.07 l
1644.4 3437.43 l
1625.74 3406.54 l
h
eoclip
n
2.18579 w
n
1582.03 3375.06 m
1647.6 3440.63 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 3406.54 m
1644.4 3437.43 l
1613.21 3419.07 l
1625.74 3406.54 l
0 setgray
eofill
2.18579 w
n
1625.74 3406.54 m
1644.4 3437.43 l
1613.21 3419.07 l
1625.74 3406.54 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1644.4 3300.45 m
1656.64 3312.69 l
1625.74 3343.88 l
1644.4 3312.69 l
1613.21 3331.34 l
h
eoclip
n
2.18579 w
n
1582.03 3375.06 m
1647.6 3309.49 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1613.21 3331.34 m
1644.4 3312.69 l
1625.74 3343.88 l
1613.21 3331.34 l
0 setgray
eofill
2.18579 w
n
1613.21 3331.34 m
1644.4 3312.69 l
1625.74 3343.88 l
1613.21 3331.34 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1831.5 3437.72 m
1819.26 3449.96 l
1788.08 3419.07 l
1819.26 3437.43 l
1800.61 3406.54 l
h
eoclip
n
2.18579 w
n
1756.89 3375.06 m
1822.47 3440.63 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1800.61 3406.54 m
1819.26 3437.43 l
1788.08 3419.07 l
1800.61 3406.54 l
0 setgray
eofill
2.18579 w
n
1800.61 3406.54 m
1819.26 3437.43 l
1788.08 3419.07 l
1800.61 3406.54 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1819.26 3300.45 m
1831.5 3312.69 l
1800.61 3343.88 l
1819.26 3312.69 l
1788.08 3331.34 l
h
eoclip
n
2.18579 w
n
1756.89 3375.06 m
1822.47 3309.49 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1788.08 3331.34 m
1819.26 3312.69 l
1800.61 3343.88 l
1788.08 3331.34 l
0 setgray
eofill
2.18579 w
n
1788.08 3331.34 m
1819.26 3312.69 l
1800.61 3343.88 l
1788.08 3331.34 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2006.37 3437.72 m
1994.13 3449.96 l
1962.94 3419.07 l
1994.13 3437.43 l
1975.47 3406.54 l
h
eoclip
n
2.18579 w
n
1931.76 3375.06 m
1997.33 3440.63 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1975.47 3406.54 m
1994.13 3437.43 l
1962.94 3419.07 l
1975.47 3406.54 l
0 setgray
eofill
2.18579 w
n
1975.47 3406.54 m
1994.13 3437.43 l
1962.94 3419.07 l
1975.47 3406.54 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1994.13 3300.45 m
2006.37 3312.69 l
1975.47 3343.88 l
1994.13 3312.69 l
1962.94 3331.34 l
h
eoclip
n
2.18579 w
n
1931.76 3375.06 m
1997.33 3309.49 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1962.94 3331.34 m
1994.13 3312.69 l
1975.47 3343.88 l
1962.94 3331.34 l
0 setgray
eofill
2.18579 w
n
1962.94 3331.34 m
1994.13 3312.69 l
1975.47 3343.88 l
1962.94 3331.34 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2181.23 3415.86 m
2168.99 3428.1 l
2137.81 3397.21 l
2168.99 3415.57 l
2150.34 3384.68 l
h
eoclip
n
2.18579 w
n
2106.62 3353.2 m
2172.2 3418.78 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2150.34 3384.68 m
2168.99 3415.57 l
2137.81 3397.21 l
2150.34 3384.68 l
0 setgray
eofill
2.18579 w
n
2150.34 3384.68 m
2168.99 3415.57 l
2137.81 3397.21 l
2150.34 3384.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2552.82 3394 m
2540.58 3406.24 l
2509.39 3375.35 l
2540.58 3393.71 l
2521.93 3362.82 l
h
eoclip
n
2.18579 w
n
2478.21 3331.34 m
2543.78 3396.92 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2521.93 3362.82 m
2540.58 3393.71 l
2509.39 3375.35 l
2521.93 3362.82 l
0 setgray
eofill
2.18579 w
n
2521.93 3362.82 m
2540.58 3393.71 l
2509.39 3375.35 l
2521.93 3362.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2612.27 3406.24 m
2600.03 3394 l
2630.93 3362.82 l
2612.56 3393.71 l
2643.46 3375.35 l
h
eoclip
n
2.18579 w
n
2674.93 3331.34 m
2609.36 3396.92 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2643.46 3375.35 m
2612.56 3393.71 l
2630.93 3362.82 l
2643.46 3375.35 l
0 setgray
eofill
2.18579 w
n
2643.46 3375.35 m
2612.56 3393.71 l
2630.93 3362.82 l
2643.46 3375.35 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2749.54 3394 m
2737.3 3406.24 l
2706.12 3375.35 l
2737.3 3393.71 l
2718.65 3362.82 l
h
eoclip
n
2.18579 w
n
2674.93 3331.34 m
2740.51 3396.92 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2718.65 3362.82 m
2737.3 3393.71 l
2706.12 3375.35 l
2718.65 3362.82 l
0 setgray
eofill
2.18579 w
n
2718.65 3362.82 m
2737.3 3393.71 l
2706.12 3375.35 l
2718.65 3362.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2787.14 3406.24 m
2774.9 3394 l
2805.79 3362.82 l
2787.43 3393.71 l
2818.32 3375.35 l
h
eoclip
n
2.18579 w
n
2849.8 3331.34 m
2784.22 3396.92 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2818.32 3375.35 m
2787.43 3393.71 l
2805.79 3362.82 l
2818.32 3375.35 l
0 setgray
eofill
2.18579 w
n
2818.32 3375.35 m
2787.43 3393.71 l
2805.79 3362.82 l
2818.32 3375.35 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2924.41 3394 m
2912.17 3406.24 l
2880.98 3375.35 l
2912.17 3393.71 l
2893.51 3362.82 l
h
eoclip
n
2.18579 w
n
2849.8 3331.34 m
2915.37 3396.92 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2893.51 3362.82 m
2912.17 3393.71 l
2880.98 3375.35 l
2893.51 3362.82 l
0 setgray
eofill
2.18579 w
n
2893.51 3362.82 m
2912.17 3393.71 l
2880.98 3375.35 l
2893.51 3362.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 3406.24 m
2971.62 3394 l
3002.51 3362.82 l
2984.15 3393.71 l
3015.04 3375.35 l
h
eoclip
n
2.18579 w
n
3046.52 3331.34 m
2980.95 3396.92 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 3375.35 m
2984.15 3393.71 l
3002.51 3362.82 l
3015.04 3375.35 l
0 setgray
eofill
2.18579 w
n
3015.04 3375.35 m
2984.15 3393.71 l
3002.51 3362.82 l
3015.04 3375.35 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 3262.86 m
1469.53 3275.1 l
1438.35 3244.2 l
1469.53 3262.56 l
1450.88 3231.67 l
h
eoclip
n
2.18579 w
n
1407.16 3200.2 m
1472.74 3265.77 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 3231.67 m
1469.53 3262.56 l
1438.35 3244.2 l
1450.88 3231.67 l
0 setgray
eofill
2.18579 w
n
1450.88 3231.67 m
1469.53 3262.56 l
1438.35 3244.2 l
1450.88 3231.67 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1469.53 3125.59 m
1481.77 3137.83 l
1450.88 3169.01 l
1469.53 3137.83 l
1438.35 3156.48 l
h
eoclip
n
2.18579 w
n
1407.16 3200.2 m
1472.74 3134.62 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1438.35 3156.48 m
1469.53 3137.83 l
1450.88 3169.01 l
1438.35 3156.48 l
0 setgray
eofill
2.18579 w
n
1438.35 3156.48 m
1469.53 3137.83 l
1450.88 3169.01 l
1438.35 3156.48 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 3262.86 m
1644.4 3275.1 l
1613.21 3244.2 l
1644.4 3262.56 l
1625.74 3231.67 l
h
eoclip
n
2.18579 w
n
1582.03 3200.2 m
1647.6 3265.77 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 3231.67 m
1644.4 3262.56 l
1613.21 3244.2 l
1625.74 3231.67 l
0 setgray
eofill
2.18579 w
n
1625.74 3231.67 m
1644.4 3262.56 l
1613.21 3244.2 l
1625.74 3231.67 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1644.4 3125.59 m
1656.64 3137.83 l
1625.74 3169.01 l
1644.4 3137.83 l
1613.21 3156.48 l
h
eoclip
n
2.18579 w
n
1582.03 3200.2 m
1647.6 3134.62 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1613.21 3156.48 m
1644.4 3137.83 l
1625.74 3169.01 l
1613.21 3156.48 l
0 setgray
eofill
2.18579 w
n
1613.21 3156.48 m
1644.4 3137.83 l
1625.74 3169.01 l
1613.21 3156.48 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1831.5 3262.86 m
1819.26 3275.1 l
1788.08 3244.2 l
1819.26 3262.56 l
1800.61 3231.67 l
h
eoclip
n
2.18579 w
n
1756.89 3200.2 m
1822.47 3265.77 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1800.61 3231.67 m
1819.26 3262.56 l
1788.08 3244.2 l
1800.61 3231.67 l
0 setgray
eofill
2.18579 w
n
1800.61 3231.67 m
1819.26 3262.56 l
1788.08 3244.2 l
1800.61 3231.67 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1819.26 3125.59 m
1831.5 3137.83 l
1800.61 3169.01 l
1819.26 3137.83 l
1788.08 3156.48 l
h
eoclip
n
2.18579 w
n
1756.89 3200.2 m
1822.47 3134.62 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1788.08 3156.48 m
1819.26 3137.83 l
1800.61 3169.01 l
1788.08 3156.48 l
0 setgray
eofill
2.18579 w
n
1788.08 3156.48 m
1819.26 3137.83 l
1800.61 3169.01 l
1788.08 3156.48 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2006.37 3241 m
1994.13 3253.24 l
1962.94 3222.34 l
1994.13 3240.71 l
1975.47 3209.81 l
h
eoclip
n
2.18579 w
n
1931.76 3178.34 m
1997.33 3243.91 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1975.47 3209.81 m
1994.13 3240.71 l
1962.94 3222.34 l
1975.47 3209.81 l
0 setgray
eofill
2.18579 w
n
1975.47 3209.81 m
1994.13 3240.71 l
1962.94 3222.34 l
1975.47 3209.81 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2377.95 3219.14 m
2365.71 3231.38 l
2334.53 3200.49 l
2365.71 3218.85 l
2347.06 3187.95 l
h
eoclip
n
2.18579 w
n
2303.35 3156.48 m
2368.92 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2347.06 3187.95 m
2365.71 3218.85 l
2334.53 3200.49 l
2347.06 3187.95 l
0 setgray
eofill
2.18579 w
n
2347.06 3187.95 m
2365.71 3218.85 l
2334.53 3200.49 l
2347.06 3187.95 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2437.41 3231.38 m
2425.17 3219.14 l
2456.06 3187.95 l
2437.7 3218.85 l
2468.59 3200.49 l
h
eoclip
n
2.18579 w
n
2500.07 3156.48 m
2434.49 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2468.59 3200.49 m
2437.7 3218.85 l
2456.06 3187.95 l
2468.59 3200.49 l
0 setgray
eofill
2.18579 w
n
2468.59 3200.49 m
2437.7 3218.85 l
2456.06 3187.95 l
2468.59 3200.49 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2574.68 3219.14 m
2562.44 3231.38 l
2531.25 3200.49 l
2562.44 3218.85 l
2543.78 3187.95 l
h
eoclip
n
2.18579 w
n
2500.07 3156.48 m
2565.64 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2543.78 3187.95 m
2562.44 3218.85 l
2531.25 3200.49 l
2543.78 3187.95 l
0 setgray
eofill
2.18579 w
n
2543.78 3187.95 m
2562.44 3218.85 l
2531.25 3200.49 l
2543.78 3187.95 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2612.27 3231.38 m
2600.03 3219.14 l
2630.93 3187.95 l
2612.56 3218.85 l
2643.46 3200.49 l
h
eoclip
n
2.18579 w
n
2674.93 3156.48 m
2609.36 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2643.46 3200.49 m
2612.56 3218.85 l
2630.93 3187.95 l
2643.46 3200.49 l
0 setgray
eofill
2.18579 w
n
2643.46 3200.49 m
2612.56 3218.85 l
2630.93 3187.95 l
2643.46 3200.49 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2749.54 3219.14 m
2737.3 3231.38 l
2706.12 3200.49 l
2737.3 3218.85 l
2718.65 3187.95 l
h
eoclip
n
2.18579 w
n
2674.93 3156.48 m
2740.51 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2718.65 3187.95 m
2737.3 3218.85 l
2706.12 3200.49 l
2718.65 3187.95 l
0 setgray
eofill
2.18579 w
n
2718.65 3187.95 m
2737.3 3218.85 l
2706.12 3200.49 l
2718.65 3187.95 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2787.14 3231.38 m
2774.9 3219.14 l
2805.79 3187.95 l
2787.43 3218.85 l
2818.32 3200.49 l
h
eoclip
n
2.18579 w
n
2849.8 3156.48 m
2784.22 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2818.32 3200.49 m
2787.43 3218.85 l
2805.79 3187.95 l
2818.32 3200.49 l
0 setgray
eofill
2.18579 w
n
2818.32 3200.49 m
2787.43 3218.85 l
2805.79 3187.95 l
2818.32 3200.49 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2924.41 3219.14 m
2912.17 3231.38 l
2880.98 3200.49 l
2912.17 3218.85 l
2893.51 3187.95 l
h
eoclip
n
2.18579 w
n
2849.8 3156.48 m
2915.37 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2893.51 3187.95 m
2912.17 3218.85 l
2880.98 3200.49 l
2893.51 3187.95 l
0 setgray
eofill
2.18579 w
n
2893.51 3187.95 m
2912.17 3218.85 l
2880.98 3200.49 l
2893.51 3187.95 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 3231.38 m
2971.62 3219.14 l
3002.51 3187.95 l
2984.15 3218.85 l
3015.04 3200.49 l
h
eoclip
n
2.18579 w
n
3046.52 3156.48 m
2980.95 3222.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 3200.49 m
2984.15 3218.85 l
3002.51 3187.95 l
3015.04 3200.49 l
0 setgray
eofill
2.18579 w
n
3015.04 3200.49 m
2984.15 3218.85 l
3002.51 3187.95 l
3015.04 3200.49 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 3087.99 m
1469.53 3100.23 l
1438.35 3069.34 l
1469.53 3087.7 l
1450.88 3056.81 l
h
eoclip
n
2.18579 w
n
1407.16 3025.33 m
1472.74 3090.91 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 3056.81 m
1469.53 3087.7 l
1438.35 3069.34 l
1450.88 3056.81 l
0 setgray
eofill
2.18579 w
n
1450.88 3056.81 m
1469.53 3087.7 l
1438.35 3069.34 l
1450.88 3056.81 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1469.53 2950.72 m
1481.77 2962.96 l
1450.88 2994.15 l
1469.53 2962.96 l
1438.35 2981.61 l
h
eoclip
n
2.18579 w
n
1407.16 3025.33 m
1472.74 2959.76 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1438.35 2981.61 m
1469.53 2962.96 l
1450.88 2994.15 l
1438.35 2981.61 l
0 setgray
eofill
2.18579 w
n
1438.35 2981.61 m
1469.53 2962.96 l
1450.88 2994.15 l
1438.35 2981.61 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 3087.99 m
1644.4 3100.23 l
1613.21 3069.34 l
1644.4 3087.7 l
1625.74 3056.81 l
h
eoclip
n
2.18579 w
n
1582.03 3025.33 m
1647.6 3090.91 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 3056.81 m
1644.4 3087.7 l
1613.21 3069.34 l
1625.74 3056.81 l
0 setgray
eofill
2.18579 w
n
1625.74 3056.81 m
1644.4 3087.7 l
1613.21 3069.34 l
1625.74 3056.81 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1644.4 2950.72 m
1656.64 2962.96 l
1625.74 2994.15 l
1644.4 2962.96 l
1613.21 2981.61 l
h
eoclip
n
2.18579 w
n
1582.03 3025.33 m
1647.6 2959.76 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1613.21 2981.61 m
1644.4 2962.96 l
1625.74 2994.15 l
1613.21 2981.61 l
0 setgray
eofill
2.18579 w
n
1613.21 2981.61 m
1644.4 2962.96 l
1625.74 2994.15 l
1613.21 2981.61 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1831.5 3066.13 m
1819.26 3078.37 l
1788.08 3047.48 l
1819.26 3065.84 l
1800.61 3034.95 l
h
eoclip
n
2.18579 w
n
1756.89 3003.47 m
1822.47 3069.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1800.61 3034.95 m
1819.26 3065.84 l
1788.08 3047.48 l
1800.61 3034.95 l
0 setgray
eofill
2.18579 w
n
1800.61 3034.95 m
1819.26 3065.84 l
1788.08 3047.48 l
1800.61 3034.95 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2203.09 3044.27 m
2190.85 3056.51 l
2159.66 3025.62 l
2190.85 3043.98 l
2172.2 3013.09 l
h
eoclip
n
2.18579 w
n
2128.48 2981.61 m
2194.05 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2172.2 3013.09 m
2190.85 3043.98 l
2159.66 3025.62 l
2172.2 3013.09 l
0 setgray
eofill
2.18579 w
n
2172.2 3013.09 m
2190.85 3043.98 l
2159.66 3025.62 l
2172.2 3013.09 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2262.54 3056.51 m
2250.3 3044.27 l
2281.2 3013.09 l
2262.83 3043.98 l
2293.73 3025.62 l
h
eoclip
n
2.18579 w
n
2325.2 2981.61 m
2259.63 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2293.73 3025.62 m
2262.83 3043.98 l
2281.2 3013.09 l
2293.73 3025.62 l
0 setgray
eofill
2.18579 w
n
2293.73 3025.62 m
2262.83 3043.98 l
2281.2 3013.09 l
2293.73 3025.62 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2399.81 3044.27 m
2387.57 3056.51 l
2356.39 3025.62 l
2387.57 3043.98 l
2368.92 3013.09 l
h
eoclip
n
2.18579 w
n
2325.2 2981.61 m
2390.78 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2368.92 3013.09 m
2387.57 3043.98 l
2356.39 3025.62 l
2368.92 3013.09 l
0 setgray
eofill
2.18579 w
n
2368.92 3013.09 m
2387.57 3043.98 l
2356.39 3025.62 l
2368.92 3013.09 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2437.41 3056.51 m
2425.17 3044.27 l
2456.06 3013.09 l
2437.7 3043.98 l
2468.59 3025.62 l
h
eoclip
n
2.18579 w
n
2500.07 2981.61 m
2434.49 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2468.59 3025.62 m
2437.7 3043.98 l
2456.06 3013.09 l
2468.59 3025.62 l
0 setgray
eofill
2.18579 w
n
2468.59 3025.62 m
2437.7 3043.98 l
2456.06 3013.09 l
2468.59 3025.62 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2574.68 3044.27 m
2562.44 3056.51 l
2531.25 3025.62 l
2562.44 3043.98 l
2543.78 3013.09 l
h
eoclip
n
2.18579 w
n
2500.07 2981.61 m
2565.64 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2543.78 3013.09 m
2562.44 3043.98 l
2531.25 3025.62 l
2543.78 3013.09 l
0 setgray
eofill
2.18579 w
n
2543.78 3013.09 m
2562.44 3043.98 l
2531.25 3025.62 l
2543.78 3013.09 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2612.27 3056.51 m
2600.03 3044.27 l
2630.93 3013.09 l
2612.56 3043.98 l
2643.46 3025.62 l
h
eoclip
n
2.18579 w
n
2674.93 2981.61 m
2609.36 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2643.46 3025.62 m
2612.56 3043.98 l
2630.93 3013.09 l
2643.46 3025.62 l
0 setgray
eofill
2.18579 w
n
2643.46 3025.62 m
2612.56 3043.98 l
2630.93 3013.09 l
2643.46 3025.62 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2749.54 3044.27 m
2737.3 3056.51 l
2706.12 3025.62 l
2737.3 3043.98 l
2718.65 3013.09 l
h
eoclip
n
2.18579 w
n
2674.93 2981.61 m
2740.51 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2718.65 3013.09 m
2737.3 3043.98 l
2706.12 3025.62 l
2718.65 3013.09 l
0 setgray
eofill
2.18579 w
n
2718.65 3013.09 m
2737.3 3043.98 l
2706.12 3025.62 l
2718.65 3013.09 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2787.14 3056.51 m
2774.9 3044.27 l
2805.79 3013.09 l
2787.43 3043.98 l
2818.32 3025.62 l
h
eoclip
n
2.18579 w
n
2849.8 2981.61 m
2784.22 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2818.32 3025.62 m
2787.43 3043.98 l
2805.79 3013.09 l
2818.32 3025.62 l
0 setgray
eofill
2.18579 w
n
2818.32 3025.62 m
2787.43 3043.98 l
2805.79 3013.09 l
2818.32 3025.62 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2924.41 3044.27 m
2912.17 3056.51 l
2880.98 3025.62 l
2912.17 3043.98 l
2893.51 3013.09 l
h
eoclip
n
2.18579 w
n
2849.8 2981.61 m
2915.37 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2893.51 3013.09 m
2912.17 3043.98 l
2880.98 3025.62 l
2893.51 3013.09 l
0 setgray
eofill
2.18579 w
n
2893.51 3013.09 m
2912.17 3043.98 l
2880.98 3025.62 l
2893.51 3013.09 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 3056.51 m
2971.62 3044.27 l
3002.51 3013.09 l
2984.15 3043.98 l
3015.04 3025.62 l
h
eoclip
n
2.18579 w
n
3046.52 2981.61 m
2980.95 3047.19 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 3025.62 m
2984.15 3043.98 l
3002.51 3013.09 l
3015.04 3025.62 l
0 setgray
eofill
2.18579 w
n
3015.04 3025.62 m
2984.15 3043.98 l
3002.51 3013.09 l
3015.04 3025.62 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 2913.13 m
1469.53 2925.37 l
1438.35 2894.47 l
1469.53 2912.83 l
1450.88 2881.94 l
h
eoclip
n
2.18579 w
n
1407.16 2850.47 m
1472.74 2916.04 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 2881.94 m
1469.53 2912.83 l
1438.35 2894.47 l
1450.88 2881.94 l
0 setgray
eofill
2.18579 w
n
1450.88 2881.94 m
1469.53 2912.83 l
1438.35 2894.47 l
1450.88 2881.94 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1469.53 2775.86 m
1481.77 2788.1 l
1450.88 2819.28 l
1469.53 2788.1 l
1438.35 2806.75 l
h
eoclip
n
2.18579 w
n
1407.16 2850.47 m
1472.74 2784.89 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1438.35 2806.75 m
1469.53 2788.1 l
1450.88 2819.28 l
1438.35 2806.75 l
0 setgray
eofill
2.18579 w
n
1438.35 2806.75 m
1469.53 2788.1 l
1450.88 2819.28 l
1438.35 2806.75 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 2891.27 m
1644.4 2903.51 l
1613.21 2872.62 l
1644.4 2890.98 l
1625.74 2860.08 l
h
eoclip
n
2.18579 w
n
1582.03 2828.61 m
1647.6 2894.18 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 2860.08 m
1644.4 2890.98 l
1613.21 2872.62 l
1625.74 2860.08 l
0 setgray
eofill
2.18579 w
n
1625.74 2860.08 m
1644.4 2890.98 l
1613.21 2872.62 l
1625.74 2860.08 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2028.22 2869.41 m
2015.98 2881.65 l
1984.8 2850.76 l
2015.98 2869.12 l
1997.33 2838.23 l
h
eoclip
n
2.18579 w
n
1953.62 2806.75 m
2019.19 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1997.33 2838.23 m
2015.98 2869.12 l
1984.8 2850.76 l
1997.33 2838.23 l
0 setgray
eofill
2.18579 w
n
1997.33 2838.23 m
2015.98 2869.12 l
1984.8 2850.76 l
1997.33 2838.23 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2087.68 2881.65 m
2075.44 2869.41 l
2106.33 2838.23 l
2087.97 2869.12 l
2118.86 2850.76 l
h
eoclip
n
2.18579 w
n
2150.34 2806.75 m
2084.76 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2118.86 2850.76 m
2087.97 2869.12 l
2106.33 2838.23 l
2118.86 2850.76 l
0 setgray
eofill
2.18579 w
n
2118.86 2850.76 m
2087.97 2869.12 l
2106.33 2838.23 l
2118.86 2850.76 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2224.95 2869.41 m
2212.71 2881.65 l
2181.52 2850.76 l
2212.71 2869.12 l
2194.05 2838.23 l
h
eoclip
n
2.18579 w
n
2150.34 2806.75 m
2215.91 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2194.05 2838.23 m
2212.71 2869.12 l
2181.52 2850.76 l
2194.05 2838.23 l
0 setgray
eofill
2.18579 w
n
2194.05 2838.23 m
2212.71 2869.12 l
2181.52 2850.76 l
2194.05 2838.23 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2262.54 2881.65 m
2250.3 2869.41 l
2281.2 2838.23 l
2262.83 2869.12 l
2293.73 2850.76 l
h
eoclip
n
2.18579 w
n
2325.2 2806.75 m
2259.63 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2293.73 2850.76 m
2262.83 2869.12 l
2281.2 2838.23 l
2293.73 2850.76 l
0 setgray
eofill
2.18579 w
n
2293.73 2850.76 m
2262.83 2869.12 l
2281.2 2838.23 l
2293.73 2850.76 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2399.81 2869.41 m
2387.57 2881.65 l
2356.39 2850.76 l
2387.57 2869.12 l
2368.92 2838.23 l
h
eoclip
n
2.18579 w
n
2325.2 2806.75 m
2390.78 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2368.92 2838.23 m
2387.57 2869.12 l
2356.39 2850.76 l
2368.92 2838.23 l
0 setgray
eofill
2.18579 w
n
2368.92 2838.23 m
2387.57 2869.12 l
2356.39 2850.76 l
2368.92 2838.23 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2437.41 2881.65 m
2425.17 2869.41 l
2456.06 2838.23 l
2437.7 2869.12 l
2468.59 2850.76 l
h
eoclip
n
2.18579 w
n
2500.07 2806.75 m
2434.49 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2468.59 2850.76 m
2437.7 2869.12 l
2456.06 2838.23 l
2468.59 2850.76 l
0 setgray
eofill
2.18579 w
n
2468.59 2850.76 m
2437.7 2869.12 l
2456.06 2838.23 l
2468.59 2850.76 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2574.68 2869.41 m
2562.44 2881.65 l
2531.25 2850.76 l
2562.44 2869.12 l
2543.78 2838.23 l
h
eoclip
n
2.18579 w
n
2500.07 2806.75 m
2565.64 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2543.78 2838.23 m
2562.44 2869.12 l
2531.25 2850.76 l
2543.78 2838.23 l
0 setgray
eofill
2.18579 w
n
2543.78 2838.23 m
2562.44 2869.12 l
2531.25 2850.76 l
2543.78 2838.23 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2612.27 2881.65 m
2600.03 2869.41 l
2630.93 2838.23 l
2612.56 2869.12 l
2643.46 2850.76 l
h
eoclip
n
2.18579 w
n
2674.93 2806.75 m
2609.36 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2643.46 2850.76 m
2612.56 2869.12 l
2630.93 2838.23 l
2643.46 2850.76 l
0 setgray
eofill
2.18579 w
n
2643.46 2850.76 m
2612.56 2869.12 l
2630.93 2838.23 l
2643.46 2850.76 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2749.54 2869.41 m
2737.3 2881.65 l
2706.12 2850.76 l
2737.3 2869.12 l
2718.65 2838.23 l
h
eoclip
n
2.18579 w
n
2674.93 2806.75 m
2740.51 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2718.65 2838.23 m
2737.3 2869.12 l
2706.12 2850.76 l
2718.65 2838.23 l
0 setgray
eofill
2.18579 w
n
2718.65 2838.23 m
2737.3 2869.12 l
2706.12 2850.76 l
2718.65 2838.23 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2787.14 2881.65 m
2774.9 2869.41 l
2805.79 2838.23 l
2787.43 2869.12 l
2818.32 2850.76 l
h
eoclip
n
2.18579 w
n
2849.8 2806.75 m
2784.22 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2818.32 2850.76 m
2787.43 2869.12 l
2805.79 2838.23 l
2818.32 2850.76 l
0 setgray
eofill
2.18579 w
n
2818.32 2850.76 m
2787.43 2869.12 l
2805.79 2838.23 l
2818.32 2850.76 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2924.41 2869.41 m
2912.17 2881.65 l
2880.98 2850.76 l
2912.17 2869.12 l
2893.51 2838.23 l
h
eoclip
n
2.18579 w
n
2849.8 2806.75 m
2915.37 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2893.51 2838.23 m
2912.17 2869.12 l
2880.98 2850.76 l
2893.51 2838.23 l
0 setgray
eofill
2.18579 w
n
2893.51 2838.23 m
2912.17 2869.12 l
2880.98 2850.76 l
2893.51 2838.23 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 2881.65 m
2971.62 2869.41 l
3002.51 2838.23 l
2984.15 2869.12 l
3015.04 2850.76 l
h
eoclip
n
2.18579 w
n
3046.52 2806.75 m
2980.95 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 2850.76 m
2984.15 2869.12 l
3002.51 2838.23 l
3015.04 2850.76 l
0 setgray
eofill
2.18579 w
n
3015.04 2850.76 m
2984.15 2869.12 l
3002.51 2838.23 l
3015.04 2850.76 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1481.77 2716.4 m
1469.53 2728.64 l
1438.35 2697.75 l
1469.53 2716.11 l
1450.88 2685.22 l
h
eoclip
n
2.18579 w
n
1407.16 2653.74 m
1472.74 2719.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1450.88 2685.22 m
1469.53 2716.11 l
1438.35 2697.75 l
1450.88 2685.22 l
0 setgray
eofill
2.18579 w
n
1450.88 2685.22 m
1469.53 2716.11 l
1438.35 2697.75 l
1450.88 2685.22 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1853.36 2694.54 m
1841.12 2706.79 l
1809.94 2675.89 l
1841.12 2694.25 l
1822.47 2663.36 l
h
eoclip
n
2.18579 w
n
1778.75 2631.89 m
1844.33 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1822.47 2663.36 m
1841.12 2694.25 l
1809.94 2675.89 l
1822.47 2663.36 l
0 setgray
eofill
2.18579 w
n
1822.47 2663.36 m
1841.12 2694.25 l
1809.94 2675.89 l
1822.47 2663.36 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1912.81 2706.79 m
1900.57 2694.54 l
1931.47 2663.36 l
1913.11 2694.25 l
1944 2675.89 l
h
eoclip
n
2.18579 w
n
1975.47 2631.89 m
1909.9 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1944 2675.89 m
1913.11 2694.25 l
1931.47 2663.36 l
1944 2675.89 l
0 setgray
eofill
2.18579 w
n
1944 2675.89 m
1913.11 2694.25 l
1931.47 2663.36 l
1944 2675.89 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2050.08 2694.54 m
2037.84 2706.79 l
2006.66 2675.89 l
2037.84 2694.25 l
2019.19 2663.36 l
h
eoclip
n
2.18579 w
n
1975.47 2631.89 m
2041.05 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2019.19 2663.36 m
2037.84 2694.25 l
2006.66 2675.89 l
2019.19 2663.36 l
0 setgray
eofill
2.18579 w
n
2019.19 2663.36 m
2037.84 2694.25 l
2006.66 2675.89 l
2019.19 2663.36 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2087.68 2706.79 m
2075.44 2694.54 l
2106.33 2663.36 l
2087.97 2694.25 l
2118.86 2675.89 l
h
eoclip
n
2.18579 w
n
2150.34 2631.89 m
2084.76 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2118.86 2675.89 m
2087.97 2694.25 l
2106.33 2663.36 l
2118.86 2675.89 l
0 setgray
eofill
2.18579 w
n
2118.86 2675.89 m
2087.97 2694.25 l
2106.33 2663.36 l
2118.86 2675.89 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2224.95 2694.54 m
2212.71 2706.79 l
2181.52 2675.89 l
2212.71 2694.25 l
2194.05 2663.36 l
h
eoclip
n
2.18579 w
n
2150.34 2631.89 m
2215.91 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2194.05 2663.36 m
2212.71 2694.25 l
2181.52 2675.89 l
2194.05 2663.36 l
0 setgray
eofill
2.18579 w
n
2194.05 2663.36 m
2212.71 2694.25 l
2181.52 2675.89 l
2194.05 2663.36 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2262.54 2706.79 m
2250.3 2694.54 l
2281.2 2663.36 l
2262.83 2694.25 l
2293.73 2675.89 l
h
eoclip
n
2.18579 w
n
2325.2 2631.89 m
2259.63 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2293.73 2675.89 m
2262.83 2694.25 l
2281.2 2663.36 l
2293.73 2675.89 l
0 setgray
eofill
2.18579 w
n
2293.73 2675.89 m
2262.83 2694.25 l
2281.2 2663.36 l
2293.73 2675.89 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2399.81 2694.54 m
2387.57 2706.79 l
2356.39 2675.89 l
2387.57 2694.25 l
2368.92 2663.36 l
h
eoclip
n
2.18579 w
n
2325.2 2631.89 m
2390.78 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2368.92 2663.36 m
2387.57 2694.25 l
2356.39 2675.89 l
2368.92 2663.36 l
0 setgray
eofill
2.18579 w
n
2368.92 2663.36 m
2387.57 2694.25 l
2356.39 2675.89 l
2368.92 2663.36 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2262.54 2531.92 m
2250.3 2519.68 l
2281.2 2488.5 l
2262.83 2519.39 l
2293.73 2501.03 l
h
eoclip
n
2.18579 w
n
2325.2 2457.02 m
2259.63 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2293.73 2501.03 m
2262.83 2519.39 l
2281.2 2488.5 l
2293.73 2501.03 l
0 setgray
eofill
2.18579 w
n
2293.73 2501.03 m
2262.83 2519.39 l
2281.2 2488.5 l
2293.73 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2399.81 2519.68 m
2387.57 2531.92 l
2356.39 2501.03 l
2387.57 2519.39 l
2368.92 2488.5 l
h
eoclip
n
2.18579 w
n
2325.2 2457.02 m
2390.78 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2368.92 2488.5 m
2387.57 2519.39 l
2356.39 2501.03 l
2368.92 2488.5 l
0 setgray
eofill
2.18579 w
n
2368.92 2488.5 m
2387.57 2519.39 l
2356.39 2501.03 l
2368.92 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2087.68 2531.92 m
2075.44 2519.68 l
2106.33 2488.5 l
2087.97 2519.39 l
2118.86 2501.03 l
h
eoclip
n
2.18579 w
n
2150.34 2457.02 m
2084.76 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2118.86 2501.03 m
2087.97 2519.39 l
2106.33 2488.5 l
2118.86 2501.03 l
0 setgray
eofill
2.18579 w
n
2118.86 2501.03 m
2087.97 2519.39 l
2106.33 2488.5 l
2118.86 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2224.95 2519.68 m
2212.71 2531.92 l
2181.52 2501.03 l
2212.71 2519.39 l
2194.05 2488.5 l
h
eoclip
n
2.18579 w
n
2150.34 2457.02 m
2215.91 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2194.05 2488.5 m
2212.71 2519.39 l
2181.52 2501.03 l
2194.05 2488.5 l
0 setgray
eofill
2.18579 w
n
2194.05 2488.5 m
2212.71 2519.39 l
2181.52 2501.03 l
2194.05 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1912.81 2531.92 m
1900.57 2519.68 l
1931.47 2488.5 l
1913.11 2519.39 l
1944 2501.03 l
h
eoclip
n
2.18579 w
n
1975.47 2457.02 m
1909.9 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1944 2501.03 m
1913.11 2519.39 l
1931.47 2488.5 l
1944 2501.03 l
0 setgray
eofill
2.18579 w
n
1944 2501.03 m
1913.11 2519.39 l
1931.47 2488.5 l
1944 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2050.08 2519.68 m
2037.84 2531.92 l
2006.66 2501.03 l
2037.84 2519.39 l
2019.19 2488.5 l
h
eoclip
n
2.18579 w
n
1975.47 2457.02 m
2041.05 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2019.19 2488.5 m
2037.84 2519.39 l
2006.66 2501.03 l
2019.19 2488.5 l
0 setgray
eofill
2.18579 w
n
2019.19 2488.5 m
2037.84 2519.39 l
2006.66 2501.03 l
2019.19 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1737.95 2531.92 m
1725.71 2519.68 l
1756.6 2488.5 l
1738.24 2519.39 l
1769.13 2501.03 l
h
eoclip
n
2.18579 w
n
1800.61 2457.02 m
1735.03 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1769.13 2501.03 m
1738.24 2519.39 l
1756.6 2488.5 l
1769.13 2501.03 l
0 setgray
eofill
2.18579 w
n
1769.13 2501.03 m
1738.24 2519.39 l
1756.6 2488.5 l
1769.13 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1875.22 2519.68 m
1862.98 2531.92 l
1831.79 2501.03 l
1862.98 2519.39 l
1844.33 2488.5 l
h
eoclip
n
2.18579 w
n
1800.61 2457.02 m
1866.18 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1844.33 2488.5 m
1862.98 2519.39 l
1831.79 2501.03 l
1844.33 2488.5 l
0 setgray
eofill
2.18579 w
n
1844.33 2488.5 m
1862.98 2519.39 l
1831.79 2501.03 l
1844.33 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2437.41 2531.92 m
2425.17 2519.68 l
2456.06 2488.5 l
2437.7 2519.39 l
2468.59 2501.03 l
h
eoclip
n
2.18579 w
n
2500.07 2457.02 m
2434.49 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2468.59 2501.03 m
2437.7 2519.39 l
2456.06 2488.5 l
2468.59 2501.03 l
0 setgray
eofill
2.18579 w
n
2468.59 2501.03 m
2437.7 2519.39 l
2456.06 2488.5 l
2468.59 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2574.68 2519.68 m
2562.44 2531.92 l
2531.25 2501.03 l
2562.44 2519.39 l
2543.78 2488.5 l
h
eoclip
n
2.18579 w
n
2500.07 2457.02 m
2565.64 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2543.78 2488.5 m
2562.44 2519.39 l
2531.25 2501.03 l
2543.78 2488.5 l
0 setgray
eofill
2.18579 w
n
2543.78 2488.5 m
2562.44 2519.39 l
2531.25 2501.03 l
2543.78 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2612.27 2531.92 m
2600.03 2519.68 l
2630.93 2488.5 l
2612.56 2519.39 l
2643.46 2501.03 l
h
eoclip
n
2.18579 w
n
2674.93 2457.02 m
2609.36 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2643.46 2501.03 m
2612.56 2519.39 l
2630.93 2488.5 l
2643.46 2501.03 l
0 setgray
eofill
2.18579 w
n
2643.46 2501.03 m
2612.56 2519.39 l
2630.93 2488.5 l
2643.46 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2749.54 2519.68 m
2737.3 2531.92 l
2706.12 2501.03 l
2737.3 2519.39 l
2718.65 2488.5 l
h
eoclip
n
2.18579 w
n
2674.93 2457.02 m
2740.51 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2718.65 2488.5 m
2737.3 2519.39 l
2706.12 2501.03 l
2718.65 2488.5 l
0 setgray
eofill
2.18579 w
n
2718.65 2488.5 m
2737.3 2519.39 l
2706.12 2501.03 l
2718.65 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2787.14 2531.92 m
2774.9 2519.68 l
2805.79 2488.5 l
2787.43 2519.39 l
2818.32 2501.03 l
h
eoclip
n
2.18579 w
n
2849.8 2457.02 m
2784.22 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2818.32 2501.03 m
2787.43 2519.39 l
2805.79 2488.5 l
2818.32 2501.03 l
0 setgray
eofill
2.18579 w
n
2818.32 2501.03 m
2787.43 2519.39 l
2805.79 2488.5 l
2818.32 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2924.41 2519.68 m
2912.17 2531.92 l
2880.98 2501.03 l
2912.17 2519.39 l
2893.51 2488.5 l
h
eoclip
n
2.18579 w
n
2849.8 2457.02 m
2915.37 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2893.51 2488.5 m
2912.17 2519.39 l
2880.98 2501.03 l
2893.51 2488.5 l
0 setgray
eofill
2.18579 w
n
2893.51 2488.5 m
2912.17 2519.39 l
2880.98 2501.03 l
2893.51 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2787.14 2706.79 m
2774.9 2694.54 l
2805.79 2663.36 l
2787.43 2694.25 l
2818.32 2675.89 l
h
eoclip
n
2.18579 w
n
2849.8 2631.89 m
2784.22 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2818.32 2675.89 m
2787.43 2694.25 l
2805.79 2663.36 l
2818.32 2675.89 l
0 setgray
eofill
2.18579 w
n
2818.32 2675.89 m
2787.43 2694.25 l
2805.79 2663.36 l
2818.32 2675.89 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2924.41 2694.54 m
2912.17 2706.79 l
2880.98 2675.89 l
2912.17 2694.25 l
2893.51 2663.36 l
h
eoclip
n
2.18579 w
n
2849.8 2631.89 m
2915.37 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2893.51 2663.36 m
2912.17 2694.25 l
2880.98 2675.89 l
2893.51 2663.36 l
0 setgray
eofill
2.18579 w
n
2893.51 2663.36 m
2912.17 2694.25 l
2880.98 2675.89 l
2893.51 2663.36 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2612.27 2706.79 m
2600.03 2694.54 l
2630.93 2663.36 l
2612.56 2694.25 l
2643.46 2675.89 l
h
eoclip
n
2.18579 w
n
2674.93 2631.89 m
2609.36 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2643.46 2675.89 m
2612.56 2694.25 l
2630.93 2663.36 l
2643.46 2675.89 l
0 setgray
eofill
2.18579 w
n
2643.46 2675.89 m
2612.56 2694.25 l
2630.93 2663.36 l
2643.46 2675.89 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2749.54 2694.54 m
2737.3 2706.79 l
2706.12 2675.89 l
2737.3 2694.25 l
2718.65 2663.36 l
h
eoclip
n
2.18579 w
n
2674.93 2631.89 m
2740.51 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2718.65 2663.36 m
2737.3 2694.25 l
2706.12 2675.89 l
2718.65 2663.36 l
0 setgray
eofill
2.18579 w
n
2718.65 2663.36 m
2737.3 2694.25 l
2706.12 2675.89 l
2718.65 2663.36 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2437.41 2706.79 m
2425.17 2694.54 l
2456.06 2663.36 l
2437.7 2694.25 l
2468.59 2675.89 l
h
eoclip
n
2.18579 w
n
2500.07 2631.89 m
2434.49 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2468.59 2675.89 m
2437.7 2694.25 l
2456.06 2663.36 l
2468.59 2675.89 l
0 setgray
eofill
2.18579 w
n
2468.59 2675.89 m
2437.7 2694.25 l
2456.06 2663.36 l
2468.59 2675.89 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2574.68 2694.54 m
2562.44 2706.79 l
2531.25 2675.89 l
2562.44 2694.25 l
2543.78 2663.36 l
h
eoclip
n
2.18579 w
n
2500.07 2631.89 m
2565.64 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2543.78 2663.36 m
2562.44 2694.25 l
2531.25 2675.89 l
2543.78 2663.36 l
0 setgray
eofill
2.18579 w
n
2543.78 2663.36 m
2562.44 2694.25 l
2531.25 2675.89 l
2543.78 2663.36 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 2706.79 m
2971.62 2694.54 l
3002.51 2663.36 l
2984.15 2694.25 l
3015.04 2675.89 l
h
eoclip
n
2.18579 w
n
3046.52 2631.89 m
2980.95 2697.46 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 2675.89 m
2984.15 2694.25 l
3002.51 2663.36 l
3015.04 2675.89 l
0 setgray
eofill
2.18579 w
n
3015.04 2675.89 m
2984.15 2694.25 l
3002.51 2663.36 l
3015.04 2675.89 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2983.86 2531.92 m
2971.62 2519.68 l
3002.51 2488.5 l
2984.15 2519.39 l
3015.04 2501.03 l
h
eoclip
n
2.18579 w
n
3046.52 2457.02 m
2980.95 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3015.04 2501.03 m
2984.15 2519.39 l
3002.51 2488.5 l
3015.04 2501.03 l
0 setgray
eofill
2.18579 w
n
3015.04 2501.03 m
2984.15 2519.39 l
3002.51 2488.5 l
3015.04 2501.03 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1678.5 2519.68 m
1666.25 2531.92 l
1635.07 2501.03 l
1666.25 2519.39 l
1647.6 2488.5 l
h
eoclip
n
2.18579 w
n
1603.89 2457.02 m
1669.46 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1647.6 2488.5 m
1666.25 2519.39 l
1635.07 2501.03 l
1647.6 2488.5 l
0 setgray
eofill
2.18579 w
n
1647.6 2488.5 m
1666.25 2519.39 l
1635.07 2501.03 l
1647.6 2488.5 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2902.55 3940.46 m
2890.31 3952.7 l
2859.12 3921.8 l
2890.31 3940.16 l
2871.66 3909.27 l
h
eoclip
n
2.18579 w
n
2827.94 3877.8 m
2893.51 3943.37 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2871.66 3909.27 m
2890.31 3940.16 l
2859.12 3921.8 l
2871.66 3909.27 l
0 setgray
eofill
2.18579 w
n
2871.66 3909.27 m
2890.31 3940.16 l
2859.12 3921.8 l
2871.66 3909.27 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2727.68 3765.59 m
2715.44 3777.83 l
2684.26 3746.94 l
2715.44 3765.3 l
2696.79 3734.41 l
h
eoclip
n
2.18579 w
n
2653.07 3702.93 m
2718.65 3768.51 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2696.79 3734.41 m
2715.44 3765.3 l
2684.26 3746.94 l
2696.79 3734.41 l
0 setgray
eofill
2.18579 w
n
2696.79 3734.41 m
2715.44 3765.3 l
2684.26 3746.94 l
2696.79 3734.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2552.82 3590.73 m
2540.58 3602.97 l
2509.39 3572.07 l
2540.58 3590.44 l
2521.93 3559.54 l
h
eoclip
n
2.18579 w
n
2478.21 3528.07 m
2543.78 3593.64 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2521.93 3559.54 m
2540.58 3590.44 l
2509.39 3572.07 l
2521.93 3559.54 l
0 setgray
eofill
2.18579 w
n
2521.93 3559.54 m
2540.58 3590.44 l
2509.39 3572.07 l
2521.93 3559.54 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2377.95 3415.86 m
2365.71 3428.1 l
2334.53 3397.21 l
2365.71 3415.57 l
2347.06 3384.68 l
h
eoclip
n
2.18579 w
n
2303.35 3353.2 m
2368.92 3418.78 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2347.06 3384.68 m
2365.71 3415.57 l
2334.53 3397.21 l
2347.06 3384.68 l
0 setgray
eofill
2.18579 w
n
2347.06 3384.68 m
2365.71 3415.57 l
2334.53 3397.21 l
2347.06 3384.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2203.09 3241 m
2190.85 3253.24 l
2159.66 3222.34 l
2190.85 3240.71 l
2172.2 3209.81 l
h
eoclip
n
2.18579 w
n
2128.48 3178.34 m
2194.05 3243.91 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2172.2 3209.81 m
2190.85 3240.71 l
2159.66 3222.34 l
2172.2 3209.81 l
0 setgray
eofill
2.18579 w
n
2172.2 3209.81 m
2190.85 3240.71 l
2159.66 3222.34 l
2172.2 3209.81 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2006.37 3066.13 m
1994.13 3078.37 l
1962.94 3047.48 l
1994.13 3065.84 l
1975.47 3034.95 l
h
eoclip
n
2.18579 w
n
1931.76 3003.47 m
1997.33 3069.05 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1975.47 3034.95 m
1994.13 3065.84 l
1962.94 3047.48 l
1975.47 3034.95 l
0 setgray
eofill
2.18579 w
n
1975.47 3034.95 m
1994.13 3065.84 l
1962.94 3047.48 l
1975.47 3034.95 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1831.5 2869.41 m
1819.26 2881.65 l
1788.08 2850.76 l
1819.26 2869.12 l
1800.61 2838.23 l
h
eoclip
n
2.18579 w
n
1756.89 2806.75 m
1822.47 2872.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1800.61 2838.23 m
1819.26 2869.12 l
1788.08 2850.76 l
1800.61 2838.23 l
0 setgray
eofill
2.18579 w
n
1800.61 2838.23 m
1819.26 2869.12 l
1788.08 2850.76 l
1800.61 2838.23 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1656.64 2716.4 m
1644.4 2728.64 l
1613.21 2697.75 l
1644.4 2716.11 l
1625.74 2685.22 l
h
eoclip
n
2.18579 w
n
1582.03 2653.74 m
1647.6 2719.32 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1625.74 2685.22 m
1644.4 2716.11 l
1613.21 2697.75 l
1625.74 2685.22 l
0 setgray
eofill
2.18579 w
n
1625.74 2685.22 m
1644.4 2716.11 l
1613.21 2697.75 l
1625.74 2685.22 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1503.63 2519.68 m
1491.39 2531.92 l
1460.21 2501.03 l
1491.39 2519.39 l
1472.74 2488.5 l
h
eoclip
n
2.18579 w
n
1429.02 2457.02 m
1494.6 2522.59 l
0 setgray
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1472.74 2488.5 m
1491.39 2519.39 l
1460.21 2501.03 l
1472.74 2488.5 l
0 setgray
eofill
2.18579 w
n
1472.74 2488.5 m
1491.39 2519.39 l
1460.21 2501.03 l
1472.74 2488.5 l
h
S
q
10 0 0 10 0 0 cm
295.909 403.08 m
/N353 11.3662 Tf
(G) show
304.652 400.894 m
/N353 8.74316 Tf
(1) show
Q
8.74316 w
n
1363.45 3812.22 174.865 174.865 re
S
n
1538.31 3812.22 174.865 174.865 re
S
n
1713.18 3812.22 174.865 174.865 re
S
n
1888.04 3812.22 174.865 174.865 re
S
n
2062.91 3812.22 174.865 174.865 re
S
n
1363.45 3637.36 174.865 174.865 re
S
n
1538.31 3637.36 174.865 174.865 re
S
n
1713.18 3637.36 174.865 174.865 re
S
n
1888.04 3637.36 174.865 174.865 re
S
n
2062.91 3637.36 174.865 174.865 re
S
n
1363.45 3462.49 174.865 174.865 re
S
n
1538.31 3462.49 174.865 174.865 re
S
n
1713.18 3462.49 174.865 174.865 re
S
n
1888.04 3462.49 174.865 174.865 re
S
n
2062.91 3462.49 174.865 174.865 re
S
n
1363.45 3287.63 174.865 174.865 re
S
n
1538.31 3287.63 174.865 174.865 re
S
n
1713.18 3287.63 174.865 174.865 re
S
n
1888.04 3287.63 174.865 174.865 re
S
n
2062.91 3287.63 174.865 174.865 re
S
n
1363.45 3987.09 174.865 174.865 re
S
n
1538.31 3987.09 174.865 174.865 re
S
n
1713.18 3987.09 174.865 174.865 re
S
n
1888.04 3987.09 174.865 174.865 re
S
n
2062.91 3987.09 174.865 174.865 re
S
n
1363.45 2937.9 174.865 174.865 re
S
n
1538.31 2937.9 174.865 174.865 re
S
n
1713.18 2937.9 174.865 174.865 re
S
n
1888.04 2937.9 174.865 174.865 re
S
n
2062.91 2937.9 174.865 174.865 re
S
n
1363.45 2763.03 174.865 174.865 re
S
n
1538.31 2763.03 174.865 174.865 re
S
n
1713.18 2763.03 174.865 174.865 re
S
n
1888.04 2763.03 174.865 174.865 re
S
n
2062.91 2763.03 174.865 174.865 re
S
n
1363.45 2588.17 174.865 174.865 re
S
n
1538.31 2588.17 174.865 174.865 re
S
n
1713.18 2588.17 174.865 174.865 re
S
n
1888.04 2588.17 174.865 174.865 re
S
n
2062.91 2588.17 174.865 174.865 re
S
n
1363.45 2413.3 174.865 174.865 re
S
n
1538.31 2413.3 174.865 174.865 re
S
n
1713.18 2413.3 174.865 174.865 re
S
n
1888.04 2413.3 174.865 174.865 re
S
n
2062.91 2413.3 174.865 174.865 re
S
n
1363.45 3112.76 174.865 174.865 re
S
n
1538.31 3112.76 174.865 174.865 re
S
n
1713.18 3112.76 174.865 174.865 re
S
n
1888.04 3112.76 174.865 174.865 re
S
n
2062.91 3112.76 174.865 174.865 re
S
n
2237.77 2937.9 174.865 174.865 re
S
n
2412.64 2937.9 174.865 174.865 re
S
n
2587.5 2937.9 174.865 174.865 re
S
n
2762.37 2937.9 174.865 174.865 re
S
n
2937.23 2937.9 174.865 174.865 re
S
n
2237.77 2763.03 174.865 174.865 re
S
n
2412.64 2763.03 174.865 174.865 re
S
n
2587.5 2763.03 174.865 174.865 re
S
n
2762.37 2763.03 174.865 174.865 re
S
n
2937.23 2763.03 174.865 174.865 re
S
n
2237.77 2588.17 174.865 174.865 re
S
n
2412.64 2588.17 174.865 174.865 re
S
n
2587.5 2588.17 174.865 174.865 re
S
n
2762.37 2588.17 174.865 174.865 re
S
n
2937.23 2588.17 174.865 174.865 re
S
n
2237.77 2413.3 174.865 174.865 re
S
n
2412.64 2413.3 174.865 174.865 re
S
n
2587.5 2413.3 174.865 174.865 re
S
n
2762.37 2413.3 174.865 174.865 re
S
n
2937.23 2413.3 174.865 174.865 re
S
n
2237.77 3112.76 174.865 174.865 re
S
n
2412.64 3112.76 174.865 174.865 re
S
n
2587.5 3112.76 174.865 174.865 re
S
n
2762.37 3112.76 174.865 174.865 re
S
n
2937.23 3112.76 174.865 174.865 re
S
n
2237.77 3812.22 174.865 174.865 re
S
n
2412.64 3812.22 174.865 174.865 re
S
n
2587.5 3812.22 174.865 174.865 re
S
n
2762.37 3812.22 174.865 174.865 re
S
n
2937.23 3812.22 174.865 174.865 re
S
n
2237.77 3637.36 174.865 174.865 re
S
n
2412.64 3637.36 174.865 174.865 re
S
n
2587.5 3637.36 174.865 174.865 re
S
n
2762.37 3637.36 174.865 174.865 re
S
n
2937.23 3637.36 174.865 174.865 re
S
n
2237.77 3462.49 174.865 174.865 re
S
n
2412.64 3462.49 174.865 174.865 re
S
n
2587.5 3462.49 174.865 174.865 re
S
n
2762.37 3462.49 174.865 174.865 re
S
n
2937.23 3462.49 174.865 174.865 re
S
n
2237.77 3287.63 174.865 174.865 re
S
n
2412.64 3287.63 174.865 174.865 re
S
n
2587.5 3287.63 174.865 174.865 re
S
n
2762.37 3287.63 174.865 174.865 re
S
n
2937.23 3287.63 174.865 174.865 re
S
n
2237.77 3987.09 174.865 174.865 re
S
n
2412.64 3987.09 174.865 174.865 re
S
n
2587.5 3987.09 174.865 174.865 re
S
n
2762.37 3987.09 174.865 174.865 re
S
n
2937.23 3987.09 174.865 174.865 re
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 4065.78 m
1498.97 4083.26 l
1454.96 4083.26 l
1489.93 4074.52 l
1454.96 4065.78 l
h
eoclip
n
n
1407.16 4074.52 m
1494.6 4074.52 l
0 setgray
eofill
2.18579 w
n
1407.16 4074.52 m
1494.6 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 4065.78 m
1489.93 4074.52 l
1454.96 4083.26 l
1454.96 4065.78 l
0 setgray
eofill
2.18579 w
n
1454.96 4065.78 m
1489.93 4074.52 l
1454.96 4083.26 l
1454.96 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2023.56 4065.78 m
2023.56 4083.26 l
1979.55 4083.26 l
2014.53 4074.52 l
1979.55 4065.78 l
h
eoclip
n
n
1931.76 4074.52 m
2019.19 4074.52 l
0 setgray
eofill
2.18579 w
n
1931.76 4074.52 m
2019.19 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1979.55 4065.78 m
2014.53 4074.52 l
1979.55 4083.26 l
1979.55 4065.78 l
0 setgray
eofill
2.18579 w
n
1979.55 4065.78 m
2014.53 4074.52 l
1979.55 4083.26 l
1979.55 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2198.43 4065.78 m
2198.43 4083.26 l
2154.42 4083.26 l
2189.39 4074.52 l
2154.42 4065.78 l
h
eoclip
n
n
2106.62 4074.52 m
2194.05 4074.52 l
0 setgray
eofill
2.18579 w
n
2106.62 4074.52 m
2194.05 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2154.42 4065.78 m
2189.39 4074.52 l
2154.42 4083.26 l
2154.42 4065.78 l
0 setgray
eofill
2.18579 w
n
2154.42 4065.78 m
2189.39 4074.52 l
2154.42 4083.26 l
2154.42 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2373.29 4065.78 m
2373.29 4083.26 l
2329.28 4083.26 l
2364.26 4074.52 l
2329.28 4065.78 l
h
eoclip
n
n
2281.49 4074.52 m
2368.92 4074.52 l
0 setgray
eofill
2.18579 w
n
2281.49 4074.52 m
2368.92 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2329.28 4065.78 m
2364.26 4074.52 l
2329.28 4083.26 l
2329.28 4065.78 l
0 setgray
eofill
2.18579 w
n
2329.28 4065.78 m
2364.26 4074.52 l
2329.28 4083.26 l
2329.28 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2548.16 4065.78 m
2548.16 4083.26 l
2504.15 4083.26 l
2539.12 4074.52 l
2504.15 4065.78 l
h
eoclip
n
n
2456.35 4074.52 m
2543.78 4074.52 l
0 setgray
eofill
2.18579 w
n
2456.35 4074.52 m
2543.78 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2504.15 4065.78 m
2539.12 4074.52 l
2504.15 4083.26 l
2504.15 4065.78 l
0 setgray
eofill
2.18579 w
n
2504.15 4065.78 m
2539.12 4074.52 l
2504.15 4083.26 l
2504.15 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2723.02 4065.78 m
2723.02 4083.26 l
2679.01 4083.26 l
2713.99 4074.52 l
2679.01 4065.78 l
h
eoclip
n
n
2631.22 4074.52 m
2718.65 4074.52 l
0 setgray
eofill
2.18579 w
n
2631.22 4074.52 m
2718.65 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2679.01 4065.78 m
2713.99 4074.52 l
2679.01 4083.26 l
2679.01 4065.78 l
0 setgray
eofill
2.18579 w
n
2679.01 4065.78 m
2713.99 4074.52 l
2679.01 4083.26 l
2679.01 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2897.89 4065.78 m
2897.89 4083.26 l
2853.88 4083.26 l
2888.85 4074.52 l
2853.88 4065.78 l
h
eoclip
n
n
2806.08 4074.52 m
2893.51 4074.52 l
0 setgray
eofill
2.18579 w
n
2806.08 4074.52 m
2893.51 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2853.88 4065.78 m
2888.85 4074.52 l
2853.88 4083.26 l
2853.88 4065.78 l
0 setgray
eofill
2.18579 w
n
2853.88 4065.78 m
2888.85 4074.52 l
2853.88 4083.26 l
2853.88 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1848.7 4065.78 m
1848.7 4083.26 l
1804.69 4083.26 l
1839.66 4074.52 l
1804.69 4065.78 l
h
eoclip
n
n
1756.89 4074.52 m
1844.33 4074.52 l
0 setgray
eofill
2.18579 w
n
1756.89 4074.52 m
1844.33 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1804.69 4065.78 m
1839.66 4074.52 l
1804.69 4083.26 l
1804.69 4065.78 l
0 setgray
eofill
2.18579 w
n
1804.69 4065.78 m
1839.66 4074.52 l
1804.69 4083.26 l
1804.69 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 4065.78 m
1673.83 4083.26 l
1629.82 4083.26 l
1664.8 4074.52 l
1629.82 4065.78 l
h
eoclip
n
n
1582.03 4074.52 m
1669.46 4074.52 l
0 setgray
eofill
2.18579 w
n
1582.03 4074.52 m
1669.46 4074.52 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 4065.78 m
1664.8 4074.52 l
1629.82 4083.26 l
1629.82 4065.78 l
0 setgray
eofill
2.18579 w
n
1629.82 4065.78 m
1664.8 4074.52 l
1629.82 4083.26 l
1629.82 4065.78 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 3890.91 m
1498.97 3908.4 l
1454.96 3908.4 l
1489.93 3899.65 l
1454.96 3890.91 l
h
eoclip
n
n
1407.16 3899.65 m
1494.6 3899.65 l
0 setgray
eofill
2.18579 w
n
1407.16 3899.65 m
1494.6 3899.65 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 3890.91 m
1489.93 3899.65 l
1454.96 3908.4 l
1454.96 3890.91 l
0 setgray
eofill
2.18579 w
n
1454.96 3890.91 m
1489.93 3899.65 l
1454.96 3908.4 l
1454.96 3890.91 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 3890.91 m
1673.83 3908.4 l
1629.82 3908.4 l
1664.8 3899.65 l
1629.82 3890.91 l
h
eoclip
n
n
1582.03 3899.65 m
1669.46 3899.65 l
0 setgray
eofill
2.18579 w
n
1582.03 3899.65 m
1669.46 3899.65 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 3890.91 m
1664.8 3899.65 l
1629.82 3908.4 l
1629.82 3890.91 l
0 setgray
eofill
2.18579 w
n
1629.82 3890.91 m
1664.8 3899.65 l
1629.82 3908.4 l
1629.82 3890.91 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1848.7 3890.91 m
1848.7 3908.4 l
1804.69 3908.4 l
1839.66 3899.65 l
1804.69 3890.91 l
h
eoclip
n
n
1756.89 3899.65 m
1844.33 3899.65 l
0 setgray
eofill
2.18579 w
n
1756.89 3899.65 m
1844.33 3899.65 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1804.69 3890.91 m
1839.66 3899.65 l
1804.69 3908.4 l
1804.69 3890.91 l
0 setgray
eofill
2.18579 w
n
1804.69 3890.91 m
1839.66 3899.65 l
1804.69 3908.4 l
1804.69 3890.91 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2023.56 3890.91 m
2023.56 3908.4 l
1979.55 3908.4 l
2014.53 3899.65 l
1979.55 3890.91 l
h
eoclip
n
n
1931.76 3899.65 m
2019.19 3899.65 l
0 setgray
eofill
2.18579 w
n
1931.76 3899.65 m
2019.19 3899.65 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1979.55 3890.91 m
2014.53 3899.65 l
1979.55 3908.4 l
1979.55 3890.91 l
0 setgray
eofill
2.18579 w
n
1979.55 3890.91 m
2014.53 3899.65 l
1979.55 3908.4 l
1979.55 3890.91 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2198.43 3890.91 m
2198.43 3908.4 l
2154.42 3908.4 l
2189.39 3899.65 l
2154.42 3890.91 l
h
eoclip
n
n
2106.62 3899.65 m
2194.05 3899.65 l
0 setgray
eofill
2.18579 w
n
2106.62 3899.65 m
2194.05 3899.65 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2154.42 3890.91 m
2189.39 3899.65 l
2154.42 3908.4 l
2154.42 3890.91 l
0 setgray
eofill
2.18579 w
n
2154.42 3890.91 m
2189.39 3899.65 l
2154.42 3908.4 l
2154.42 3890.91 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2373.29 3890.91 m
2373.29 3908.4 l
2329.28 3908.4 l
2364.26 3899.65 l
2329.28 3890.91 l
h
eoclip
n
n
2281.49 3899.65 m
2368.92 3899.65 l
0 setgray
eofill
2.18579 w
n
2281.49 3899.65 m
2368.92 3899.65 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2329.28 3890.91 m
2364.26 3899.65 l
2329.28 3908.4 l
2329.28 3890.91 l
0 setgray
eofill
2.18579 w
n
2329.28 3890.91 m
2364.26 3899.65 l
2329.28 3908.4 l
2329.28 3890.91 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2548.16 3890.91 m
2548.16 3908.4 l
2504.15 3908.4 l
2539.12 3899.65 l
2504.15 3890.91 l
h
eoclip
n
n
2456.35 3899.65 m
2543.78 3899.65 l
0 setgray
eofill
2.18579 w
n
2456.35 3899.65 m
2543.78 3899.65 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2504.15 3890.91 m
2539.12 3899.65 l
2504.15 3908.4 l
2504.15 3890.91 l
0 setgray
eofill
2.18579 w
n
2504.15 3890.91 m
2539.12 3899.65 l
2504.15 3908.4 l
2504.15 3890.91 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2723.02 3869.05 m
2723.02 3886.54 l
2679.01 3886.54 l
2713.99 3877.8 l
2679.01 3869.05 l
h
eoclip
n
n
2631.22 3877.8 m
2718.65 3877.8 l
0 setgray
eofill
2.18579 w
n
2631.22 3877.8 m
2718.65 3877.8 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2679.01 3869.05 m
2713.99 3877.8 l
2679.01 3886.54 l
2679.01 3869.05 l
0 setgray
eofill
2.18579 w
n
2679.01 3869.05 m
2713.99 3877.8 l
2679.01 3886.54 l
2679.01 3869.05 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 3716.05 m
1498.97 3733.53 l
1454.96 3733.53 l
1489.93 3724.79 l
1454.96 3716.05 l
h
eoclip
n
n
1407.16 3724.79 m
1494.6 3724.79 l
0 setgray
eofill
2.18579 w
n
1407.16 3724.79 m
1494.6 3724.79 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 3716.05 m
1489.93 3724.79 l
1454.96 3733.53 l
1454.96 3716.05 l
0 setgray
eofill
2.18579 w
n
1454.96 3716.05 m
1489.93 3724.79 l
1454.96 3733.53 l
1454.96 3716.05 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 3716.05 m
1673.83 3733.53 l
1629.82 3733.53 l
1664.8 3724.79 l
1629.82 3716.05 l
h
eoclip
n
n
1582.03 3724.79 m
1669.46 3724.79 l
0 setgray
eofill
2.18579 w
n
1582.03 3724.79 m
1669.46 3724.79 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 3716.05 m
1664.8 3724.79 l
1629.82 3733.53 l
1629.82 3716.05 l
0 setgray
eofill
2.18579 w
n
1629.82 3716.05 m
1664.8 3724.79 l
1629.82 3733.53 l
1629.82 3716.05 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1848.7 3716.05 m
1848.7 3733.53 l
1804.69 3733.53 l
1839.66 3724.79 l
1804.69 3716.05 l
h
eoclip
n
n
1756.89 3724.79 m
1844.33 3724.79 l
0 setgray
eofill
2.18579 w
n
1756.89 3724.79 m
1844.33 3724.79 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1804.69 3716.05 m
1839.66 3724.79 l
1804.69 3733.53 l
1804.69 3716.05 l
0 setgray
eofill
2.18579 w
n
1804.69 3716.05 m
1839.66 3724.79 l
1804.69 3733.53 l
1804.69 3716.05 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2023.56 3716.05 m
2023.56 3733.53 l
1979.55 3733.53 l
2014.53 3724.79 l
1979.55 3716.05 l
h
eoclip
n
n
1931.76 3724.79 m
2019.19 3724.79 l
0 setgray
eofill
2.18579 w
n
1931.76 3724.79 m
2019.19 3724.79 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1979.55 3716.05 m
2014.53 3724.79 l
1979.55 3733.53 l
1979.55 3716.05 l
0 setgray
eofill
2.18579 w
n
1979.55 3716.05 m
2014.53 3724.79 l
1979.55 3733.53 l
1979.55 3716.05 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2198.43 3716.05 m
2198.43 3733.53 l
2154.42 3733.53 l
2189.39 3724.79 l
2154.42 3716.05 l
h
eoclip
n
n
2106.62 3724.79 m
2194.05 3724.79 l
0 setgray
eofill
2.18579 w
n
2106.62 3724.79 m
2194.05 3724.79 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2154.42 3716.05 m
2189.39 3724.79 l
2154.42 3733.53 l
2154.42 3716.05 l
0 setgray
eofill
2.18579 w
n
2154.42 3716.05 m
2189.39 3724.79 l
2154.42 3733.53 l
2154.42 3716.05 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2373.29 3716.05 m
2373.29 3733.53 l
2329.28 3733.53 l
2364.26 3724.79 l
2329.28 3716.05 l
h
eoclip
n
n
2281.49 3724.79 m
2368.92 3724.79 l
0 setgray
eofill
2.18579 w
n
2281.49 3724.79 m
2368.92 3724.79 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2329.28 3716.05 m
2364.26 3724.79 l
2329.28 3733.53 l
2329.28 3716.05 l
0 setgray
eofill
2.18579 w
n
2329.28 3716.05 m
2364.26 3724.79 l
2329.28 3733.53 l
2329.28 3716.05 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2548.16 3694.19 m
2548.16 3711.67 l
2504.15 3711.67 l
2539.12 3702.93 l
2504.15 3694.19 l
h
eoclip
n
n
2456.35 3702.93 m
2543.78 3702.93 l
0 setgray
eofill
2.18579 w
n
2456.35 3702.93 m
2543.78 3702.93 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2504.15 3694.19 m
2539.12 3702.93 l
2504.15 3711.67 l
2504.15 3694.19 l
0 setgray
eofill
2.18579 w
n
2504.15 3694.19 m
2539.12 3702.93 l
2504.15 3711.67 l
2504.15 3694.19 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2836.68 3772.88 m
2819.2 3772.88 l
2819.2 3728.87 l
2827.94 3763.84 l
2836.68 3728.87 l
h
eoclip
n
n
2827.94 3681.07 m
2827.94 3768.51 l
0 setgray
eofill
2.18579 w
n
2827.94 3681.07 m
2827.94 3768.51 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2836.68 3728.87 m
2827.94 3763.84 l
2819.2 3728.87 l
2836.68 3728.87 l
0 setgray
eofill
2.18579 w
n
2836.68 3728.87 m
2827.94 3763.84 l
2819.2 3728.87 l
2836.68 3728.87 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 3772.88 m
3037.78 3772.88 l
3037.78 3728.87 l
3046.52 3763.84 l
3055.26 3728.87 l
h
eoclip
n
n
3046.52 3681.07 m
3046.52 3768.51 l
0 setgray
eofill
2.18579 w
n
3046.52 3681.07 m
3046.52 3768.51 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 3728.87 m
3046.52 3763.84 l
3037.78 3728.87 l
3055.26 3728.87 l
0 setgray
eofill
2.18579 w
n
3055.26 3728.87 m
3046.52 3763.84 l
3037.78 3728.87 l
3055.26 3728.87 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 3541.18 m
1498.97 3558.67 l
1454.96 3558.67 l
1489.93 3549.93 l
1454.96 3541.18 l
h
eoclip
n
n
1407.16 3549.93 m
1494.6 3549.93 l
0 setgray
eofill
2.18579 w
n
1407.16 3549.93 m
1494.6 3549.93 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 3541.18 m
1489.93 3549.93 l
1454.96 3558.67 l
1454.96 3541.18 l
0 setgray
eofill
2.18579 w
n
1454.96 3541.18 m
1489.93 3549.93 l
1454.96 3558.67 l
1454.96 3541.18 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 3541.18 m
1673.83 3558.67 l
1629.82 3558.67 l
1664.8 3549.93 l
1629.82 3541.18 l
h
eoclip
n
n
1582.03 3549.93 m
1669.46 3549.93 l
0 setgray
eofill
2.18579 w
n
1582.03 3549.93 m
1669.46 3549.93 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 3541.18 m
1664.8 3549.93 l
1629.82 3558.67 l
1629.82 3541.18 l
0 setgray
eofill
2.18579 w
n
1629.82 3541.18 m
1664.8 3549.93 l
1629.82 3558.67 l
1629.82 3541.18 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1848.7 3541.18 m
1848.7 3558.67 l
1804.69 3558.67 l
1839.66 3549.93 l
1804.69 3541.18 l
h
eoclip
n
n
1756.89 3549.93 m
1844.33 3549.93 l
0 setgray
eofill
2.18579 w
n
1756.89 3549.93 m
1844.33 3549.93 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1804.69 3541.18 m
1839.66 3549.93 l
1804.69 3558.67 l
1804.69 3541.18 l
0 setgray
eofill
2.18579 w
n
1804.69 3541.18 m
1839.66 3549.93 l
1804.69 3558.67 l
1804.69 3541.18 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2023.56 3541.18 m
2023.56 3558.67 l
1979.55 3558.67 l
2014.53 3549.93 l
1979.55 3541.18 l
h
eoclip
n
n
1931.76 3549.93 m
2019.19 3549.93 l
0 setgray
eofill
2.18579 w
n
1931.76 3549.93 m
2019.19 3549.93 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1979.55 3541.18 m
2014.53 3549.93 l
1979.55 3558.67 l
1979.55 3541.18 l
0 setgray
eofill
2.18579 w
n
1979.55 3541.18 m
2014.53 3549.93 l
1979.55 3558.67 l
1979.55 3541.18 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2198.43 3541.18 m
2198.43 3558.67 l
2154.42 3558.67 l
2189.39 3549.93 l
2154.42 3541.18 l
h
eoclip
n
n
2106.62 3549.93 m
2194.05 3549.93 l
0 setgray
eofill
2.18579 w
n
2106.62 3549.93 m
2194.05 3549.93 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2154.42 3541.18 m
2189.39 3549.93 l
2154.42 3558.67 l
2154.42 3541.18 l
0 setgray
eofill
2.18579 w
n
2154.42 3541.18 m
2189.39 3549.93 l
2154.42 3558.67 l
2154.42 3541.18 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2373.29 3519.32 m
2373.29 3536.81 l
2329.28 3536.81 l
2364.26 3528.07 l
2329.28 3519.32 l
h
eoclip
n
n
2281.49 3528.07 m
2368.92 3528.07 l
0 setgray
eofill
2.18579 w
n
2281.49 3528.07 m
2368.92 3528.07 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2329.28 3519.32 m
2364.26 3528.07 l
2329.28 3536.81 l
2329.28 3519.32 l
0 setgray
eofill
2.18579 w
n
2329.28 3519.32 m
2364.26 3528.07 l
2329.28 3536.81 l
2329.28 3519.32 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2661.82 3598.01 m
2644.33 3598.01 l
2644.33 3554.01 l
2653.07 3588.98 l
2661.82 3554.01 l
h
eoclip
n
n
2653.07 3506.21 m
2653.07 3593.64 l
0 setgray
eofill
2.18579 w
n
2653.07 3506.21 m
2653.07 3593.64 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2661.82 3554.01 m
2653.07 3588.98 l
2644.33 3554.01 l
2661.82 3554.01 l
0 setgray
eofill
2.18579 w
n
2661.82 3554.01 m
2653.07 3588.98 l
2644.33 3554.01 l
2661.82 3554.01 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2858.54 3598.01 m
2841.05 3598.01 l
2841.05 3554.01 l
2849.8 3588.98 l
2858.54 3554.01 l
h
eoclip
n
n
2849.8 3506.21 m
2849.8 3593.64 l
0 setgray
eofill
2.18579 w
n
2849.8 3506.21 m
2849.8 3593.64 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2858.54 3554.01 m
2849.8 3588.98 l
2841.05 3554.01 l
2858.54 3554.01 l
0 setgray
eofill
2.18579 w
n
2858.54 3554.01 m
2849.8 3588.98 l
2841.05 3554.01 l
2858.54 3554.01 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 3598.01 m
3037.78 3598.01 l
3037.78 3554.01 l
3046.52 3588.98 l
3055.26 3554.01 l
h
eoclip
n
n
3046.52 3506.21 m
3046.52 3593.64 l
0 setgray
eofill
2.18579 w
n
3046.52 3506.21 m
3046.52 3593.64 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 3554.01 m
3046.52 3588.98 l
3037.78 3554.01 l
3055.26 3554.01 l
0 setgray
eofill
2.18579 w
n
3055.26 3554.01 m
3046.52 3588.98 l
3037.78 3554.01 l
3055.26 3554.01 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 3366.32 m
1498.97 3383.8 l
1454.96 3383.8 l
1489.93 3375.06 l
1454.96 3366.32 l
h
eoclip
n
n
1407.16 3375.06 m
1494.6 3375.06 l
0 setgray
eofill
2.18579 w
n
1407.16 3375.06 m
1494.6 3375.06 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 3366.32 m
1489.93 3375.06 l
1454.96 3383.8 l
1454.96 3366.32 l
0 setgray
eofill
2.18579 w
n
1454.96 3366.32 m
1489.93 3375.06 l
1454.96 3383.8 l
1454.96 3366.32 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 3366.32 m
1673.83 3383.8 l
1629.82 3383.8 l
1664.8 3375.06 l
1629.82 3366.32 l
h
eoclip
n
n
1582.03 3375.06 m
1669.46 3375.06 l
0 setgray
eofill
2.18579 w
n
1582.03 3375.06 m
1669.46 3375.06 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 3366.32 m
1664.8 3375.06 l
1629.82 3383.8 l
1629.82 3366.32 l
0 setgray
eofill
2.18579 w
n
1629.82 3366.32 m
1664.8 3375.06 l
1629.82 3383.8 l
1629.82 3366.32 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1848.7 3366.32 m
1848.7 3383.8 l
1804.69 3383.8 l
1839.66 3375.06 l
1804.69 3366.32 l
h
eoclip
n
n
1756.89 3375.06 m
1844.33 3375.06 l
0 setgray
eofill
2.18579 w
n
1756.89 3375.06 m
1844.33 3375.06 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1804.69 3366.32 m
1839.66 3375.06 l
1804.69 3383.8 l
1804.69 3366.32 l
0 setgray
eofill
2.18579 w
n
1804.69 3366.32 m
1839.66 3375.06 l
1804.69 3383.8 l
1804.69 3366.32 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2023.56 3366.32 m
2023.56 3383.8 l
1979.55 3383.8 l
2014.53 3375.06 l
1979.55 3366.32 l
h
eoclip
n
n
1931.76 3375.06 m
2019.19 3375.06 l
0 setgray
eofill
2.18579 w
n
1931.76 3375.06 m
2019.19 3375.06 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1979.55 3366.32 m
2014.53 3375.06 l
1979.55 3383.8 l
1979.55 3366.32 l
0 setgray
eofill
2.18579 w
n
1979.55 3366.32 m
2014.53 3375.06 l
1979.55 3383.8 l
1979.55 3366.32 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2198.43 3344.46 m
2198.43 3361.95 l
2154.42 3361.95 l
2189.39 3353.2 l
2154.42 3344.46 l
h
eoclip
n
n
2106.62 3353.2 m
2194.05 3353.2 l
0 setgray
eofill
2.18579 w
n
2106.62 3353.2 m
2194.05 3353.2 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2154.42 3344.46 m
2189.39 3353.2 l
2154.42 3361.95 l
2154.42 3344.46 l
0 setgray
eofill
2.18579 w
n
2154.42 3344.46 m
2189.39 3353.2 l
2154.42 3361.95 l
2154.42 3344.46 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2486.95 3423.15 m
2469.47 3423.15 l
2469.47 3379.14 l
2478.21 3414.11 l
2486.95 3379.14 l
h
eoclip
n
n
2478.21 3331.34 m
2478.21 3418.78 l
0 setgray
eofill
2.18579 w
n
2478.21 3331.34 m
2478.21 3418.78 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2486.95 3379.14 m
2478.21 3414.11 l
2469.47 3379.14 l
2486.95 3379.14 l
0 setgray
eofill
2.18579 w
n
2486.95 3379.14 m
2478.21 3414.11 l
2469.47 3379.14 l
2486.95 3379.14 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2683.68 3423.15 m
2666.19 3423.15 l
2666.19 3379.14 l
2674.93 3414.11 l
2683.68 3379.14 l
h
eoclip
n
n
2674.93 3331.34 m
2674.93 3418.78 l
0 setgray
eofill
2.18579 w
n
2674.93 3331.34 m
2674.93 3418.78 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2683.68 3379.14 m
2674.93 3414.11 l
2666.19 3379.14 l
2683.68 3379.14 l
0 setgray
eofill
2.18579 w
n
2683.68 3379.14 m
2674.93 3414.11 l
2666.19 3379.14 l
2683.68 3379.14 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2858.54 3423.15 m
2841.05 3423.15 l
2841.05 3379.14 l
2849.8 3414.11 l
2858.54 3379.14 l
h
eoclip
n
n
2849.8 3331.34 m
2849.8 3418.78 l
0 setgray
eofill
2.18579 w
n
2849.8 3331.34 m
2849.8 3418.78 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2858.54 3379.14 m
2849.8 3414.11 l
2841.05 3379.14 l
2858.54 3379.14 l
0 setgray
eofill
2.18579 w
n
2858.54 3379.14 m
2849.8 3414.11 l
2841.05 3379.14 l
2858.54 3379.14 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 3423.15 m
3037.78 3423.15 l
3037.78 3379.14 l
3046.52 3414.11 l
3055.26 3379.14 l
h
eoclip
n
n
3046.52 3331.34 m
3046.52 3418.78 l
0 setgray
eofill
2.18579 w
n
3046.52 3331.34 m
3046.52 3418.78 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 3379.14 m
3046.52 3414.11 l
3037.78 3379.14 l
3055.26 3379.14 l
0 setgray
eofill
2.18579 w
n
3055.26 3379.14 m
3046.52 3414.11 l
3037.78 3379.14 l
3055.26 3379.14 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 3191.45 m
1498.97 3208.94 l
1454.96 3208.94 l
1489.93 3200.2 l
1454.96 3191.45 l
h
eoclip
n
n
1407.16 3200.2 m
1494.6 3200.2 l
0 setgray
eofill
2.18579 w
n
1407.16 3200.2 m
1494.6 3200.2 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 3191.45 m
1489.93 3200.2 l
1454.96 3208.94 l
1454.96 3191.45 l
0 setgray
eofill
2.18579 w
n
1454.96 3191.45 m
1489.93 3200.2 l
1454.96 3208.94 l
1454.96 3191.45 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 3191.45 m
1673.83 3208.94 l
1629.82 3208.94 l
1664.8 3200.2 l
1629.82 3191.45 l
h
eoclip
n
n
1582.03 3200.2 m
1669.46 3200.2 l
0 setgray
eofill
2.18579 w
n
1582.03 3200.2 m
1669.46 3200.2 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 3191.45 m
1664.8 3200.2 l
1629.82 3208.94 l
1629.82 3191.45 l
0 setgray
eofill
2.18579 w
n
1629.82 3191.45 m
1664.8 3200.2 l
1629.82 3208.94 l
1629.82 3191.45 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1848.7 3191.45 m
1848.7 3208.94 l
1804.69 3208.94 l
1839.66 3200.2 l
1804.69 3191.45 l
h
eoclip
n
n
1756.89 3200.2 m
1844.33 3200.2 l
0 setgray
eofill
2.18579 w
n
1756.89 3200.2 m
1844.33 3200.2 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1804.69 3191.45 m
1839.66 3200.2 l
1804.69 3208.94 l
1804.69 3191.45 l
0 setgray
eofill
2.18579 w
n
1804.69 3191.45 m
1839.66 3200.2 l
1804.69 3208.94 l
1804.69 3191.45 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2023.56 3169.59 m
2023.56 3187.08 l
1979.55 3187.08 l
2014.53 3178.34 l
1979.55 3169.59 l
h
eoclip
n
n
1931.76 3178.34 m
2019.19 3178.34 l
0 setgray
eofill
2.18579 w
n
1931.76 3178.34 m
2019.19 3178.34 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1979.55 3169.59 m
2014.53 3178.34 l
1979.55 3187.08 l
1979.55 3169.59 l
0 setgray
eofill
2.18579 w
n
1979.55 3169.59 m
2014.53 3178.34 l
1979.55 3187.08 l
1979.55 3169.59 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2312.09 3248.28 m
2294.6 3248.28 l
2294.6 3204.28 l
2303.35 3239.25 l
2312.09 3204.28 l
h
eoclip
n
n
2303.35 3156.48 m
2303.35 3243.91 l
0 setgray
eofill
2.18579 w
n
2303.35 3156.48 m
2303.35 3243.91 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2312.09 3204.28 m
2303.35 3239.25 l
2294.6 3204.28 l
2312.09 3204.28 l
0 setgray
eofill
2.18579 w
n
2312.09 3204.28 m
2303.35 3239.25 l
2294.6 3204.28 l
2312.09 3204.28 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2508.81 3248.28 m
2491.32 3248.28 l
2491.32 3204.28 l
2500.07 3239.25 l
2508.81 3204.28 l
h
eoclip
n
n
2500.07 3156.48 m
2500.07 3243.91 l
0 setgray
eofill
2.18579 w
n
2500.07 3156.48 m
2500.07 3243.91 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2508.81 3204.28 m
2500.07 3239.25 l
2491.32 3204.28 l
2508.81 3204.28 l
0 setgray
eofill
2.18579 w
n
2508.81 3204.28 m
2500.07 3239.25 l
2491.32 3204.28 l
2508.81 3204.28 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2683.68 3248.28 m
2666.19 3248.28 l
2666.19 3204.28 l
2674.93 3239.25 l
2683.68 3204.28 l
h
eoclip
n
n
2674.93 3156.48 m
2674.93 3243.91 l
0 setgray
eofill
2.18579 w
n
2674.93 3156.48 m
2674.93 3243.91 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2683.68 3204.28 m
2674.93 3239.25 l
2666.19 3204.28 l
2683.68 3204.28 l
0 setgray
eofill
2.18579 w
n
2683.68 3204.28 m
2674.93 3239.25 l
2666.19 3204.28 l
2683.68 3204.28 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2858.54 3248.28 m
2841.05 3248.28 l
2841.05 3204.28 l
2849.8 3239.25 l
2858.54 3204.28 l
h
eoclip
n
n
2849.8 3156.48 m
2849.8 3243.91 l
0 setgray
eofill
2.18579 w
n
2849.8 3156.48 m
2849.8 3243.91 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2858.54 3204.28 m
2849.8 3239.25 l
2841.05 3204.28 l
2858.54 3204.28 l
0 setgray
eofill
2.18579 w
n
2858.54 3204.28 m
2849.8 3239.25 l
2841.05 3204.28 l
2858.54 3204.28 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 3248.28 m
3037.78 3248.28 l
3037.78 3204.28 l
3046.52 3239.25 l
3055.26 3204.28 l
h
eoclip
n
n
3046.52 3156.48 m
3046.52 3243.91 l
0 setgray
eofill
2.18579 w
n
3046.52 3156.48 m
3046.52 3243.91 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 3204.28 m
3046.52 3239.25 l
3037.78 3204.28 l
3055.26 3204.28 l
0 setgray
eofill
2.18579 w
n
3055.26 3204.28 m
3046.52 3239.25 l
3037.78 3204.28 l
3055.26 3204.28 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 3016.59 m
1498.97 3034.07 l
1454.96 3034.07 l
1489.93 3025.33 l
1454.96 3016.59 l
h
eoclip
n
n
1407.16 3025.33 m
1494.6 3025.33 l
0 setgray
eofill
2.18579 w
n
1407.16 3025.33 m
1494.6 3025.33 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 3016.59 m
1489.93 3025.33 l
1454.96 3034.07 l
1454.96 3016.59 l
0 setgray
eofill
2.18579 w
n
1454.96 3016.59 m
1489.93 3025.33 l
1454.96 3034.07 l
1454.96 3016.59 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 3016.59 m
1673.83 3034.07 l
1629.82 3034.07 l
1664.8 3025.33 l
1629.82 3016.59 l
h
eoclip
n
n
1582.03 3025.33 m
1669.46 3025.33 l
0 setgray
eofill
2.18579 w
n
1582.03 3025.33 m
1669.46 3025.33 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 3016.59 m
1664.8 3025.33 l
1629.82 3034.07 l
1629.82 3016.59 l
0 setgray
eofill
2.18579 w
n
1629.82 3016.59 m
1664.8 3025.33 l
1629.82 3034.07 l
1629.82 3016.59 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1848.7 2994.73 m
1848.7 3012.22 l
1804.69 3012.22 l
1839.66 3003.47 l
1804.69 2994.73 l
h
eoclip
n
n
1756.89 3003.47 m
1844.33 3003.47 l
0 setgray
eofill
2.18579 w
n
1756.89 3003.47 m
1844.33 3003.47 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1804.69 2994.73 m
1839.66 3003.47 l
1804.69 3012.22 l
1804.69 2994.73 l
0 setgray
eofill
2.18579 w
n
1804.69 2994.73 m
1839.66 3003.47 l
1804.69 3012.22 l
1804.69 2994.73 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2137.22 3073.42 m
2119.74 3073.42 l
2119.74 3029.41 l
2128.48 3064.38 l
2137.22 3029.41 l
h
eoclip
n
n
2128.48 2981.61 m
2128.48 3069.05 l
0 setgray
eofill
2.18579 w
n
2128.48 2981.61 m
2128.48 3069.05 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2137.22 3029.41 m
2128.48 3064.38 l
2119.74 3029.41 l
2137.22 3029.41 l
0 setgray
eofill
2.18579 w
n
2137.22 3029.41 m
2128.48 3064.38 l
2119.74 3029.41 l
2137.22 3029.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2333.95 3073.42 m
2316.46 3073.42 l
2316.46 3029.41 l
2325.2 3064.38 l
2333.95 3029.41 l
h
eoclip
n
n
2325.2 2981.61 m
2325.2 3069.05 l
0 setgray
eofill
2.18579 w
n
2325.2 2981.61 m
2325.2 3069.05 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2333.95 3029.41 m
2325.2 3064.38 l
2316.46 3029.41 l
2333.95 3029.41 l
0 setgray
eofill
2.18579 w
n
2333.95 3029.41 m
2325.2 3064.38 l
2316.46 3029.41 l
2333.95 3029.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2508.81 3073.42 m
2491.32 3073.42 l
2491.32 3029.41 l
2500.07 3064.38 l
2508.81 3029.41 l
h
eoclip
n
n
2500.07 2981.61 m
2500.07 3069.05 l
0 setgray
eofill
2.18579 w
n
2500.07 2981.61 m
2500.07 3069.05 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2508.81 3029.41 m
2500.07 3064.38 l
2491.32 3029.41 l
2508.81 3029.41 l
0 setgray
eofill
2.18579 w
n
2508.81 3029.41 m
2500.07 3064.38 l
2491.32 3029.41 l
2508.81 3029.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2683.68 3073.42 m
2666.19 3073.42 l
2666.19 3029.41 l
2674.93 3064.38 l
2683.68 3029.41 l
h
eoclip
n
n
2674.93 2981.61 m
2674.93 3069.05 l
0 setgray
eofill
2.18579 w
n
2674.93 2981.61 m
2674.93 3069.05 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2683.68 3029.41 m
2674.93 3064.38 l
2666.19 3029.41 l
2683.68 3029.41 l
0 setgray
eofill
2.18579 w
n
2683.68 3029.41 m
2674.93 3064.38 l
2666.19 3029.41 l
2683.68 3029.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2858.54 3073.42 m
2841.05 3073.42 l
2841.05 3029.41 l
2849.8 3064.38 l
2858.54 3029.41 l
h
eoclip
n
n
2849.8 2981.61 m
2849.8 3069.05 l
0 setgray
eofill
2.18579 w
n
2849.8 2981.61 m
2849.8 3069.05 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2858.54 3029.41 m
2849.8 3064.38 l
2841.05 3029.41 l
2858.54 3029.41 l
0 setgray
eofill
2.18579 w
n
2858.54 3029.41 m
2849.8 3064.38 l
2841.05 3029.41 l
2858.54 3029.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 3073.42 m
3037.78 3073.42 l
3037.78 3029.41 l
3046.52 3064.38 l
3055.26 3029.41 l
h
eoclip
n
n
3046.52 2981.61 m
3046.52 3069.05 l
0 setgray
eofill
2.18579 w
n
3046.52 2981.61 m
3046.52 3069.05 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 3029.41 m
3046.52 3064.38 l
3037.78 3029.41 l
3055.26 3029.41 l
0 setgray
eofill
2.18579 w
n
3055.26 3029.41 m
3046.52 3064.38 l
3037.78 3029.41 l
3055.26 3029.41 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 2841.72 m
1498.97 2859.21 l
1454.96 2859.21 l
1489.93 2850.47 l
1454.96 2841.72 l
h
eoclip
n
n
1407.16 2850.47 m
1494.6 2850.47 l
0 setgray
eofill
2.18579 w
n
1407.16 2850.47 m
1494.6 2850.47 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 2841.72 m
1489.93 2850.47 l
1454.96 2859.21 l
1454.96 2841.72 l
0 setgray
eofill
2.18579 w
n
1454.96 2841.72 m
1489.93 2850.47 l
1454.96 2859.21 l
1454.96 2841.72 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1673.83 2819.86 m
1673.83 2837.35 l
1629.82 2837.35 l
1664.8 2828.61 l
1629.82 2819.86 l
h
eoclip
n
n
1582.03 2828.61 m
1669.46 2828.61 l
0 setgray
eofill
2.18579 w
n
1582.03 2828.61 m
1669.46 2828.61 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1629.82 2819.86 m
1664.8 2828.61 l
1629.82 2837.35 l
1629.82 2819.86 l
0 setgray
eofill
2.18579 w
n
1629.82 2819.86 m
1664.8 2828.61 l
1629.82 2837.35 l
1629.82 2819.86 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1962.36 2898.55 m
1944.87 2898.55 l
1944.87 2854.55 l
1953.62 2889.52 l
1962.36 2854.55 l
h
eoclip
n
n
1953.62 2806.75 m
1953.62 2894.18 l
0 setgray
eofill
2.18579 w
n
1953.62 2806.75 m
1953.62 2894.18 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1962.36 2854.55 m
1953.62 2889.52 l
1944.87 2854.55 l
1962.36 2854.55 l
0 setgray
eofill
2.18579 w
n
1962.36 2854.55 m
1953.62 2889.52 l
1944.87 2854.55 l
1962.36 2854.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2159.08 2898.55 m
2141.6 2898.55 l
2141.6 2854.55 l
2150.34 2889.52 l
2159.08 2854.55 l
h
eoclip
n
n
2150.34 2806.75 m
2150.34 2894.18 l
0 setgray
eofill
2.18579 w
n
2150.34 2806.75 m
2150.34 2894.18 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2159.08 2854.55 m
2150.34 2889.52 l
2141.6 2854.55 l
2159.08 2854.55 l
0 setgray
eofill
2.18579 w
n
2159.08 2854.55 m
2150.34 2889.52 l
2141.6 2854.55 l
2159.08 2854.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2333.95 2898.55 m
2316.46 2898.55 l
2316.46 2854.55 l
2325.2 2889.52 l
2333.95 2854.55 l
h
eoclip
n
n
2325.2 2806.75 m
2325.2 2894.18 l
0 setgray
eofill
2.18579 w
n
2325.2 2806.75 m
2325.2 2894.18 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2333.95 2854.55 m
2325.2 2889.52 l
2316.46 2854.55 l
2333.95 2854.55 l
0 setgray
eofill
2.18579 w
n
2333.95 2854.55 m
2325.2 2889.52 l
2316.46 2854.55 l
2333.95 2854.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2508.81 2898.55 m
2491.32 2898.55 l
2491.32 2854.55 l
2500.07 2889.52 l
2508.81 2854.55 l
h
eoclip
n
n
2500.07 2806.75 m
2500.07 2894.18 l
0 setgray
eofill
2.18579 w
n
2500.07 2806.75 m
2500.07 2894.18 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2508.81 2854.55 m
2500.07 2889.52 l
2491.32 2854.55 l
2508.81 2854.55 l
0 setgray
eofill
2.18579 w
n
2508.81 2854.55 m
2500.07 2889.52 l
2491.32 2854.55 l
2508.81 2854.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2683.68 2898.55 m
2666.19 2898.55 l
2666.19 2854.55 l
2674.93 2889.52 l
2683.68 2854.55 l
h
eoclip
n
n
2674.93 2806.75 m
2674.93 2894.18 l
0 setgray
eofill
2.18579 w
n
2674.93 2806.75 m
2674.93 2894.18 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2683.68 2854.55 m
2674.93 2889.52 l
2666.19 2854.55 l
2683.68 2854.55 l
0 setgray
eofill
2.18579 w
n
2683.68 2854.55 m
2674.93 2889.52 l
2666.19 2854.55 l
2683.68 2854.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2858.54 2898.55 m
2841.05 2898.55 l
2841.05 2854.55 l
2849.8 2889.52 l
2858.54 2854.55 l
h
eoclip
n
n
2849.8 2806.75 m
2849.8 2894.18 l
0 setgray
eofill
2.18579 w
n
2849.8 2806.75 m
2849.8 2894.18 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2858.54 2854.55 m
2849.8 2889.52 l
2841.05 2854.55 l
2858.54 2854.55 l
0 setgray
eofill
2.18579 w
n
2858.54 2854.55 m
2849.8 2889.52 l
2841.05 2854.55 l
2858.54 2854.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 2898.55 m
3037.78 2898.55 l
3037.78 2854.55 l
3046.52 2889.52 l
3055.26 2854.55 l
h
eoclip
n
n
3046.52 2806.75 m
3046.52 2894.18 l
0 setgray
eofill
2.18579 w
n
3046.52 2806.75 m
3046.52 2894.18 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 2854.55 m
3046.52 2889.52 l
3037.78 2854.55 l
3055.26 2854.55 l
0 setgray
eofill
2.18579 w
n
3055.26 2854.55 m
3046.52 2889.52 l
3037.78 2854.55 l
3055.26 2854.55 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1498.97 2645 m
1498.97 2662.49 l
1454.96 2662.49 l
1489.93 2653.74 l
1454.96 2645 l
h
eoclip
n
n
1407.16 2653.74 m
1494.6 2653.74 l
0 setgray
eofill
2.18579 w
n
1407.16 2653.74 m
1494.6 2653.74 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1454.96 2645 m
1489.93 2653.74 l
1454.96 2662.49 l
1454.96 2645 l
0 setgray
eofill
2.18579 w
n
1454.96 2645 m
1489.93 2653.74 l
1454.96 2662.49 l
1454.96 2645 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1787.49 2723.69 m
1770.01 2723.69 l
1770.01 2679.68 l
1778.75 2714.65 l
1787.49 2679.68 l
h
eoclip
n
n
1778.75 2631.89 m
1778.75 2719.32 l
0 setgray
eofill
2.18579 w
n
1778.75 2631.89 m
1778.75 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1787.49 2679.68 m
1778.75 2714.65 l
1770.01 2679.68 l
1787.49 2679.68 l
0 setgray
eofill
2.18579 w
n
1787.49 2679.68 m
1778.75 2714.65 l
1770.01 2679.68 l
1787.49 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1984.22 2723.69 m
1966.73 2723.69 l
1966.73 2679.68 l
1975.47 2714.65 l
1984.22 2679.68 l
h
eoclip
n
n
1975.47 2631.89 m
1975.47 2719.32 l
0 setgray
eofill
2.18579 w
n
1975.47 2631.89 m
1975.47 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1984.22 2679.68 m
1975.47 2714.65 l
1966.73 2679.68 l
1984.22 2679.68 l
0 setgray
eofill
2.18579 w
n
1984.22 2679.68 m
1975.47 2714.65 l
1966.73 2679.68 l
1984.22 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2159.08 2723.69 m
2141.6 2723.69 l
2141.6 2679.68 l
2150.34 2714.65 l
2159.08 2679.68 l
h
eoclip
n
n
2150.34 2631.89 m
2150.34 2719.32 l
0 setgray
eofill
2.18579 w
n
2150.34 2631.89 m
2150.34 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2159.08 2679.68 m
2150.34 2714.65 l
2141.6 2679.68 l
2159.08 2679.68 l
0 setgray
eofill
2.18579 w
n
2159.08 2679.68 m
2150.34 2714.65 l
2141.6 2679.68 l
2159.08 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2333.95 2723.69 m
2316.46 2723.69 l
2316.46 2679.68 l
2325.2 2714.65 l
2333.95 2679.68 l
h
eoclip
n
n
2325.2 2631.89 m
2325.2 2719.32 l
0 setgray
eofill
2.18579 w
n
2325.2 2631.89 m
2325.2 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2333.95 2679.68 m
2325.2 2714.65 l
2316.46 2679.68 l
2333.95 2679.68 l
0 setgray
eofill
2.18579 w
n
2333.95 2679.68 m
2325.2 2714.65 l
2316.46 2679.68 l
2333.95 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2333.95 2548.82 m
2316.46 2548.82 l
2316.46 2504.82 l
2325.2 2539.79 l
2333.95 2504.82 l
h
eoclip
n
n
2325.2 2457.02 m
2325.2 2544.45 l
0 setgray
eofill
2.18579 w
n
2325.2 2457.02 m
2325.2 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2333.95 2504.82 m
2325.2 2539.79 l
2316.46 2504.82 l
2333.95 2504.82 l
0 setgray
eofill
2.18579 w
n
2333.95 2504.82 m
2325.2 2539.79 l
2316.46 2504.82 l
2333.95 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2159.08 2548.82 m
2141.6 2548.82 l
2141.6 2504.82 l
2150.34 2539.79 l
2159.08 2504.82 l
h
eoclip
n
n
2150.34 2457.02 m
2150.34 2544.45 l
0 setgray
eofill
2.18579 w
n
2150.34 2457.02 m
2150.34 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2159.08 2504.82 m
2150.34 2539.79 l
2141.6 2504.82 l
2159.08 2504.82 l
0 setgray
eofill
2.18579 w
n
2159.08 2504.82 m
2150.34 2539.79 l
2141.6 2504.82 l
2159.08 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1984.22 2548.82 m
1966.73 2548.82 l
1966.73 2504.82 l
1975.47 2539.79 l
1984.22 2504.82 l
h
eoclip
n
n
1975.47 2457.02 m
1975.47 2544.45 l
0 setgray
eofill
2.18579 w
n
1975.47 2457.02 m
1975.47 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1984.22 2504.82 m
1975.47 2539.79 l
1966.73 2504.82 l
1984.22 2504.82 l
0 setgray
eofill
2.18579 w
n
1984.22 2504.82 m
1975.47 2539.79 l
1966.73 2504.82 l
1984.22 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1809.35 2548.82 m
1791.87 2548.82 l
1791.87 2504.82 l
1800.61 2539.79 l
1809.35 2504.82 l
h
eoclip
n
n
1800.61 2457.02 m
1800.61 2544.45 l
0 setgray
eofill
2.18579 w
n
1800.61 2457.02 m
1800.61 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1809.35 2504.82 m
1800.61 2539.79 l
1791.87 2504.82 l
1809.35 2504.82 l
0 setgray
eofill
2.18579 w
n
1809.35 2504.82 m
1800.61 2539.79 l
1791.87 2504.82 l
1809.35 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2508.81 2548.82 m
2491.32 2548.82 l
2491.32 2504.82 l
2500.07 2539.79 l
2508.81 2504.82 l
h
eoclip
n
n
2500.07 2457.02 m
2500.07 2544.45 l
0 setgray
eofill
2.18579 w
n
2500.07 2457.02 m
2500.07 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2508.81 2504.82 m
2500.07 2539.79 l
2491.32 2504.82 l
2508.81 2504.82 l
0 setgray
eofill
2.18579 w
n
2508.81 2504.82 m
2500.07 2539.79 l
2491.32 2504.82 l
2508.81 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2683.68 2548.82 m
2666.19 2548.82 l
2666.19 2504.82 l
2674.93 2539.79 l
2683.68 2504.82 l
h
eoclip
n
n
2674.93 2457.02 m
2674.93 2544.45 l
0 setgray
eofill
2.18579 w
n
2674.93 2457.02 m
2674.93 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2683.68 2504.82 m
2674.93 2539.79 l
2666.19 2504.82 l
2683.68 2504.82 l
0 setgray
eofill
2.18579 w
n
2683.68 2504.82 m
2674.93 2539.79 l
2666.19 2504.82 l
2683.68 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2858.54 2548.82 m
2841.05 2548.82 l
2841.05 2504.82 l
2849.8 2539.79 l
2858.54 2504.82 l
h
eoclip
n
n
2849.8 2457.02 m
2849.8 2544.45 l
0 setgray
eofill
2.18579 w
n
2849.8 2457.02 m
2849.8 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2858.54 2504.82 m
2849.8 2539.79 l
2841.05 2504.82 l
2858.54 2504.82 l
0 setgray
eofill
2.18579 w
n
2858.54 2504.82 m
2849.8 2539.79 l
2841.05 2504.82 l
2858.54 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2858.54 2723.69 m
2841.05 2723.69 l
2841.05 2679.68 l
2849.8 2714.65 l
2858.54 2679.68 l
h
eoclip
n
n
2849.8 2631.89 m
2849.8 2719.32 l
0 setgray
eofill
2.18579 w
n
2849.8 2631.89 m
2849.8 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2858.54 2679.68 m
2849.8 2714.65 l
2841.05 2679.68 l
2858.54 2679.68 l
0 setgray
eofill
2.18579 w
n
2858.54 2679.68 m
2849.8 2714.65 l
2841.05 2679.68 l
2858.54 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2683.68 2723.69 m
2666.19 2723.69 l
2666.19 2679.68 l
2674.93 2714.65 l
2683.68 2679.68 l
h
eoclip
n
n
2674.93 2631.89 m
2674.93 2719.32 l
0 setgray
eofill
2.18579 w
n
2674.93 2631.89 m
2674.93 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2683.68 2679.68 m
2674.93 2714.65 l
2666.19 2679.68 l
2683.68 2679.68 l
0 setgray
eofill
2.18579 w
n
2683.68 2679.68 m
2674.93 2714.65 l
2666.19 2679.68 l
2683.68 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
2508.81 2723.69 m
2491.32 2723.69 l
2491.32 2679.68 l
2500.07 2714.65 l
2508.81 2679.68 l
h
eoclip
n
n
2500.07 2631.89 m
2500.07 2719.32 l
0 setgray
eofill
2.18579 w
n
2500.07 2631.89 m
2500.07 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
2508.81 2679.68 m
2500.07 2714.65 l
2491.32 2679.68 l
2508.81 2679.68 l
0 setgray
eofill
2.18579 w
n
2508.81 2679.68 m
2500.07 2714.65 l
2491.32 2679.68 l
2508.81 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 2723.69 m
3037.78 2723.69 l
3037.78 2679.68 l
3046.52 2714.65 l
3055.26 2679.68 l
h
eoclip
n
n
3046.52 2631.89 m
3046.52 2719.32 l
0 setgray
eofill
2.18579 w
n
3046.52 2631.89 m
3046.52 2719.32 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 2679.68 m
3046.52 2714.65 l
3037.78 2679.68 l
3055.26 2679.68 l
0 setgray
eofill
2.18579 w
n
3055.26 2679.68 m
3046.52 2714.65 l
3037.78 2679.68 l
3055.26 2679.68 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3055.26 2548.82 m
3037.78 2548.82 l
3037.78 2504.82 l
3046.52 2539.79 l
3055.26 2504.82 l
h
eoclip
n
n
3046.52 2457.02 m
3046.52 2544.45 l
0 setgray
eofill
2.18579 w
n
3046.52 2457.02 m
3046.52 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3055.26 2504.82 m
3046.52 2539.79 l
3037.78 2504.82 l
3055.26 2504.82 l
0 setgray
eofill
2.18579 w
n
3055.26 2504.82 m
3046.52 2539.79 l
3037.78 2504.82 l
3055.26 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
1612.63 2548.82 m
1595.14 2548.82 l
1595.14 2504.82 l
1603.89 2539.79 l
1612.63 2504.82 l
h
eoclip
n
n
1603.89 2457.02 m
1603.89 2544.45 l
0 setgray
eofill
2.18579 w
n
1603.89 2457.02 m
1603.89 2544.45 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
1612.63 2504.82 m
1603.89 2539.79 l
1595.14 2504.82 l
1612.63 2504.82 l
0 setgray
eofill
2.18579 w
n
1612.63 2504.82 m
1603.89 2539.79 l
1595.14 2504.82 l
1612.63 2504.82 l
h
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
3033.41 3947.74 m
3015.92 3947.74 l
3015.92 3903.73 l
3024.66 3938.71 l
3033.41 3903.73 l
h
eoclip
n
n
3024.66 3855.94 m
3024.66 3943.37 l
0 setgray
eofill
2.18579 w
n
3024.66 3855.94 m
3024.66 3943.37 l
S
Q
q
n
1352.4 4175.3 m
1352.4 2400 l
3123.4 2400 l
3123.4 4175.3 l
h
W
n
n
3033.41 3903.73 m
3024.66 3938.71 l
3015.92 3903.73 l
3033.41 3903.73 l
0 setgray
eofill
2.18579 w
n
3033.41 3903.73 m
3024.66 3938.71 l
3015.92 3903.73 l
3033.41 3903.73 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4002.64 3962.31 m
3990.4 3974.55 l
3959.21 3943.66 l
3990.4 3962.02 l
3971.74 3931.13 l
h
eoclip
n
2.18579 w
n
3928.03 3899.65 m
3993.6 3965.23 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
3971.74 3931.13 m
3990.4 3962.02 l
3959.21 3943.66 l
3971.74 3931.13 l
0 setgray
eofill
2.18579 w
n
3971.74 3931.13 m
3990.4 3962.02 l
3959.21 3943.66 l
3971.74 3931.13 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
3990.4 3825.05 m
4002.64 3837.29 l
3971.74 3868.47 l
3990.4 3837.29 l
3959.21 3855.94 l
h
eoclip
n
2.18579 w
n
3928.03 3899.65 m
3993.6 3834.08 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
3959.21 3855.94 m
3990.4 3837.29 l
3971.74 3868.47 l
3959.21 3855.94 l
0 setgray
eofill
2.18579 w
n
3959.21 3855.94 m
3990.4 3837.29 l
3971.74 3868.47 l
3959.21 3855.94 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4177.5 3962.31 m
4165.26 3974.55 l
4134.08 3943.66 l
4165.26 3962.02 l
4146.61 3931.13 l
h
eoclip
n
2.18579 w
n
4102.89 3899.65 m
4168.47 3965.23 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4146.61 3931.13 m
4165.26 3962.02 l
4134.08 3943.66 l
4146.61 3931.13 l
0 setgray
eofill
2.18579 w
n
4146.61 3931.13 m
4165.26 3962.02 l
4134.08 3943.66 l
4146.61 3931.13 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4165.26 3825.05 m
4177.5 3837.29 l
4146.61 3868.47 l
4165.26 3837.29 l
4134.08 3855.94 l
h
eoclip
n
2.18579 w
n
4102.89 3899.65 m
4168.47 3834.08 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4134.08 3855.94 m
4165.26 3837.29 l
4146.61 3868.47 l
4134.08 3855.94 l
0 setgray
eofill
2.18579 w
n
4134.08 3855.94 m
4165.26 3837.29 l
4146.61 3868.47 l
4134.08 3855.94 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4352.37 3962.31 m
4340.13 3974.55 l
4308.94 3943.66 l
4340.13 3962.02 l
4321.47 3931.13 l
h
eoclip
n
2.18579 w
n
4277.76 3899.65 m
4343.33 3965.23 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4321.47 3931.13 m
4340.13 3962.02 l
4308.94 3943.66 l
4321.47 3931.13 l
0 setgray
eofill
2.18579 w
n
4321.47 3931.13 m
4340.13 3962.02 l
4308.94 3943.66 l
4321.47 3931.13 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4340.13 3825.05 m
4352.37 3837.29 l
4321.47 3868.47 l
4340.13 3837.29 l
4308.94 3855.94 l
h
eoclip
n
2.18579 w
n
4277.76 3899.65 m
4343.33 3834.08 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4308.94 3855.94 m
4340.13 3837.29 l
4321.47 3868.47 l
4308.94 3855.94 l
0 setgray
eofill
2.18579 w
n
4308.94 3855.94 m
4340.13 3837.29 l
4321.47 3868.47 l
4308.94 3855.94 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4527.23 3962.31 m
4514.99 3974.55 l
4483.81 3943.66 l
4514.99 3962.02 l
4496.34 3931.13 l
h
eoclip
n
2.18579 w
n
4452.62 3899.65 m
4518.2 3965.23 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4496.34 3931.13 m
4514.99 3962.02 l
4483.81 3943.66 l
4496.34 3931.13 l
0 setgray
eofill
2.18579 w
n
4496.34 3931.13 m
4514.99 3962.02 l
4483.81 3943.66 l
4496.34 3931.13 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4514.99 3825.05 m
4527.23 3837.29 l
4496.34 3868.47 l
4514.99 3837.29 l
4483.81 3855.94 l
h
eoclip
n
2.18579 w
n
4452.62 3899.65 m
4518.2 3834.08 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4483.81 3855.94 m
4514.99 3837.29 l
4496.34 3868.47 l
4483.81 3855.94 l
0 setgray
eofill
2.18579 w
n
4483.81 3855.94 m
4514.99 3837.29 l
4496.34 3868.47 l
4483.81 3855.94 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4702.1 3962.31 m
4689.86 3974.55 l
4658.67 3943.66 l
4689.86 3962.02 l
4671.2 3931.13 l
h
eoclip
n
2.18579 w
n
4627.49 3899.65 m
4693.06 3965.23 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4671.2 3931.13 m
4689.86 3962.02 l
4658.67 3943.66 l
4671.2 3931.13 l
0 setgray
eofill
2.18579 w
n
4671.2 3931.13 m
4689.86 3962.02 l
4658.67 3943.66 l
4671.2 3931.13 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4689.86 3825.05 m
4702.1 3837.29 l
4671.2 3868.47 l
4689.86 3837.29 l
4658.67 3855.94 l
h
eoclip
n
2.18579 w
n
4627.49 3899.65 m
4693.06 3834.08 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4658.67 3855.94 m
4689.86 3837.29 l
4671.2 3868.47 l
4658.67 3855.94 l
0 setgray
eofill
2.18579 w
n
4658.67 3855.94 m
4689.86 3837.29 l
4671.2 3868.47 l
4658.67 3855.94 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4876.96 3962.31 m
4864.72 3974.55 l
4833.54 3943.66 l
4864.72 3962.02 l
4846.07 3931.13 l
h
eoclip
n
2.18579 w
n
4802.35 3899.65 m
4867.93 3965.23 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4846.07 3931.13 m
4864.72 3962.02 l
4833.54 3943.66 l
4846.07 3931.13 l
0 setgray
eofill
2.18579 w
n
4846.07 3931.13 m
4864.72 3962.02 l
4833.54 3943.66 l
4846.07 3931.13 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4864.72 3825.05 m
4876.96 3837.29 l
4846.07 3868.47 l
4864.72 3837.29 l
4833.54 3855.94 l
h
eoclip
n
2.18579 w
n
4802.35 3899.65 m
4867.93 3834.08 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
4833.54 3855.94 m
4864.72 3837.29 l
4846.07 3868.47 l
4833.54 3855.94 l
0 setgray
eofill
2.18579 w
n
4833.54 3855.94 m
4864.72 3837.29 l
4846.07 3868.47 l
4833.54 3855.94 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
5051.83 3940.46 m
5039.58 3952.7 l
5008.4 3921.8 l
5039.58 3940.16 l
5020.93 3909.27 l
h
eoclip
n
2.18579 w
n
4977.22 3877.8 m
5042.79 3943.37 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
n
n
5020.93 3909.27 m
5039.58 3940.16 l
5008.4 3921.8 l
5020.93 3909.27 l
0 setgray
eofill
2.18579 w
n
5020.93 3909.27 m
5039.58 3940.16 l
5008.4 3921.8 l
5020.93 3909.27 l
h
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
4002.64 3787.45 m
3990.4 3799.69 l
3959.21 3768.8 l
3990.4 3787.16 l
3971.74 3756.27 l
h
eoclip
n
2.18579 w
n
3928.03 3724.79 m
3993.6 3790.36 l
0 setgray
S
Q
q
n
3698.4 4175.3 m
3698.4 2400 l
5469.4 2400 l
5469.4 4175.3 l
h
W
