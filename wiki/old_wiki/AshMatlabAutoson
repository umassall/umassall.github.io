Date: Fri, 3 Feb 2006 16:11:20 -0500
Mime-Version: 1.0 (Produced by PhpWiki 1.3.11)
Content-Type: multipart/mixed;
  boundary="=_multipart_boundary_27"

--=_multipart_boundary_27
Content-Type: application/x-phpwiki;
  pagename=AshMatlabAutoson;
  flags="";
  author=ash;
  version=5;
  lastmodified=1139001080;
  author_id=ash;
  markup=2;
  hits=23;
  charset=utf-8
Content-Transfer-Encoding: binary

I (Ashvin) only know Matlab. This is what I do to run his matlab script 30 times across a group of machines. The output is sent to my home directory on entropy. This requires three scripts: 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type >test my simulation runs. 2) run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. 3) run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:

*run_command* this executable shell script is written in the c shell (that's the /bin/csh line). It sets an environment variable (TASK_NUM) to some number. Then, it calls matlab (the -nojvm makes matlab run in a shell, as opposed to bringing up the graphical interface) and runs the matlab script run_exp.m
<pre>
#!/bin/csh
setenv TASK_NUM $1
matlab -nojvm  < run_exp.m
</pre>
Oh, to make run_command exectuable, type >chmod a+x run_command


*run_exp.m* this matlab script  takes the environment variable TASK_NUM, which  is set to some number, and sets the matlab variable damnit, which is a string, to that number. Then, it turns the string damnit into an actual number called me. Then, it does some stuff to set the random seed so that different runs of the script start off with different random initial conditions. Then, it calls test.m. After test has finished running, it saves the variables I care about into a file called "nrn8.mat" if the TASK_NUM was set to 8. So, the results of each of the 30 runs will be saved to a file with the number of that run (nrn1.mat, nrn2.mat, nrn3.mat, ..., nrn30.mat)
<verbatim>
damnit = getenv('TASK_NUM');
me = str2num(damnit);
if(isempty(me))
  disp('Parameter error');
  quit;
end;
rand('state', me);
rand;
rand;
test
fname = ['nrn',damnit];
save(fname, 'mean_Ex','sd_Ex','K','as','count','maxda','maxdK','parms','cosfit_all')

quit
</verbatim>

now that you understand the three scripts, here's how to run test.m 30 times with different initial random seeds using autoson. In a shell, type
<verbatim>
>auadd -hosts @ANW -cyc 1 -lim 30 -log nrn_echo.#.out run_command #

auadd means add this to the autoson cue
-hosts @ANW means use the machines defined by the
 group called ANW (type >aulook -g to see what groups there are)
-cyc 1 -lim 30 means run it 30 times
-log nrn_echo.#.out means record the immediate output into
 a log file, named with the indices 1 through 30 (in the place of #)
-run_command # means run the executable run_command,
 with the argument #, which will be 1, 2, 3, ..., or 30 .
</verbatim>

--=_multipart_boundary_27
Content-Type: application/x-phpwiki;
  pagename=AshMatlabAutoson;
  flags="";
  author=ash;
  version=4;
  lastmodified=1139000979;
  author_id=ash;
  markup=2;
  hits=23;
  charset=utf-8
Content-Transfer-Encoding: binary

I (Ashvin) only know Matlab. This is what I do to run his matlab script 30 times across a group of machines. The output is sent to my home directory on entropy. This requires three scripts: 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type >test my simulation runs. 2) run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. 3) run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:

*run_command* this executable shell script is written in the c shell (that's the /bin/csh line). It sets an environment variable (TASK_NUM) to some number. Then, it calls matlab (the -nojvm makes matlab run in a shell, as opposed to bringing up the graphical interface) and runs the matlab script run_exp.m
<pre>
#!/bin/csh
setenv TASK_NUM $1
matlab -nojvm  < run_exp.m
</pre>
Oh, to make run_command exectuable, type >chmod a+x run_command


*run_exp.m* this matlab script  takes the environment variable TASK_NUM, which  is set to some number, and sets the matlab variable damnit, which is a string, to that number. Then, it turns the string damnit into an actual number called me. Then, it does some stuff to set the random seed so that different runs of the script start off with different random initial conditions. Then, it calls test.m. After test has finished running, it saves the variables I care about into a file called "nrn8.mat" if the TASK_NUM was set to 8. So, the results of each of the 30 runs will be saved to a file with the number of that run (nrn1.mat, nrn2.mat, nrn3.mat, ..., nrn30.mat)
<verbatim>
damnit = getenv('TASK_NUM');
me = str2num(damnit);
if(isempty(me))
  disp('Parameter error');
  quit;
end;
rand('state', me);
rand;
rand;
test
fname = ['nrn',damnit];
save(fname, 'mean_Ex','sd_Ex','K','as','count','maxda','maxdK','parms','cosfit_all')

quit
</verbatim>

now that you understand the three scripts, here's how to run test.m 30 times with different initial random seeds using autoson. In a shell, type
<pre>
>auadd -hosts @ANW -cyc 1 -lim 30 -log nrn_echo.#.out run_command #

auadd means add this to the autoson cue
-hosts @ANW means use the machines defined by the group called ANW
-cyc 1 -lim 30 means run it 30 times
-log nrn_echo.#.out means record the immediate output into a log file, named with the indices 1 through 30 (in the place of #
-run_command # means run the executable run_command, with the argument #, which will be 1, 2, 3, ..., or 30 .
</pre>

--=_multipart_boundary_27
Content-Type: application/x-phpwiki;
  pagename=AshMatlabAutoson;
  flags="";
  author=ash;
  version=3;
  lastmodified=1139000832;
  author_id=ash;
  markup=2;
  hits=23;
  charset=utf-8
Content-Transfer-Encoding: binary

I (Ashvin) only know Matlab. This is what I do to run his matlab script 30 times across a group of machines. The output is sent to my home directory on entropy. This requires three scripts: 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type >test my simulation runs. 2) run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. 3) run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:

*run_command* this executable shell script is written in the c shell (that's the /bin/csh line). It sets an environment variable (TASK_NUM) to some number. Then, it calls matlab (the -nojvm makes matlab run in a shell, as opposed to bringing up the graphical interface) and runs the matlab script run_exp.m
<pre>
#!/bin/csh
setenv TASK_NUM $1
matlab -nojvm  < run_exp.m
</pre>
Oh, to make run_command exectuable, type >chmod a+x run_command


*run_exp.m* this matlab script  takes the environment variable TASK_NUM, which  is set to some number, and sets the matlab variable damnit, which is a string, to that number. Then, it turns the string damnit into an actual number called me. Then, it does some stuff to set the random seed so that different runs of the script start off with different random initial conditions. Then, it calls test.m. After test has finished running, it saves the variables I care about into a file called "nrn8.mat" if the TASK_NUM was set to 8. So, the results of each of the 30 runs will be saved to a file with the number of that run (nrn1.mat, nrn2.mat, nrn3.mat, ..., nrn30.mat)
<pre>
damnit = getenv('TASK_NUM');
me = str2num(damnit);
if(isempty(me))
  disp('Parameter error');
  quit;
end;
rand('state', me);
rand;
rand;
test
fname = ['nrn',damnit];
save(fname, 'mean_Ex','sd_Ex','K','as','count','maxda','maxdK','parms','cosfit_all')

quit
</pre>

now that you understand the three scripts, here's how to run test.m 30 times with different initial random seeds using autoson. In a shell, type
<pre>
>auadd -hosts @ANW -cyc 1 -lim 30 -log nrn_echo.#.out run_command #

auadd means add this to the autoson cue
-hosts @ANW means use the machines defined by the group called ANW
-cyc 1 -lim 30 means run it 30 times
-log nrn_echo.#.out means record the immediate output into a log file, named with the indices 1 through 30 (in the place of #
-run_command # means run the executable run_command, with the argument #, which will be 1, 2, 3, ..., or 30 .
</pre>

--=_multipart_boundary_27
Content-Type: application/x-phpwiki;
  pagename=AshMatlabAutoson;
  flags="";
  author=ash;
  version=2;
  lastmodified=1138999939;
  author_id=ash;
  markup=2;
  hits=23;
  charset=utf-8
Content-Transfer-Encoding: binary

I (Ashvin) only know Matlab. This is what I do to run his matlab script 30 times across a group of machines. The output is sent to my home directory on entropy. This requires three scripts: 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type >test my simulation runs. 2) run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. 3) run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:

*run_command* this executable shell script is written in the c shell (that's the /bin/csh line). It sets an environment variable (TASK_NUM) to some number. Then, it calls matlab (the -nojvm makes matlab run in a shell, as opposed to bringing up the graphical interface) and runs the matlab script run_exp.m
<pre>
#!/bin/csh
setenv TASK_NUM $1
matlab -nojvm  < run_exp.m
</pre>
Oh, to make run_command exectuable, type >chmod a+x run_command


*run_exp.m* this matlab script  takes the environment variable TASK_NUM, which  is set to some number, and sets the matlab variable, which is a string, to that number. Then, it turns the string damnit into an actual number called me. Then, it does some stuff to set the random seed so that different runs of the script start off with different random initial conditions. Then, it calls test.m. After test has finished running, it saves the variables I care about into a file called "nrn8.mat" if the TASK_NUM was set to 8. So, the results of each of the 30 runs will be saved to a file with the number of that run (nrn1.mat, nrn2.mat, nrn3.mat, ..., nrn30.mat)
<pre>
damnit = getenv('TASK_NUM');
me = str2num(damnit);
if(isempty(me))
  disp('Parameter error');
  quit;
end;
rand('state', me);
rand;
rand;
test
fname = ['nrn',damnit];
save(fname, 'mean_Ex','sd_Ex','K','as','count','maxda','maxdK','parms','cosfit_all')

quit
</pre>

now that you understand the three scripts, here's how to run test.m 30 times with different initial random seeds using autoson. In a shell, type
<pre>
>auadd -hosts @ANW -cyc 1 -lim 30 -log nrn_echo.#.out run_command #

auadd means add this to the autoson cue
-hosts @ANW means use the machines defined by the group called ANW
-cyc 1 -lim 30 means run it 30 times
-log nrn_echo.#.out means record the immediate output into a log file, named with the indices 1 through 30 (in the place of #
-run_command # means run the executable run_command, with the argument #, which will be 1, 2, 3, ..., or 30 .
</pre>

--=_multipart_boundary_27
Content-Type: application/x-phpwiki;
  pagename=AshMatlabAutoson;
  flags="";
  author=ash;
  version=1;
  lastmodified=1138999880;
  author_id=ash;
  markup=2;
  hits=23;
  charset=utf-8
Content-Transfer-Encoding: binary

* I (Ashvin) only know Matlab. This is what I do to run his matlab script 30 times across a group of machines. The output is sent to my home directory on entropy. This requires three scripts: 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type >test my simulation runs. 2) run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. 3) run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:

* *run_command* this executable shell script is written in the c shell (that's the /bin/csh line). It sets an environment variable (TASK_NUM) to some number. Then, it calls matlab (the -nojvm makes matlab run in a shell, as opposed to bringing up the graphical interface) and runs the matlab script run_exp.m
<pre>
#!/bin/csh
setenv TASK_NUM $1
matlab -nojvm  < run_exp.m
</pre>
Oh, to make run_command exectuable, type >chmod a+x run_command


* *run_exp.m* this matlab script  takes the environment variable TASK_NUM, which  is set to some number, and sets the matlab variable, which is a string, to that number. Then, it turns the string damnit into an actual number called me. Then, it does some stuff to set the random seed so that different runs of the script start off with different random initial conditions. Then, it calls test.m. After test has finished running, it saves the variables I care about into a file called "nrn8.mat" if the TASK_NUM was set to 8. So, the results of each of the 30 runs will be saved to a file with the number of that run (nrn1.mat, nrn2.mat, nrn3.mat, ..., nrn30.mat)
<pre>
damnit = getenv('TASK_NUM');
me = str2num(damnit);
if(isempty(me))
  disp('Parameter error');
  quit;
end;
rand('state', me);
rand;
rand;
test
fname = ['nrn',damnit];
save(fname, 'mean_Ex','sd_Ex','K','as','count','maxda','maxdK','parms','cosfit_all')

quit
</pre>

* now that you understand the three scripts, here's how to run test.m 30 times with different initial random seeds using autoson. In a shell, type
<pre>
>auadd -hosts @ANW -cyc 1 -lim 30 -log nrn_echo.#.out run_command #

auadd means add this to the autoson cue
-hosts @ANW means use the machines defined by the group called ANW
-cyc 1 -lim 30 means run it 30 times
-log nrn_echo.#.out means record the immediate output into a log file, named with the indices 1 through 30 (in the place of #
-run_command # means run the executable run_command, with the argument #, which will be 1, 2, 3, ..., or 30 .
</pre>

--=_multipart_boundary_27--
