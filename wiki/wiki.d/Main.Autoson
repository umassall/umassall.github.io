version=pmwiki-2.1.26 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_6; en-us) AppleWebKit/525.27.1 (KHTML, like Gecko) Version/3.2.1 Safari/525.27.1
author=
csum=
ctime=1158617076
host=128.119.241.197
name=Main.Autoson
rev=30
targets=Main.AshMatlabAutoson,Main.SpecificAutoson,Main.AutosonTest,Main.AutosonInfoEveryone,Main.Autouser,Main.AutosonInfoAutouser,Main.DetailedAutoson,Main.Spiny,Main.ListMachines
text=When running lots of experiments it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out.  Autoson automatically runs jobs across machines and what not. Emily Horrell in LPR is the current expert, though you can ask Ashvin or probably many other people as well. However, don't do so until you've skimmed through all this stuff and tried to run it yourself, otherwise Ash will get mad.%0a%0a'''The very very basics''':%0a* You set up a shell script (let's call it "run_command") which runs some simulation you wrote (let's call it "run_exp"). In run_exp (or run_command, maybe), you save the data you want. %0a* You use autoson to execute run_command N times, specifying what machines you want it to run on. Basically, you set it and forget it. %0a* Autoson will run it on each processor of each specified machine, with a nice level of +15, until it has run N times. So, if you want to run your experiment ten times and specifiy the machines limbic and arbor (both dual processor machines), autoson will run four experiments at once, using both processors of limbic and arbor, and put the additional jobs on the machine when the previous jobs have finished. It does this until it as run the experiment ten times. %0a%0a'''Getting Started'''%0a* [[What Ash does to run a Matlab script -> AshMatlabAutoson]] 30 times with autoson.%0a* What Sarah does to run a program (not in Matlab) on a specific machine in the lab is [[here -> SpecificAutoson]].%0a* [[AutosonTest | Here]] is a very simple Autoson test script (matlab) which Ash uses to make sure Autoson is working OK. It's a simple loop which takes a minute or so to run. This way, it's likely that it will get distributed across all machines in the group, but it won't take too long to run. %0a* [[Andy Fagg's autoson write-up -> http://www-all.cs.umass.edu/autoson_local/autoson/index.html]]%0a%0a%0a'''Some more commands and trouble shooting'''%0a* [[More Autoson Commands -> AutosonInfoEveryone]] and things any user can execute%0a* [[Signing in as autouser -> Autouser]]%0a* [[Autoson Commands -> AutosonInfoAutouser]] and things only "autouser" can execute%0a* [[More involved stuff -> DetailedAutoson]], like adding a new computer, dealing with other problems, etc. %0a\\%0a'''Other options''': Note that even though you should use autoson, if you must, there are additional options that I have used: %0a* '''run stuff on entropy''' (the lab's server). it has four processors, so it can handle a couple jobs. I generally only us two processors (three at most if I'm in a bind). Since it's the lab server, I would make sure at least one processor, preferably two,  are free and your jobs don't use too much memory.%0a* '''run stuff on spiny''' (the mac in the common area). you may be able to run it remotely... see the [[Spiny]] page. %0a* run stuff on the kaos net computers in the lab. I have no idea how to easily do this... since they're not on the CS network, you'll have to put your files on them and they may not be able to run all the programs we have access to. %0a* check out the [[ListMachines]] page to see specs on all the machines.
time=1234458052
author:1234458052=
diff:1234458052:1211307207:=17d16%0a%3c * [[Signing in as autouser -> Autouser]]%0a
host:1234458052=128.119.241.197
author:1211307207=
diff:1211307207:1211300962:=5,7c5,6%0a%3c * You use autoson to execute run_command N times, specifying what machines you want it to run on. Basically, you set it and forget it. %0a%3c * Autoson will run it on each processor of each specified machine, with a nice level of +15, until it has run N times. So, if you want to run your experiment ten times and specifiy the machines limbic and arbor (both dual processor machines), autoson will run four experiments at once, using both processors of limbic and arbor, and put the additional jobs on the machine when the previous jobs have finished. It does this until it as run the experiment ten times. %0a%3c %0a---%0a> * You use autoson to execute run_command many times, specifying what machines you want it to run on. Basically, you set it and forget it. %0a> %0a
host:1211307207=128.119.241.208
author:1211300962=
diff:1211300962:1210530150:=3,6d2%0a%3c '''The very very basics''':%0a%3c * You set up a shell script (let's call it "run_command") which runs some simulation you wrote (let's call it "run_exp"). In run_exp (or run_command, maybe), you save the data you want. %0a%3c * You use autoson to execute run_command many times, specifying what machines you want it to run on. Basically, you set it and forget it. %0a%3c %0a
host:1211300962=71.232.102.190
author:1210530150=
diff:1210530150:1210530124:=16,17c16,17%0a%3c * '''run stuff on entropy''' (the lab's server). it has four processors, so it can handle a couple jobs. I generally only us two processors (three at most if I'm in a bind). Since it's the lab server, I would make sure at least one processor, preferably two,  are free and your jobs don't use too much memory.%0a%3c * '''run stuff on spiny''' (the mac in the common area). you may be able to run it remotely... see the [[Spiny]] page. %0a---%0a> * run stuff on entropy (the lab's server). it has four processors, so it can handle a couple jobs. I generally only us two processors (three at most if I'm in a bind). Since it's the lab server, I would make sure at least one processor, preferably two,  are free and your jobs don't use too much memory.%0a> * run stuff on spiny (the mac in the common area). you may be able to run it remotely... see the [[Spiny]] page. %0a
host:1210530150=128.119.241.208
author:1210530124=
diff:1210530124:1210529951:=15c15%0a%3c '''Other options''': Note that even though you should use autoson, if you must, there are additional options that I have used: %0a---%0a> Note that even though you should use autoson, if you must, there are additional options that I have used: %0a
host:1210530124=128.119.241.208
author:1210529951=
diff:1210529951:1210529862:=12a13%0a> * [[More Autoson Info -> AutoSonInfo]]%0a
host:1210529951=128.119.241.208
author:1210529862=
diff:1210529862:1210529777:=11,12c11,12%0a%3c * [[More Autoson Commands -> AutosonInfoEveryone]] and things any user can execute%0a%3c * [[Autoson Commands -> AutosonInfoAutouser]] and things only "autouser" can execute%0a---%0a> * [[More Autoson Commands | AutosonInfoEveryone]] and things any user can execute%0a> * [[Autoson Commands | AutosonInfoAutouser]] and things only "autouser" can execute%0a
host:1210529862=128.119.241.208
author:1210529777=
diff:1210529777:1210355510:=11,12d10%0a%3c * [[More Autoson Commands | AutosonInfoEveryone]] and things any user can execute%0a%3c * [[Autoson Commands | AutosonInfoAutouser]] and things only "autouser" can execute%0a
host:1210529777=128.119.241.208
author:1210355510=
diff:1210355510:1210355455:=10a11%0a> * Amy wrote an [[augui -> http://www-all.cs.umass.edu/augui/augui.html]] application, which graphically shows jobs.%0a
host:1210355510=128.119.241.208
author:1210355455=
diff:1210355455:1210344004:=12a13%0a> * [[Writing to Local Drives]]%0a
host:1210355455=128.119.241.208
author:1210344004=
diff:1210344004:1210343847:=14d13%0a%3c * [[More involved stuff -> DetailedAutoson]], like adding a new computer, dealing with other problems, etc. %0a
host:1210344004=128.119.241.208
author:1210343847=
diff:1210343847:1210343766:=3a4,5%0a> * [[Andy Fagg's autoson write-up -> http://www-all.cs.umass.edu/autoson_local/autoson/index.html]]%0a> * Amy wrote an [[augui -> http://www-all.cs.umass.edu/augui/augui.html]] application, which graphically shows jobs.%0a5a8%0a> * [[More Autoson Info -> AutoSonInfo]]%0a7,12d9%0a%3c * [[Andy Fagg's autoson write-up -> http://www-all.cs.umass.edu/autoson_local/autoson/index.html]]%0a%3c %0a%3c %0a%3c '''Some more commands and trouble shooting'''%0a%3c * Amy wrote an [[augui -> http://www-all.cs.umass.edu/augui/augui.html]] application, which graphically shows jobs.%0a%3c * [[More Autoson Info -> AutoSonInfo]]%0a
host:1210343847=128.119.241.208
author:1210343766=
diff:1210343766:1202225033:=3d2%0a%3c '''Getting Started'''%0a
host:1210343766=128.119.241.208
author:1202225033=
diff:1202225033:1202224974:=12c12%0a%3c * run stuff on entropy (the lab's server). it has four processors, so it can handle a couple jobs. I generally only us two processors (three at most if I'm in a bind). Since it's the lab server, I would make sure at least one processor, preferably two,  are free and your jobs don't use too much memory.%0a---%0a> * run stuff on entropy (the lab's server). it has four processors, so it can handle a couple jobs. I generally only us two processors (three at most if I'm in a bind). %0a
host:1202225033=128.119.241.208
author:1202224974=
diff:1202224974:1202224941:=10a11%0a> \\%0a
host:1202224974=128.119.241.208
author:1202224941=
diff:1202224941:1202224933:=16c16%0a%3c * check out the [[ListMachines]] page to see specs on all the machines.%0a\ No newline at end of file%0a---%0a> * check out the [[ListMachines] page to see specs on all the machines.%0a\ No newline at end of file%0a
host:1202224941=128.119.241.208
author:1202224933=
diff:1202224933:1202224904:=16c16%0a%3c * check out the [[ListMachines] page to see specs on all the machines.%0a\ No newline at end of file%0a---%0a> * check out the [[MachineList]] page to see specs on all the machines.%0a\ No newline at end of file%0a
host:1202224933=128.119.241.208
author:1202224904=
diff:1202224904:1202224736:=12,16c12,14%0a%3c Note that even though you should use autoson, if you must, there are additional options that I have used: %0a%3c * run stuff on entropy (the lab's server). it has four processors, so it can handle a couple jobs. I generally only us two processors (three at most if I'm in a bind). %0a%3c * run stuff on spiny (the mac in the common area). you may be able to run it remotely... see the [[Spiny]] page. %0a%3c * run stuff on the kaos net computers in the lab. I have no idea how to easily do this... since they're not on the CS network, you'll have to put your files on them and they may not be able to run all the programs we have access to. %0a%3c * check out the [[MachineList]] page to see specs on all the machines. %0a\ No newline at end of file%0a---%0a> Note that even though you should use autoson, if you must, there are two additional options that I have used: %0a> * run stuff on entropy (the lab's server). %0a> * run stuff on spiny (the mac in the common area)%0a
host:1202224904=128.119.241.208
author:1202224736=
diff:1202224736:1176927541:=10,14d9%0a%3c \\%0a%3c \\%0a%3c Note that even though you should use autoson, if you must, there are two additional options that I have used: %0a%3c * run stuff on entropy (the lab's server). %0a%3c * run stuff on spiny (the mac in the common area)%0a
host:1202224736=128.119.241.208
author:1176927541=
diff:1176927541:1172023272:=0a1,2%0a> [++'''NOTE: SOMEONE PLEASE WRITE OUT HOW TO HAVE AUTOSON WRITE TO LOCAL DRIVES'''++]%0a> %0a9d10%0a%3c * [[Writing to Local Drives]]%0a
host:1176927541=128.119.241.210
author:1172023272=
diff:1172023272:1171306140:=3,4c3,4%0a%3c When running lots of experiments it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out.  Autoson automatically runs jobs across machines and what not. Emily Horrell in LPR is the current expert, though you can ask Ashvin or probably many other people as well. However, don't do so until you've skimmed through all this stuff and tried to run it yourself, otherwise Ash will get mad.%0a%3c %0a---%0a> When running experiments (''e.g.'', 30 runs of the same thing), it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out.  Autoson automatically runs jobs across machines and what not. Emily Horrell in LPR is the current expert, though you can ask Ashvin or probably many other people as well. However, don't do so until you've skimmed through all this stuff and tried to run it yourself, otherwise Ash will get mad.%0a> %0a
host:1172023272=71.232.98.102
author:1171306140=
diff:1171306140:1171306112:=1,2c1,2%0a%3c [++'''NOTE: SOMEONE PLEASE WRITE OUT HOW TO HAVE AUTOSON WRITE TO LOCAL DRIVES'''++]%0a%3c %0a---%0a> [++''NOTE: SOMEONE PLEASE WRITE OUT HOW TO HAVE AUTOSON WRITE TO LOCAL DRIVES'''++]%0a> %0a
host:1171306140=128.119.241.208
author:1171306112=
diff:1171306112:1171306088:=1,2c1,3%0a%3c [++''NOTE: SOMEONE PLEASE WRITE OUT HOW TO HAVE AUTOSON WRITE TO LOCAL DRIVES'''++]%0a%3c %0a---%0a> %0a> [+'''NOTE: SOMEONE PLEASE WRITE OUT HOW TO HAVE AUTOSON WRITE TO LOCAL DRIVES'''+]%0a> %0a
host:1171306112=128.119.241.208
author:1171306088=
diff:1171306088:1159193341:=1,3d0%0a%3c %0a%3c [+'''NOTE: SOMEONE PLEASE WRITE OUT HOW TO HAVE AUTOSON WRITE TO LOCAL DRIVES'''+]%0a%3c %0a
host:1171306088=128.119.241.208
author:1159193341=
diff:1159193341:1159193055:=6c6,7%0a%3c * What Sarah does to run a program (not in Matlab) on a specific machine in the lab is [[here -> SpecificAutoson]].%0a---%0a> * What Sarah does to run a program (not in Matlab) on a specific machine in the lab is %0a> [[here -> SpecificAutoson]].%0a8d8%0a%3c * [[AutosonTest | Here]] is a very simple Autoson test script (matlab) which Ash uses to make sure Autoson is working OK. It's a simple loop which takes a minute or so to run. This way, it's likely that it will get distributed across all machines in the group, but it won't take too long to run. %0a
host:1159193341=128.119.241.208
author:1159193055=
diff:1159193055:1159193005:=1,2c1,6%0a%3c When running experiments (''e.g.'', 30 runs of the same thing), it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out.  Autoson automatically runs jobs across machines and what not. Emily Horrell in LPR is the current expert, though you can ask Ashvin or probably many other people as well. However, don't do so until you've skimmed through all this stuff and tried to run it yourself, otherwise Ash will get mad.%0a%3c %0a---%0a> When running experiments (''e.g.'', 30 runs of the same thing), it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out. %0a> %0a> Autoson automatically runs jobs across machines and what not. Here are some links to help you out.%0a> %0a> Emily Horrell in LPR is the current expert, though you can ask Ashvin or probably many other people as well. However, don't do so until you've skimmed through all this stuff and tried to run it yourself, otherwise Ash will get mad.%0a> %0a3a8%0a> %0a4a10%0a> %0a5a12%0a> %0a7a15%0a> %0a
host:1159193055=128.119.241.208
author:1159193005=
diff:1159193005:1158617913:=0a1,3%0a> !!Autoson%0a> %0a> %0a
host:1159193005=128.119.241.208
author:1158617913=Gdk
diff:1158617913:1158617840:=14,15c14,15%0a%3c * [[What Ash does to run a Matlab script -> AshMatlabAutoson]] 30 times with autoson.%0a%3c %0a---%0a> * [What Ash does to run a Matlab script -> AshMatlabAutoson]] 30 times with autoson.%0a> %0a
host:1158617913=128.119.241.202
author:1158617840=Gdk
diff:1158617840:1158617076:=1,19c1%0a%3c !!Autoson%0a%3c %0a%3c %0a%3c When running experiments (''e.g.'', 30 runs of the same thing), it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out. %0a%3c %0a%3c Autoson automatically runs jobs across machines and what not. Here are some links to help you out.%0a%3c %0a%3c Emily Horrell in LPR is the current expert, though you can ask Ashvin or probably many other people as well. However, don't do so until you've skimmed through all this stuff and tried to run it yourself, otherwise Ash will get mad.%0a%3c %0a%3c * [[Andy Fagg's autoson write-up -> http://www-all.cs.umass.edu/autoson_local/autoson/index.html]]%0a%3c %0a%3c * Amy wrote an [[augui -> http://www-all.cs.umass.edu/augui/augui.html]] application, which graphically shows jobs.%0a%3c %0a%3c * [What Ash does to run a Matlab script -> AshMatlabAutoson]] 30 times with autoson.%0a%3c %0a%3c * What Sarah does to run a program (not in Matlab) on a specific machine in the lab is %0a%3c [[here -> SpecificAutoson]].%0a%3c %0a%3c * [[More Autoson Info -> AutoSonInfo]]%0a---%0a> * When running experiments (''e.g.'', 30 runs of the same thing), it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out. Click on this [[Autoson]] link for links that will help you get started.%0a
host:1158617840=128.119.241.202
author:1158617076=Gdk
diff:1158617076:1158617076:=1d0%0a%3c * When running experiments (''e.g.'', 30 runs of the same thing), it's best to use Autoson, which automatically runs jobs across all of the computers we have access to or some subset of them. If you've never used it before, be prepared to spend an hour or so figuring it out. Click on this [[Autoson]] link for links that will help you get started.%0a
host:1158617076=128.119.241.202
