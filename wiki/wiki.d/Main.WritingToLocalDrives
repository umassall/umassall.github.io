version=pmwiki-2.1.26 ordered=1 urlencoded=1
agent=Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070223 CentOS/1.5.0.10-0.1.el4.centos Firefox/1.5.0.10
author=Colin
csum=Created page.
ctime=1176930742
host=128.119.241.210
name=Main.WritingToLocalDrives
rev=1
targets=
text=There are some advantages to having an autoson job write to the local disk, rather than to entropy. First of all, disk space on entropy, because it is backed up, is somewhat limited. The local disks, on the other hand, usually have tens of gigabytes of unused space. Additionally, if your program frequently writes data to entropy, the time spent writing to the disk can significantly slow down the program; writing to a local disk is much much faster than writing to entropy.%0a%0aHaving an autoson script write to a local drive is almost as simple as writing to your user directory. The only difference is that you need to ensure that the path to the file exists on all of the machines on which you will be running the script.%0a%0aSo, let's take the simple task of generating random numbers, and run through an example.%0a%0aFirst, let's make a simple random number generator. The following c++ code snippet will output a random number to standard out:%0a%0a[@%0a#include %3ciostream>%0a#include %3cstdlib.h>%0a#include %3ctime.h>%0a%0ausing namespace std;%0a%0aint main(int argc,char* argv[]) {%0a%0a  srandom(time(NULL));%0a  cout %3c%3c random() %3c%3c endl;%0a}%0a@]%0a%0aHaving compiled this code to a program called random_number in my home directory, I can distribute the task of generating 100 random numbers across several lab computers using autoson. The following commands will create a file called "random_numbers.txt" in my home directory, and fill this file with 100 random numbers, distributing this task to two different machines:%0a%0a[@%0a>> auadd -host @arbor,@beltrami -nolog -limit 100 "~/random_number>>~/random_numbers.txt"%0a@]%0a%0aUnfortunately, by generating the file in this way, I have the potential to fill up my space-limited user directory. Furthermore, my user directory is stored on entropy, not on arbor or beltrami, so each write operation will be relatively slow. It is therefore better in some cases to write directly to the local hard drive. On each of the lab machines the scratch partition of the local hard drive is mounted in the /scratch/ directory. So to get autoson to write directly to the local hard drive, I need to write to a file in /scratch/:%0a%0a[@%0a>> auadd -host @arbor,@beltrami -nolog -limit 100 "~/random_number>>/scratch/random_numbers.txt"%0a@]%0a%0aNow my 100 random numbers are distributed amongst two files, one on each of the machines. I can conjoin the results using scp and cat:%0a%0a[@%0a>> scp arbor:/scratch/random_numbers.txt random_numbers.arbor.txt%0a>> scp beltrami:/scratch/random_numbers.txt random_numbers.beltrami.txt%0a>> cat random_numbers.arbor.txt random_numbers.beltrami.txt > random_numbers.txt%0a@]%0a%0aFor the conveniene of all of the members of the lab, please make a directory for yourself in the /scratch/ directory, so that /scratch/ does not get filled up with random files from all lab members:%0a%0a[@%0a>> mkdir /scratch/username/%0a@]%0a%0aAs long as the directory /scratch/very/long/path/name/ exists on all of the machines you send your job to, a command like the following will also work:%0a%0a[@%0a>> auadd -host @arbor,@beltrami -nolog -limit 100 "~/random_number>>/scratch/very/long/path/name/random_numbers.txt"%0a@]%0a%0aBe sure that the directory /scratch/very/long/path/name/ exists on ''all'' of the machines you send jobs to or else the data generated by jobs sent to machines without that directory will be lost.
time=1176930742
author:1176930742=Colin
csum:1176930742=Created page.
diff:1176930742:1176930742:=1,55d0%0a%3c There are some advantages to having an autoson job write to the local disk, rather than to entropy. First of all, disk space on entropy, because it is backed up, is somewhat limited. The local disks, on the other hand, usually have tens of gigabytes of unused space. Additionally, if your program frequently writes data to entropy, the time spent writing to the disk can significantly slow down the program; writing to a local disk is much much faster than writing to entropy.%0a%3c %0a%3c Having an autoson script write to a local drive is almost as simple as writing to your user directory. The only difference is that you need to ensure that the path to the file exists on all of the machines on which you will be running the script.%0a%3c %0a%3c So, let's take the simple task of generating random numbers, and run through an example.%0a%3c %0a%3c First, let's make a simple random number generator. The following c++ code snippet will output a random number to standard out:%0a%3c %0a%3c [@%0a%3c #include %3ciostream>%0a%3c #include %3cstdlib.h>%0a%3c #include %3ctime.h>%0a%3c %0a%3c using namespace std;%0a%3c %0a%3c int main(int argc,char* argv[]) {%0a%3c %0a%3c   srandom(time(NULL));%0a%3c   cout %3c%3c random() %3c%3c endl;%0a%3c }%0a%3c @]%0a%3c %0a%3c Having compiled this code to a program called random_number in my home directory, I can distribute the task of generating 100 random numbers across several lab computers using autoson. The following commands will create a file called "random_numbers.txt" in my home directory, and fill this file with 100 random numbers, distributing this task to two different machines:%0a%3c %0a%3c [@%0a%3c >> auadd -host @arbor,@beltrami -nolog -limit 100 "~/random_number>>~/random_numbers.txt"%0a%3c @]%0a%3c %0a%3c Unfortunately, by generating the file in this way, I have the potential to fill up my space-limited user directory. Furthermore, my user directory is stored on entropy, not on arbor or beltrami, so each write operation will be relatively slow. It is therefore better in some cases to write directly to the local hard drive. On each of the lab machines the scratch partition of the local hard drive is mounted in the /scratch/ directory. So to get autoson to write directly to the local hard drive, I need to write to a file in /scratch/:%0a%3c %0a%3c [@%0a%3c >> auadd -host @arbor,@beltrami -nolog -limit 100 "~/random_number>>/scratch/random_numbers.txt"%0a%3c @]%0a%3c %0a%3c Now my 100 random numbers are distributed amongst two files, one on each of the machines. I can conjoin the results using scp and cat:%0a%3c %0a%3c [@%0a%3c >> scp arbor:/scratch/random_numbers.txt random_numbers.arbor.txt%0a%3c >> scp beltrami:/scratch/random_numbers.txt random_numbers.beltrami.txt%0a%3c >> cat random_numbers.arbor.txt random_numbers.beltrami.txt > random_numbers.txt%0a%3c @]%0a%3c %0a%3c For the conveniene of all of the members of the lab, please make a directory for yourself in the /scratch/ directory, so that /scratch/ does not get filled up with random files from all lab members:%0a%3c %0a%3c [@%0a%3c >> mkdir /scratch/username/%0a%3c @]%0a%3c %0a%3c As long as the directory /scratch/very/long/path/name/ exists on all of the machines you send your job to, a command like the following will also work:%0a%3c %0a%3c [@%0a%3c >> auadd -host @arbor,@beltrami -nolog -limit 100 "~/random_number>>/scratch/very/long/path/name/random_numbers.txt"%0a%3c @]%0a%3c %0a%3c Be sure that the directory /scratch/very/long/path/name/ exists on ''all'' of the machines you send jobs to or else the data generated by jobs sent to machines without that directory will be lost.%0a\ No newline at end of file%0a
host:1176930742=128.119.241.210
