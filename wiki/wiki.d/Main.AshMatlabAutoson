version=pmwiki-2.1.26 ordered=1 urlencoded=1
agent=Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060418 CentOS/1.7.13-1.4.1.centos4
author=
csum=
ctime=1158618163
host=128.119.241.208
name=Main.AshMatlabAutoson
rev=5
targets=Main.AutoSonInfo
text=I (Ashvin) only know Matlab. This is what I do to run his matlab script 30 times across a group of machines. The output is sent to my home directory on entropy. This requires three scripts: %0a%0a1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type "test"%0amy simulation runs. %0a%0a2) run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. %0a%0a3) run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:%0a%0a'''run_command''' this executable shell script is written in the c shell (that's the /bin/csh line). It sets an environment variable (TASK_NUM) to some number. Then, it calls matlab (the -nojvm makes matlab run in a shell, as opposed to bringing up the graphical interface) and runs the matlab script run_exp.m%0a%0a%0a #!/bin/csh%0a setenv TASK_NUM $1%0a matlab -nojvm  %3c run_exp.m%0a%0aOh, to make run_command exectuable, type %0a >chmod a+x run_command%0a%0aFinally, there were some issues with setting the environmental variable TASK_NUM. See [[this -> AutoSonInfo]] for a description of the problem and solution.%0a%0a'''run_exp.m''' this matlab script takes the environment variable TASK_NUM, which is set to some number, and sets the matlab variable damnit, which is a string, to that number. Then, it turns the string damnit into an actual number called me. Then, it does some stuff to set the random seed so that different runs of the script start off with different random initial conditions. Then, it calls test.m. After test has finished running, it saves the variables I care about into a file called "nrn8.mat" if the TASK_NUM was set to 8. So, the results of each of the 30 runs will be saved to a file with the number of that run (nrn1.mat, nrn2.mat, nrn3.mat, ..., nrn30.mat)%0a%0a damnit = getenv('TASK_NUM');%0a me = str2num(damnit);%0a if(isempty(me))%0a   disp('Parameter error');%0a   quit;%0a end;%0a rand('state', me);%0a rand;%0a rand;%0a test%0a fname = ['nrn',damnit];%0a save(fname, 'mean_Ex','sd_Ex','K','as','count','maxda','maxdK','parms','cosfit_all')%0a%0a quit%0a%0anow that you understand the three scripts, here's how to run test.m 30 times with different initial random seeds using autoson. In a shell, type%0a%0a  >auadd -hosts @ANW -cyc 1 -lim 30 -log nrn_echo.#.out run_command #%0a%0aauadd means add this to the autoson cue\\%0a-hosts @ANW means use the machines defined by the%0agroup called ANW (type >aulook -g to see what groups there are)%0a%0a-cyc 1 -lim 30 means run it 30 times%0a%0a-log nrn_echo.#.out means record the immediate output into%0aa log file, named with the indices 1 through 30 (in the place of #)%0a%0a-run_command # means run the executable run_command,%0awith the argument #, which will be 1, 2, 3, ..., or 30 .%0a%0a
time=1160053605
author:1160053605=
diff:1160053605:1160053451:=20,21d19%0a%3c Finally, there were some issues with setting the environmental variable TASK_NUM. See [[this -> AutoSonInfo]] for a description of the problem and solution.%0a%3c %0a
host:1160053605=128.119.241.208
author:1160053451=
diff:1160053451:1160053421:=3c3,6%0a%3c 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type "test"%0a---%0a> 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type %0a>  %0a>  >test %0a> %0a
host:1160053451=128.119.241.208
author:1160053421=
diff:1160053421:1158675999:=3c3%0a%3c 1) test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type %0a---%0a> # test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type %0a9,12c9,12%0a%3c 2) run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. %0a%3c %0a%3c 3) run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:%0a%3c %0a---%0a> # run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. %0a> %0a> # run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:%0a> %0a
host:1160053421=128.119.241.208
author:1158675999=
diff:1158675999:1158618163:=0a1%0a> %0a44c45%0a%3c auadd means add this to the autoson cue\\%0a---%0a> auadd means add this to the autoson cue%0a
host:1158675999=128.119.241.208
author:1158618163=Gdk
diff:1158618163:1158618163:=1,56d0%0a%3c %0a%3c I (Ashvin) only know Matlab. This is what I do to run his matlab script 30 times across a group of machines. The output is sent to my home directory on entropy. This requires three scripts: %0a%3c %0a%3c # test.m is the matlab script I run to simply run my simulation, e.g., if I run matlab on my computer and type %0a%3c  %0a%3c  >test %0a%3c %0a%3c my simulation runs. %0a%3c %0a%3c # run_exp.m is another matlab script which is used to run test.m. You'll see why in a second. %0a%3c %0a%3c # run_command is an executable shell script which calls run_exp, and that calls test. run_command is used by autoson. Here they are in detail:%0a%3c %0a%3c '''run_command''' this executable shell script is written in the c shell (that's the /bin/csh line). It sets an environment variable (TASK_NUM) to some number. Then, it calls matlab (the -nojvm makes matlab run in a shell, as opposed to bringing up the graphical interface) and runs the matlab script run_exp.m%0a%3c %0a%3c %0a%3c  #!/bin/csh%0a%3c  setenv TASK_NUM $1%0a%3c  matlab -nojvm  %3c run_exp.m%0a%3c %0a%3c Oh, to make run_command exectuable, type %0a%3c  >chmod a+x run_command%0a%3c %0a%3c '''run_exp.m''' this matlab script takes the environment variable TASK_NUM, which is set to some number, and sets the matlab variable damnit, which is a string, to that number. Then, it turns the string damnit into an actual number called me. Then, it does some stuff to set the random seed so that different runs of the script start off with different random initial conditions. Then, it calls test.m. After test has finished running, it saves the variables I care about into a file called "nrn8.mat" if the TASK_NUM was set to 8. So, the results of each of the 30 runs will be saved to a file with the number of that run (nrn1.mat, nrn2.mat, nrn3.mat, ..., nrn30.mat)%0a%3c %0a%3c  damnit = getenv('TASK_NUM');%0a%3c  me = str2num(damnit);%0a%3c  if(isempty(me))%0a%3c    disp('Parameter error');%0a%3c    quit;%0a%3c  end;%0a%3c  rand('state', me);%0a%3c  rand;%0a%3c  rand;%0a%3c  test%0a%3c  fname = ['nrn',damnit];%0a%3c  save(fname, 'mean_Ex','sd_Ex','K','as','count','maxda','maxdK','parms','cosfit_all')%0a%3c %0a%3c  quit%0a%3c %0a%3c now that you understand the three scripts, here's how to run test.m 30 times with different initial random seeds using autoson. In a shell, type%0a%3c %0a%3c   >auadd -hosts @ANW -cyc 1 -lim 30 -log nrn_echo.#.out run_command #%0a%3c %0a%3c auadd means add this to the autoson cue%0a%3c -hosts @ANW means use the machines defined by the%0a%3c group called ANW (type >aulook -g to see what groups there are)%0a%3c %0a%3c -cyc 1 -lim 30 means run it 30 times%0a%3c %0a%3c -log nrn_echo.#.out means record the immediate output into%0a%3c a log file, named with the indices 1 through 30 (in the place of #)%0a%3c %0a%3c -run_command # means run the executable run_command,%0a%3c with the argument #, which will be 1, 2, 3, ..., or 30 .%0a%3c %0a
host:1158618163=128.119.241.202
